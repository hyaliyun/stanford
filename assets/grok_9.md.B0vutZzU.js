import{_ as d,o as r,c as n,a as t,m as c,t as p,C as g,M as b,U as y,f as m,F as v,p as w,e as _,q as x}from"./chunks/framework.B1z0IdBH.js";const S={name:"PoemCard",props:{poem:{type:Object,required:!0}}},C={class:"poem-container"},T={class:"review"},k={class:"review-title"},E={class:"review-content"};function L(i,e,l,u,a,o){return r(),n("div",C,[t("div",T,[t("div",k,[e[0]||(e[0]=t("span",{class:"icon"},"question:",-1)),c(p(l.poem.prompt),1)]),e[2]||(e[2]=t("div",{class:"divider"},null,-1)),t("p",E,[e[1]||(e[1]=t("span",{class:"icon"},"answer:",-1)),c(p(l.poem.completion),1)])])])}const A=d(S,[["render",L],["__scopeId","data-v-d01a8497"]]),N=JSON.parse(`[{"prompt":"determine if two strings are anagrams or not. string1 = 'listen' string2 = 'silent'","completion":"\\"\\"\\" Determine if two strings are anagrams or not \\"\\"\\" def is_anagram(string1, string2): # get lists of characters list1 = list(string1.lower()) list2 = list(string2.lower()) # sort both lists list1.sort() list2.sort() if list1 == list2: return True else: return False if __name__ == '__main__': string1 = 'listen' string2 = 'silent' print(\\"Result: \\" + str(is_anagram(string1, string2)))"},{"prompt":"Given a binary tree, write a program to calculate the sum of all its nodes.","completion":"def calculateSumOfBinaryTree(root): if root == None: return 0 else: return root.data + calculateSumOfBinaryTree(root.left) + calculateSumOfBinaryTree(root.right)"},{"prompt":"Write a function to calculate the number of letter and non-letter characters in a string. Input: 'If These Hills'","completion":"def numberOfLettersAndNonLetterCharacters(string): count_characters = 0 count_non_characters = 0 for char in string: if char.isalpha(): count_characters += 1 else: count_non_characters += 1 return (count_characters, count_non_characters) print(numberOfLettersAndNonLetterCharacters('If These Hills'))"},{"prompt":"Write a correct implementation of the following algorithm Binary search for an element x in a sorted array","completion":"def binary_search(arr, x): low = 0 high = len(arr) - 1 while low <= high: mid = (high+low)//2 if arr[mid] < x: low = mid + 1 elif arr[mid] > x: high = mid - 1 else: return mid return -1"},{"prompt":"Generate a correct SQL query to obtain all records from the following table Table - PRODUCT","completion":"SELECT * FROM PRODUCT;"},{"prompt":"Find the first common ancestor of two nodes in a binary tree Node 1: 15 Node 2: 16","completion":"The first common ancestor of node 1 (15) and node 2 (16) is 14."},{"prompt":"Create a HTML program that displays student records <No input>","completion":"<!DOCTYPE html> <html> <head> <title>Student Records</title> </head> <body> <h1>Student Records</h1> <table> <tr> <th>Name</th> <th>Age</th> <th>Gender</th> </tr> <tr> <td>Jerry</td> <td>21</td> <td>Male</td> </tr> <tr> <td>Janice</td> <td>18</td> <td>Female</td> </tr> <tr> <td>Jack</td> <td>20</td> <td>Male</td> </tr> </table> </body> </html>"},{"prompt":"Create a graphical user interface using Python to perform the following function Take two inputs from the user: a name and an age","completion":"import tkinter # Create an instance of tkinter root = tkinter.Tk() # Create two lables and two input boxes name_label = tkinter.Label(root, text ='Name: ') age_label = tkinter.Label(root, text ='Age: ') name_entry = tkinter.Entry(root) age_entry = tkinter.Entry(root) # Place the labels,entry boxes in the desired layout name_label.grid(row = 0, column = 0) name_entry.grid(row = 0, column = 1) age_label.grid(row = 1, column = 0) age_entry.grid(row = 1, column = 1) root.mainloop()"},{"prompt":"Find the sum of the following fibonacci sequence 0, 1, 1, 2, 3, 5, 8, 13","completion":"The sum of the given sequence is 33."},{"prompt":"Fill in the blanks of the following Python code to implement a Selection Sort algorithm. def selection_sort(arr): for [i] in [range](len(arr),1,-1): max_element=arr[0] for [j] in [range]([i]): if arr[j] > max_element : max_element=arr[j] [temp] = arr[i] arr[i] = max_element arr[arr.index(max_element)] = [temp]","completion":"def selection_sort(arr): for i in range(len(arr),1,-1): max_element=arr[0] for j in range(i): if arr[j] > max_element : max_element=arr[j] temp = arr[i-1] arr[i-1] = max_element arr[arr.index(max_element)] = temp"},{"prompt":"What is the reuse principle in software engineering?","completion":"The reuse principle in software engineering states that software components should be written and designed for reuse in other software components and systems. This can save developers time and money when developing software, since they can use existing components to build new functions and features into their software products. Additionally, it helps promote consistent coding, makes debugging easier, and reduces the risk of introducing bugs and other errors."},{"prompt":"Write a function in C that returns the maximum element in an integer array.","completion":"int findMaximum(int arr[], int size) { int max = arr[0]; for (int i=1; i<size; i++) if (arr[i] > max) max = arr[i]; return max; }"},{"prompt":"Read the following command line arguments in Java and print out the values. -v -f -d input.tx","completion":"String[] args = {\\"-v\\", \\"-f\\", \\"-d\\", \\"input.txt\\"}; for (String arg : args) { System.out.println(arg); }"},{"prompt":"Write a function in Python that takes a list and returns the one with all negative numbers sorted in ascending order. [3, -4, 1, -2]","completion":"def remove_negative_numbers(lst): negative = [] for x in lst: if x < 0: negative.append(x) return sorted(negative)"},{"prompt":"What is the difference between compile-time and run-time errors?","completion":"Compile-time errors occur when code does not conform to the syntax specified by the programming language, and usually prevent the code from being executed. Run-time errors occur when code is syntactically correct, but there are still problems executing the code. Run-time errors typically occur at the point where code is executed, as opposed to compile-time errors which occur at the point of compilation. The types of errors usually depend on the type of language used for programming. For example, compiling Java code with a C++ compiler would cause a compile-time error since the two languages have different syntaxes."},{"prompt":"w would you insert an element into a pre-existing array using JavaScript?","completion":"An element can be inserted into a pre-existing array using the JavaScript Array.prototype.push() method. The push() method takes a single element as an argument and appends it to the end of the array. For example, to insert the value 7 into an array, you could use the following syntax: array.push(7);"},{"prompt":"Write a function in Java to implement a Radix Sort algorithm.","completion":"void radixSort(int arr[]) { int n = arr.length; // Find the maximum number to know number of digits int max = getMax(arr, n); // Do counting sort for every digit. Note that instead // of passing digit number, exp is passed. exp is 10^i // where i is current digit number for (int exp = 1; max/exp > 0; exp *= 10) countSort(arr, n, exp); } int getMax(int arr[], int n) { int max = arr[0]; for (int i = 1; i < n; i++) if (arr[i] > max) max = arr[i]; return max; } void countSort(int arr[], int n, int exp) { int output[n]; // output array int i; int count[10] = {0}; // Store count of occurrences in count[] for (i = 0; i < n; i++) count[ (arr[i]/exp)%10 ]++; // Change count[i] so that count[i] now contains actual // position of this digit in output[] for (i = 1; i < 10; i++) count[i] += count[i - 1]; // Build the output array for (i = n - 1; i >= 0; i--) { output[count[ (arr[i]/exp)%10 ] - 1] = arr[i]; count[ (arr[i]/exp)%10 ]--; } // Copy the output array to arr[], so that arr[] now // contains sorted numbers according to curent digit for (i = 0; i < n; i++) arr[i] = output[i]; }"},{"prompt":"Classify a set of emails into 'spam' or 'not spam'. Email 1: Hello there, I noticed that you have not been making use of our sales offers lately, so I thought I'd remind you about our special offers and discounts for the month. Don't miss out!","completion":"not spam"},{"prompt":"Convert the following line of HTML code to lowercase. <P>","completion":"<p>"},{"prompt":"Given an array of numbers, how would you filter the numbers that are divisible by 3. [1, 6, 7, 8, 10, 15, 18, 18]","completion":"[6, 9, 15, 18, 18]"},{"prompt":"Generate the SQL query to select all columns from a table called \\"data_table\\".","completion":"SELECT * FROM data_table;"},{"prompt":"Given a list of strings, code a function to remove all duplicate strings. string_list = ['a', 'b', 'c', 'a', 'b', 'c', 'd']","completion":"def remove_duplicates(string_list): return list(set(string_list)) unique_string_list = remove_duplicates(string_list) print(unique_string_list) # Output: ['d', 'b', 'a', 'c']"},{"prompt":"Code a function to generate a random string of 10 randomly selected characters.","completion":"import string import random def generate_random_string(): letters = string.ascii_lowercase return ''.join(random.choice(letters) for i in range(10)) random_string = generate_random_string()"},{"prompt":"Write a python regex pattern to filter the following list of strings. string_list = ['ABC1', 'DEF2', 'GHI3', 'ABC4', 'JKL5']","completion":"import re string_list = ['ABC1', 'DEF2', 'GHI3', 'ABC4', 'JKL5'] filtered_list = list(filter(lambda x: re.search('^[A-Z]{3}[0-9]',x), string_list)) print(filtered_list) # Output: ['ABC1', 'DEF2', 'GHI3']"},{"prompt":"Write a function that takes a list of numbers and a target number. Print the numbers in the list that are closest to the target. number_list = [7, 11, 13, 14, 40] target = 16","completion":"def closest_numbers(number_list, target): closest_numbers = min(map(lambda x : (x , abs(x - target)), number_list)) return closest_numbers[0] closest_num = closest_numbers(number_list, target) print(closest_num) # Output: 14"},{"prompt":"Generate code to find the mean of the following list of numbers. number_list = [3, 7, 4, 8, 5, 9]","completion":"def mean(number_list): return sum(number_list) / len(number_list) average = mean(number_list) print(average) # Output: 6.166666666666667"},{"prompt":"Reorder the following array in decreasing order. [21, 12, 8, 36, 33]","completion":"[36, 33, 21, 12, 8]"},{"prompt":"Construct a single list from the following list of lists. [[1, 2], [3, 4]]","completion":"final_list = [1, 2, 3, 4]"},{"prompt":"Explain what boolean operators are and what do they do.","completion":"Boolean operators are logical operators which allow us to connect two or more conditions in a statement. These operators return a boolean value when evaluates multiple conditions or objects. The three main boolean operators are AND, OR, NOT. The AND operator returns true if both conditions are true, OR operator if any one of the condition is true and NOT operator returns true only if the condition is false."},{"prompt":"Create a class, Car, with the following instance variables that store information about a car Number of doors, colour, model_year, speed","completion":"class Car: def __init__(self, num_doors, color, model_year, speed): self.num_doors = num_doors self.color = color self.model_year = model_year self.speed = speed"},{"prompt":"What is a regular expression?","completion":"A regular expression (regex) is a sequence of characters that define a search pattern used to match strings or pieces of text. It can be used for searching, validating and manipulating text."},{"prompt":"Write a code to get the sum of all the unique values in a dictionary. d = {'a': 2, 'b': 3, 'c': 4, 'd': 5}","completion":"total_sum = 0 for key in d: total_sum += d[key] print(total_sum)"},{"prompt":"Edit the text below and print a new sentence using the same words. The moon is bright and beautiful.","completion":"Beautiful and bright, the moon shines."},{"prompt":"Construct a SELECT SQL query answer the question \\"Which employees have an age of 25?\\".","completion":"SELECT * FROM employees WHERE age = 25;"},{"prompt":"Write a Python function that takes two strings and returns the longest common subsequence. str1 = \\"AGGTAB\\" str2 = \\"GXTXAYB","completion":"def LongestCommonSubsequence(str1, str2): n = len(str1) m = len(str2) t = [[0 for j in range(m+1)] for i in range(n+1)] for i in range(1, n+1): for j in range(1, m+1): if str1[i-1] == str2[j-1]: t[i][j] = 1 + t[i-1][j-1] else: t[i][j] = max(t[i-1][j], t[i][j-1]) return t[n][m]"},{"prompt":"Write a function to replace the Kth smallest number in integer array with 0. nums = [2, 9, 8, 11, 5] K = 3","completion":"def replace_kth_smallest(nums, k): min_num = min(nums) min_count = nums.count(min_num) if k > min_count: k -= min_count nums.remove(min_num) nums[k-1] = 0 return nums"},{"prompt":"Write a function that can split an array into two equally-sized subarrays. arr = [1, 2, 3, 4, 5, 6]","completion":"def split_array(arr): if len(arr) % 2 != 0: return False mid = len(arr)// 2 left_arr = arr[:mid] right_arr = arr[mid:] return [left_arr, right_arr]"},{"prompt":"Write a function that can generate all permutations of a given string. string = \\"ABC","completion":"def permute(string): if len(string) == 1: return [string] prevList = permute(string[1:]) nextList = [] for i in range(len(prevList)): for j in range(len(string)): newString = prevList[i][:j] + string[0:1] + prevList[i][j:] if newString not in nextList: nextList.append(newString) return nextList"},{"prompt":"Deconstruct this line of Python code and explain what it does y = [x**2 for x in range(10)]","completion":"This line of code is a Python List Comprehension, it will iterate through the range of 0 to 9 and square each of those numbers and add them to a new list 'y'. The list will contain the squares of the numbers 0 to 9, i.e. [0, 1, 4, 9, 16, 25, 36, 49, 64, 81]."},{"prompt":"espective of the value of the input array, always print 1111111. arr = [6,2,3,4]","completion":"for x in arr: print(1111111)"},{"prompt":"Cut all the letters off the end of a given word. word = \\"Hello","completion":"new_word = word[:len(word)-1] print(new_word) # Output: Hell"},{"prompt":"Create a class that represents a circle radius = 5.5","completion":"class Circle: def __init__(self, radius): self.radius = radius def area(self): return self.radius * self.radius * 3.14 c = Circle(radius) print(c.area()) # Output: 95.033"},{"prompt":"Create a function in Python which takes a list and finds the second highest number in it. arr = [2, 3, 1, 5, 4]","completion":"def second_highest_num(arr): arr.sort() return arr[-2]"},{"prompt":"Write a function in Python that takes a character (i.e. a string of length 1) and returns True if it is a vowel, False otherwise.","completion":"def is_vowel(char): vowels = 'aeiou' return char in vowels"},{"prompt":"Create a Python function to print a Fibonacci sequence up to n number of digits.","completion":"def fib(n): a,b = 0,1 while a<n: print(a, end=' ') a,b = b,a+b print()"},{"prompt":"Build a function to detect if a provided number is prime.","completion":"def is_prime(num): if num <= 1: return False for i in range(2, num): if num % i == 0: return False return True"},{"prompt":"Write a function in Python that takes a number, x, and returns True if the number is even or False if the number is odd.","completion":"def is_even(x): return x%2 == 0"},{"prompt":"Create a Python program which takes a sentence and prints back the words in reverse order","completion":"def reverse_words(sentence): words = sentence.split() words.reverse() return ' '.join(words)"},{"prompt":"Generate a function in Python which takes a list and sorts the list elements in ascending order","completion":"def sort_ascending(nums): return sorted(nums)"},{"prompt":"Write a Python program to print the calendar of a given month and year","completion":"import calendar def get_calendar(month, year): return calendar.month(year, month)"},{"prompt":"Design a JSON schema for an item.","completion":"{ \\"type\\": \\"object\\", \\"properties\\": { \\"id\\": { \\"type\\": \\"string\\" }, \\"name\\": { \\"type\\": \\"string\\" }, \\"price\\": { \\"type\\": \\"number\\" }, \\"quantity\\": { \\"type\\": \\"integer\\" } }, \\"required\\": [\\"id\\", \\"name\\", \\"price\\", \\"quantity\\"] }"},{"prompt":"Define a class \\"Car\\" with two data attributes \\"top speed\\" and \\"model year\\".","completion":"class Car: def __init__(self, top_speed, model_year): self.top_speed = top_speed self.model_year = model_year"},{"prompt":"Write code to search for a number in a sorted array.","completion":"def binary_search(list, target): low = 0 high = len(list)-1 while low <= high: mid = (low + high) // 2 if list[mid] == target: return mid if list[mid] < target: low = mid + 1 else: high = mid - 1 return -1"},{"prompt":"Create a BST with two data elements 10 and 15.","completion":"class Node: def __init__(self, data): self.data = data self.left = None self.right = None class BST: def __init__(self): self.root = None def insert(self, value): if self.root is None: self.root = Node(value) else: self._insert(value, self.root) def _insert(self, value, cur_node): if value < cur_node.data: if cur_node.left is None: cur_node.left = Node(value) else: self._insert(value, cur_node.left) elif value >= cur_node.data: if cur_node.right is None: cur_node.right = Node(value) else: self._insert(value, cur_node.right) else: pass bst = BST() bst.insert(10) bst.insert(15)"},{"prompt":"Write a function to print out all possible permutations of a list of numbers. list = [1, 2, 3]","completion":"def permutations(list): if len(list) == 0: return [] if len(list) == 1: return [list] l = [] #empty list for i in range(len(list)): m = list[i] remList = list[:i] + list[i+1:] for p in permutations(remList): l.append([m] + p) return l"},{"prompt":"Change the CSS style of the paragraph element below so that it has a red border around it. <p>This is my paragraph</p>","completion":"<p style=\\"border: 1px solid red;\\">This is my paragraph</p>"},{"prompt":"Calculate the total of the numbers in the array below. [5, 10, 15]","completion":"30"},{"prompt":"Write a Python code snippet that checks if all elements in the input list are equal. [10, 10, 10]","completion":"all_equal = all(x == 10 for x in [10, 10, 10])"},{"prompt":"Create an API endpoint that takes two inputs (phone number and name) and updates contact details in the database.","completion":"@app.route(\\"/api/update_contact_details\\", methods=['PUT']) def update_contact_details(): # Get the inputs from the request body phone_number = request.json['phone_number'] name = request.json['name'] # Query the database db.execute(\\"UPDATE contacts SET name = '{name}' WHERE phone = '{phone_number}'\\".format(name=name, phone_number=phone_number)) return jsonify(status=\\"success\\")"},{"prompt":"Generate a hash for the string \\"AutomatedAssistant","completion":"d3eb3504653eba66b47a82f3cb5279ae9133f2584e00cbc56434a3d877f7b284"},{"prompt":"Calculate the median of the following numbers: 14, 30, 5, 10.","completion":"10"},{"prompt":"Create a table in a MySQL database that contains a list of titles with two columns (\\"title\\" and \\"description\\").","completion":"CREATE TABLE titles ( title VARCHAR(255) NOT NULL, description VARCHAR(255) NOT NULL );"},{"prompt":"Parse the JSON text below and add \\"City\\" to the dictionary. { \\"Name\\": \\"John\\", \\"Age\\": 32 }","completion":"{ \\"Name\\": \\"John\\", \\"Age\\": 32, \\"City\\": \\"\\" }"},{"prompt":"Calculate the cube root of 533.","completion":"7.777314028068125"},{"prompt":"Write a SQL query that selects all the records from the table student.","completion":"SELECT * FROM student;"},{"prompt":"Modify the following code to add a new item to the list at a specific index. lst = [\\"a\\", \\"b\\", \\"c\\", \\"d\\"]","completion":"lst = [\\"a\\", \\"b\\", \\"c\\", \\"d\\"] lst.insert(2, \\"e\\") print(lst) # output ['a', 'b', 'e', 'c', 'd']"},{"prompt":"Write a Python program to calculate the frequency of each element in a given list. mylist = [2, 3, 4, 2, 3, 5, 6, 7]","completion":"def frequency_count(mylist): freq = {} for element in mylist: if element in freq: freq[element] += 1 else: freq[element] = 1 return freq print(frequency_count(mylist)) # output {2: 2, 3: 2, 4: 1, 5: 1, 6: 1, 7: 1}"},{"prompt":"Create a module in Python to read webpages into the program","completion":"import urllib def read_webpage(url): with urllib.request.urlopen(url) as response: return response.read()"},{"prompt":"Rewrite the following code in a more efficient way, keeping the same logic: for i in range(len(lst)-1): for j in range(i+1, len(lst)): if lst[i]==lst[j]: return True","completion":"def find_duplicate(lst): seen = set() for elem in lst: if elem in seen: return True seen.add(elem) return False"},{"prompt":"Generate a list of prime numbers","completion":"def generate_primes(n): prime_list = [] for num in range(2, n + 1): if all(num % i != 0 for i in range(2, num)): # check if num is prime prime_list.append(num) return prime_list"},{"prompt":"Determine whether a given number is an armstrong number or not 153","completion":"def is_armstrong_number(num): digits = [int(x) for x in str(num)] sum_ = 0 for digit in digits: sum_ += pow(digit, len(digits)) return num == sum_ print(is_armstrong_number(153)) # Output: True"},{"prompt":"You need to write a function to find the index of a value in an array [1, 2, 3, 4], 3","completion":"def find_index(arr, val): for index, elem in enumerate(arr): if val == elem: return index return -1 print(find_index([1, 2, 3, 4], 3)) # Output: 2"},{"prompt":"Output the following array in a column [1, 2, 3, 4]","completion":"for x in [1,2,3,4]: print(x) # Output: 1 2 3 4"},{"prompt":"Sort a given array according to the given criteria [1, 20, 12, 15, 5], 'desc'","completion":"def sort_array(arr, order): if order == 'asc': arr.sort() else: arr.sort(reverse=True) return arr arr = [1, 20, 12, 15, 5] order = 'desc' print(sort_array(arr, order)) # Output: [20, 15, 12, 5, 1]"},{"prompt":"Write a JavaScript statement to delete all cookies","completion":"document.cookie = \\"\\";"},{"prompt":"Write a function to parse HTML","completion":"import bs4 as bs def parse_html(html): soup = bs.BeautifulSoup(html, 'html.parser') return soup"},{"prompt":"Generate a code to extract data from a table 'book_list' that has columns book_id and title. Extract data from book_list table where book_id is greater than 500.","completion":"SELECT * FROM book_list WHERE book_id > 500;"},{"prompt":"Write a comment for the following code def convert_to_timestamp(date): # convert date to timestamp time_converted = time.strptime(date, \\"%Y-%m-%d %H:%M:%S\\") timestamp = time.mktime(time_converted) return timestamp","completion":"# This function takes a date in string format \\"%Y-%m-%d %H:%M:%S\\" and returns the corresponding timestamp in seconds."},{"prompt":"Create multiple classes in Java with the provided input. class Player { String name; int age; String club; String position;","completion":"class Player { String name; int age; String club; String position; // Constructors public Player(String name, int age, String club, String position) { this.name = name; this.age = age; this.club = club; this.position = position; } // Getters and Setters public String getName() { return this.name; } public void setName(String name) { this.name = name; } public int getAge() { return this.age; } public void setAge(int age) { this.age = age; } public String getClub() { return this.club; } public void setClub(String club) { this.club = club; } public String getPosition() { return this.position; } public void setPosition(String position) { this.position = position; } }"},{"prompt":"Edit the code to fix the following bug: The code doesn't return the expected output. def sum(numbers): x = 0 for n in numbers: x += n return x","completion":"def sum(numbers): x = 0 for n in numbers: x += n return int(x)"},{"prompt":"Create a graphical representation of the input data. Apple : 48 Orange : 32 Banana : 68","completion":"<img src=\\"output-graph.png\\" width=\\"400\\" height=\\"200\\" />"},{"prompt":"Combine the input arrays into a single array. Array1 = [3, 4, 9, 6] Array2 = [2, 6, 8, 7]","completion":"Array = [3, 4, 9, 6, 2, 6, 8, 7]"},{"prompt":"Write a python code snippet to square the number 12.","completion":"x = 12 y = x**2 print(y)"},{"prompt":"Write a SQL query to find the names of all students who are enrolled in the course \\"Intro to Data Science\\".","completion":"SELECT name FROM Student WHERE course_name = 'Intro to Data Science';"},{"prompt":"Write a C# code snippet to add two integers a and b. int a = 3; int b = 4;","completion":"int c = a + b;"},{"prompt":"Write a Java code to find the maximum of two numbers a and b. int a = 3; int b = 4;","completion":"int max; if (a > b) { max = a; } else { max = b; }"},{"prompt":"Write a python code to check for a number being prime or not. num = 11","completion":"# Initialize a boolean no_prime no_prime = False # Check all numbers lower than num for i in range(2, num): if num % i == 0: no_prime = True break # Print the appropriate output if no_prime: print(num, 'is not prime') else: print(num, 'is prime')"},{"prompt":"Write an SQL query to find the ID, course name and instructor name for courses taught by instructor \\"John Smith\\".","completion":"SELECT id, course_name, instructor_name FROM Courses WHERE instructor_name = 'John Smith';"},{"prompt":"Write a Python code to find the number of vowels in a provided string. string = \\"Hello, World!","completion":"# Count the number of vowels in the string num_vowels = 0 for char in string: if char in 'aeiouAEIOU': num_vowels += 1 print(\\"Number of vowels:\\", num_vowels)"},{"prompt":"Write an SQL query to find the names of all students who have scored more than 80% marks in their exams.","completion":"SELECT name FROM Student WHERE marks > 80;"},{"prompt":"Write a Javascript code to remove all duplicate values from an array, arr. let arr = [1,2,2,3,4,4,5];","completion":"let uniqueValues = [...new Set(arr)]; console.log(uniqueValues);"},{"prompt":"Write an SQL query to calculate the average final grade of all students.","completion":"SELECT AVG (finalGrade) FROM Student;"},{"prompt":"Design a tree data structure to store employee records in an organization.","completion":"class EmployeeTree: def __init__(self, name): self.name = name self.children = [] # add a sub-employee to the tree def add_child(self, name): self.children.append(EmployeeTree(name)) # remove a sub-employee from the tree def remove_child(self, name): for child in self.children: if child.name == name: self.children.remove(child)"},{"prompt":"Create a class called \\"IDgenerator\\" that generates a list of unique random numbers between a given range.","completion":"import random class IDGenerator: def __init__(self, min_val, max_val): self.min_val = min_val self.max_val = max_val self.ids = [] def generate(self): rand_int = random.randint(self.min_val, self.max_val) while rand_int in self.ids: rand_int = random.randint(self.min_val, self.max_val) self.ids.append(rand_int) return rand_int"},{"prompt":"w do I create a function that sums two integers in Python?","completion":"def add_two_ints(a, b): return a + b"},{"prompt":"Write a code in C++ to print the elements of a given array of strings using a for loop.","completion":"#include <iostream> void printArray(std::string arr[], int n) { for (int i = 0; i < n; i++) std::cout << arr[i] << std::endl; } int main(){ std::string arr[] = {\\"one\\", \\"two\\", \\"three\\"}; int n = sizeof(arr) / sizeof(arr[0]); printArray(arr, n); return 0; }"},{"prompt":"Java, how do I create an array of integers from a given array of strings with integer values?","completion":"String[] strArray = {\\"1\\", \\"2\\", \\"3\\", \\"4\\"}; int[] intArray = Arrays.stream(strArray) .mapToInt(Integer::parseInt) .toArray();"},{"prompt":"Edit the following HTML page to add a table to the page. <!DOCTYPE html> <html> <head> <title>My HTML Page</title> </head> <body> <h1>My HTML Page</h1> </body> </html>","completion":"<!DOCTYPE html> <html> <head> <title>My HTML Page</title> </head> <body> <h1>My HTML Page</h1> <table> <tr> <th>Column 1</th> <th>Column 2</th> <th>Column 3</th> </tr> <tr> <td>Data 1</td> <td>Data 2</td> <td>Data 3</td> </tr> </table> </body> </html>"},{"prompt":"Create a function for converting text to an all-uppercase string.","completion":"function toUpperCase(str) { return str.toUpperCase(); }"},{"prompt":"Create a Java program that returns the minimum value in an array of integers.","completion":"public static int minValue(int[] arr) { int minValue = arr[0]; for (int i = 1; i < arr.length; i++) { if (arr[i] < minValue) { minValue = arr[i]; } } return minValue; }"},{"prompt":"Write an SQL statement to get the top 5 most expensive movies from an inventory table.","completion":"SELECT title, price FROM inventory ORDER BY price DESC LIMIT 5;"},{"prompt":"Create an array of strings for the given string and return only the strings with a length equal to or greater than 5. \\"This is a string of words to te","completion":"[\\"This\\", \\"string\\", \\"words\\", \\"test\\"]"},{"prompt":"Write a code snippet to find all combinations of 3 numbers in the array that sum to zero. [3, 5, -2, 1, -1, 0, 4]","completion":"[[3, -2, 1], [5, -1, -4], [5, 1, -4], [-2, 0, 2]]"},{"prompt":"dentify and delete duplicate elements from an array in JavaScript. [1, 2, 3, 4, 4, 5]","completion":"function removeDuplicates(arr) { let unique = arr.filter((v, i, a) => a.indexOf(v) === i); return unique; } let arr = [1, 2, 3, 4, 4, 5]; let result = removeDuplicates(arr); console.log(result); // [1, 2, 3, 4, 5]"},{"prompt":"Sort elements of an array in descending order in Java.","completion":"public static int[] sortDesc(int[] nums) { Arrays.sort(nums); Collections.reverse(Arrays.asList(nums)); return nums; }"},{"prompt":"Write a PHP function for calculating the average of an array of numbers.","completion":"function calculateAverage(numbers) { sum = array_sum(numbers); n = count(numbers); average = sum/n; return average; }"},{"prompt":"w to format a date in PHP?","completion":"echo date(\\"Y-m-d\\", time()); // Outputs current date in the format \\"2020-01-30\\""},{"prompt":"w is a While Loop used in C++?","completion":"while (expression) { statement(s); } Typically, while loops are used when we need to continue looping until some condition is met."},{"prompt":"Create a class in Python to represent a rectangle with the attributes width, height, and area.","completion":"class Rectangle: def __init__(self, width, height): self.width = width self.height = height self.area = width * height"},{"prompt":"w to create a new array from an existing array in JavaScript?","completion":"const newArray = oldArray.slice(); // creates a shallow copy of the array // OR const newArray = [...oldArray]; // creates a shallow copy of the array"},{"prompt":"Write an SQL query to find all the customers with first names starting with \\"A\\" from the customers table. customers table","completion":"SELECT * FROM customers WHERE first_name LIKE 'A%'"},{"prompt":"Write a Java class that can be used to store and access a large dictionary. Large dictionary with 10000 word","completion":"import java.util.HashMap; public class Dictionary { private HashMap<String, String> dictionary; public Dictionary() { this.dictionary = new HashMap<>(); } public void addWord(String word, String definition) { dictionary.put(word, definition); } public String getDefinition(String word) { return dictionary.get(word); } }"},{"prompt":"Create a machine learning classifier that can classify the sentiment of a text. Text: This product is really bad","completion":"# import required libraries import pandas as pd import numpy as np from sklearn.feature_extraction.text import CountVectorizer from sklearn.model_selection import train_test_split from sklearn.naive_bayes import MultinomialNB # Read the data into a Pandas DataFrame data = pd.read_csv('data.csv') # Convert the Labels (Positive/Negative) to numbers data['Sentiment'] = [1 if sentiment == 'Positive' else 0 for sentiment in data['Sentiment']] # Create the feature matrix count_vectorizer = CountVectorizer() X = count_vectorizer.fit_transform(data['Text']) # Split the data into training and testing sets X_train, X_test, y_train, y_test = train_test_split(X, data['Sentiment'], test_size=0.20, random_state=42) # Train a Multinomial Naive Bayes Classifier clf = MultinomialNB().fit(X_train, y_train) # Use the Classifier to predict the label of the input text prediction = clf.predict(count_vectorizer.transform([\\"This product is really bad\\"]))[0] if prediction == 1: print(\\"Positive\\") else: print(\\"Negative\\")"},{"prompt":"Use the NumPy package to multiply two matrices. Matrix1: [[1, 2], [3, 4]] Matrix2: [[2, 3], [4, 5]]","completion":"import numpy as np matrix1 = np.array([[1, 2], [3, 4]]) matrix2 = np.array([[2, 3], [4, 5]]) product = np.matmul(matrix1, matrix2) print(product) # Output # array([[10, 13], # [22, 29]])"},{"prompt":"Find all substring of a string. String: \\"abcdefg","completion":"# function to find all the substrings of a given string def substr(string): length = len(string) # Weighted Index of the string w_index = 0 list_substr = [] # Run a loop from 0 to n-1 while w_index < length: # Run inner loop from w_index + 1 to n s_index = w_index + 1 while s_index < length + 1: list_substr.append(string[w_index:s_index]) s_index += 1 w_index += 1 return list_substr # Test program s = \\"abcdefg\\" print(substr(s)) # Output # ['a', 'ab', 'abc', 'abcd', 'abcde', 'abcdef', 'abcdefg', 'b', 'bc', 'bcd', 'bcde', 'bcdef', 'bcdefg', 'c', 'cd', 'cde', 'cdef', 'cdefg', 'd', 'de', 'def', 'defg', 'e', 'ef', 'efg', 'f', 'fg', 'g']"},{"prompt":"Convert a string to its inverse form. String: \\"Hello World!","completion":"def string_inverse(string): inverse_string = \\"\\" for i in range(len(string)-1, -1, -1): inverse_string += string[i] return inverse_string # Test program string = \\"Hello World!\\" inverse_string = string_inverse(string) print(\\"Original String: %s\\" % string) print(\\"Inverse String: %s\\" % inverse_string) # Output # Original String: Hello World! # Inverse String: !dlroW olleH"},{"prompt":"Perform arithmetic operations on two numbers. Num1: 4 Num2: 2","completion":"# Add the numbers sum = 4 + 2 # Subtract the numbers difference = 4 - 2 # Multiplication product = 4 * 2 # Exponent power = 4**2 # Division quotient = 4 / 2 # Integer Division div = 4 // 2 # Remainder remainder = 4 % 2 # Print the results print(\\"Sum is %snDifference is %snProduct is %snPower is %snQuotient is %snDivision is %snRemainder is %s\\" %(str(sum),str(difference),str(product),str(power),str(quotient),str(div),str(remainder))) # Output: # Sum is 6 # Difference is 2 # Product is 8 # Power is 16 # Quotient is 2.0 # Division is 2 # Remainder is 0"},{"prompt":"Convert a string of numbers from one base to another. String: \\"101111\\" From Base: 2 To Base: 10","completion":"# Get the numerical value of the string in the from base num = int(str(101111), 2) # Convert the numerical value to the to base converted_num = \\"{0:b}\\".format(num) print(converted_num) # Output # 47"},{"prompt":"Create a print statement that will print out a formatted table containing the elements of a 2D list. 2D List: [[1,2,3], [4,5,6], [7,8,9]]","completion":"# Get the list twoD_list = [[1,2,3], [4,5,6], [7,8,9]] # Print it out as a table for row in twoD_list: for val in row: print('{:4}'.format(val), end=\\"\\") print() # Output # 1 2 3 # 4 5 6 # 7 8 9"},{"prompt":"Create a function that can detect if a word is a palindrome. Word: racecar","completion":"def isPalindrome(string): left = 0 right = len(string) - 1 while right >= left: if not string[left] == string[right]: return False left += 1 right -= 1 return True # Test program isPalindrome(\\"racecar\\") # Output # True"},{"prompt":"Write a regular expression that can detect emails.","completion":"import re # Regular expression regex = r\\"(^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+.[a-zA-Z0-9-.]+)\\" # Search for any emails that match the regular expression matches = re.findall(regex, string) # Print out the emails that were found for match in matches: print(match)"},{"prompt":"Create a browser application in JavaScript that toggles a dark-mode.","completion":"const toggleMode = () => { let mode = localStorage.getItem(\\"mode\\"); if (mode) { document.body.className = mode; mode === \\"dark-mode\\" ? mode = \\"light-mode\\" : mode = \\"dark-mode\\"; localStorage.setItem(\\"mode\\", mode); } else { localStorage.setItem(\\"mode\\", \\"dark-mode\\"); document.body.className = \\"dark-mode\\"; } } toggleMode()"},{"prompt":"Print the third element in this array. [1,2,3,4,5]","completion":"3"},{"prompt":"Using regular expression, write a pattern to match a string of any length which ends with \\"oo\\".","completion":".*oo"},{"prompt":"Write a query to retrieve the distinct job titles from an \\"employees\\" table.","completion":"SELECT DISTINCT job_title FROM employees"},{"prompt":"Using CSS, write a class selector to change the color of text to blue.","completion":".blue-text { color: blue; }"},{"prompt":"Write an SQL query to order the employees in an \\"employees\\" table first by age, smallest to largest, and then by name alphabetically.","completion":"SELECT * FROM employees ORDER BY age ASC, name ASC"},{"prompt":"Write an if-else statement in Java that prints \\"red\\" if a variable \\"color\\" is set to \\"red\\" and prints \\"blue\\" otherwise.","completion":"if (color == \\"red\\") { System.out.println(\\"red\\"); } else { System.out.println(\\"blue\\"); }"},{"prompt":"Write a Python function to print a multiplication table of size 10.","completion":"def print_multiplication_table(size): for i in range(1, size+1): for j in range(1, size+1): print(i*j, end=\\"t\\") print(\\"r\\") print_multiplication_table(10)"},{"prompt":"Create an HTML table with the columns \\"Name\\", \\"Age\\", and \\"Occupation\\".","completion":"<table> <thead> <tr> <th>Name</th> <th>Age</th> <th>Occupation</th> </tr> </thead> <tbody> <tr> <td></td> <td></td> <td></td> </tr> </tbody> </table>"},{"prompt":"Define four classes in Java that form a hierarchy of fruit.","completion":"// Base class public abstract class Fruit { private String color; public Fruit(String color) { this.color = color; } public abstract double getWeight(); } // Inheriting class public class Apple extends Fruit { private double weight; public Apple(String color, double weight) { super(color); this.weight = weight; } @Override public double getWeight() { return weight; } } // Inheriting class public class Banana extends Fruit { private double length; public Banana(String color, double length) { super(color); this.length = length; } @Override public double getWeight() { return length * 0.5; } } // Inheriting class public class Orange extends Fruit { private double radius; public Orange(String color, double radius) { super(color); this.radius = radius; } @Override public double getWeight() { return Math.round(Math.PI * Math.pow(radius, 2)); } }"},{"prompt":"Generate a random number between 0 and 10 and store it in a variable called \\"randNum\\".","completion":"let randNum = Math.floor(Math.random() * 11);"},{"prompt":"Create a function to retrieve the last three elements in an array and store them in a new array. let array = [1, 2, 3, 4, 5, 6, 7]","completion":"const lastThreeElements = (arr) => { const newArray = []; for (let i = arr.length - 3; i < arr.length; i++) { newArray.push(arr[i]); } return newArray; }; let lastThree = lastThreeElements(array); console.log(lastThree); // Output: [5, 6, 7]"},{"prompt":"Separate odd numbers from an array and store them in a different array. let array = [1,2,3,4,5,6,7,8,9]","completion":"const oddNumbers = (arr) => { const odd = []; for (let i = 0; i < arr.length; i++) { if (arr[i] % 2 !== 0) { odd.push(arr[i]); } } return odd; }; let odds = oddNumbers(array); console.log(odds); // Output: [1, 3, 5, 7, 9]"},{"prompt":"Create an array of the words in a given string and sort them alphabetically. \\"Hello World How Are You","completion":"const alphabetize = (str) => { const words = str.split(' '); words.sort(); return words; }; let sortedWords = alphabetize('Hello World How Are You'); console.log(sortedWords); // Output: ['Are', 'Hello', 'How', 'You', 'World']"},{"prompt":"Calculate the length of each word in a given string and store them in an array. \\"Hello World How Are You","completion":"const wordLength = (str) => { const words = str.split(' '); const lengthArray = []; for (let i = 0; i < words.length; i++) { lengthArray.push(words[i].length); } return lengthArray; }; let wordLengths = wordLength('Hello World How Are You'); console.log(wordLengths); // Output: [5, 5, 3, 3, 3]"},{"prompt":"Create a selector for a page element with the id \\"main-heading\\".","completion":"const mainHeading = document.getElementById('main-heading');"},{"prompt":"Compare two strings and returns \\"yes\\" if they are equal, otherwise returns \\"no\\". \\"Apple\\", \\"apple","completion":"const stringCompare = (str1, str2) => { if (str1.toLowerCase() === str2.toLowerCase()) { return 'yes'; } else { return 'no'; } }; let compResult = stringCompare('Apple', 'apple'); console.log(compResult); // Output: 'yes'"},{"prompt":"Check whether or not an input is a palindrome using a regular expression. \\"race car","completion":"const isPalindromeRegEx = (str) => { let regEx = /[W_]/g; let lowStr = str.toLowerCase().replace(regEx, ''); let reverseStr = lowStr.split('').reverse().join(''); if (lowStr === reverseStr) { return true; } else { return false; } }; let isPalindromeCheckRegEx = isPalindromeRegEx('race car'); console.log(isPalindromeCheckRegEx); // Output: true"},{"prompt":"Create a validation function to check if the inputed string contains any numbers.","completion":"import re def validate_string(input_str): pattern = r\\"d\\" if re.search(pattern, input_str): return False else: return True"},{"prompt":"Write a SQL query to retrieve the details of all customers who have placed orders with status \\"Delivered","completion":"SELECT Customer.* FROM Customer INNER JOIN Orders ON Customer.ID = Orders.CustomerID WHERE Orders.Status = 'Delivered'"},{"prompt":"Rewrite the code below to remove the repetition in the code using a loop. names = [\\"John\\", \\"Sam\\", \\"Paul\\"] print(names[0]) print(names[1]) print(names[2])","completion":"names = [\\"John\\", \\"Sam\\", \\"Paul\\"] for name in names: print(name)"},{"prompt":"Create a python class with a method to generate the following table format","completion":"class Table_Generator: def generate_table(self): print('+---------+--------+--------+') print('| S.No | Name | Age |') print('+---------+--------+--------+')"},{"prompt":"w can the given list be sorted according to the age? data = [('John', 20), ('Vikram', 25), ('Bob', 21), ('David', 23)]","completion":"data.sort(key=lambda x: x[1]) # Output [('John', 20), ('Bob', 21), ('David', 23), ('Vikram', 25)]"},{"prompt":"Name one benefit of using a function in Python.","completion":"One of the key benefits of using functions in Python is code reusability. Functions help reduce the code duplication and promote code readability by allowing us to store and reuse code in a single place. This makes it easier for us to debug and modify existing code. Furthermore, functions can help reduce the cognitive load and effort required to understand the code. As functions encapsulate related code blocks, we can focus on the logic contained within the function instead of worrying about unrelated code."},{"prompt":"w could you execute a JavaScript code snippet named 'my_script.js' after the page has been loaded?","completion":"We can use the 'onload' event to execute our JavaScript code snippet after the page has been loaded. For example, we can use the following code to execute the 'my_script.js' file once the page has been loaded: window.onload = function() { let script = document.createElement(\\"script\\"); script.type = \\"text/javascript\\"; script.src = \\"my_script.js\\"; document.getElementsByTagName(\\"head\\")[0].appendChild(script); };"},{"prompt":"What is the purpose of the keyword \`break\` in a JavaScript loop?","completion":"The keyword 'break' is used in a loop to stop the execution of the loop and exit the loop. It can be used to terminate an infinite loop and to force an immediate exit from a loop even if the looping condition has not been met."},{"prompt":"What could be a use case of a 'while' loop in Python?","completion":"A while loop can be used to iterate over a sequence or perform a computation until a specific condition is met. For example, it can be used to generate a list of prime numbers, where it would check if the current number is a prime number by checking if its divisible by any of the already discovered primes before it."},{"prompt":"Construct an Express route for handling browser requests for a web page named 'Home'.","completion":"app.get(\\"/Home\\", (req, res) => { // Handle Home page request here });"},{"prompt":"Suggest a data structure in Python to store a list of countries and their capitals.","completion":"A dictionary can be used to store a list of countries and their respective capitals. The key for each country should be the name of the country and the value should be its capital city. For example: dict = { 'India': 'New Delhi', 'China': 'Beijing', 'UK': 'London' }"},{"prompt":"Construct a Django model field for storing a user's age.","completion":"age = models.IntegerField()"},{"prompt":"What could be a use case of applying an algorithm such as the K-Means Clustering Algorithm?","completion":"The K-Means Clustering Algorithm can be used to partition a data set into k distinct clusters of samples such that each sample belongs to the cluster with the nearest mean. It can be used for tasks such as data segmentation, anomaly detection, customer segmentation and image compression."},{"prompt":"Write a Python program to create a nested dictionary from two lists. l1 = ['a', 'b', 'c'] l2 = [1, 2, 3]","completion":"{'a': 1, 'b': 2, 'c': 3}"},{"prompt":"Write a CSS style to set the font size of all h1 elements on a webpage to 24px.","completion":"h1 { font-size: 24px; }"},{"prompt":"Write an SQL query to select the top 5 employees who have the highest salary in a given department.","completion":"SELECT * FROM Employees WHERE Department_ID = <Department_ID> ORDER BY Salary DESC LIMIT 5;"},{"prompt":"Write a JavaScript function to determine if an array is sorted or not.","completion":"function isSorted(arr) { for (let i=1; i<arr.length; i++) { if (arr[i] < arr[i-1]) return false; } return true; }"},{"prompt":"Write a MySQL query to find the first and last name of all the employees in the ‘sales’ department.","completion":"SELECT FirstName, LastName FROM Employees WHERE Department = 'sales';"},{"prompt":"Analyze the given JavaScript code, and identify the logical operator being used. if (age <= 18 || age >= 65)","completion":"The logical operator being used is the \\"or\\" operator (||)."},{"prompt":"Create a HTML form to accept a user's name, address, and telephone number.","completion":"<form> <label>Name:</label><br> <input type=\\"text\\" name=\\"name\\"/><br> <label>Address:</label><br> <input type=\\"text\\" name=\\"address\\"/><br> <label>Telephone:</label><br> <input type=\\"text\\" name=\\"telephone\\"/><br> <input type=\\"submit\\" value=\\"Submit\\"/> </form>"},{"prompt":"Create a random sequence of 100 numbers between 1 and 10, both inclusive, and print them on the screen.","completion":"2, 6, 7, 1, 5, 4, 4, 7, 1, 6, 8, 9, 4, 1, 3, 4, 5, 10, 3, 7, 1, 8, 10, 8, 8, 2, 10, 7, 5, 10, 8, 7, 5, 6, 1, 7, 8, 2, 8, 7, 5, 1, 3, 7, 10, 2, 10, 7, 5, 6, 9, 2, 4, 2, 1, 2, 5, 2, 4, 7, 6, 2, 4, 7, 1, 2, 7, 10, 4, 6, 7, 4, 1, 5, 7, 3, 8, 4, 7, 10, 6, 8, 2, 9, 2, 5, 2, 3, 6, 4, 9, 4, 2, 6, 7"},{"prompt":"Generate a set of SQL commands to list all the customers and their email addresses in a table named customers.","completion":"SELECT * FROM customers ORDER BY email;"},{"prompt":"w would you store the values of this array of dictionaries in a database? [ {'name': 'John', 'age': 28}, {'name': 'Marry', 'age': 27}, {'name': 'David', 'age': 30} ]","completion":"The values of the array of dictionaries can be stored in a database using an SQL query. The query would create a table with columns for each key in the dictionaries and then store the values in their respective columns. For each dictionary, an INSERT query would be run to add the values of that dictionary to database."},{"prompt":"mplement a function that prints n asterisk characters in a row.","completion":"def print_asterisks(n): for i in range(n): print(\\"*\\", end=\\"\\") print()"},{"prompt":"Create a function that takes a string of brackets and checks if they are correctly matched or not.","completion":"def check_brackets(bracket_string): \\"\\"\\" Function that checks if bracket string is correctly matched. \\"\\"\\" stack = [] open_brackets = {'[', '{', '('} close_brackets = {']', '}', ')'} for bracket in bracket_string: if bracket in open_brackets: stack.append(bracket) elif bracket in close_brackets: if not stack or close_brackets[bracket] != stack.pop(): return False return not stack"},{"prompt":"Write a function to delete redundant items from a list. [3, 2, 1, 3, 5, 6, 3, 2]","completion":"def delete_redundant_items(list_param): \\"\\"\\" Function to delete redundant items from a list \\"\\"\\" result_list = [] for item in list_param: if item not in result_list: result_list.append(item) return result_list"},{"prompt":"Select all the records from the Orders table with a status of 'active'.","completion":"SELECT * FROM Orders WHERE status = 'active';"},{"prompt":"Explain the concept of Convolutional Neural Networks.","completion":"Convolutional Neural Networks (CNNs) are a type of deep learning neural network used primarily in image processing, computer vision, and natural language processing tasks. CNNs utilize a grid of neurons that learn to extract relevant features from an input, such as patterns or shapes, known as filters. This allows CNNs to perform hierarchical feature extraction from input data, which is useful in areas where the data has a nonlinear or highly structured nature. CNNs can be used to classify images, detect objects in images, extract features from audio and video signals, and much more."},{"prompt":"Construct a for loop which adds up numbers.","completion":"nums = [3, 4, 5, 6] total = 0 for num in nums: total += num print(total) # prints 18"},{"prompt":"Given a string of length N, provide an algorithm to determine if there is a substring in the string that repeats itself.","completion":"The algorithm starts by comparing the first N characters to the next N characters in the string. If the characters match, then the algorithm returns true. If the characters do not match, the algorithm moves to the next set of N characters and compares them. If no match is found, the algorithm returns false. The time complexity of this algorithm is O(N^2)."},{"prompt":"Convert the following epoch time to a human-readable format. 1599462722","completion":"August 28, 2020, 9:48:42 PM UTC"},{"prompt":"Create a JSON object that stores the following employee information. name: John Smith age: 28 department: Engineering","completion":"{\\"name\\": \\"John Smith\\", \\"age\\": 28, \\"department\\": \\"Engineering\\"}"},{"prompt":"Suggest a data structure to store and retrieve a large amount of text data.","completion":"A hash table is an ideal data structure for storing and retrieving large amounts of textual data, as it provides an efficient way to map and access data using a key-value pair. Hash tables use a hashing algorithm to efficiently map each key-value pair to a specific location within the table, making it much easier and faster to access any element."},{"prompt":"w would you optimize a loop which runs over an array?","completion":"Loop optimization techniques can be applied in order to improve the efficiency of a loop which runs over an array. The most common techniques include avoiding unnecessary computations, using pre-computation, using memoization to store intermediate results, using loop unrolling and different ways of loop indexing. In addition, using the right data structures can greatly improve the performance of a loop, as certain data structures are more efficient when dealing with large arrays."},{"prompt":"Rearrange the items in the array in ascending order. [3, 6, 5, 1, 4, 2]","completion":"[1, 2, 3, 4, 5, 6]"},{"prompt":"Write a SQL query to find the average of the age field from the 'employees' table.","completion":"SELECT AVG(age) FROM employees;"},{"prompt":"Debug the following code and explain why it gave an error. def sum(a, b): try: return a + b except TypeError: return \\"inputs should be numbers\\" finally: print(\\"This function has successfully executed\\") output = sum(1, '2')","completion":"The code gave an error because a TypeError was raised due to trying to add an integer and a string. The error can be resolved by adding type-checking in the code: def sum(a, b): try: if type(a) == int and type(b) == int: return a + b else: return \\"inputs should be numbers\\" except TypeError: return \\"inputs should be numbers\\" finally: print(\\"This function has successfully executed\\") output = sum(1, '2')"},{"prompt":"Sort the following list by the third element of the sublists in ascending order. [[1,2,3], [0,0,1], [7,8,9], [8,7,2]]","completion":"[[0,0,1], [1,2,3], [8,7,2], [7,8,9]]"},{"prompt":"Convert a given time in 24 hour format to 12 hour format. 19:45","completion":"7:45 PM"},{"prompt":"Write an HTML page that shows a table with the heading \\"Famous Actors\\" and columns for the actor's name, age, and nationality.","completion":"<html> <head> <title>Famous Actors</title> </head> <body> <table> <tr> <th>Name</th> <th>Age</th> <th>Nationality</th> </tr> <tr> <td>Tom Hanks</td> <td>62</td> <td>American</td> </tr> <tr> <td>Angelina Jolie</td> <td>43</td> <td>American</td> </tr> <tr> <td>Johnny Depp</td> <td>56</td> <td>American</td> </tr> </table> </body> </html>"},{"prompt":"Write a CSS code to add a 1px red border to a paragraph element.","completion":"p { border: 1px solid red; }"},{"prompt":"Write an HTML page which contains a form with fields for a user's first name, last name, and email address.","completion":"<html> <head> <title>User Info Form</title> </head> <body> <form> <label>First Name:</label> <input type=\\"text\\" id=\\"firstname\\" name=\\"firstname\\" > <br><br> <label>Last Name:</label> <input type=\\"text\\" id=\\"lastname\\" name=\\"lastname\\"> <br><br> <label>Email:</label> <input type=\\"text\\" id=\\"email\\" name=\\"email\\"> <br><br> <input type=\\"submit\\" value=\\"Submit\\" > </form> </body> </html>"},{"prompt":"Compute the big-O time complexity for this algorithm. def factorial(n): if n == 0: return 1 else: return n*factorial(n-1)","completion":"The time complexity for this algorithm is O(n)."},{"prompt":"Write a MySQL query to find the student with the highest grade in the class.","completion":"SELECT MAX(grade) FROM students;"},{"prompt":"Analyze the runtime complexity of this algorithm. def factorial2(n): fact = 1 for i in range(1, n + 1): fact *= i return fac","completion":"The runtime complexity of this algorithm is O(n)."},{"prompt":"Using the class group, create an instance of the StudentClass and print out its name attribute. class StudentClass: def __init__(self, name): self.name = name","completion":"# create an instance of the StudentClass student_class = StudentClass(\\"Statistics\\") #print out its name attribute print(student_class.name) # Output: Statistics"},{"prompt":"Sort the data using heap sort. data = [12, 11, 15, 10, 9, 1, 2, 3, 13, 14, 4, 5, 6, 7, 8]","completion":"def heap_sort(data): # Create an empty Max Heap max_heap = MaxHeap() # Add elements to the Max Heap for element in data: max_heap.insert(element) sorted_data = [] while max_heap.count > 0: # Pop the Maximum element from the Max Heap maximum = max_heap.extract_max() sorted_data.append(maximum) return sorted_data sorted_data = heap_sort(data) print(sorted_data) # Output: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]"},{"prompt":"Play a C-major chord using the scikit-learn MIDI library.","completion":"# play a C-major chord using the scikit-learn MIDI library from sklearn.datasets import load_sample_file from sklearn.feature_extraction.io import MidiDispatcher # use MidiDispatcher to create a new sequence dispatcher = MidiDispatcher() notes = [60, 64, 67] # C-major notes velocities = [127, 127, 127] # maximum amplitude dispatcher.add_chords([(0, notes, velocities)]) # play the sequence player = MidiPlayer(dispatcher.io) player.play()"},{"prompt":"Sum the numbers in the given array using reduce. numbers = [1, 2, 3, 4, 5]","completion":"# Sum the numbers in the given array using reduce from functools import reduce sum = reduce(lambda x, y: x + y, numbers) print(sum) # Output: 15"},{"prompt":"Find the probability of a random variable following a normal distribution with a mean of 10 and a standard deviation of 2. x = 12","completion":"# Find the probability of a random variable following a normal distribution with a mean of 10 and a standard deviation of 2. from scipy.stats import norm prob = norm.pdf(x, 10, 2) print(prob) # Output: 0.17603266338214976"},{"prompt":"Group the given list of names into 3 different categories based on the first letter of the name. names = [\\"Adam\\", \\"Bill\\", \\"Brian\\", \\"Clarence\\", \\"Doug\\", \\"Emily\\", \\"Fred\\", \\"George\\", \\"Henry\\"]","completion":"# Group the given list of names into 3 different categories based on the first letter of the name group1 = [name for name in names if name[0] in ['A', 'B', 'C']] group2 = [name for name in names if name[0] in ['D', 'E', 'F']] group3 = [name for name in names if name[0] in ['G', 'H']] print(group1) # Output: ['Adam', 'Bill', 'Brian', 'Clarence'] print(group2) # Output: ['Doug', 'Emily', 'Fred'] print(group3) # Output: ['George', 'Henry']"},{"prompt":"Evaluate the expression 200 + 400 / 2.","completion":"# Evaluate the expression 200 + 400 / 2 result = 200 + 400 / 2 print(result) # Output: 300.0"},{"prompt":"Change the code using decorator to log how long the function runs. def sum_function(a, b): return a + b","completion":"import time def log_time(func): def inner(*args, **kwargs): start = time.time() result = func(*args, **kwargs) end = time.time() print(f'Function {func.__name__} took {end-start} sec to run') return result return inner @log_time def sum_function(a, b): return a + b"},{"prompt":"Remove all the elements in an array using filter function. items = [1, 2, 3, 4, 5]","completion":"# Remove all the elements in an array using filter function items = [1, 2, 3, 4, 5] filterend_items = list(filter(lambda x: False, items)) print(filterend_items) # Output: []"},{"prompt":"Using a for loop, calculate the distance between one point to every other point in the given list. points = [ (10, 20), (12, 22), (14, 24) ]","completion":"# Using a for loop, calculate the distance between one point to every other point in the given list from math import sqrt distances = [] for i in range(len(points)): for j in range(len(points)): if i != j: x1, y1 = points[i] x2, y2 = points[j] distance = sqrt((x2 - x1)**2 + (y2 - y1)**2) distances.append(distance) print(distances) # Output: [2.8284271247461903, 4.242640687119285, 2.8284271247461903]"},{"prompt":"Find all the even numbers in the given range. min_num = 4 max_num = 17","completion":"# Find all the even numbers in the given range even_nums = [num for num in range(min_num, max_num + 1) if num % 2 == 0] print(even_nums) # Output: [4, 6, 8, 10, 12, 14, 16]"},{"prompt":"Create a function to select the kth smallest item from a list. lst = [3, 6, 8, 2, 10, 11]","completion":"# Create a function to select the kth smallest item from a list def kth_smallest(lst, k): sorted_lst = sorted(lst) return sorted_lst[k - 1] # test the function item = kth_smallest(lst, 4) print(item) # Output: 8"},{"prompt":"Write pseudocode for the merge sort algorithm.","completion":"Mergesort(A): if A has 1 item : return A else divide A into two parts (left and right) of roughly equal size B = Mergesort(left) C = Mergesort(right) D = Merge(B,C) return D Merge(B,C): create an empty list D while B and C are not empty: if B[0] ≤ C[0]: add the first item of B to the end of D remove the first item of B else: add the first item of C to the end of D remove the first item of C while B is not empty: add the first item of B to the end of D remove the first item of B while C is not empty: add the first item of C to the end of D remove the first item of C return D"},{"prompt":"dentify the output of the following code snippet written in Scala. var number = 42 val message = if (number > 10) \\"This number is greater than 10\\" else \\"This number is not greater than 10","completion":"This number is greater than 10"},{"prompt":"Create a function in Python that takes two parameters, x and y, and prints out all numbers between x and y.","completion":"def display_numbers(x, y): for i in range(x,y+1): print(i)"},{"prompt":"Given an array of integers and an integer target, find all unique combinations of elements from the array that sum up to the target. arr = [1,2,3,4], target = 7","completion":"List<List<Integer>> result = new ArrayList<>(); combinations(arr, target, 0, new ArrayList<Integer>(), result); private static void combinations(int[] arr, int target, int start_index, ArrayList<Integer> curr, List<List<Integer>> result) { if (target < 0 || start_index >= arr.length) return; if (target == 0) { result.add(new ArrayList<>(curr)); return; } for (int i = start_index; i < arr.length; i++) { curr.add(arr[i]); combinations(arr, target - arr[i], i+1, curr, result); curr.remove(curr.size() - 1); } }"},{"prompt":"Create a Python module for extracting the sum of all digits of an integer.","completion":"def digit_sum(number): if number == 0: return 0 return (number % 10) + digit_sum(number // 10)"},{"prompt":"Construct an XPath expression to select the third element of an HTML list.","completion":"//li[3]"},{"prompt":"Construct a MongoDB query to sort all documents based on the price in the collection.","completion":"db.collection.find().sort({\\"price\\":1})"},{"prompt":"Create an input validation function in Java that checks for valid numerical input from the user.","completion":"public static void validateNumericInput() { Scanner input = new Scanner(System.in); while (!input.hasNextDouble()) { input.next(); System.out.println(\\"Error: Invalid input. Please try again.\\"); } }"},{"prompt":"Create a function in R that returns the common elements in two given vectors.","completion":"CommonElements <- function(x, y) { intersection(x, y) }"},{"prompt":"What is a multithreaded application and how does it work?","completion":"A multithreaded application is an application that creates multiple concurrent threads to execute tasks in parallel. These threads can communicate with each other and work together to accomplish a task faster than if they were executed sequentially. A multithreaded application makes use of modern computer hardware which has multiple core processors, each with its own thread. The threads then share access to a pool of memory and hardware resources which can be accessed and manipulated simultaneously. By working together, the threads can work faster and complete the task before any single thread working alone."},{"prompt":"Write a Python program to get the volume of a sphere with a given radius.","completion":"import math def sphere_volume(radius): return (4*math.pi*radius*radius*radius)/3"},{"prompt":"Design an algorithm to retrieve the longest word from an array of strings. [‘Hello’, ‘World’, ‘This’, ‘is’, ‘a’, ‘code’]","completion":"def get_longest_word(strings): longest_word = '' for s in strings: if len(s) > len(longest_word): longest_word = s return longest_word"},{"prompt":"Construct a code to print elements of a given list in reverse order. [1, 2, 3, 4, 5]","completion":"def reverse_list(numbers): return numbers[::-1]"},{"prompt":"Create an HTML page that displays a table with all the prime numbers up to 100.","completion":"<html> <head> <title>Prime Numbers</title> </head> <body> <h1>Prime Numbers</h1> <table> <tr> <th>Number</th> <th>Prime</th> </tr> <?php for (i = 2; i <= 100; i++) { if (isPrime(i)) { echo \\"<tr><td>i</td><td>Yes</td></tr>\\"; } else { echo \\"<tr><td>i</td><td>No</td></tr>\\"; }; }; ?> </table> </body> </html>"},{"prompt":"Write an SQL query to retrieve all records with a salary higher than average salary from a table named “employees”.","completion":"SELECT * FROM employees WHERE salary > (SELECT AVG(salary) FROM employees);"},{"prompt":"Write a statement that adds an element to a linked list.","completion":"newNode = Node(data) newNode.next = head head = newNode"},{"prompt":"Reverse an input string.","completion":"def reverse_string(s): return s[::-1]"},{"prompt":"Edit the following code for optimal performance. def sum_nums(): result = 0 for i in range(10): result += i return resul","completion":"def sum_nums(): result = 0 n = 10 while n > 0: result += (n - 1) n -= 1 return result"},{"prompt":"Generate an HTML form element with the text content \\"Create account\\".","completion":"<form> <input type=\\"submit\\" value=\\"Create account\\" /> </form>"},{"prompt":"Compute the sum of two give two-dimensional arrays. array1 = [[1, 2, 3], [4, 5, 6], [7, 8, 9]] array2 = [[1, 3, 5], [2, 4, 6], [7, 8, 9]]","completion":"def matrix_sum(a, b): result = [[0 for d in range(len(a))] for d in range(len(a[0]))] for i in range(len(a)): for j in range(len(a[0])): result[i][j] = a[i][j] + b[i][j] return result"},{"prompt":"Write a MySQL query to find the names of all customers who have placed an order for more than 100.","completion":"SELECT customers.name FROM orders JOIN customers ON customers.id = orders.customer_id WHERE orders.amount > 100;"},{"prompt":"What is dependency injection and how can it be implemented with JavaScript?","completion":"Dependency injection is a technique for separating the creation of an object’s dependencies from its own behavior. With JavaScript, it can be implemented with the use of ES2015 modules, which allow functions and objects from other modules to be imported. Then, instead of directly creating an object’s dependencies, they can be passed in upon creation. This makes the code more modular and easily testable."},{"prompt":"Are ternary operators fast in Python?","completion":"Ternary operators are often faster than if/else statements in Python, as they can reduce the amount of code and conditionals needed. However, there are some cases where an if/else statement may be faster, such as when there are multiple conditions that need to be checked."},{"prompt":"w do you retrieve data from a database using PHP?","completion":"Retrieving data from a database using PHP is relatively simple. You can use the PDO (PHP Data Objects) or MySQLi (MySQL Improved) extensions to connect to a database. You can then use an SQL query, such as SELECT, to retrieve data from the database."},{"prompt":"Write a C program to print out the Fibonacci series upto the nth number.","completion":"#include <stdio.h> int fibonacci(int n) { if (n == 0) return 0; else if (n == 1) return 1; else return (fibonacci(n-1) + fibonacci(n-2)); } int main() { int i, n; printf(\\"Enter the number of terms: \\"); scanf(\\"%d\\", &n); printf(\\"Fibonacci Series: \\"); for (i = 0; i < n; i++) { printf(\\"%d \\", fibonacci(i)); } return 0; }"},{"prompt":"Format a string by adding the required punctuations in order to make it a valid sentence this is the string","completion":"This is the string."},{"prompt":"From a given string, count the number of unique characters","completion":"def count_unique_chars(s): chars = set() for char in s: chars.add(char) return len(chars)"},{"prompt":"Create a function that identifies the type of a value","completion":"def identify_value_type(val): if type(val) is int: return 'int' elif type(val) is float: return 'float' elif type(val) is str: return 'str' elif type(val) is list: return 'list' elif type(val) is dict: return 'dict'"},{"prompt":"Create an array of objects with the following properties: firstname, lastname, age, gender. [ { firstname: 'John', lastname: 'Doe', age: 25, gender: 'Male' }, { firstname: 'Jane', lastname: 'Doe', age: 28, gender: 'Female' } ]","completion":"[ { firstname: 'John', lastname: 'Doe', age: 25, gender: 'Male' }, { firstname: 'Jane', lastname: 'Doe', age: 28, gender: 'Female' } ]"},{"prompt":"Create a class in Java called 'Student' which has the following attributes: firstname, lastname, age, gender.","completion":"public class Student { private String firstname; private String lastname; private int age; private String gender; public Student(String firstname, String lastname, int age, String gender) { this.firstname = firstname; this.lastname = lastname; this.age = age; this.gender = gender; } // getters and setters }"},{"prompt":"Write a SQL query to select records from the 'books' table whose author's name contains the string \\"John\\".","completion":"SELECT * FROM books WHERE author LIKE '%John%';"},{"prompt":"Create a new method in a given Java class named 'Person' which prints a greeting based on the firstname and lastname given. John Doe","completion":"public void printGreeting(String firstname, String lastname) { System.out.println(\\"Hello, \\" + firstname + \\" \\" + lastname + \\"!\\"); }"},{"prompt":"Create a class in Python named 'Car' and implement a method that shows the current speed of the car.","completion":"class Car(): def __init__(self, speed): self.speed = speed def show_speed(self): print(\\"The current speed is:\\", self.speed)"},{"prompt":"Modify a given JavaScript code snippet to add a random background color to all elements with the class name 'box'. document.querySelectorAll('.box').forEach(function(el) { el.style.backgroundColor = \\"red\\"; });","completion":"document.querySelectorAll('.box').forEach(function(el) { const randomHex = Math.floor(Math.random()*16777215).toString(16); el.style.backgroundColor = \`#{randomHex}\`; });"},{"prompt":"Create an Angular component that displays a posts feed with the given input data. [ { user: 'John', message: 'Hello world!' }, { user: 'Jane', message: 'Hi everyone!' } ]","completion":"<div *ngFor=\\"let post of posts\\"> <h1>{{ post.user }}</h1> <p>{{ post.message }}</p> </div>"},{"prompt":"Design a React component that builds a navigation menu from the given input. { \\"Home\\": \\"/\\", \\"About\\": \\"/about\\", \\"Product\\": \\"/product\\" }","completion":"class Nav extends React.Component { render() { const navLinks = Object.keys(this.props.nav).map(key => ( <li> <Link to={this.props.nav[key]}>{key}</Link> </li> )); return ( <nav> <ul>{navLinks}</ul> </nav> ); } }"},{"prompt":"Write an HTML page with a form to input the following information: name, age, gender.","completion":"<html> <head> <title>Form Example</title> </head> <body> <form> <label for=\\"name\\">Name:</label> <input type=\\"text\\" id=\\"name\\" name=\\"name\\"> <label for=\\"age\\">Age:</label> <input type=\\"number\\" id=\\"age\\" name=\\"age\\"> <label for=\\"gender\\">Gender:</label> <select id=\\"gender\\" name=\\"gender\\"> <option value=\\"Male\\">Male</option> <option value=\\"Female\\">Female</option> </select> <input type=\\"submit\\"> </form> </body> </html>"},{"prompt":"Create a UUID in Python.","completion":"import uuid print(uuid.uuid4())"},{"prompt":"Design a python class for a dog to print its name and age when given. Ginger, 3","completion":"class Dog: def __init__(self, name, age): self.name = name self.age = age def get_name(self): return self.name def get_age(self): return self.age dog = Dog('Ginger', 3) print(dog.get_name()) print(dog.get_age())"},{"prompt":"Suggest an alternate solution to the following JavaScript code. var names = [\\"Jon\\", \\"Bob\\", \\"Mike\\"]; for (var i=0; i<names.length; i++) { console.log(names[i]); }","completion":"var names = [\\"Jon\\", \\"Bob\\", \\"Mike\\"]; names.forEach(name => console.log(name));"},{"prompt":"Write a PHP code for creating a database table with 4 columns to store user information.","completion":"sql = \\"CREATE TABLE users ( id INT(6) UNSIGNED AUTO_INCREMENT PRIMARY KEY, firstName VARCHAR(30) NOT NULL, lastName VARCHAR(30) NOT NULL, email VARCHAR(50) )\\";"},{"prompt":"dentify the most efficient way to render a list of 10 divs using React.","completion":"render() { return ( <div> {[...Array(10)].map((_, i) => <div key={i}>Div #{i+1}</div> )} </div> ); };"},{"prompt":"Transform an input string to its uppercase equivalent with JavaScript. inputString=\\"This sentence should be in uppercase","completion":"let inputString = \\"This sentence should be in uppercase\\"; let outputString = inputString.toUpperCase(); console.log(outputString);"},{"prompt":"Edit the following function to allow editing of existing key-value pairs in the object. let myObj = { name: 'Gabe', age: 33 } function addPair(obj, key, value) { obj[key] = value; }","completion":"let myObj = { name: 'Gabe', age: 33 } function addPair(obj, key, value) { if(obj.hasOwnProperty(key)){ obj[key] = value; } else { obj[key] = value; } }"},{"prompt":"Write an HTML & CSS code to create a login form with two fields - email and password.","completion":"<form> <div> <label for=\\"email\\">Email:</label> <input type=\\"email\\" id=\\"email\\" /> </div> <div> <label for=\\"password\\">Password:</label> <input type=\\"password\\" id=\\"password\\" /> </div> <input type=\\"submit\\" value=\\"Login\\" /> </form> <style> form { display: flex; flex-direction: column; align-items: center; } div { display: flex; margin: 5px 0; width: 200px; } label { width: 100px; } input[type=\\"submit\\"] { margin-top: 15px; padding: 5px 10px; font-weight: bold; } </style>"},{"prompt":"Convert the following JavaScript switch statement into an if/else statement. let letterGrade; switch (percentage) { case 97: case 96: letterGrade = \\"A+\\"; break; case 95: letterGrade = \\"A\\"; break; default: letterGrade = \\"Unknown Grade\\"; break; }","completion":"let letterGrade; if (percentage === 97 || percentage === 96) { letterGrade = \\"A+\\"; } else if (percentage === 95) { letterGrade = \\"A\\"; } else { letterGrade= \\"Unknown Grade\\"; }"},{"prompt":"Design an algorithm to generate N random numbers from 1 to 1000. N=5","completion":"Let N be the number of random numbers to create. Initialize an array randomNumbers to empty For i from 1 to N: Generate a random number from 1 to 1000 Add this random number to randomNumbers Print randomNumbers"},{"prompt":"Create a JavaScript object to store three birds names and their corresponding scientific names. Owl - Strigidae Dove - Columbidae Eagle - Accipitridae","completion":"let birds = { \\"Owl\\": \\"Strigidae\\", \\"Dove\\": \\"Columbidae\\", \\"Eagle\\": \\"Accipitridae\\" };"},{"prompt":"Complete the following code to print a 2D array passed as parameter. def print2Dlist (list)","completion":"def print2Dlist (list) : for row in list: for element in row: print (element, end=\\" \\") print ()"},{"prompt":"Complete the following code to find the longest word in the given string. def longest_word(sentence)","completion":"def longest_word(sentence): words = sentence.split() longest_word = '' max_length = 0 for word in words: if len(word) > max_length: max_length = len(word) longest_word = word return longest_word"},{"prompt":"Create a function to remove all the characters in a string except a-z, A-Z and 0-9.","completion":"def remove_non_alphanumeric(string): filtered_string = \\"\\" for char in string: if char.isalnum(): filtered_string += char return filtered_string"},{"prompt":"Create a function to filter out any strings containing the word \\"the\\" from a list of strings.","completion":"def filter_the(string_list): filtered_list = [] for string in string_list: if \\"the\\" not in string: filtered_list.append(string) return filtered_list"},{"prompt":"Compute the total number of words in the given sentence. This is a test sentence","completion":"def count_words(sentence): words = sentence.split() return len(words)"},{"prompt":"Write a function to reverse the elements of a list without creating a new list.","completion":"def reverse_inplace(numbers): start = 0 end = len(numbers) - 1 while start < end: numbers[start], numbers[end] = numbers[end], numbers[start] start += 1 end -= 1"},{"prompt":"Write an SQL query to find all customers in the table 'customers' who have bought more than 3 items from the store.","completion":"SELECT customer_name FROM customers WHERE order_count > 3;"},{"prompt":"Create a HTML page that has a table displaying the names, phone numbers and email addresses of 5 employees.","completion":"<html> <head> <title>Employees</title> </head> <body> <h1>Employees</h1> <table> <tr> <th>Name</th> <th>Phone</th> <th>Email</th> </tr> <tr> <td>John Doe</td> <td>123-456-7890</td> <td>john.doe@example.com</td> </tr> <tr> <td>Jane Doe</td> <td>123-456-0987</td> <td>jane.doe@example.com</td> </tr> <tr> <td>Jeff Smith</td> <td>123-456-7654</td> <td>jeff.smith@example.com</td> </tr> <tr> <td>Lauren Anderson</td> <td>123-456-8201</td> <td>lauren.anderson@example.com</td> </tr> <tr> <td>David Johnson</td> <td>123-456-8321</td> <td>david.johnson@example.com</td> </tr> </table> </body> </html>"},{"prompt":"Write a Java program that takes an array of integers and returns the number of zeros in the array. [4, 0, 2, 4, 0, 0]","completion":"public static int countZeroes(int[] data) { int count = 0; for (int i : data) { if (i == 0) { count += 1; } } return count; }"},{"prompt":"Write an SQL query to sort the customers in the table 'customers' alphabetically by their last name.","completion":"SELECT * FROM customers ORDER BY last_name;"},{"prompt":"Create a web page that uses CSS to style a given piece of text.","completion":"<html> <head> <style> p { font-size: 16px; font-family: Arial, sans-serif; color: #333; } .bold { font-weight: bold; } </style> </head> <body> <p class=\\"bold\\">Hello World!</p> </body> </html>"},{"prompt":"Create a program that takes in a list of numbers and returns the product of all the elements in the list. [2, 4, 10, 5]","completion":"def product(nums): total = 1 for num in nums: total *= num return total"},{"prompt":"Give a few examples of when to use a Stack data structure.","completion":"A stack data structure can be used for a variety of tasks, such as for traversal of a recursive object, storing and retrieving data from a history buffer, expression evaluation, and undo and redo operations. Another common use case is storage of a continuous stream of data, such as a rolling list of recent purchases."},{"prompt":"Write a SQL query that finds all the albums released before 1990. Table name: Album","completion":"SELECT * FROM Albums WHERE date_released < 1990;"},{"prompt":"w can you implement a Bubble Sort algorithm in Java?","completion":"public class BubbleSort { public static void sort(int[] arr) { int n = arr.length; int temp; for(int i = 0; i < n - 1; i++) { for (int j = 0; j < n - i - 1; j++) { if (arr[j] > arr[j+1]) { // Swap the elements temp = arr[j]; arr[j] = arr[j+1]; arr[j+1] = temp; } } } } }"},{"prompt":"Write a test case for a function that adds two numbers. Function: addTwoNumbers (a, b)","completion":"@Test public void testAddTwoNumbers(){ int a = 1; int b = 2; assertEquals(3, addTwoNumbers(a, b)); }"},{"prompt":"Create an Angular Directive for a text box that alerts when its contents change.","completion":"import { Directive, ElementRef, HostListener } from '@angular/core'; @Directive({ selector: '[appNotifyOnChange]' }) export class NotifyOnChangeDirective { constructor(private el: ElementRef) { } @HostListener('input', ['event']) onChange(event) { alert('Value changed to: ' + event.target.value); } }"},{"prompt":"Name a few use cases of Convolutional Neural Networks.","completion":"Convolutional Neural Networks are widely used in domains such as computer vision, natural language processing, pattern recognition, time series analysis, audio processing, object recognition and classification, and for other tasks such as image segmentation, automated image captioning, image deblurring, object detection and tracking."},{"prompt":"What is the role of the React Life Cycle Method componentDidMount?","completion":"The componentDidMount() method is a life cycle method in React which is called after the component is mounted and the component is loaded into the DOM. This method can be used to start timers, initialize the state, fetch data, and other components. It is invoked once all the DOM elements of the component are rendered, and the component is loaded into the browser DOM."},{"prompt":"w can you create a function in MATLAB that adds two vectors? Vectors: A=[1,2,3] and B=[4,5,6]","completion":"function [C]=addVectors(A,B) C=A+B; end"},{"prompt":"w can you access elements in a multi-dimensional array in JavaScript?","completion":"Accesing elements of the array can be done by using the index of the array. For example, for a two-dimensional array, the elements can be accessed using the following syntax: array[i][j], where i is the index of the outer array, and j is the index of the inner array. For a three-dimensional array, the syntax would be array[i][j][k]."},{"prompt":"Describe the Heap Sort algorithm.","completion":"Heap Sort is a comparison-based sorting algorithm in which the data is organized into a heap data structure. The heap is then sorted increasingly by repeatedly removing the root element, swapping it with the last element in the heap, and heapifying the remaining elements. It has an average complexity of O(n log n)."},{"prompt":"Write an SQL query that finds the total revenue for each month. Table name: order","completion":"SELECT MONTH(order_date) AS month, SUM(total_price) total_revenue FROM orders GROUP BY MONTH(order_date)"},{"prompt":"Create a class structure in Java for an Employee object.","completion":"public class Employee { private int id; private String name; private double salary; // default constructor public Employee() { } // parameterized constructor public Employee(int id, String name, double salary) { super(); this.id = id; this.name = name; this.salary = salary; } // getters and setters public int getId() { return id; } public void setId(int id) { this.id = id; } public String getName() { return name; } public void setName(String name) { this.name = name; } public double getSalary() { return salary; } public void setSalary(double salary) { this.salary = salary; } }"},{"prompt":"Write a React.js component to render a simple button.","completion":"const SimpleButton = () => { return ( <button>Click Me!</button> ) } ReactDOM.render(<SimpleButton />, document.getElementById(\\"root\\"));"},{"prompt":"Write SQL query to find all employee names who work in the IT department.","completion":"SELECT name FROM employees WHERE department = 'IT';"},{"prompt":"Create an Angular component to display an \\"about us\\" page.","completion":"@Component({ selector: \\"app-about-us\\", templateUrl: \\"./about-us.component.html\\" }) export class AboutUsComponent{ }"},{"prompt":"Write a CSS code for setting the font of all h1 elements to 'sans-serif'.","completion":"h1 { font-family: 'sans-serif'; }"},{"prompt":"Create a Node.js server that responds with \\"Hello World!\\" when the URL \\"/\\" is accessed.","completion":"const http = require('http'); const server = http.createServer(function (req, res) { if(req.url == '/'){ res.writeHead(200); res.end('Hello World!'); } }); server.listen(3000);"},{"prompt":"Write an algorithm to check whether a given word is palindrome or not.","completion":"def is_palindrome(str): # reverse the string rev_str = str[::-1] # if string is equal then return true if rev_str == str: return True return False"},{"prompt":"Calculate the number of anagrams present in a given string. string = \\"liste","completion":"def calculateAnagrams(string): # Create a list of all permutations all_permutations = [''.join(i) for i in permutations(string)] # Return the count of all permutations return len(all_permutations) # Driver code print(calculateAnagrams('listen'))"},{"prompt":"For a given array of integers, write a function to find the mean. arr = [1, 2, 3, 4, 5]","completion":"def calculate_mean(arr): return sum(arr) / len(arr) # Driver Code if __name__ == '__main__': arr = [1, 2, 3, 4, 5] mean = calculate_mean(arr) print(\\"Mean for given array is:\\", mean)"},{"prompt":"Write a SQL query to find the countries which have population more than 10 million.","completion":"SELECT Country, Population FROM world WHERE Population > 10000000 ORDER BY Country;"},{"prompt":"Create a function which takes a string and invokes all the print statements within the string. string = \\"Hello, World! Hello, Python!","completion":"def invoke_print_statements(string): exec(string) # Driver Code if __name__ == '__main__': string = \\"print('Hello, World!')nprint('Hello, Python!')\\" invoke_print_statements(string)"},{"prompt":"Write a SQL query to find the first ten customers by their joining date.","completion":"SELECT * FROM customers ORDER BY joining_date ASC LIMIT 10;"},{"prompt":"Write code to return a list of prime numbers in the given range. Start: 10. End: 15","completion":"def get_prime_numbers(start, end): prime_numbers = [] for num in range(start, end + 1): if num > 1: for i in range(2, num): if (num % i) == 0: break else: prime_numbers.append(num) return prime_numbers # print list of prime numbers print(get_prime_numbers(10, 15)) # Output: [11, 13, 15]"},{"prompt":"Write code to convert a given hexadecimal string to a binary string. Hexadecimal string: 7468","completion":"def hex_to_bin(hexadecimal_str): return bin(int(hexadecimal_str, 16))[2:] # [2:] removes 0b from the start"},{"prompt":"Create a function to print out a FizzBuzz pattern for a given number range. Number range: 5-20","completion":"def fizzbuzz_pattern(n): for num in range(n, n+16): if num % 3 == 0 and num % 5 == 0: print(\\"FizzBuzz\\") elif num % 3 == 0: print(\\"Fizz\\") elif num % 5 == 0: print(\\"Buzz\\") else: print(num)"},{"prompt":"Write a function to generate the next line of Pascal's Triangle given the parent line. Parent line: [1, 2, 1]","completion":"def next_pascals_triangle(parent): next_line = [1] for i in range(len(parent)-1): next_line.append(parent[i] + parent[i+1]) next_line.append(1) return next_line"},{"prompt":"Write code to parse a given IP address into its octets. IP address: 10.23.6.17","completion":"def parse_ip_address(ip): octets = ip.split(\\".\\") return octets"},{"prompt":"Write a function to encode a given string using ROT13 cipher. String: Hello world","completion":"def rot13(string): encoded = \\"\\" for char in string: if char.isalpha(): ascii_val = ord(char) ascii_val += 13 if ascii_val > ord('z'): ascii_val -= 26 encoded += chr(ascii_val) else: encoded += char return encoded"},{"prompt":"Code a program to display the prime factors of a number. 30","completion":"def find_prime_factors(n): prime_factors = [] for i in range(2, n + 1): if n % i == 0: if is_prime(i): prime_factors.append(i) return prime_factors def is_prime(n): if n <= 1: return False for i in range(2, int(n**0.5) + 1): if n % i == 0: return False return True"},{"prompt":"Develop a code to check if a given array is sorted or not. [1, 2, 4, 3]","completion":"def is_sorted(array): for i in range(len(array)-1): if array[i] > array[i+1]: return False return True"},{"prompt":"Design a program to find the fibonacci number at the given position in the sequence.","completion":"def fibonacci(n): if n == 0 or n == 1: return n else: return fibonacci(n-1) + fibonacci(n-2)"},{"prompt":"Code a program to delete a given element from an array. [1, 3, 5, 7], {element: 3}","completion":"def delete_element(array, element): element_index = array.index(element) del array[element_index] return array"},{"prompt":"Create a Java function that converts a string to a decimal. String numString = \\"123.45\\";","completion":"public static double stringToDecimal(String numString) { double result = 0; String[] tokens = numString.split(\\".\\"); result += Integer.parseInt(tokens[0]); int power = 1; for (int i = tokens[1].length(); i > 0; i--) { power *= 10; result += Integer.parseInt(tokens[1].charAt(i - 1) +\\"\\") * 1.0 / power; } return result; }"},{"prompt":"Create a class in Java that stores name, age, and height as input fields.","completion":"public class Person { private String name; private int age; private double height; public Person(String name, int age, double height) { this.name = name; this.age = age; this.height = height; } public String getName() { return name; } public void setName(String name) { this.name = name; } public int getAge() { return age; } public void setAge(int age) { this.age = age; } public double getHeight() { return height; } public void setHeight(double height) { this.height = height; } }"},{"prompt":"Use SQL to extract the customer name, order date, and price from the following table. Table: orders | order_id | customer_id | product_name | price | order_date | | -------- | ----------- | ------------ | ----- | ---------- | | 1 | 123 | TV | 500 | 2019-01-01 | | 2 | 123 | Keyboard | 80 | 2019-01-05 | | 3 | 124 | Mouse | 50 | 2019-02-01 |","completion":"SELECT c.name as customer_name, o.price, o.order_date FROM orders o INNER JOIN customers c on o.customer_id = c.customer_id;"},{"prompt":"Find the most frequent word in the following paragraph. The quick brown fox jumps over the lazy dog.","completion":"the"},{"prompt":"Write a SQL query to produce a list of customer names from the following table. Table: customers | customer_id | name | | --------- | ----- | | 1 | Bill | | 2 | Jane | | 3 | John |","completion":"SELECT name FROM customers;"},{"prompt":"Create a function in Ruby that calculates the sum of all numbers in an array. arr = [1, 2, 3]","completion":"def sum_arr(arr) return arr.inject(0, :+) end"},{"prompt":"Use SQL to count the number of orders for each product listed in the following table. Table: orders | order_id | customer_id | product_name | price | | -------- | ----------- | ------------ | ----- | | 1 | 123 | TV | 500 | | 2 | 123 | Keyboard | 80 | | 3 | 124 | Mouse | 50 |","completion":"SELECT product_name, COUNT(*) as num_orders FROM orders GROUP BY product_name;"},{"prompt":"Edit the HTML structure shown below to include a form tag with an input for a user's name. <!DOCTYPE html> <html> <head> <title>My Webside</title> </head> <body> </body> </html>","completion":"<!DOCTYPE html> <html> <head> <title>My Webside</title> </head> <body> <form> <input type=\\"text\\" name=\\"name\\" placeholder=\\"Enter your name here\\"> </form> </body> </html>"},{"prompt":"Write a CSS style sheet to change the background color of the webpage to blue.","completion":"body { background-color: blue; }"},{"prompt":"Split the sentence into individual words using Python. sentence = \\"This sentence needs to be split.","completion":"words = sentence.split(' ') print(words) # Output: ['This', 'sentence', 'needs', 'to', 'be', 'split.']"},{"prompt":"Based on the following list, create a dictionary of each name and their corresponding birth date. names = [\\"John\\", \\"Mary\\", \\"James\\", \\"Susan\\"] birth_dates = [\\"1992-12-24\\", \\"1979-05-17\\", \\"1995-08-15\\", \\"1985-04-10\\"]","completion":"name_birthdate_dict = dict(zip(names, birth_dates)) print(name_birthdate_dict) # Output: {'John': '1992-12-24', 'Mary': '1979-05-17', 'James': '1995-08-15', 'Susan': '1985-04-10'}"},{"prompt":"Using the given list of numbers, find the sum of the numbers. numbers = [1, 2, 3, 4, 5]","completion":"total = 0 for num in numbers: total += num print('The sum of the numbers is:', total) # Output: The sum of the numbers is: 15"},{"prompt":"Create a while loop that prints each element in the list from the end. numbers = [1, 2, 3, 4, 5]","completion":"i = len(numbers) while i > 0: print(numbers[i-1]) i -= 1"},{"prompt":"Suggest a way to identify and remove duplicate elements from the list. numbers = [2, 3, 2, 5, 8, 3, 10]","completion":"# Method 1 - Using Set numbers_set = set(numbers) numbers_set = list(numbers_set) print(numbers_set) # Output: [2, 3, 5, 8, 10] # Method 2 - Using Loop no_duplicate = [] for num in numbers: if num not in no_duplicate: no_duplicate.append(num) print(no_duplicate) # Output: [2, 3, 5, 8, 10]"},{"prompt":"Suggest a way to count the number of occurrences of each element in the list. numbers = [2, 3, 2, 5, 8, 3, 10]","completion":"# Method 1 - Using Dictionary number_dict = dict() for num in numbers: if num in number_dict: number_dict[num] += 1 else: number_dict[num] = 1 print(number_dict) # Output: {2: 2, 3: 2, 5: 1, 8: 1, 10: 1} # Method 2 - Using Counter from collections import Counter number_count = Counter(numbers) print(number_count) # Output: Counter({2: 2, 3: 2, 5: 1, 8: 1, 10: 1})"},{"prompt":"Create a function that sorts a list of dictionaries using the values. animals = [{\\"name\\": \\"Dog\\", \\"age\\": 5}, {\\"name\\": \\"Cat\\", \\"age\\": 3}, {\\"name\\": \\"Fish\\", \\"age\\": 1}, {\\"name\\": \\"Deer\\", \\"age\\": 8}]","completion":"def sort_dict_list(animals): sorted_animals = sorted(animals, key=lambda k: k['age']) return sorted_animals result = sort_dict_list(animals) print(result) # Output: [{'name': 'Fish', 'age': 1}, {'name': 'Cat', 'age': 3}, {'name': 'Dog', 'age': 5}, {'name': 'Deer', 'age': 8}]"},{"prompt":"Return how many characters are in the following string. word = \\"Hello","completion":"length = len(word) print(length) # Output: 5"},{"prompt":"Convert this expression in to postfix notation. A + B * C","completion":"ABC*+"},{"prompt":"Generate a class for a Student object in Java.","completion":"public class Student { private String name; private String id; private String email; private String major; public Student(String name, String id, String email, String major) { this.name = name; this.id = id; this.email = email; this.major = major; } public String getName() { return name; } public void setName(String name) { this.name = name; } public String getId() { return id; } public void setId(String id) { this.id = id; } public String getEmail() { return email; } public void setEmail(String email) { this.email = email; } public String getMajor() { return major; } public void setMajor(String major) { this.major = major; } }"},{"prompt":"Calculate the sum of these two numbers in assembly language. x = 27, y = 11","completion":"mov ax, 27 ; put x = 27 in ax mov bx, 11 ; put y = 11 in bx add ax, bx ; add ax and bx, sum is stored in ax ; ax = 38"},{"prompt":"Edit this method to return an array of palindromes. public static String[] findPalindromes(String[] words) { ArrayList<String> result = new ArrayList<>(); for (String word : words) { if (word.length() >= 2) { result.add(word); } } return result.toArray(new String[result.size()]); }","completion":"public static String[] findPalindromes(String[] words) { ArrayList<String> result = new ArrayList<>(); for (String word : words) { if (word.length() >= 2 && isPalindrome(word)) { result.add(word); } } return result.toArray(new String[result.size()]); } public static boolean isPalindrome(String str) { int left = 0; int right = str.length()-1; while (left < right) { if (str.charAt(left) != str.charAt(right)) return false; left++; right--; } return true; }"},{"prompt":"Generate a new class from the given prototype. class Prototype { public String name; public int age; public String gender; public Prototype(String name, int age, String gender) { this.name = name; this.age = age; this.gender = gender; } }","completion":"class Person extends Prototype { public String address; public String phone; public Person(String name, int age, String gender, String address, String phone) { super(name, age, gender); this.address = address; this.phone = phone; } }"},{"prompt":"Write a SQL query to output the IDs of all employees working in the same department as employee with ID 10.","completion":"SELECT id FROM Employees WHERE department= (SELECT department FROM Employees WHERE id=10);"},{"prompt":"Use the function \\"randint()\\" to generate a random number between 1 and 10 in Python.","completion":"from random import randint random_num = randint(1,10) print(random_num)"},{"prompt":"Create a class in Java called 'Circle' that stores information about a circle's radius and calculate the area.","completion":"public class Circle { public double radius; public Circle(double radius) { this.radius = radius; } public double getArea() { return Math.PI * Math.pow(radius, 2); } }"},{"prompt":"dentify the output of this snippet of C code. int x = 10, y = 5; int z = (x * y) - 15;","completion":"The output of this snippet of C code is z = 25."},{"prompt":"Debug this JavaScript code. function mysteryFunction(x) { let result = 0; for (let i = 1; i <= x; i++) { result = result * i; } return result; }","completion":"function mysteryFunction(x) { let result = 1; for (let i = 1; i <= x; i++) { result = result * i; } return result; }"},{"prompt":"Develop a program to encode and decode a given string. Input a string s to be encoded.","completion":"def encode(s): encoded_str = \\"\\" for i in s: encoded_str += str(ord(i)) return encoded_str def decode(s): decoded_str = \\"\\" for i in range(0, len(s), 2): decoded_str += chr(int(s[i:i+2])) return decoded_str"},{"prompt":"Translate this piece of C++ code into Java. int num = 10; for (int i = 0; i < num; i++) { num++; }","completion":"int num = 10; for (int i = 0; i < num; i++) { num++; } // translated to Java: int num = 10; for (int i = 0; i < num; i++) { num++; }"},{"prompt":"Create a neural network in Python using the given input and output. Input a set of 3 input values (x1, x2, x3) and two output values (y1, y2).","completion":"import numpy as np import tensorflow as tf # Create the model model = tf.keras.models.Sequential([ tf.keras.layers.Dense(2, activation='sigmoid', input_shape=(3,)) ]) # Compile the model model.compile(optimizer='adam', loss='mean_squared_error', metrics=['accuracy']) # Create the input and output data input_data = np.array([[x1, x2, x3]]) output_data = np.array([[y1, y2]]) # Train the model model.fit(input_data, output_data, epochs=100)"},{"prompt":"Design an algorithm in Python to detect anomalies in the given data. Input a dataset containing two columns, temperature and pressure.","completion":"def detect_anomaly(data): # Step 1: Calculate mean mean_1 = np.mean(data['temperature']) mean_2 = np.mean(data['pressure']) # Step 2: Calculate the standard deviation sd_1 = np.std(data['temperature']) sd_2 = np.std(data['pressure']) # Step 3: Calculate the threshold cutoff = sd_1 * 3 # Step 4: Apply threshold and mark anomalies lower_limit_temperature = mean_1 - cutoff upper_limit_temperature = mean_1 + cutoff lower_limit_pressure = mean_2 - cutoff upper_limit_pressure = mean_2 + cutoff # Mark the anomalies by setting the value as 1 data['anomaly'] = 0 data.loc[data['temperature'] < lower_limit_temperature, 'anomaly'] = 1 data.loc[data['temperature'] > upper_limit_temperature, 'anomaly'] = 1 data.loc[data['pressure'] < lower_limit_pressure, 'anomaly'] = 1 data.loc[data['pressure'] > upper_limit_pressure, 'anomaly'] = 1 # Return the dataframe return data"},{"prompt":"Tell us the outputs of the following code block. a = 5 b = 10 if a > b: print(\\"a is greater than b\\") elif a == b: print(\\"a is equal to b\\") else: print('a is lesser than b')","completion":"a is lesser than b"},{"prompt":"Determine whether the following statement returns true or false. [1, 2, 3] > [4, 5, 6]","completion":"False"},{"prompt":"Write a regular expression pattern to match a string starting with 'hello' and with two numbers after it.","completion":"^hello[0-9]{2}"},{"prompt":"Rewrite the following function to optimize its performance. def indexString(listStr, s): output = [] for i in listStr: if s in i: output.append(i) return outpu","completion":"def indexString(listStr, s): output = [] for i in listStr: if i.find(s) != -1 : output.append(i) return output"},{"prompt":"Generate a string array of length 10, containing only alphabets in lower case containing 10 random characters.","completion":"import random def gen_string_arr(n): output = [] for i in range(n): output.append(''.join(random.choices('abcdefghijklmnopqrstuvwxyz', k=10))) return output"},{"prompt":"Write a factorial program without using the inbuilt factorial function in Python.","completion":"def factorial(n): if n == 0: return 1 else: return n * factorial(n-1)"},{"prompt":"Create a software program that encrypts a text message.","completion":"def encrypt(msg): change = {'a': '@', 'e': '3', 'i': '1', 'o': '0', 's': '5'} encrypted = \\"\\" for c in msg: if c in change: encrypted += change[c] else: encrypted += c return encrypted"},{"prompt":"Generate an array of length n with random numbers in the range 0 - 100","completion":"import random def gen_num_arr(n): output = [] for i in range(n): output.append(random.randint(0, 101)) return output"},{"prompt":"Given a list of numbers and a target sum, write a Python program to determine whether there is a set of three numbers in the list that add up to the target sum. [2, 7, 5, 1, 8]","completion":"def find_target_sum(nums, target_sum): for i in range(0, len(nums) - 2): for j in range(i+1, len(nums) - 1): for k in range(j+1, len(nums)): if nums[i] + nums[j] + nums[k] == target_sum: return True return False"},{"prompt":"Write a function to start a timer with the specified duration.","completion":"def start_timer(duration): start_time = time.time() end_time = start_time + duration while time.time() < end_time: time.sleep(1) print(\\"Timer finished!\\")"},{"prompt":"w would you write a program to determine the greatest common divisor (GCD) of two non-negative integers?","completion":"def gcd(a, b): # Base case if a == 0: return b if b == 0: return a # Calculate the greatest common divisor using Euclid's algorithm while b != 0: a %= b a, b = b, a return a"},{"prompt":"w would you sort an array of integers using Merge Sort algorithm?","completion":"def merge_sort(arr): # Base case: if the list has 0 or 1 elements it is already sorted if len(arr) > 1: mid = len(arr)//2 # Split the array left = arr[:mid] right = arr[mid:] # Recursively call merge_sort on left and right half merge_sort(left) merge_sort(right) # Set up variables to help track merges i = 0 # left array index j = 0 # right array index k = 0 # result array index # Merge the two halves while i < len(left) and j < len(right): if left[i] < right[j]: arr[k] = left[i] i+=1 else: arr[k] = right[j] j+=1 k+=1 # Copy the rest of the left half and right half while i < len(left): arr[k] = left[i] i+=1 k+=1 while j < len(right): arr[k] = right[j] j+=1 k+=1"},{"prompt":"Using Java, write a program to determine if a given word is a palindrome. word = \\"racecar","completion":"boolean isPalindrome = true; for (int i = 0; i < word.length()/2; i++ ){ if (word.charAt(i) != word.charAt(word.length()-i-1)){ isPalindrome = false; break; } }"},{"prompt":"Create an HTML/CSS webpage which displays the given text: \\"Hello, Welcome to my website!","completion":"<!DOCTYPE html> <html> <head> <title>Welcome to My Website!</title> </head> <body> <div> <h1>Hello, Welcome to my website!</h1> </div> </body> </html>"},{"prompt":"Generate a list of 10 random numbers between 0 and 500 in Python.","completion":"import random numbers = [random.randint(0,500) for i in range(10)] print(numbers)"},{"prompt":"Create a Swift class named \\"MyClass\\" that contains two int properties and one function. The function should return the sum of the two properties.","completion":"class MyClass { var num1: Int var num2: Int func sum() -> Int { return num1 + num2 } }"},{"prompt":"Write an SQL query to select all rows from the table \\"customers\\" that have the same age as the given customer. customer = (\\"John Smith\\", 32)","completion":"SELECT * FROM customers WHERE age = 32"},{"prompt":"Generate a hash value for the given string using an MD5 algorithm. string = \\"Hello, World!","completion":"using System; using System.Security.Cryptography; MD5 md5 = MD5.Create(); byte[] hashValue = md5.ComputeHash(Encoding.UTF8.GetBytes(string)); string hashString = BitConverter.ToString(hashValue).Replace(\\"-\\", \\"\\"); Console.WriteLine(hashString); // Output: 65a8e27d8879283831b664bd8b7f0ad4"},{"prompt":"Write an SQL query to retrieve all customers whose age is between 18 and 35.","completion":"SELECT * FROM customers WHERE age >= 18 AND age <= 35;"},{"prompt":"Create an HTML/CSS webpage which contains two identical paragraphs with red font.","completion":"<!DOCTYPE html> <html> <head> <title>My Webpage</title> </head> <body> <div> <p style=\\"color:red;\\">This is paragraph one.</p> <p style=\\"color:red;\\">This is paragraph two.</p> </div> </body> </html>"},{"prompt":"Create a Python function to remove duplicates in a given list. list_of_numbers = [2, 3, 3, 5, 5]","completion":"def remove_duplicates(list_of_numbers): result = [] for number in list_of_numbers: if number not in result: result.append(number) return result"},{"prompt":"What is the value of the expression '2 ** 4' ?","completion":"16"},{"prompt":"Print the results of the following arithmetic expression using python. 6/3+3*2","completion":"15.0"},{"prompt":"Write a SQL query to retrieve the id, name and salary column from the Employee table.","completion":"SELECT id, name, salary FROM Employee;"},{"prompt":"Suggest an algorithm to find the number of nodes in a binary tree.","completion":"Here is a possible algorithm to count the number of nodes in a binary tree: 1. Initialize count as 0 2. If the tree is empty, return 0. 3. Else a. Recursively call the procedure on left subtree. b. Add 1 to the \`count\` variable. c. Recursively call the procedure on right subtree. 4. Return count."},{"prompt":"Write a lambda expression to select all records from a list of dictionaries with the name \\"John\\".","completion":"selected_records = list(filter(lambda x:x['name']=='John', records))"},{"prompt":"Ensure that the following HTML element displays properly on all browsers. <p>Hello World!</p>","completion":"<p style=\\"display: block; font-family: sans-serif; line-height: 1.3; font-size: 14px; color: #222;\\">Hello World!</p>"},{"prompt":"Remove duplicates from the list. list = [1,2,3,2,5,6,5]","completion":"new_list = list(set(list))"},{"prompt":"Write a predicate to check for valid email syntax.","completion":"def is_valid_email(string): return re.match(\\"[^@]+@[^@]+.[^@]+\\", string) != None"},{"prompt":"Edit the code to extract the data from the given dictionary. data = { 'name': 'John', 'age': 23, 'address': { 'street': '123 Main Street', 'city': 'Los Angeles' } }","completion":"name = data['name'] age = data['age'] street = data['address']['street'] city = data['address']['city']"},{"prompt":"Modify the code to create an AI model to classify the given dataset. dataset = { 'x1': ['apple', 'banana'], 'x2': ['red', 'yellow'], 'label': ['fruit', 'fruit'] }","completion":"class Model(nn.Module): def __init__(self): super(Model, self).__init__() self.fc1 = nn.Linear(2, 32) self.fc2 = nn.Linear(32, 32) self.fc3 = nn.Linear(32, 2) def forward(self, x): x = x.view(-1, 2) x = F.relu(self.fc1(x)) x = F.relu(self.fc2(x)) x = self.fc3(x) x = F.softmax(x, dim=-1) return x model = Model() criterion = nn.CrossEntropyLoss() optimizer = torch.optim.Adam(model.parameters(), lr=0.005)"},{"prompt":"Generate Python code to retrieve a list of tuples in the given string. String: \\"[('test1',1), ('test2',2)]","completion":"list_items = [item.replace(\\"'\\", \\"\\").replace(\\"(\\", \\"\\").replace(\\")\\", \\"\\").split(\\",\\") for item in s[1:-1].split(\\"), (\\")] list_of_tuples = [(item[0], int(item[1])) for item in list_items]"},{"prompt":"w can we optimize the performance of the given code? myList = [1, 2, 3] for item in myList: print(item)","completion":"Use list comprehension to reduce the amount of code used, such as: print([item for item in myList])"},{"prompt":"Find the total cost of the given items. items: [('apple', 2.5), ('mango', 3.5)}","completion":"total_cost = 0 for item in items: price = item[1] total_cost += price print(total_cost)"},{"prompt":"Fetch the item from the given JSON response. JSON Response: { \\"results\\": [ { \\"id\\": 1, \\"name\\": \\"John\\" }, { \\"id\\": 2, \\"name\\": \\"Dave\\" } ] }","completion":"item = json_response['results'][1] id = item['id'] name = item['name']"},{"prompt":"Create a class to represent the given data structure. Data Structure: Student: Id: Integer Name: String Age: Integer","completion":"class Student: def __init__(self, id, name, age): self.id = id self.name = name self.age = age"},{"prompt":"Generate Python code to extract only the keys from the given dictionary. d = {'name': 'John', 'age': 24, 'city': 'New York'}","completion":"keys = list(d.keys())"},{"prompt":"Trace the given code and explain the operations. a = [1, 2, 3] b = [4, 5, 6] c = a + b","completion":"The code creates two lists, a and b, each containing three elements. Then, it creates a third list c by concatenating the two lists, resulting in a list containing six elements."},{"prompt":"Using the below HTML code, replace the \\"TODO\\" comment with the appropriate code to add a hover effect on the div element. <div>hello</div> <style> div { padding: 10px; //TODO } </style>","completion":"<div>hello</div> <style> div { padding: 10px; transition: all 0.5s ease-in; } div:hover { box-shadow: 2px 2px 2px #000; } </style>"},{"prompt":"Using the below Python code, Write a code snippet to index all the values of an array. arr = [3, 8, 2, 5, 1]","completion":"for i, val in enumerate(arr): print(f\\"arr[{i}] = {val}\\")"},{"prompt":"Given two strings, write a function to check if one string is a rotation of the other. str1 = \\"beans\\" str2 = \\"esb","completion":"def is_rotation(str1, str2): if len(str1) != len(str2): return False temp = str1 + str1 return str2 in temp"},{"prompt":"Write a code snippet to sum up the length of each individual element in an array. arr = ['apple', 'banana', 'cherry']","completion":"const sum = arr.reduce((acc, curr) => acc + curr.length, 0)"},{"prompt":"Given the following code, write a function to find the sum of all the numbers between 0 and n. n = 5","completion":"function findSum(n){ let sum = 0; for(let i = 0; i <= n; i++){ sum += i; } return sum; }"},{"prompt":"Given the below array, find all the elements that are greater than 6. arr = [3, 5, 8, 1, 9, 6]","completion":"let result = arr.filter(el => el > 6); // result is [8, 9]"},{"prompt":"Convert the following HTML into XML. <hello> <world> <foo>bar</foo> </world> </hello>","completion":"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?> <hello> <world> <foo>bar</foo> </world> </hello>"},{"prompt":"Write a code snippet to check if the following text contains the word 'hello'. text = \\"This is a test message","completion":"if (text.includes(\\"hello\\")) { console.log(\\"The text contains the word 'hello'\\"); } else { console.log(\\"The text does not contain the word 'hello'\\"); }"},{"prompt":"Answer the following true/false question \\"Every program executes instructions sequentially","completion":"true"},{"prompt":"Write a Python program to create a numerical addition table","completion":"def addition_table(n): for i in range(1, n+1): for j in range(1, n+1): print(i + j, end= \\" \\") print() addition_table(10)"},{"prompt":"Edit the following code to sort the list of numbers in ascending order let numbers = [3, 1, 2, 5, 4]","completion":"let numbers = [3, 1, 2, 5, 4] numbers.sort(by: {0 < 1})"},{"prompt":"Compose an HTML webpage with a title and two paragraphs","completion":"<html> <head> <title>Webpage Title</title> </head> <body> <h1>Webpage Title</h1> <p>Paragraph 1</p> <p>Paragraph 2</p> </body> </html>"},{"prompt":"Write a sql query to find the number of entries that have a null value in the 'age' column","completion":"SELECT COUNT(*) FROM tableName WHERE age IS NULL;"},{"prompt":"mplement a function in JavaScript which checks whether a number is prime or not.","completion":"function isPrime(num) { if (num <= 1) { return false; } for (let i = 2; i < num; i++) { if (num % i === 0) { return false; } } return true; }"},{"prompt":"Create an API using Python which returns the number of words in a given string.","completion":"from flask import Flask, request, jsonify app = Flask(__name__) @app.route(\\"/get_words_count\\", methods=[\\"GET\\"]) def get_words_count(): sentence = request.args.get(\\"sentence\\") words = sentence.split(\\" \\") return jsonify({\\"words_count\\": len(words)}) if __name__ == \\"__main__\\": app.run()"},{"prompt":"Write an SQL query to find the student's average marks in a particular course.","completion":"SELECT student_name, AVG(student_marks) FROM student_table GROUP BY student_name"},{"prompt":"Create a program in C++ that converts Celsius temperature to Fahrenheit.","completion":"#include<iostream> using namespace std; int main() { float celsius, fahrenheit; cout << \\"Enter the temperature in Celsius: \\"; cin >> celsius; fahrenheit = (celsius * 9 / 5) + 32; cout << \\"The temperature in Fahrenheit is: \\" << fahrenheit; return 0; }"},{"prompt":"Create a Ruby program to display elements of an array in the reverse order.","completion":"def reverse_array(arr) arr.reverse_each { |num| puts num } end"},{"prompt":"Construct an R script that sorts given numbers in ascending order.","completion":"nums <- c(3, 8, 5, 7, 2, 6) sorted_nums <- sort(nums) print(sorted_nums)"},{"prompt":"Describe a procedure to multiply two numbers using Bash scripting.","completion":"#!/bin/bash # store the input into variables num1=1 num2=2 # calculate the product product=((num1*num2)) # print the result echo \\"num1 x num2 = product\\""},{"prompt":"Utilize Python to implement an algorithm which finds the largest number in an array.","completion":"def largestNumber(arr): max = arr[0] for i in range(1, len(arr)): if arr[i] > max: max = arr[i] return max"},{"prompt":"Create a Java program which calculates the area of a circle.","completion":"public class AreaCalculator { public static final double PI = 3.14159; public static double calculateArea(double radius) { return PI * radius * radius; } public static void main(String[] args) { System.out.println(calculateArea(10)); } }"},{"prompt":"mplement a function in C# to generate Fibonacci numbers.","completion":"public static IEnumerable<int> GenerateFibonacciSequence() { int prev = 0; int current = 1; yield return prev; yield return current; while (true) { int temp = prev + current; prev = current; current = temp; yield return current; } }"},{"prompt":"Construct a SQL query to find all customers with a first name of \\"John\\" and a city of \\"New York\\".","completion":"SELECT * from customers WHERE first_name = 'John' AND city = 'New York';"},{"prompt":"Specify the platform and the environment variables needed to run a Java program.","completion":"The platform dependent environment variables needed to run a Java program on any platform are: 1. JAVA_HOME: This variable stores the location of JDK. 2. PATH: This variable stores the path to the executables. 3. CLASSPATH: This variable contains the path to the Java classes. 4. JRE_HOME: This variable stores the location of the JRE."},{"prompt":"Name two differences between Strings and StringBuffer in Java.","completion":"The two major differences between String and StringBuffer in Java are: 1. String objects are immutable in nature whereas StringBuffer objects are mutable. 2. String objects are created using \\"String Literal\\" whereas StringBuffer objects are created using the \\"new\\" keyword."},{"prompt":"Create a new array called 'arr2' by combining the elements of two existing arrays 'arr1' and 'arr2'. Both arrays should be of the same size. arr1 = [1, 2, 3] arr2 = [4, 5, 6]","completion":"arr2 = [] for i in range(len(arr1)): arr2.append(arr1[i] + arr2[i]) print(arr2)"},{"prompt":"Why should you use functions in programming?","completion":"Using functions in programming helps to break down complex tasks into more manageable pieces, which makes code easier to read and maintain. Functions also allow for the reuse of code, which can help to reduce overall development time and resources. Additionally, functions improve code organization and enable functions to be tested independently, making debugging easier."},{"prompt":"Write a JavaScript code snippet to create an object with two properties, 'name' and 'age'.","completion":"let person = { name: 'John', age: 25 }"},{"prompt":"Describe the differences between List, ArrayList, and Vector in Java.","completion":"The main differences between List, ArrayList, and Vector are their memory utilization, synchronization, and thread safety . List is an interface that is the parent class of ArrayList and Vector. ArrayList is an unsynchronized collection, making it faster but not thread safe and Vector is a synchronized collection, making it slower but thread safe. Additionally, Vector has a capacity variable which is not available in an ArrayList, making it more memory efficient."},{"prompt":"What are the advantages of using MapReduce over Hadoop?","completion":"The advantages of using MapReduce over Hadoop include: 1. Charges less money due to its parallel processing capabilities. 2. Can handle much larger data sets than Hadoop since it uses distributed computing paradigm. 3. Increases in scalability and performance due to its ability to horizontally scale computing nodes. 4. MapReduce jobs are easy to use and can handle various types of data. 5. Allows for faster development of data processing applications."},{"prompt":"What is the difference between an interface and an abstract class?","completion":"The main difference between an interface and an abstract class is that an interface can only contain abstract methods while an abstract class can include both abstract and non-abstract methods. Additionally, an interface can be implemented by multiple classes while a class can only extend a single abstract class. Interfaces are also limited to public methods while an abstract class can contain any type of access modifiers."},{"prompt":"Given a stream of blog posts from a certain website, how would you filter out posts with more than 50 comments in Python? stream_of_blog_posts = [{'title': 'post1', 'comments': 35}, {'title': 'post2', 'comments': 52}, {'title': 'post3', 'comments': 19}]","completion":"posts_with_more_than_50_comments = [post for post in stream_of_blog_posts if post['comments'] > 50]"},{"prompt":"Python, how can we calculate the mean of a numerical data set?","completion":"def mean(data): return sum(data) / len(data)"},{"prompt":"w can we use the reduce() function in JavaScript to find the sum of an array of numbers?","completion":"const numbers = [10, 20, 30] const sum = numbers.reduce((acc, val) => acc + val, 0) console.log(sum)"},{"prompt":"Write a query to find users with a given age in MongoDB. given_age = 20","completion":"db.users.find({age: given_age})"},{"prompt":"Write a for loop in C to subtract 100 from an array of numbers. array = [150, 200, 250]","completion":"for(int i = 0; i < array.length; i++){ array[i] = array[i] - 100; }"},{"prompt":"w can we generate a new HTML page with a given title tag in JavaScript? title = \\"My Page","completion":"const title = \\"My Page\\" const newPage = \`<html><head><title>{title}</title><head></html>\`;"},{"prompt":"w can we use the list comprehension method in Python to reverse a given list of string? list_of_strings = [\\"cat\\", \\"dog\\", \\"rabbit\\"]","completion":"reversed_list_of_strings = [string[::-1] for string in list_of_strings]"},{"prompt":"w to create an empty data frame in Pandas?","completion":"import pandas as pd df = pd.DataFrame()"},{"prompt":"w can we replace a substring in a given string with another substring in JavaScript? string = \\"Hello World\\" substr1 = \\"Hello\\" substr2 = \\"H","completion":"finalString = string.replace(substr1, substr2)"},{"prompt":"w can we use the set() method to find the unique elements in a given list of integers in C#?","completion":"var listOfIntegers = [1,2,3,3,2,2,3]; var uniqueElements = new HashSet<int>(listOfIntegers); foreach (var element in uniqueElements) { Console.WriteLine(element); }"},{"prompt":"Modify the following JavaScript for loop so it will loop through the array in reverse order. for (let i = 0; i < array.length; i++) { console.log(array[i]); }","completion":"for (let i = array.length - 1; i >= 0; i--) { console.log(array[i]); }"},{"prompt":"Given a list of integers, find the numbers which are greatest than the given number X. List: [-3, 0, 3, 5, 9], X = 4","completion":"function greaterThan(list, x) { let result = []; for (let i=0; i<list.length; i++) if (list[i] > x) result.push(list[i]); return result; }"},{"prompt":"Write a SQL query to find the names of all employees whose salary is above 10000.","completion":"SELECT name FROM Employees WHERE salary > 10000;"},{"prompt":"Create a CSS class which defines a black border with a red background color.","completion":".blackBorder { border: 1px solid black; background-color: red; }"},{"prompt":"mplement a function in Python to find the maximum number from a list of integers. [3, 5, 1, 6, 10]","completion":"def findMax(list): max = list[0] for i in list: if i > max: max = i return max"},{"prompt":"Modify the following CSS Code so that it will target mobile devices only. .text-center { text-align: center; }","completion":"@media only screen and (max-width: 767px) { .text-center { text-align: center; } }"},{"prompt":"Create a JavaScript function which takes two arguments and returns the larger number.","completion":"function findMax(num1, num2) { if (num1 > num2) { return num1; } else { return num2; } }"},{"prompt":"Edit the following C program to print the right-most digit of the given number. #include<stdio.h> int main() { int num; scanf(\\"%d\\", &num); // Compute the rightmost digit printf(\\"%d\\", num); return 0; }","completion":"#include<stdio.h> int main() { int num; scanf(\\"%d\\", &num); // Compute the rightmost digit int right_most_digit = num % 10; printf(\\"%d\\", right_most_digit); return 0; }"},{"prompt":"Rewrite the following Python program to sort the numbers in an array in ascending order. list = [5, 1, 0, 4, 7]","completion":"def sort(list): for i in range(len(list)-1): for j in range(0, len(list)-i-1): if list[j] > list[j+1] : list[j], list[j+1] = list[j+1], list[j] list = [5, 1, 0, 4, 7] sort(list) print (\\"Sorted list is:\\") print(list)"},{"prompt":"Create a JavaScript class to find the difference of two given dates.","completion":"class DateCalculator { static daysDifference(date1,date2) { let diffTime = Math.abs(date2.getTime() - date1.getTime()); let diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24)); return diffDays; } }"},{"prompt":"Write a script to launch a web server listening on port 8080.","completion":"import http.server import socketserver # define the port PORT = 8080 # define the handler Handler = http.server.SimpleHTTPRequestHandler # initiate the server try: webserver = socketserver.TCPServer((\\"\\",PORT),Handler) print(\\"Server Initialized on port 8080.\\") webserver.serve_forever() except KeyboardInterrupt: webserver.socket.close()"},{"prompt":"Develop a logic to generate Fibonacci Series till n terms. n = 6","completion":"def fibonacci(n): a = 0 b = 1 print(a) print(b) for i in range (2,n): c = a+b a = b b = c print(c) fibonacci(6)"},{"prompt":"Create a function that, given a number, reverses the digits and returns them in an array. 12345","completion":"def reverse(num): arr = [] while num > 0: digit = num % 10 arr.append(digit) num //= 10 return arr print(reverse(12345)) # prints [5, 4, 3, 2, 1]"},{"prompt":"Create a command to delete a folder with all its contents. /root/folder","completion":"import os def remove_folder(folder): for filename in os.listdir(folder): file_path = os.path.join(folder, filename) try: if os.path.isfile(file_path) or os.path.islink(file_path): os.unlink(file_path) elif os.path.isdir(file_path): shutil.rmtree(file_path) except Exception as e: print('Failed to delete %s. Reason: %s' % (file_path, e)) remove_folder('/root/folder')"},{"prompt":"Create a React component to render a list of items with its title and description. title: 'My List', items: [{title: 'Item 1', description: 'this is the description'}, {title: 'Item 2', description: 'this is the description'}]","completion":"import React, { Component } from 'react'; class MyList extends Component { render() { const { title, items } = this.props; const listItems = items.map((item, index) => <div key={index} style={{ marginBottom: '1em' }}> <h4>{item.title}</h4> <p>{item.description}</p> </div> ); return ( <div> <h3>{title}</h3> {listItems} </div> ) } } export default MyList;"},{"prompt":"Create a program to tokenize a given string into a list of strings. 'Hello! My name is Bob.'","completion":"import nltk def tokenize(string): tokens = nltk.word_tokenize(string) return tokens print(tokenize('Hello! My name is Bob.')) # prints [\\"Hello\\", \\"!\\", \\"My\\", \\"name\\", \\"is\\", \\"Bob\\", \\".\\"]"},{"prompt":"Develop a program to apply a given operation (addition or subtraction) on two numbers. operation: 'addition', a: 4, b:20","completion":"def operate(operation, a, b): if operation == 'addition': return a + b elif operation == 'subtraction': return a - b else: return 'Invalid operation.' print(operate('addition', 4, 20)) # prints 24"},{"prompt":"Write a Python program to fill a dictionary with key as a number and value as a string for square with {1: \\"1\\", 2: \\"4\\", 3: \\"9\\", ...}.","completion":"dic = {} for i in range (1,11): dic[i] = str(i ** 2) print(dic)"},{"prompt":"ert the following line in the provided C source code \`int new_variable = 1;\` #include <stdio.h> int main() { int a = 10; int b = 15; printf(\\"Sum = %d\\", a + b); return 0; }","completion":"#include <stdio.h> int main() { int a = 10; int b = 15; int new_variable = 1; printf(\\"Sum = %d\\", a + b); return 0; }"},{"prompt":"Write a SQL query to join two tables (Users and Orders) on User_ID.","completion":"SELECT * FROM Users LEFT JOIN Orders ON Users.User_ID = Orders.User_ID;"},{"prompt":"Write a JavaScript program to filter out even numbers from an array [1,2,3,4,5,6]. [1,2,3,4,5,6]","completion":"const array = [1,2,3,4,5,6]; const evenNumbers = array.filter(num => num % 2 !== 0); console.log(evenNumbers); // output: [1,3,5]"},{"prompt":"w do you print the first parameter passed to a bash script?","completion":"echo 1"},{"prompt":"Read the following XML structure and print the value of the \\"name\\" attribute. <root> <item name=\\"Apple\\"> <price>2.50</price> </item> </root>","completion":"root = ET.fromstring(inputString) print(root.find('item').attrib['name']) #output: Apple"},{"prompt":"EDIT this JavaScript function to return a list of the square roots of all numbers in a given input array. function squareRoots(arr) { // EDIT THIS }","completion":"function squareRoots(arr) { const result = []; for (let ele of arr) { result.push(Math.sqrt(ele)); } return result; }"},{"prompt":"Using the given three arrays, classify each array element as either prime numbers or not prime numbers. arr1 = [1, 2, 3, 4, 5, 6, 7, 8, 9]; arr2 = [4, 6, 9, 10, 12, 15, 18, 20]; arr3 = [11, 13, 17, 19, 23, 27, 37, 41];","completion":"function classifyPrime(arr1,arr2,arr3) { let result = { arr1: [], arr2: [], arr3: [] }; for(let i = 0; i < arr1.length; i++){ if (isPrime(arr1[i])){ result.arr1.push(\\"prime\\"); } else { result.arr1.push(\\"not prime\\"); } } for(let i = 0; i < arr2.length; i++){ if (isPrime(arr2[i])){ result.arr2.push(\\"prime\\"); } else { result.arr2.push(\\"not prime\\"); } } for(let i = 0; i < arr3.length; i++){ if (isPrime(arr3[i])){ result.arr3.push(\\"prime\\"); } else { result.arr3.push(\\"not prime\\"); } } return result; } function isPrime(num){ let prime = true; for(let i = 2; i <= Math.sqrt(num); i++){ if ( num % i === 0 ){ prime = false; } } return prime; } arr1Result = classifyPrime(arr1,arr2,arr3);"},{"prompt":"Sort this array of integers in ascending order using JavaScript. const array = [26, 4, 11, 56, 23, 39]","completion":"const array = [26, 4, 11, 56, 23, 39]; let sortedArray = array.sort(function(a,b){ return a-b; }); console.log(sortedArray);"},{"prompt":"Create a Python program to find all the perfect squares between 1 and n.","completion":"def perfect_squares(n): result = [] for i in range(1, n+1): if is_perfect_square(i): result.append(i) return result def is_perfect_square(n): sqrt = int(n**.5) return sqrt**2 == n if __name__ == '__main__': n = 25 result = perfect_squares(n) print(result)"},{"prompt":"Create a Bash script for finding the most frequent word in a given sentence. This is a test sentence to test the most frequent word","completion":"#!/bin/bash sentence=\\"This is a test sentence to test the most frequent word\\" words=((echo sentence | tr ' ' 'n')) mostFrequentWord='' mostFrequentWordCount=0 for ((i=0; i<{#words[@]}; i++)) do word={words[i]} count=0 for ((j=0; j<{#words[@]}; j++)) do if [[ \\"word\\" == \\"{words[j]}\\" ]] then count=((count+1)) fi done if [[ count -gt mostFrequentWordCount ]] then mostFrequentWordCount=count mostFrequentWord=word fi done echo \\"The most frequent word is: \\"mostFrequentWord"},{"prompt":"Write a Java program to find the index of the first occurrence of the given element in an array. int[] array = {1, 7, 3, 6, 4, 7}; int num = 7;","completion":"public class FindFirstIndex { public static void main(String[] args) { int[] array = {1, 7, 3, 6, 4, 7}; int num = 7; int idx = -1; for(int i = 0; i < array.length; i++) { if(array[i] == num) { idx = i; break; } } System.out.println(\\"Index of the first occurrence of the given element: \\" + idx); } }"},{"prompt":"Change the syntax of the code so that it prints the smallest and largest numbers from a given array. list1 = [2, 5, 3, 1] print(list1)","completion":"list1 = [2, 5, 3, 1] print(min(list1), max(list1))"},{"prompt":"Rearrange the code so that the output is \\"Hi, world!\\". world = \\"Hi\\" print(world)","completion":"world = \\"Hi\\" print(world + \\", world!\\")"},{"prompt":"Replace the \\"TODO\\" comment in the code with the proper code to print the length of a given List. list1 = [1, 2, 3, 4, 5] # TODO","completion":"list1 = [1, 2, 3, 4, 5] print(len(list1))"},{"prompt":"Using a list comprehension, create a filtered list which contains numbers that are divisible by 2. nums = [1, 2, 3, 4, 5, 6]","completion":"filtered_list = [num for num in nums if num % 2 == 0]"},{"prompt":"Create a function to determine if a given string is an anagram of another. An anagram is a word or phrase formed by rearranging the letters of another word or phrase.","completion":"def is_anagram(str1, str2): sorted_str1 = \\"\\".join(sorted(str1)) sorted_str2 = \\"\\".join(sorted(str2)) if sorted_str1 == sorted_str2: return True return False"},{"prompt":"Compare two strings and return the longest one. string1 = \\"Hello\\" string2 = \\"World","completion":"def compare_strings(string1, string2): if len(string1) > len(string2): return string1 return string2"},{"prompt":"mplement a logic to separate even and odd numbers from an array in JavaScript. const numbers = [1,2,3,4,5,6,7];","completion":"const evenNumbers = numbers.filter(number => number % 2 == 0); const oddNumbers = numbers.filter(number => number % 2 != 0);"},{"prompt":"Suggest a SQL query to return all users with an age between 18 and 25.","completion":"SELECT * FROM users WHERE age BETWEEN 18 AND 25;"},{"prompt":"Suggest a JavaScript statement to log “Hello World” in the console.","completion":"console.log('Hello World');"},{"prompt":"Construct a SQL query that returns all users who did not login in the last 24 hours.","completion":"SELECT * FROM users WHERE last_login < NOW() - INTERVAL 24 HOUR;"},{"prompt":"Execute the following bash shell script. clear echo \\"Hello World","completion":"bash program.sh Hello World"},{"prompt":"Suggest a SQL query to get the average order total from last year's orders.","completion":"SELECT AVG(total) FROM orders WHERE YEAR(order_date) = YEAR(CURDATE()) - 1"},{"prompt":"Write a python script to print 'Hello World' in HTML format","completion":"print(\\"<p>Hello World</p>\\")"},{"prompt":"Write a code snippet to append a new element 'Giraffe' to list x x = [\\"Elephant\\", \\"Tiger\\", \\"Lion\\"]","completion":"x.append(\\"Giraffe\\")"},{"prompt":"Create a css class 'heading' with font size 16px","completion":".heading { font-size: 16px; }"},{"prompt":"Write a SQL query to retrieve the data from the table 'user_data'.","completion":"SELECT * FROM user_data;"},{"prompt":"Write a python program to convert a number from base 10 to base 8.","completion":"def convert_base_10_to_base_8(number): binary_number = bin(number)[2:] octal_number = oct(int(binary_number, 2))[2:] return octal_number"},{"prompt":"Create an array in Java containing two objects.","completion":"Object[] myArray = {object1, object2 };"},{"prompt":"Ruby, how would you write a program that prints out all the prime numbers between 0 and 50?","completion":"# print out all the prime numbers between 0 and 50 def prime_numbers_between(start, finish) for i in (start..finish) count = 0 for j in (2..i-1) if i % j == 0 count += 1 break end end puts i if count == 0 end end prime_numbers_between(0, 50)"},{"prompt":"Write a CSS code to add a white background and blue font to the body element.","completion":"body { background-color: white; color: blue; }"},{"prompt":"Reformat the following function from JavaScript to Java. function subtract(x, y) { return x - y; }","completion":"public int subtract(int x, int y) { return x - y; }"},{"prompt":"Create a class named 'Animal' with one private data member 'numberOfLegs'.","completion":"public class Animal { private int numberOfLegs; }"},{"prompt":"Create a new branch in Git to fix a bug in the application.","completion":"git branch bug-fix"},{"prompt":"Rewrite the following JavaScript code to jQuery. document.querySelector('#main').addEventListener('click', event => { console.log('The element was clicked!') })","completion":"('#main').click(function(event) { console.log('The element was clicked!'); });"},{"prompt":"Summarize the following passage in five sentences. Machine learning is the scientific study of algorithms and statistical models that computer systems use in order to perform a specific task without using explicit instructions, relying on patterns and inference instead. It is seen as a subset of artificial intelligence. Machine learning algorithms build a mathematical model of sample data, known as “training data”, in order to make predictions or decisions without being explicitly programmed to do so.","completion":"Machine learning is a scientific field of study which uses algorithms and statistical models to allow computers to complete tasks without direct instructions or programming. It is a subset of artificial intelligence, using training data to form a mathematical model and make predictions. Machine learning algorithms can make decisions without explicit programming and rely on patterns and inference. It is an invaluable tool for data analysis and can be used for a wide variety of tasks such as image recognition and natural language processing."},{"prompt":"Write a function in C++ that takes a character array as an argument and it returns the number of vowels in the array. \\"Hello World!","completion":"int countVowels(char text[]) { int count = 0; for (int i = 0; text[i] != '0'; i++) { if (text[i] == 'a' || text[i] == 'e' || text[i] == 'i' || text[i] == 'o' || text[i] == 'u' || text[i] == 'A'|| text[i] == 'E' || text[i] == 'I' || text[i] == 'O' || text[i] == 'U') count++; } return count; }"},{"prompt":"Write a regular expression to search for a string in a text. The given text is: \\"Yahoo! is a popular search engine.\\" To search for \\"Yahoo\\"","completion":"/Yahoo/"},{"prompt":"Create an HTML table with 3 rows and 4 columns.","completion":"<table> <tr> <td></td> <td></td> <td></td> <td></td> </tr> <tr> <td></td> <td></td> <td></td> <td></td> </tr> <tr> <td></td> <td></td> <td></td> <td></td> </tr> </table>"},{"prompt":"Write a JavaScript program to replace a specific word in a string. The given string is: \\"Welcome to my website!\\" To replace the word “website” with “blog”","completion":"var str = \\"Welcome to my website!\\"; var newStr = str.replace(\\"website\\", \\"blog\\"); console.log(newStr);"},{"prompt":"Create a Python class for circles with radius and color as its properties.","completion":"class Circle: # Constructor def __init__(self, radius, color): self.radius = radius self.color = color # To get radius def getRadius(self): return self.radius # To get color def getColor(self): return self.color"},{"prompt":"Create a JavaScript program to check if a string has at least one alphabet.","completion":"function hasAlphabet(str) { let hasAlphabet = false; for (let char of str) { if (char >= 'A' && char <= 'Z' || char >= 'a' && char <= 'z') { hasAlphabet = true; break; } } return hasAlphabet; }"},{"prompt":"Write a shell script to calculate the sum of two numbers given as command line argument.","completion":"sum=(echo \\"1 + 2\\" | bc -l) echo sum"},{"prompt":"Edit the following CSS code to update the color to green. p{ color: red; }","completion":"p{ color: green; }"},{"prompt":"Develop a C program to count and print the number of characters in a sentence. The quick brown fox","completion":"#include<stdio.h> int main(){ char sentence[100]; int count = 0; scanf(\\"%[^n]s\\", sentence); for (int i=0; sentence[i]!='0'; i++){ count++; } printf(\\"Number of characters: %dn\\", count); return 0; }"},{"prompt":"Create a SQL query to get the list of employees working in the IT department.","completion":"SELECT e.name FROM employees e JOIN departments d on e.department_id = d.id WHERE d.name = 'IT'"},{"prompt":"Generate a JavaScript function to perform binary search for a given array.","completion":"function binarySearch(array, target) { // Initialize variables let left = 0; let right = array.length - 1; // Iterate while left <= right while (left <= right) { // Get middle index let mid = left + Math.floor((right - left) / 2); // Match found if (array[mid] === target) { return mid; } // If target is smaller than the array element at mid if (target < array[mid]) { right = mid - 1; } // Target is greater than the element at mid else { left = mid + 1; } } // We reach here when target is not found return -1; }"},{"prompt":"Compose a SQL query to count the number of users who logged in yesterday.","completion":"SELECT COUNT(*) FROM users WHERE login_date = CURRENT_DATE - INTERVAL 1 DAY"},{"prompt":"Write HTML code to create a webpage that has two paragraphs and a header.","completion":"<!DOCTYPE html> <html> <head> <title>Two Paragraphs & a Header</title> </head> <body> <h1>Header</h1> <p>Paragraph 1</p> <p>Paragraph 2</p> </body> </html>"},{"prompt":"Create a php script to authenticate a user against a certain database given the user's username and password. Username: John Password: 1234 Database: user","completion":"<?php username = _POST['username']; password = _POST['password']; db_server = 'localhost'; db_username = 'root'; db_password = 'root'; db_name = 'users'; conn = mysqli_connect(db_server, db_username, db_password, db_name); // check connection if(!conn) { die('Connection failed: ' .mysqli_connect_error()); } sql = \\"SELECT * FROM users WHERE username='username' AND password='password'\\"; result = mysqli_query(conn, sql); if (mysqli_num_rows(result) == 1) { echo \\"User authenticated\\"; } else { echo \\"Authentication failed\\"; } mysqli_close(conn); ?>"},{"prompt":"Create a SQL query to select the name, address and email of customers who placed an order in the last 30 days.","completion":"SELECT name, address, email FROM customers WHERE last_order_date > CURRENT_DATE - INTERVAL 30 DAY"},{"prompt":"Create an HTML form with a 'submit' button and an input field labeled 'Name'.","completion":"<form action=\\"index.php\\" method=\\"POST\\"> <label for=\\"name\\">Name:</label> <input type=\\"text\\" name=\\"name\\" id=\\"name\\" /> <input type=\\"submit\\" value=\\"Submit\\" /> </form>"},{"prompt":"Write a Python script to print the current day, month and year.","completion":"from datetime import datetime now = datetime.now() print(\\"Today is\\", now.day, now.month, now.year)"},{"prompt":"Write C++ code to convert a given Fahrenheit temperature degree to Celsius. Fahrenheit = 100","completion":"#include <iostream> using namespace std; float FahrenheitToCelsius(float faherenheit) { float celsius = (faherenheit - 32) * 5/9; return celsius; } int main() { float fahrenheit = 100; float Celsius = FahrenheitToCelsius(fahrenheit); cout << Celsius << endl; return 0; }"},{"prompt":"Write a Java program to append two given lists. list1 = [10, 20, 30] list2 = [5, 15, 25]","completion":"import java.util.ArrayList; public class AppendLists { public static ArrayList<Integer> appendLists(ArrayList<Integer> list1, ArrayList<Integer> list2) { ArrayList<Integer> appendedList = new ArrayList<>(list1); appendedList.addAll(list2); return appendedList; } public static void main(String[] args) { ArrayList<Integer> list1 = new ArrayList<>(); list1.add(10); list1.add(20); list1.add(30); ArrayList<Integer> list2 = new ArrayList<>(); list2.add(5); list2.add(15); list2.add(25); System.out.println(appendLists(list1, list2)); } }"},{"prompt":"Create an Android function to get the current battery level.","completion":"public float GetBatteryLevel(Context context){ Intent batteryIntent = context.registerReceiver(null, new IntentFilter(Intent.ACTION_BATTERY_CHANGED)); int level = batteryIntent.getIntExtra(BatteryManager.EXTRA_LEVEL, -1); int scale = batteryIntent.getIntExtra(BatteryManager.EXTRA_SCALE, -1); if(level == -1 || scale == -1){ return 50.0f; } return ((float)level / (float)scale) * 100.0f; }"},{"prompt":"Create a React component with a name of your choice to display the current date and time.","completion":"import React from 'react'; class CurrentTime extends React.Component { render() { const date = new Date(); return ( <div> {date.toLocaleString()} </div> ); } } export default CurrentTime;"},{"prompt":"Calculate the surface area of a sphere with radius 6m.","completion":"The surface area of a sphere with radius 6m is 113.1 m2."},{"prompt":"Create a JavaScript function to return the sum of the digits in a given number.","completion":"function sumDigits(num) { return [...String(num)].reduce((acc, cur) => acc + Number(cur), 0); }"},{"prompt":"Create a MongoDB database named \\"university_db\\".","completion":"> use university_db switched to db university_db"},{"prompt":"Create a Redux reducer to handle a state named \\"counter\\" with an initial value of 0.","completion":"const initialState = { counter: 0 }; const reducer = (state = initialState, action) => { switch (action.type) { case \\"INCREMENT\\": return { ...state, counter: state.counter + 1 }; case \\"DECREMENT\\": return { ...state, counter: state.counter - 1 }; default: return state; } }; export default reducer;"},{"prompt":"Write an Angular component to update the value of a variable every second.","completion":"import { Component } from '@angular/core'; @Component({ selector: 'app-timer', template: \` {{ counter }} \` }) export class TimerComponent { counter = 0; constructor() { setInterval(() => { this.counter++; }, 1000); } }"},{"prompt":"Using PHP, write a program to check if a string contains only alphabets.","completion":"<?php function checkAlphabetical(str) { len = strlen(str); // Traverse the given string, check // for every character for (i = 0; i < len; i++) { // If the string contains any // non-alphabetical character if((ord(str[i]) > 64 && ord(str[i]) < 91) || (ord(str[i]) > 96 && ord(str[i]) < 123)) { return true; } else { return false; } } } // Driver code str = \\"Hello World\\"; str2 = \\"HELLO123\\"; if (checkAlphabetical(str)) echo \\"The string contains only alphabets\\"; if (checkAlphabetical(str2)) echo \\"The string contains only alphabets\\"; else echo \\"The string does not contain only alphabets\\"; ?>"},{"prompt":"Create a JavaScript class to initialize the canvas width and height.","completion":"class Canvas { constructor(width, height) { this.width = width; this.height = height; } init() { const canvas = document.createElement('canvas'); canvas.width = this.width; canvas.height = this.height; return canvas; } }"},{"prompt":"Create an Objective-C function to print out an array of numbers.","completion":"void printArray(int arr[], int size) { for (int i=0; i < size; i++) printf(\\"%d \\", arr[i]); printf(\\"n\\"); }"},{"prompt":"Using HTML, write a page structure for a basic web page.","completion":"<!DOCTYPE html> <html lang=\\"en\\"> <head> <meta charset=\\"utf-8\\"> <title>Web Page</title> </head> <body> </body> </html>"},{"prompt":"Create a Python program to return the longest word in a sentence \\"The dog likes to run around the yard","completion":"def longest_word(sentence): words = sentence.split() longest = 0 for word in words: if len(word) > longest: longest = len(word) longest_word = word return longest_word print(longest_word(\\"The dog likes to run around the yard\\"))"},{"prompt":"Write a JavaScript code snippet to declare a variable and assign it the value 12.","completion":"let myVar = 12;"},{"prompt":"Create a Python function to print out a string in reverse order. \\"This is a string","completion":"def reverse_string(input_str): return input_str[::-1] print(reverse_string(\\"This is a string\\"))"},{"prompt":"Write a Java code snippet to declare a two dimensional array of size 2×3.","completion":"int[][] arr = new int[2][3];"},{"prompt":"Write a JavaScript code snippet to print out the value of a variable named \\"myVar\\". let myVar = 10;","completion":"console.log(myVar);"},{"prompt":"w can you call a function named \\"myFunction\\" in both JavaScript and Python?","completion":"In JavaScript: myFunction(); In Python: myFunction()"},{"prompt":"What is the most efficient way to find the maximum value in a Python list?","completion":"The most efficient way to find the maximum value in a Python list is to use the built-in max() function. For example: max(list)."},{"prompt":"What is the HTML code to input a textbox with an ID of \\"name\\"?","completion":"<input type=\\"text\\" id=\\"name\\" />"},{"prompt":"Write an SQL query to select the name and salary of employees in a table named 'employees' who have a salary between 2000 and 3000.","completion":"SELECT name, salary FROM employees WHERE salary BETWEEN 2000 AND 3000;"},{"prompt":"Read the following code snippet in Java and find which data types will be returned by each function. public class MyClass { public int Function1() { int x = 5; return x; } public double Function2() { double y = 8.4; return y; }","completion":"Function1() will return an int type, and Function2() will return a double type."},{"prompt":"JavaScript, develop a function to be able to determine if an object has a specific property or not. obj = { name: 'Bob', age: 25 }","completion":"function hasProperty(obj, key) { return obj.hasOwnProperty(key); }"},{"prompt":"Java, write a method which takes a two-dimensional array as input and prints it in spiral order. [ [1, 2, 3], [4, 5, 6], [7, 8, 9] ]","completion":"public void printSpiral(int[][] matrix) { int top = 0, bottom = matrix.length - 1; int left = 0, right = matrix[0].length - 1; int dir = 0; while (top <= bottom && left <= right) { // Move left to right if (dir == 0) { for (int i = left; i <= right; i++) { System.out.print(matrix[top][i] + \\" \\"); } top++; } // Move top to bottom else if (dir == 1) { for (int i = top; i <= bottom; i++) { System.out.print(matrix[i][right ] + \\" \\"); } right --; } // Move right to left else if (dir == 2) { for (int i = right ; i >= left; i--) { System.out.print(matrix[bottom ][i] + \\" \\"); } bottom --; } // Move bottom to top else if (dir == 3) { for (int i = bottom ; i >= top; i--) { System.out.print(matrix[i][left ] + \\" \\"); } left ++; } dir = (dir + 1) % 4; } }"},{"prompt":"Using PHP, develop a function that returns the sum of the elements in an array. [6, -3, 8, -7, 9]","completion":"<?php function array_sum(array) { sum = 0; for (i = 0; i < count(array); i++) { sum += array[i]; } return sum; } // testing the function array = array(6, -3, 8, -7, 9); echo \\"Sum of the given array is: \\" . array_sum(array); ?>"},{"prompt":"mplement a Swift code to find a number if it is prime or not.","completion":"func isPrime(_ num: Int) -> Bool { if num <= 1 { return false } if num <= 3 { return true } var i = 2 while i*i <= num { if num % i == 0 { return false } i = i + 1 } return true }"},{"prompt":"Using CSS, develop a style in which text appears bright when hovered over.","completion":"a:hover { color: #FFFF00; text-shadow: 0 0 10px #FFFF00; }"},{"prompt":"Write a SQL query that returns the name of the author who has more than two books published in current year.","completion":"SELECT author FROM books WHERE YEAR(date_published) = YEAR(CURDATE()) GROUP BY author HAVING COUNT(*) > 2;"},{"prompt":"Create an HTML page with a text box that stores entered data in the local storage.","completion":"<html> <head> <title>Text Box</title> </head> <body> <input type=\\"text\\" id=\\"text_box\\" /> </body> <script> // Store data in localStorage function storeData() { let inputValue = document.getElementById(\\"text_box\\").value; localStorage.setItem(\\"inputValue\\", inputValue); } // Set the text box value from localStorage window.onload = () => { if(localStorage.getItem(\\"inputValue\\")) document.getElementById(\\"text_box\\").value = localStorage.getItem(\\"inputValue\\"); } // Set up the event listener document.getElementById('text_box').addEventListener('input', storeData); <\/script> </html>"},{"prompt":"Complete a code to detect the type of triangle from its three side lengths. // Given triangle side lengths float side1 = 4; float side2 = 4; float side3 = 4;","completion":"// Given triangle side lengths float side1 = 4; float side2 = 4; float side3 = 4; if (side1 == side2 && side2 == side3) { // Equilateral Triangle print(\\"This triangle is an equilateral triangle.\\"); } else if (side1 == side2 || side2 == side3 || side1 == side3) { // Isosceles Triangle print(\\"This triangle is an isosceles triangle.\\"); } else { // Scalene Triangle print(\\"This triangle is a scalene triangle.\\"); }"},{"prompt":"mplement a JavaScript for creating alert message when a page loads.","completion":"window.onload = function(){ alert(\\"Welcome to this page!\\"); }"},{"prompt":"Write a SQL query to list customers who have placed orders in the past month. SELECT * FROM customer_table WHERE order_date > (current_date - 30 days)","completion":"SELECT * FROM customer_table WHERE order_date > (CURRENT_DATE - INTERVAL '30' DAY);"},{"prompt":"Write an HTML code snippet to render an h2 heading.","completion":"<h2>Heading</h2>"},{"prompt":"Write a JavaScript program to log the numbers from 1 to 100 in the console.","completion":"for (let i = 1; i <= 100; i++) { console.log(i); }"},{"prompt":"Write a JavaScript code snippet to validate a string for a US phone number.","completion":"function validatePhoneNumber(phoneNumber) { const regExNumeric = /^[0-9]{10}/; const regExFormatted = /^d{3}-d{3}-d{4}/; return (regExNumeric.test(phoneNumber) || regExFormatted.test(phoneNumber)); }"},{"prompt":"Write an SQL query to retrieve a student's grade from a student table. SELECT grade FROM student_table","completion":"SELECT grade FROM student_table;"},{"prompt":"Create a script in PowerShell to list the computers in a local network.","completion":"Get-ADComputer -Filter * | Select-Object Name | Sort-Object Name"},{"prompt":"Create a C++ program to calculate the median of three integers given as input.","completion":"#include <iostream> #include <algorithm> using namespace std; // Function to calculate median of three integers double median(double num1, double num2, double num3) { double max = std::max(std::max(num1, num2), num3); double min = std::min(std::min(num1, num2), num3); return num1 + num2 + num3 - max - min; } int main() { double num1, num2, num3; cout << \\"Enter three numbers: \\"; cin >> num1 >> num2 >> num3; double medianValue = median(num1, num2, num3); cout << \\"Median of the three numbers is: \\" << medianValue; return 0; }"},{"prompt":"Write a MySQL query to get the latest 5 employee numbers whose records are stored in the table 'EMPLOYEES'.","completion":"SELECT EmployeeNumber FROM Employees ORDER BY EmployeeNumber DESC LIMIT 5;"},{"prompt":"Using React, write a function to render a text area element with the text provided as the input for the function. text = \\"Hello World!","completion":"const renderTextArea = text => { return ( <textarea value={text} /> ); };"},{"prompt":"Create a SQL query to find the average salary of all the employees who were hired between 2019 and 2021.","completion":"SELECT AVG(salary) FROM Employees WHERE HireDate BETWEEN '2019-01-01' AND '2021-12-31';"},{"prompt":"Using HTML, write a code to display a table with two columns and three rows.","completion":"<table> <tr> <th>Column 1</th> <th>Column 2</th> </tr> <tr> <td>Row 1</td> <td>Row 1</td> </tr> <tr> <td>Row 2</td> <td>Row 2</td> </tr> <tr> <td>Row 3</td> <td>Row 3</td> </tr> </table>"},{"prompt":"Create a function in Python to delete an element from a given list at a specified index. list = [1, 2, 3, 4, 5] index = 2","completion":"def deleteElement(list, index): del list[index] return list list = [1, 2, 3, 4, 5] index = 2 print(deleteElement(list, index))"},{"prompt":"Produce a function which can take two strings as input and check if they are anagrams. 'silent', 'listen'","completion":"def is_anagram(str1, str2): # convert strings to lowercase str1_lower = str1.lower() str2_lower = str2.lower() # sort the strings str1_sorted = ''.join(sorted(str1_lower)) str2_sorted = ''.join(sorted(str2_lower)) # compare the sorted strings if(str1_sorted == str2_sorted): return True else: return False"},{"prompt":"Create a program which can take a sentence as an input and split it into a list of words. 'The quick brown fox'","completion":"def split_sentence(sentence): lst = sentence.split(\\" \\") return lst"},{"prompt":"Generate a correct program to sum the even numbers from 0 to n.","completion":"def sum_even(n): sum = 0 for i in range(0,n+1): if i % 2 == 0: sum += i return sum"},{"prompt":"Code a program to delete a specified item from a list. Delete item \\"Apple\\" from the list [\\"Banana\\", \\"Apple\\", \\"Orange\\"]","completion":"def delete_item(lst, item): if item in lst: lst.remove(item) return lst"},{"prompt":"Design a program to convert an integer to a binary string. 42","completion":"def int_to_bin(num): return bin(num).replace(\\"0b\\",\\"\\")"},{"prompt":"Create a program to create a new string where the first and last occurrence of each character is removed. 'Hello World'","completion":"def strip_string(s): new_str = \\"\\" counts = {} # Create a dictionary to record the number of occurrences of each character for letter in s: if letter not in counts: counts[letter] = 1 else: counts[letter] += 1 for char in s: if counts[char] > 1: new_str += char counts[char] -= 1 return new_str"},{"prompt":"Design a program which can take an array of integers and output the index of the maximum element. [10, 4, 15, 6, 20]","completion":"def max_index(lst): max = 0 max_index = 0 for i in range(len(lst)): if lst[i] > max: max = lst[i] max_index = i return max_index"},{"prompt":"a given array of integers, find the number of even elements that appear before any odd elements. [3,5,2,5,1]","completion":"1"},{"prompt":"Create a function that takes a string of characters and returns the minimal number of division/multiplication operations needed to make all characters within the string the same. acdc","completion":"def operations(string): char_set = set(string) while len(char_set) > 1: char_arr = list(char_set) x = char_arr[0] y = char_arr[1] if x == y: break elif x > y: new_val = x/y for i in range(len(string)): if string[i] == x: string[i] = new_val else: new_val = y/x for i in range(len(string)): if string[i] == x: string[i] = new_val char_set = set(string) return len(char_set)-1"},{"prompt":"Write a Python code that detects if a given character is uppercase, lowercase, or something else.","completion":"def is_type(character): if ord(character) >= 65 and ord(character) <= 90: return \\"uppercase\\" elif ord(character) >= 97 and ord(character) <= 122: return \\"lowercase\\" else: return \\"something else\\""},{"prompt":"Create a new function that takes two lists as input and returns a new list consisting of elements which are not in the other list. list1 = [1, 2, 3, 4] list2 = [3, 4, 5, 6]","completion":"def non_shared(list1, list2): non_shared_elements = [element for element in list1 if element not in list2] return non_shared_elements"},{"prompt":"Create a function to invert the keys and values of a given dictionary. my_dict = { \\"name\\": \\"John\\", \\"age\\": 22 }","completion":"def invert_dict(dictionary): inv_dict = {v: k for k, v in dictionary.items()} return inv_dict"},{"prompt":"Find a code that returns the union set of two given sets. s1 = {1,2,3,4} s2 = {3,4,5,6}","completion":"def union_sets(s1, s2): return s1 | s2"},{"prompt":"Create a function to convert a given decimal number to its corresponding hexadecimal value.","completion":"def dec2hex(n): return hex(n)[2:]"},{"prompt":"You need to check if a variable is an integer or not.","completion":"def is_integer(variable): return isinstance(variable, int)"},{"prompt":"Create a function that takes a dictionary, a key and a value as parameters and adds the key and value to the given dictionary. my_dict = { 'fruit': 'apple' }","completion":"def add_dict_entry(d, key, value): d[key] = value return d"},{"prompt":"w would you implement a webhook using Flask?","completion":"import flask @app.route('/webhook', methods=['POST']) def webhook(): # retrieve the data from the request data = request.get_json() # do something with the given data # ... # return the response return { 'message': 'OK' }"},{"prompt":"w could you loop through the elements of a list in Python?","completion":"for element in my_list: # do something with the element"},{"prompt":"ease a string by one character string = \\"hello","completion":"string += '_' # to add a space string += 'a' # to increment the last character by one"},{"prompt":"Write a C# code to print the first n terms of the Series 0, 1, 2, 6, 42, 1806.","completion":"static void printSeries(int n) { int a = 0, b = 1, c = 2; Console.Write(a + \\" \\" + b + \\" \\" + c + \\" \\"); for (int i = 3; i < n; i++) { int d = 2 * c + (a + b); Console.Write(d + \\" \\"); a = b; b = c; c = d; } }"},{"prompt":"Write a code to generate a random string of length n with lowercase alphabets and numbers.","completion":"function randomString(n) { const possibleCharacters = \\"abcdefghijklmnopqrstuvwxyz0123456789\\"; const possibleLength = possibleCharacters.length; let generatedString = ''; for (let i = 0; i < n; i++) { let randomIndex = Math.floor(Math.random() * possibleLength); let randomCharacter = possibleCharacters.charAt(randomIndex); generatedString += randomCharacter; } return generatedString; } console.log(randomString(8));"},{"prompt":"Write a JavaScript code to print all substrings of a given string.","completion":"function getSubstrings(str) { const substrings = []; let i, j, substring; for (i = 0; i < str.length; i++) { for (j = i + 1; j < str.length + 1; j++) { substring = str.slice(i, j); substrings.push(substring); } } return substrings; } console.log(getSubstrings(\\"abc\\"));"},{"prompt":"mplement a vector class in Python that allows for basic vector operations such as vector addition, subtraction and scalar multiplication.","completion":"class Vector(object): def __init__(self, components): self.components = components def add(self, vector): if len(self.components) != len(vector.components): return None components = [x + y for x, y in zip(self.components, vector.components)] return Vector(components) def sub(self, vector): if len(self.components) != len(vector.components): return None components = [x - y for x, y in zip(self.components, vector.components)] return Vector(components) def scalar_mul(self, scalar): components = [x * scalar for x in self.components] return Vector(components)"},{"prompt":"Write a code to generate a random pin which has 6 digits and should contain at least one lowercase, one uppercase and one numeric character.","completion":"import string import random def generate_pin(): pin = ''; chars = string.ascii_lowercase + string.ascii_uppercase + string.digits for i in range(6): pin += random.choice(chars) return pin print(generate_pin())"},{"prompt":"Derive the Hamming distance between two strings using the edit distance algorithm. s1 = 'saturday', s2 = 'sunday'","completion":"The Hamming distance between the two strings 'saturday' and 'sunday' is 3. The edit distance algorithm is used to calculate the minimum number of substitution, deletion, and insertion operations required to make two strings identical. In this example, 3 substitution operations are required, making the Hamming distance 3."},{"prompt":"Suggest a way to identify similar strings in JavaScript.","completion":"One way to identify similar strings in JavaScript is to use the Levenshtein distance. The Levenshtein distance measures the minimum number of single-character edits (i.e. insertions, deletions, or substitutions) required to change one word into the other. The distance is the number of changes needed to transform one string into another. This technique can be used to compare strings and identify similar strings."},{"prompt":"Create two classes, Dog and Cat, that extend the Animal class. class Animal: def __init__(self, name): self.name = name self.health = 100","completion":"class Animal: def __init__(self, name): self.name = name self.health = 100 class Dog(Animal): def bark(self): print(\\"Woof!\\") class Cat(Animal): def meow(self): print(\\"Meow!\\")"},{"prompt":"Write a SQL query to list the top 3 customers with highest total purchases in the last 6 months.","completion":"SELECT customer_name, SUM(order_total) AS Total FROM orders WHERE order_time > DATEADD(MONTH, -6, GETDATE()) GROUP BY customer_name ORDER BY Total DESC LIMIT 3"},{"prompt":"w would you perform a two-way pivot table in Python using Pandas?","completion":"Pandas can be used to perform a two-way pivot table in Python using the pivot_table() method. The pivot_table() method takes a data frame as an argument and can be used to reshape the data frame into a two-way pivot table. It takes several parameters, including values, index, columns, aggfunc, and fill_value. For example, if we want to calculate the total sales for each customer for each product, we can use the following statement: pd.pivot_table(data, values=\\"sales\\", columns=\\"product\\", index=\\"customer\\", aggfunc=\\"sum\\", fill_value=0)"},{"prompt":"Suggest a way to sort a list of strings alphabetically in JavaScript.","completion":"A way to sort a list of strings alphabetically in JavaScript is to use the \`\`Array.sort()\`\` method. The \`\`Array.sort()\`\` method takes a comparison function as an optional argument. The comparison function takes two arguments (\`\`a\`\` and \`\`b\`\`) and must return a value less than or equal to 0 if \`\`a\`\` should come before \`\`b\`\` and a value greater than 0 if \`\`a\`\` should come after \`\`b\`\`. In this case, we can use a comparison function that compares the Unicode codes of each character, returning the difference between the codes of the characters at the first position at which they differ: function alphabeticalSort(a, b) { return a.charCodeAt(0) - b.charCodeAt(0); } listOfStrings.sort(alphabeticalSort);"},{"prompt":"Write a SQL query to fetch the records whose average values of a specific column is less than 10","completion":"SELECT * FROM (SELECT table, AVG(column) FROM table GROUP BY table) WHERE AVG(column) < 10"},{"prompt":"Suggest a way to check if a given number is a palindrome number in JavaScript.","completion":"A way to check if a given number is a palindrome number in JavaScript is to convert the number to a string and check if the reversed string is the same as the original one. We can use the \`\`String.prototype.split()\`\` and \`\`Array.prototype.reverse()\`\` methods to reverse the string and compare it with the original string. If the two strings are the same, the number is a palindrome. For example, the following code snippet checks if the number 121 is a palindrome: var num = 121; var reversedNumStr = num.toString().split('').reverse().join(''); var isPalindrome = reversedNumStr == num.toString(); // Output: true"},{"prompt":"Modify the given code to debug 'NameError: name 'x' is not defined'. nums = range(20) for x in nums: if x % 2 == 0: print(square(x))","completion":"nums = range(20) for x in nums: if x % 2 == 0: print(x**2)"},{"prompt":"Fill in the blank with appropriate generic function to complete the code. def foo(): value = ____","completion":"def foo(): value = input()"},{"prompt":"Create a new array containing the result of applying a given function to each element of an original array. Array: [1, 2, 3, 4] Function: x * 2","completion":"new_arr = [i*2 for i in [1, 2, 3, 4]]"},{"prompt":"Create a function that takes three parameters and adds them together. No input.","completion":"def my_func(a, b, c): return a + b + c"},{"prompt":"Write a Python class that implements a sorted list. No input.","completion":"class SortedList: def __init__(self): self.items = [] def add(self, item): i = 0 while i < len(self.items) and self.items[i] < item: i += 1 self.items.insert(i, item) def remove(self, item): i = 0 while i < len(self.items) and self.items[i] != item: i += 1 if i < len(self.items): del self.items[i] def remove_at(self, index): del self.items[index]"},{"prompt":"Extract a portion of a string. String: Python is a great programming language Substring: 'programming'","completion":"programming_str = 'Python is a great programming language'[17:]"},{"prompt":"Reorder the items in an array according to their length. Array: ['this', 'is', 'a', 'test']","completion":"sorted_array = sorted(['this', 'is', 'a', 'test'], key=len)"},{"prompt":"Create a new array by combining the elements of 2 given arrays. Array 1: [1, 2, 3] Array 2: [4, 5, 6]","completion":"merged_array = [1, 2, 3] + [4, 5, 6]"},{"prompt":"Create classes to represent a credit card and account holder. No input.","completion":"class CreditCard: def __init__(self, card_number): self.card_number = card_number class AccountHolder: def __init__(self): self.cards = [] def add_card(self, card): self.cards.append(card)"},{"prompt":"Complete the missing line of code to iterate through a list of dictionaries. items = [{'name': 'John', 'age': 20}, {'name': 'Eric', 'age': 25}] for ____","completion":"for item in items:"},{"prompt":"Convert a given array of strings to an array of numbers. Array: ['1', '2', '3']","completion":"nums = list(map(int, ['1', '2', '3']))"},{"prompt":"Suggest a variable name for the following equation: 1 + 2 - 3 x 4","completion":"result = 1 + 2 - 3 * 4"},{"prompt":"Using the following data, convert the X and Y coordinates into longitude and latitude. X: 83.206226 Y: 42.821810","completion":"longitude: 42.821810 latitude: 83.206226"},{"prompt":"Print all the odd numbers from 1 to 10 (inclusive)","completion":"for num in range(1, 11): if num % 2 == 1: print(num)"},{"prompt":"Create a boolean function called \\"is_num_even\\" which takes in a number and returns true if the number is even.","completion":"def is_num_even(number): if number % 2 == 0: return True else: return False"},{"prompt":"Create a function to process the following data and return the average temperature for the last five days. days = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday'] temps = [27, 28, 29, 20, 21]","completion":"def get_avg_temp(days, temps): total = 0 for i in range(len(days)): total += temps[i] avg = total / len(days) return avg"},{"prompt":"Create a JavaScript function to return the greatest value from the following array of numbers. [2, 4, 8, 10, 15]","completion":"function getGreatestValue(arr) { let greatest = arr[0]; for(let i = 0; i < arr.length; i++) { if(arr[i] > greatest) { greatest = arr[i]; } } return greatest; }"},{"prompt":"Compute the Fibonacci series up to the following number n.","completion":"def fibonacci(n): a = 0 b = 1 arr = [] arr.append(a) arr.append(b) for i in range(2,n): c = a + b a = b b = c arr.append(c) return arr"},{"prompt":"Create an array of all the prime numbers up to 50.","completion":"def is_prime(n): for i in range(2, int(n ** 0.5) + 1): if n % i == 0: return False return True prime_array = [] for i in range(2, 51): if is_prime(i): prime_array.append(i)"},{"prompt":"Edit the code to make sure the output error messages are informative. def myfunc(param): if type(param) != str: print(f\\"{param} is not valid input type\\")","completion":"def myfunc(param): if not isinstance(param, str): print(f\\"Expected a string for parameter 'param' but received type '{type(param).__name__}'\\")"},{"prompt":"Using the variable names, create a dictionary with the provided entries. key1 = \\"item1\\" val1 = \\"00001\\" key2 = \\"item2\\" val2 = \\"00002","completion":"dict = {key1:val1, key2:val2}"},{"prompt":"Using the given list and dictionary, write the Python code to remove duplicate objects from the list. list_one = [{\\"Name\\": \\"John\\", \\"Lastname\\": \\"Smith\\"}, {\\"Name\\": \\"John\\", \\"Lastname\\": \\"Smith\\"}, {\\"Name\\": \\"Janet\\", \\"Lastname\\": \\"Wise\\"}] dict_one = {\\"John\\": \\"Smith\\", \\"Janet\\": \\"Wise\\"}","completion":"new_list = [] for item in list_one: if item['Name'] + item['Lastname'] not in new_list: new_list.append(item['Name'] + item['Lastname']) if item['Name'] + dict_one[item['Name']] not in new_list: new_list.append(item['Name'] + dict_one[item['Name']]) final_list = [item for item in list_one if item['Name'] + item['Lastname'] in new_list]"},{"prompt":"Write code to organize the provided list in ascending order. list_two = [7, 4, 2, 3, 1, 8, 5]","completion":"list_two.sort()"},{"prompt":"Write a code to convert the provided string into an array of numbers. string_two = \\"01,2,3,4,5,6","completion":"arr = list(map(int, string_two.split(\\",\\")))"},{"prompt":"Write a code that finds all the prime numbers in a given range of numbers. start_num = 1 end_num = 100","completion":"primes = [] for num in range(start_num, end_num + 1): if num > 1: for i in range(2, num): if num % i == 0: break else: primes.append(num) print(primes)"},{"prompt":"Classify each of the provided words as either a noun, verb, or adjective. words = [\\"run\\", \\"sleep\\", \\"grass\\", \\"study\\", \\"loud\\"]","completion":"Noun: sleep, grass, study Verb: run, loud Adjective: None"},{"prompt":"Compare the two values, output the greater one. val1 = \\"dog\\" val2 = \\"c","completion":"if val1 > val2: print(val1) else: print(val2)"},{"prompt":"Write a code that iterates over the provided list of dictionaries and prints the value of \\"name\\" in each dictionary. list_three = [{\\"Name\\": \\"John\\", \\"Lastname\\": \\"Smith\\"}, {\\"Name\\": \\"Janet\\", \\"Lastname\\": \\"Wise\\"}]","completion":"for item in list_three: print(item[\\"Name\\"])"},{"prompt":"Determine the best data structure to store the following information. The information is a list of people and their corresponding email addresses.","completion":"The best data structure for storing this information is a dictionary, where the keys are the names of the people and the values are their email addresses."},{"prompt":"Write a code to find the maximum length of the longest consecutive increasing subsequence in the given array. arr = [2, 3, 1, 10, 5, 6, 8, 7]","completion":"def max_length(arr): ans = 1 j = 0 for i in range(len(arr)): if (arr[i+1] - arr[i] > 0): j += 1 ans = max(ans, j+1) else: j = 0 return ans print(max_length(arr))"},{"prompt":"Generate a JSON structure that contains a specific set of data. User \\"Alex\\" should contain full name, age (21) and address (123 Main Street).","completion":"{ \\"user\\": { \\"name\\": \\"Alex\\", \\"age\\": 21, \\"address\\": \\"123 Main Street\\" } }"},{"prompt":"Write a function in C which will take two integer arguments and swap their values. int x = 1; int y = 2;","completion":"#include <stdio.h> void swap(int *x, int *y) { int temp = *x; *x = *y; *y = temp; } int main() { int x = 1; int y = 2; swap(&x, &y); printf(\\"x = %d, y = %dn\\", x, y); return 0; } // Output: x = 2, y = 1"},{"prompt":"Write a Python script to check if an email address is valid depending on the given conditions. Email address: johnsmith@example.com Check the following conditions: 1. Must contain an \\"@\\" symbol 2. Must contain a \\".\\" 3. Must have at least 6 character","completion":"import re def is_valid_email(email): regex = r\\"^[a-zA-Z0-9]+@[a-zA-Z0-9]+.[a-zA-Z]{2,6}\\" if re.search(regex, email) is not None: return True else: return False email = 'johnsmith@example.com' if is_valid_email(email): print(\\"Valid email\\") else: print(\\"Invalid email\\")"},{"prompt":"At which index should the following element be inserted so that the array is sorted in ascending order? Array: [2, 3, 4, 5, 7] Element to be inserted: 6","completion":"4"},{"prompt":"Create a function which checks if a certain element is present in a given array. arr = [2, 8, 3, 5] element = 8","completion":"const arr = [2, 8, 3, 5]; const element = 8; const checkElementInArray = (arr, element) => { return arr.includes(element); } console.log(checkElementInArray(arr, element)); // true"},{"prompt":"Make the following code thread-safe by implementing mutex locks. #include <pthread.h> int global_int = 0; void* inc_func(void* arg) { global_int++; return NULL; } int main() { pthread thread_a, thread_b; ... return 0; }","completion":"#include <pthread.h> #include <mutex> int global_int = 0; std::mutex mtx; void* inc_func(void* arg) { mtx.lock(); global_int++; mtx.unlock(); return NULL; } int main() { pthread thread_a, thread_b; std::unique_lock<std::mutex> lock(mtx); ... lock.unlock(); return 0; }"},{"prompt":"Edit the following C++ code so that it prints 10, 11 and 12 in order. #include <iostream> int main() { int i = 10; int j = 12; while (i < j) { std::cout << i << \\" \\"; i++; } return 0; }","completion":"#include <iostream> int main() { int i = 10; int j = 12; while (i <= j) { std::cout << i << \\" \\"; i++; } return 0; }"},{"prompt":"mplement a reverse for loop in Python.","completion":"for i in reversed(range(0, 10)): print(i)"},{"prompt":"Create a function to evaluate a mathematical expression like \\"3 + 5 * 4\\".","completion":"def evaluate(expression): result = None try: result = eval(expression) except: pass return result"},{"prompt":"Compose a Unix command to list all the directories in a given path?","completion":"ls -l | grep \\"^d\\""},{"prompt":"Develop a code to identify the most commonly used words in a given text. The quick brown fox jumps over the lazy dog","completion":"from collections import Counter def most_common_words(text): words = text.split() counter = Counter(words) high_occur = counter.most_common(3) return high_occur if __name__ == \\"__main__\\": text = \\"The quick brown fox jumps over the lazy dog\\" most_common_words(text)"},{"prompt":"Create an efficient matrix multiplication of two given matrices. matrix1 = [[1, 2], [3, 4]] matrix2 = [[5, 6], [7, 8]]","completion":"def matrix_multiply(matrix1, matrix2): if len(matrix1[0]) != len(matrix2): return \\"Matrices should have the same size for multiplication\\" result = [[0 for x in range(len(matrix1))] for j in range(len(matrix2[0]))] for i in range(len(matrix1)): for j in range(len(matrix2[0])): for k in range(len(matrix2)): result[i][j] += matrix1[i][k] * matrix2[k][j] return result if __name__ == \\"__main__\\": matrix1 = [[1, 2], [3, 4]] matrix2 = [[5, 6], [7, 8]] print(matrix_multiply(matrix1, matrix2))"},{"prompt":"Become an algorithm to check if a linked list is empty.","completion":"def is_list_empty(head): if head == None: return True else: return False"},{"prompt":"Compose a function to generate a palette of random colors.","completion":"import random def generate_palette(n): palette = [] for i in range(n): rgb = [] for j in range(3): rgb.append(random.randint(1, 255)) palette.append(rgb) return palette if __name__ == \\"__main__\\": n = 10 palette = generate_palette(n) print(palette)"},{"prompt":"Design an algorithm to produce a binary tree from given inorder and preorder traversals. inorder: [4,2,5,1,3,6] preorder: [1,2,4,5,3,6]","completion":"class Node: # A constructor to create a # new linked node def __init__(self, data): self.data = data self.left = None self.right = None def binary_tree_from_inorder_preorder(inorder, preorder): if len(inorder) in [0, 1]: return Node(inorder[0]) if inorder else None root_val = preorder[0] root = Node(root_val) i_index = inorder.index(root_val) root.left = binary_tree_from_inorder_preorder(inorder[:i_index], preorder[1:i_index + 1]) root.right = binary_tree_from_inorder_preorder(inorder[i_index + 1:], preorder[i_index + 1:]) return root if __name__ == \\"__main__\\": inorder=[4,2,5,1,3,6] preorder=[1,2,4,5,3,6] root = binary_tree_from_inorder_preorder(inorder, preorder)"},{"prompt":"Create a code to generate a Mulberry Tree of height n levels.","completion":"def get_mulberry_tree(n): spaces = n - 1 for i in range(1, n+1): for j in range(spaces): print(end = \\" \\") spaces = spaces - 1 for j in range(i): print(\\"* \\", end = \\"\\") print() if __name__ == \\"__main__\\": n = 5 get_mulberry_tree(n)"},{"prompt":"Generate a program to remove duplicates from an unsorted linked list.","completion":"class Node: def __init__(self, data): self.data = data self.next = None def remove_duplicates(head): h = {} temp = head prev = None while(temp): if temp.data in h: prev.next = temp.next temp = None else: h[temp.data] = True prev = temp temp = prev.next if __name__ == \\"__main__\\": pass"},{"prompt":"Design a Java method to retrieve the maximum value from an array. [2, 3, 5, 9, 6, 11]","completion":"public static int getMax(int[] arr) { int max = Integer.MIN_VALUE; for (int i = 0; i < arr.length; i++) { if (arr[i] > max) max = arr[i]; } return max; }"},{"prompt":"Create a HTML page to display a navigation bar with a dropdown list that includes a list of the months of the year.","completion":"<nav> <div class=\\"dropdown\\"> <button class=\\"dropbtn\\">Months</button> <div class=\\"dropdown-content\\"> <a href=\\"\\">January</a> <a href=\\"\\">February</a> <a href=\\"\\">March</a> <a href=\\"\\">April</a> <a href=\\"\\">May</a> <a href=\\"\\">June</a> <a href=\\"\\">July</a> <a href=\\"\\">August</a> <a href=\\"\\">September</a> <a href=\\"\\">October</a> <a href=\\"\\">November</a> <a href=\\"\\">December</a> </div> </div> </nav>"},{"prompt":"Create a Python program to take a float input and output its binary equivalent. 25.68","completion":"def floatToBin(num): whole, decimal = str(num).split(\\".\\") whole = int(whole) decimal = int (decimal) res = bin(whole).lstrip(\\"0b\\")+\\".\\" for x in range(10): decimal *= 2 res += str(decimal//1) decimal %= 1 return res # Driver code number = 25.68 print(floatToBin(number)) # returns '11001.1011'"},{"prompt":"Develop an algorithm in Java that removes duplicate elements from an array. [1, 3, 5, 3, 4, 5]","completion":"public static int[] removeDuplicates(int[] arr) { int n = arr.length; // To store index of next unique element int j = 0; // Doing same as done in Method 1 // Just maintaining another updated index i.e. j for (int i = 0; i < n-1; i++) if (arr[i] != arr[i+1] ) arr[j++] = arr[i]; arr[j++] = arr[n-1]; return Arrays.copyOf(arr, j); }"},{"prompt":"Create a C# program to check if any element in an array is equal to a given number. arr = {1, 4, 7, 9} and given number = 7","completion":"public static bool IsEqualToGivenNumber(int[] arr, int number) { for(int i = 0; i < arr.Length; i++) { if(arr[i] == number) { return true; } } return false; }"},{"prompt":"Develop a shell script to display the information of the current logged in user.","completion":"#!/bin/bash echo \\"The username is: (whoami)\\" echo \\"The home directory is: HOME\\" echo \\"The current shell is: SHELL\\""},{"prompt":"Describe what a condition in a while loop does in Python.","completion":"A condition in a while loop in Python allows code to be executed repeatedly until a certain condition is met. While the condition is true, the code inside the loop is executed and if the condition is false, the loop is exited. This allows for a loop to continue running until a certain condition is met."},{"prompt":"Write a method to constitute a Hashmap with the following parameters: key (String) and value (Integer).","completion":"public static HashMap<String, Integer> constructMap(String key, Integer value) { // Create an empty HashMap HashMap<String, Integer> myMap = new HashMap<>(); // Add key-value pairs to the HashMap myMap.put(key, value); // Return the HashMap return myMap; }"},{"prompt":"Generate random numbers in range [0,10] in C++.","completion":"#include <iostream> #include <cstdlib> #include <ctime> // Main function int main() { srand((unsigned)time(0)); for (int i = 0; i < 100; i++) { int random_number = rand() % 11; std::cout << random_number << ' '; } return 0; }"},{"prompt":"Construct a simple Java program that calculates the sum of two integers.","completion":"public class Sum { public static void main(String[] args) { int a = 5; int b = 10; int sum = a + b; System.out.println(\\"The sum of the two integers is: \\" + sum); } }"},{"prompt":"Name three software design principles.","completion":"The three software design principles are: 1. Separation of Concerns 2. DRY Principle 3. KISS Principle."},{"prompt":"Write a Java program to remove the duplicates in an array.","completion":"import java.util.HashSet; public class RemoveDuplicates { public static int[] removeDuplicates(int[] nums) { HashSet<Integer> set = new HashSet<>(); for (int num : nums) set.add(num); int[] result = new int[set.size()]; int i = 0; for (int num : set) result[i++] = num; return result; } }"},{"prompt":"Explain the purpose of the \\"+\\" character in a regular expression.","completion":"In a regular expression, the \\"+\\" character is a quantifier that matches 1 or more of the preceding character or expression. For example, \\"ab+c\\" would match strings such as 'abc', 'abbc', and 'abbbc', but not the string 'ac'."},{"prompt":"Create an object that uses constructor overloading in Python.","completion":"class Person: def __init__(self, name, age): self.name = name self.age = age def __init__(self, name, age, job): self.name = name self.age = age self.job = job p1 = Person('John Doe', 25) p2 = Person('Jane Doe', 30, 'Software Engineer')"},{"prompt":"Write a function in JavaScript that will find the index of an element in an array.","completion":"function findIndex(arr, el) { for (var i=0; i < arr.length; i++) { if (arr[i] === el) return i; } return -1; }"},{"prompt":"Create a SQL query that joins the Customers and Orders tables on customer_id","completion":"SELECT * FROM Customers INNER JOIN Orders ON Customers.customer_id = Orders.customer_id;"},{"prompt":"Angular 5 is a popular JavaScript framework used for front-end web development. What is the command to create a new project in Angular 5?","completion":"ng new <project-name>"},{"prompt":"Create an if statement that prints \\"Number is negative\\" if the value of x is below zero. x = -2","completion":"if x<0: print(\\"Number is negative\\")"},{"prompt":"Create a for loop that prints all even numbers from 0 to 10 (inclusive).","completion":"for i in range(0, 11): if (i % 2 == 0): print(i)"},{"prompt":"Write a function called \\"power\\" that takes two numbers a and b as arguments, and returns a to the power of b.","completion":"def power(a, b): return a**b"},{"prompt":"What is the SQL query to select all the values that are greater than 10 in the \\"Age\\" column in the table \\"Students\\"?","completion":"SELECT * FROM Students WHERE Age > 10"},{"prompt":"Create a Javascript class called \\"Car\\" that takes an argument called \\"year\\" and prints the value of \\"year\\".","completion":"class Car{ constructor(year){ this.year = year; } printYear(){ console.log(this.year); } }"},{"prompt":"Create a function to round a number to the nearest integer.","completion":"def round_number(x): return round(x)"},{"prompt":"Create a variable called \\"counter\\" and increment it by one in a loop that runs 10 times.","completion":"counter = 0 for i in range(10): counter += 1"},{"prompt":"Write a regular expression to match any word that starts with \\"cat\\" and contains only lowercase letters.","completion":"^cat[a-z]*"},{"prompt":"Design a class for representing a person in Python.","completion":"class Person: \\"\\"\\" Class to represent a person \\"\\"\\" def __init__(self, name, age, address): self.name = name self.age = age self.address = address def birthday(self): \\"\\"\\" Increments the age of the person \\"\\"\\" self.age += 1"},{"prompt":"Create a list comprehension to generate the multiples of a number up to a limit. multiples of 7 until 50","completion":"multiples_list = [n * 7 for n in range(0, 51) if n * 7 <= 50]"},{"prompt":"Using regex, find all the words that have a specific character at the start. the words that start with 'a'","completion":"import re words = [\\"amazing\\", \\"apple\\", \\"banana\\", \\"cherry\\", \\"desert\\", \\"encounter\\"] result = [word for word in words if re.search(\\"^a\\", word)] print(result)"},{"prompt":"Define a constructor in Java to create an instance of a class.","completion":"public class MyClass { // Constructors public MyClass() { // Default constructor } // Constructor with parameters public MyClass(int a, int b) { // Do something with the parameters } }"},{"prompt":"Using the input set the value of the variable. value = \\"hello world","completion":"value = \\"hello world\\""},{"prompt":"Use conditionals to decide what to print using the input array. arr = [\\"hamburger\\", \\"hot dog\\", \\"cheese\\"]","completion":"if len(arr) == 0: print(\\"No food available\\") elif len(arr) == 1: print(arr[0] + \\" is available\\") elif len(arr) == 2: print(arr[0] + \\" and \\"+ arr[1] + \\" are available\\") else: print(\\"Multiple items are avaiable: \\" + ', '.join(arr))"},{"prompt":"Merge two arrays using the given lists. arr1 = [1, 2, 3] arr2 = [\\"a\\", \\"b\\", \\"c\\"]","completion":"arr = arr1 + arr2 #Merge two arrays arr = arr1 + arr2"},{"prompt":"Create a function that takes a given string and encodes it with a specified cipher. encoding_cipher = {\\"a\\" : \\"x\\", \\"b\\" : \\"y\\", \\"c\\": \\"z\\"} string = \\"abc","completion":"def encode_string(encoding_cipher, string): result = \\"\\" for char in string: result += encoding_cipher[char] return result"},{"prompt":"Create a function to decode a given string using the provided cipher. decoding_cipher = { \\"x\\" : \\"a\\", \\"y\\": \\"b\\", \\"z\\" : \\"c\\" } string = \\"xyz","completion":"def decode_string(decoding_cipher, string): result = \\"\\" for char in string: result += decoding_cipher[char] return result"},{"prompt":"Using a while loop, write a program to delete all duplicate elements from an array. arr = [1, 2, 3, 2, 3, 4, 3]","completion":"def remove_duplicates(arr): i = 0 while i < len(arr): if arr.count(arr[i]) > 1: arr.remove(arr[i]) else: i += 1 return arr"},{"prompt":"Find the Fibonacci number for a given number using a for loop.","completion":"def fibonacci(n): fibonacci_numbers = [0,1] for i in range(2, n+1): fibonacci_numbers.append(fibonacci_numbers[i-1] + fibonacci_numbers[i-2]) return fibonacci_numbers[n]"},{"prompt":"Using a list comprehension, create a function to give only the even numbers in a given list. arr = [1, 2, 3, 4, 5, 6, 7, 8]","completion":"def only_even(arr): return [ num for num in arr if num % 2 == 0 ]"},{"prompt":"Using a dictionary, store the given student's name and marks as key value pairs. name = \\"John Doe\\" marks = { \\"maths\\" : 90, \\"physics\\" : 80, \\"chemistry\\" : 85 }","completion":"student_data = {} student_data[name] = marks"},{"prompt":"Write the C++ code to print the smallest prime factor of a given number number = 54","completion":"int main() { int factor = 2; int number = 54; while (number > 1) { if (number % factor == 0) { cout << factor << endl; number /= factor; } else factor++; } return 0; }"},{"prompt":"Compute the largest common denominator of 4 and 12","completion":"The LCM of 4 and 12 is 12."},{"prompt":"Edit the following HTML to change the font of the page <html> <head> <title>My Page</title> </head> <body> <h2>Hello World!</h2> </body> </html>","completion":"<html> <head> <title>My Page</title> <style> body { font-family: Arial, sans-serif; } </style> </head> <body> <h2>Hello World!</h2> </body> </html>"},{"prompt":"Name the Java keyword used to define a class","completion":"The Java keyword used to define a class is \\"class\\"."},{"prompt":"Create a function in JavaScript which takes two parameters x and y and returns the multiplication of the two","completion":"function multiply(x, y) { return x * y; }"},{"prompt":"Design a program to convert an array of characters to its equivalent string. array = [ 'A', 'B', 'C', 'D' ]","completion":"public class ArrayToString { public static String convert(char[] arr) { StringBuilder sb = new StringBuilder(); for (char c : arr) sb.append(c); return sb.toString(); } public static void main(String[] args) { char[] arr = { 'A', 'B', 'C', 'D' }; System.out.println(convert(arr)); } }"},{"prompt":"Create a program that determines whether a given numbers is a prime.","completion":"public class PrimeNumber { public static boolean isPrime(int n) { if (n < 2) return false; for (int i = 2; i <= Math.sqrt(n); i++) { if (n % i == 0) { return false; } } return true; } public static void main(String[] args) { for (int i = 0; i < 20; i++) { if (isPrime(i)) { System.out.println(i + \\" is a Prime Number\\"); } } } }"},{"prompt":"Create a program in python that sorts a given list.","completion":"def bubbleSort(arr): n = len(arr) # Traverse through all array elements for i in range(n): # Last i elements are already in place for j in range(0, n-i-1): # traverse the array from 0 to n-i-1 # Swap if the element found is greater # than the next element if arr[j] > arr[j+1] : arr[j], arr[j+1] = arr[j+1], arr[j] # Driver code to test above arr = [64, 34, 25, 12, 22, 11, 90] bubbleSort(arr) print (\\"Sorted array is:\\") for i in range(len(arr)): print (\\"%d\\" %arr[i]),"},{"prompt":"Develop a program that performs basic arithmetic operations (+, -, /, *)","completion":"def add(x, y): return x + y def subtract(x, y): return x - y def multiply(x, y): return x * y def divide(x, y): return x / y"},{"prompt":"Create a program to evaluate a postfix expression.","completion":"# Python program to evaluate value of a postfix expression # Class to convert the expression class Conversion: # Constructor to initialize the class variables def __init__(self, capacity): self.top = -1 self.capacity = capacity # This array is used a stack self.array = [] # Precedence setting self.output = [] self.precedence = {'+':1, '-':1, '*':2, '/':2, '^':3} # check if the stack is empty def isEmpty(self): return True if self.top == -1 else False # Return the value of the top of the stack def peek(self): return self.array[-1] # Pop the element from the stack def pop(self): if not self.isEmpty(): self.top -= 1 return self.array.pop() else: return \\"\\" # Push the element to the stack def push(self, op): self.top += 1 self.array.append(op) # A utility function to check is the given character # is operand def isOperand(self, ch): return ch.isalpha() # Check if the precedence of operator is strictly # less than top of stack or not def notGreater(self, i): try: a = self.precedence[i] b = self.precedence[self.peek()] return True if a <= b else False except KeyError: return False # The main function that converts given infix expression # to postfix expression def infixToPostfix(self, exp): # Iterate over the expression for conversion for i in exp: # If the character is an operand, # add it to output if self.isOperand(i): self.output.append(i) # If the character is an '(', push it to stack elif i == '(': self.push(i) # If the scanned character is an ')', pop and # output from the stack until and '(' is found elif i == ')': while( (not self.isEmpty()) and self.peek() != '('): a = self.pop() self.output.append(a) if (not self.isEmpty() and self.peek() != '('): return -1 else: self.pop() # An operator is encountered else: while(not self.isEmpty() and self.notGreater(i)): self.output.append(self.pop()) self.push(i) # pop all the operator from the stack while not self.isEmpty(): self.output.append(self.pop()) return \\"\\".join(self.output) count = 0 # Driver program to test above function exp = \\"a+b*(c^d-e)^(f+g*h)-i\\" obj = Conversion(len(exp)) ans = obj.infixToPostfix(exp) print(ans) # This function evaluates value of a postfix expression def evaluatePostfix(exp): # Create a stack stack = [] # Scan all characters one by one for i in exp: # If the character is a number, push it to the stack if i.isdigit(): stack.append(int(i)) # If the character is an operator, pop two # elements from stack apply the operator else: val1 = stack.pop() val2 = stack.pop() if i == '+': stack.append(val2 + val1) elif i == '-': stack.append(val2 - val1) elif i == '*': stack.append(val2 * val1) else: stack.append(val2 / val1) return stack.pop() # Driver Program to test above function #exp = \\"231*+9-\\" #exp = ans #print(exp) #print('postfix evaluation: %d' %(evaluatePostfix(exp) ))"},{"prompt":"Create a JSON object from a dictionary in Python. { \\"name\\": \\"John Doe\\", \\"age\\": 30, \\"address\\": { \\"street\\": \\"Main Street\\", \\"city\\": \\"New York City\\" } }","completion":"import json data = { \\"name\\": \\"John Doe\\", \\"age\\": 30, \\"address\\": { \\"street\\": \\"Main Street\\", \\"city\\": \\"New York City\\" } } json_data = json.dumps(data) print(json_data) # Output: {\\"name\\": \\"John Doe\\", \\"age\\": 30, \\"address\\": {\\"street\\": \\"Main Street\\", \\"city\\": \\"New York City\\"}}"},{"prompt":"Use the split method to split a string based on the given delimiter. str = \\"apple,banana,orange","completion":"str = \\"apple,banana,orange\\" list = str.split(\\",\\") print(list) # Output: ['apple', 'banana', 'orange']"},{"prompt":"Use a loop to find the average of all given numbers. [1, 2, 3, 4, 5]","completion":"def find_avg(nums): total = 0 for num in nums: total += num return total / len(nums) list = [1, 2, 3, 4, 5] print(find_avg(list)) # Output: 3.0"},{"prompt":"Compare two given strings and return true if they are the same. str1 = \\"Hello world\\" str2 = \\"Hello world","completion":"def compare_str(str1, str2): return str1 == str2 str1 = \\"Hello world\\" str2 = \\"Hello world\\" print(compare_str(str1, str2)) # Output: True"},{"prompt":"Create a Java method that takes in an integer array and returns it sorted. [7, -2, 4, 21, 0]","completion":"public static int[] sortInteger(int[] arr) { int[] sortedArr = Arrays.copyOf(arr, arr.length); Arrays.sort(sortedArr); return sortedArr; }"},{"prompt":"Parse the following JSON using JavaScript. {\\"courseName\\":\\"Python\\"}","completion":"const jsonData = JSON.parse('{\\"courseName\\":\\"Python\\"}'); const courseName = jsonData.courseName;"},{"prompt":"alize a new enum type in Java that stores the information of colors.","completion":"public enum Color { RED, GREEN, BLUE }"},{"prompt":"Create a SQL statement to select all carts with more than 10 items in them.","completion":"SELECT * FROM carts WHERE items > 10;"},{"prompt":"Given an array of integers, write a JavaScript function to remove all duplicate elements.","completion":"function removeDuplicates(arr) { const uniqueElements = [...new Set(arr)]; return uniqueElements; }"},{"prompt":"Parse the following XML data using Python. <students> <student> <name>John</name> <age>24</age> </student> <student> <name>Jack</name> <age>22</age> </student> <student> <name>Sam</name> <age>25</age> </student> </students>","completion":"import xml.etree.ElementTree as ET root = ET.fromstring('<students> <student> <name>John</name> <age>24</age> </student> <student> <name>Jack</name> <age>22</age> </student> <student> <name>Sam</name> <age>25</age> </student></students>') students = root.findall('student') for student in students: name = student.find('name').text age = student.find('age').text print(name, age)"},{"prompt":"Create a HTML page with a table showing the contact information of all members in a information. [ { \\"name\\": \\"John\\", \\"phone\\": \\"123-456-7890\\", \\"address\\": \\"123 Main Street\\" }, { \\"name\\": \\"Sarah\\", \\"phone\\": \\"098-765-4321\\", \\"address\\": \\"456 Ocean Drive\\" } ]","completion":"<!DOCTYPE html> <html> <head> <title>Member Contact Information</title> </head> <body> <h1>Member Contact Information</h1> <table> <thead> <tr><th>Name</th></tr> <tr><th>Phone</th></tr> <tr><th>Address</th></tr> </thead> <tbody> <tr><td>John</td><td>123-456-7890</td><td>123 Main Street</td></tr> <tr><td>Sarah</td><td>098-765-4321</td><td>456 Ocean Drive</td></tr> </tbody> </table> </body> </html>"},{"prompt":"Write a function to create a list with all the prime numbers in the range of 0 to 100.","completion":"def create_prime_list(upper_limit): prime_list = [] for num in range(2,upper_limit+1): flag=0 for i in range(2,num): if num % i == 0: flag=1 if flag==0: prime_list.append(num) return prime_list"},{"prompt":"Create a program to find out the most frequent letter in a sentence. The quick brown fox jumps over the lazy dog.","completion":"def most_frequent_letter(sentence): freq_dict = {} for letter in sentence: if letter in freq_dict: freq_dict[letter] += 1 else: freq_dict[letter] = 1 most_freq_letter = max(freq_dict, key = freq_dict.get) return most_freq_letter"},{"prompt":"Create a program to output 'Hello World' in the console.","completion":"print('Hello World')"},{"prompt":"You will be given a list of numbers as input. Write a program to remove the duplicates and return only the distinct values. [1, 1, 2, 3, 4, 4, 5]","completion":"def remove_duplicates(arr): no_duplicates = [] for i in arr: if i not in no_duplicates: no_duplicates.append(i) return no_duplicates"},{"prompt":"You will be given a list of strings as input. Write a program to print out the longest string in the list. ['Hello', 'World', 'I', 'Am', 'Here']","completion":"def get_longest_str(str_list): longest_str = str_list[0] for str in str_list: if len(str) > len(longest_str): longest_str = str return longest_str"},{"prompt":"mplement a function that takes two numbers as parameters and returns their difference. 17, 10","completion":"int difference(int a, int b) { return a - b; }"},{"prompt":"Use CSS to enlarge the font size of a paragraph of text to 16px. <p>This is a paragraph of text.</p>","completion":"<p style=\\"font-size:16px;\\">This is a paragraph of text.</p>"},{"prompt":"Allocate an array of size 10 and store the numbers from 1 to 10 in it.","completion":"int[] arr = new int[10]; for (int i = 0; i < 10; i++) { arr[i] = i + 1; }"},{"prompt":"Create a function that adds two matrices of the same size. [[1, 2], [3, 4]], [[5, 6], [7, 8]]","completion":"int[][] addMatrix(int[][] a, int[][] b) { int[][] c = new int[a.length][a[0].length]; for (int i = 0; i < a.length; i++) { for (int j = 0; j < a[i].length; j++) { c[i][j] = a[i][j] + b[i][j]; } } return c; }"},{"prompt":"Create a JavaScript timer that runs every two seconds and displays a countdown in the console.","completion":"let count = 10; let timerId = setInterval(function() { console.log(count); if (count === 0) { clearInterval(timerId); } count--; }, 2000);"},{"prompt":"Create a SQL query that returns the first five rows from the \\"Customers\\" table.","completion":"SELECT TOP 5 * FROM Customers;"},{"prompt":"Create a code snippet that parses a sentence into individual words and returns the words sorted alphabetically. sentence = \\"This is a sample sentence","completion":"def parse_sentence(sentence): words = sentence.split() words.sort() return words"},{"prompt":"Using the provided data, train a decision tree to predict whether a given house should be classified as a \\"small\\" or \\"large\\" house. house_size = [1000, 1100, 1250, 1300, 1400, 1500] house_label = [\\"small\\", \\"small\\", \\"small\\", \\"large\\", \\"large\\", \\"large\\"]","completion":"from sklearn import tree # Our features are house_size X = [[1000], [1100], [1250], [1300], [1400], [1500]] # Labels are house_label y = [\\"small\\", \\"small\\", \\"small\\", \\"large\\", \\"large\\", \\"large\\"] # Create and train the decision tree clf = tree.DecisionTreeClassifier() clf = clf.fit(X, y)"},{"prompt":"Given a matrix of X, Y coordinates, write a Python function that returns the angle between the two points. X1 = 2 Y1 = 3 X2 = 7 Y2 = 10","completion":"import math def calculate_angle(X1, Y1, X2, Y2): deltaY = Y2 - Y1 deltaX = X2 - X1 angleInDegrees = (math.atan2(deltaY, deltaX)) * 180 / math.pi return angleInDegrees"},{"prompt":"Create a Python function that takes an array of numbers and returns a string that represent the mean and median of the numbers. [1, 2, 3, 4, 5]","completion":"def get_mean_and_median(numbers): mean = sum(numbers)/len(numbers) sorted_numbers = sorted(numbers) index = int(len(sorted_numbers) / 2) median = sorted_numbers[index] return \\"Mean: {}, Median: {}\\".format(mean, median)"},{"prompt":"Create an SQL query that finds the total number of customers in the \\"Customers\\" table.","completion":"SELECT COUNT(*) FROM Customers;"},{"prompt":"Generate a HTML page with 3 columns using Bootstrap.","completion":"<!DOCTYPE html> <html> <head> <meta charset=\\"utf-8\\"> <title>Bootstrap Example</title> <meta name=\\"viewport\\" content=\\"width=device-width, initial-scale=1.0\\"> <!-- Bootstrap --> <link href=\\"css/bootstrap.min.css\\" rel=\\"stylesheet\\"> </head> <body> <div class=\\"row\\"> <div class=\\"col-md-4\\"> <!-- Your content goes here --> </div> <div class=\\"col-md-4\\"> <!-- Your content goes here --> </div> <div class=\\"col-md-4\\"> <!-- Your content goes here --> </div> </div> </body> </html>"},{"prompt":"Create a program in Java that outputs a Fibonacci series of length n.","completion":"public class Fibonacci { // Function to print the nth // fibonacci number static void printFibonacciSeries(int n) { int a = 0, b = 1, c; if (n == 0) { System.out.print(a); return; } for (int i = 2; i <= n; i++) { c = a + b; System.out.print(c + \\" \\"); a = b; b = c; } } // Driver Code public static void main(String[] args) { int n = 10; printFibonacciSeries(n); } }"},{"prompt":"Write a function in Java that takes an array as input and returns an array of the same size with the elements in reverse order. [1, 2, 3, 4, 5]","completion":"public static int[] reverseArray(int[] array) { int[] reversedArray = new int[array.length]; int j = array.length - 1; for(int i = 0; i < array.length; i++) { reversedArray[i] = array[j]; j--; } return reversedArray; }"},{"prompt":"Create a SQL query that returns all elements in a table with a given column value. Table: Customer column: name value: Joh","completion":"SELECT * FROM Customer WHERE name = 'John';"},{"prompt":"Write a function in Java that takes a String as argument and converts it to Title Case. this is a test.","completion":"public static String toTitleCase(String str) { String words[] = str.split(\\"s\\"); StringBuilder ret = new StringBuilder(); for(int i = 0; i < words.length; i++) { ret.append(Character.toUpperCase(words[i].charAt(0))); ret.append(words[i].substring(1)); if(i < words.length - 1) { ret.append(' '); } } return ret.toString(); }"},{"prompt":"Create a stored procedure in SQL that calculates the average of a column in a table. Table: Student Column: Score","completion":"CREATE PROCEDURE avg_score AS BEGIN SELECT AVG(Score) FROM Student; END;"},{"prompt":"Create a HTML form with 4 fields, a Name field, an Email field, a Phone number field and an Address field.","completion":"<form> <label>Name</label> <input type=\\"text\\" name=\\"name\\"><br> <label>Email</label> <input type=\\"text\\" name=\\"email\\"><br> <label>Phone Number</label> <input type=\\"text\\" name=\\"phone_number\\"><br> <label>Address</label> <input type=\\"text\\" name=\\"address\\"><br> <input type=\\"submit\\" value=\\"Submit\\"> </form>"},{"prompt":"Create a CSS style that makes a given text slightly bigger and bold on hover.","completion":"p:hover { font-size: 1.2em; font-weight: bold; }"},{"prompt":"Write a Java method that accepts two integers and returns their least common multiple.","completion":"public static int lcm(int a, int b) { int gcd = 1; for(int i = 1; i <= a && i <= b; ++i) { // Checks if i is factor of both integers if(a % i == 0 && b % i == 0) gcd = i; } int lcm = (a*b) / gcd; return lcm; }"},{"prompt":"mplement a PHP function to retrieve all words that start with a given letter from a given array. array = [\\"apple\\", \\"ball\\", \\"cat\\", \\"dart\\", \\"elephant\\"] letter = \\"e","completion":"<?php function getWordsStartingWith(array, letter) { matches = array_filter(array, function(word) use(letter) { return strtolower(word[0]) == strtolower(letter); }); return array_values(matches); } array = [\\"apple\\", \\"ball\\", \\"cat\\", \\"dart\\", \\"elephant\\"]; letter = \\"e\\"; result = getWordsStartingWith(array, letter); print_r(result);"},{"prompt":"Design an algorithm to reverse a singly linked list in O(n) time.","completion":"// Algorithm to reverse a singly linked list in O(n) time // // // INPUT: A singly Linked List // // OUTPUT: A reversed singly Linked List // Initialize three pointers Node* prev = NULL; Node* curr = head; Node* next = NULL; // Iterate through the linked list, reversing the links as we go while (curr != NULL) { // Store the next node next = curr->next; // Reverse the current node's pointer curr->next = prev; // Advance the pointers one position prev = curr; curr = next; } // Return the reversed linked list return prev;"},{"prompt":"Design a Ruby program to search through an array and find the first element that satisfies a given condition.","completion":"def search_array(arr, condition) arr.find { |item| condition.call(item) } end"},{"prompt":"Write a code to find the Kth smallest element from a given array of N elements.","completion":"// A function to find kth smallest element int kthSmallest(int arr[], int n, int k) { //Sort the given array sort(arr, arr+n); // Return k'th element return arr[k-1]; }"},{"prompt":"Design a Python program to find the longest increasing subsequence in a given array.","completion":"def long_increasing_subsequence(arr): # Number of items in given array n = len(arr) # Initialize 'lengths' values for all indices lengths = [1]*n # Find the longest increasing subsequence for i in range(1, n): for j in range(i): if arr[j] < arr[i] and lengths[j] + 1 > lengths[i]: lengths[i] = lengths[j] + 1 return lengths"},{"prompt":"Suppose you are designing a simple text editor. Write a C++ code to automatically detect and remove comments from a given input string.","completion":"// Function to remove comments from a given input string string removeComments(string input_string) { string output_string = \\"\\"; int flag = 0; for (int i = 0; i<input_string.length(); i++) { // Check for single line comments if (input_string[i] == '/' && input_string[i+1] == '/') flag = 1; // Check for multi-line comments if (input_string[i] == '/' && input_string[i+1] == '*') flag = 2; // If single line or multi-line comment section, // ignore the part of the string if (flag == 1 || flag == 2) { if (input_string[i] == 'n') flag = 0; continue; } output_string += input_string[i]; } return output_string; }"},{"prompt":"Write a quick SQL query to find the oldest employee in a given department.","completion":"SELECT * FROM employees WHERE department_id = :department_id ORDER BY dob DESC LIMIT 1;"},{"prompt":"Write a SQL query to select the employee who has the lowest salary from the employee table. Employee Table EmployeeName | Department | Salary ------------------------------- John | IT | 25000 Mary | Finance | 28000 Sam | Marketing | 23000 Randy | HR | 32000","completion":"SELECT EmployeeName, MIN(Salary) FROM Employee TABLE;"},{"prompt":"Write a code snippet in C which calculates the mean of a list of numbers. int nums[] = {2, 3, 4, 5, 6};","completion":"#include <stdio.h> int calcMean(int nums[], int size) { int sum = 0; for (int i=0; i<size; i++) { sum += nums[i]; } return sum/size; } int main() { int nums[] = {2, 3, 4, 5, 6}; int size = sizeof(nums)/sizeof(nums[0]); int mean = calcMean(nums, size); printf(\\"The mean of the numbers is %d.\\", mean); return 0; }"},{"prompt":"Rewrite the following code so that it is easier to read and understand. def is_string_palindrome(str): revstr=str[::-1] if revstr==str: return true else: return false","completion":"def is_string_palindrome(str): reverse_str = str[::-1] if reverse_str == str: return True else: return False"},{"prompt":"Write a JavaScript code snippet to find the sum of the even numbers in a given range using the reduce() method. let arr = [1,2,3,4,5,6,7,8,9,10];","completion":"const sumOfEvenNumbers = arr.reduce((acc, curr) => { if (curr % 2 === 0) { return acc + curr; } return acc; }, 0); console.log(sumOfEvenNumbers);"},{"prompt":"Generate a string representation of a binary tree.","completion":"def tree_str(root): if root is None: return '' left_str = tree_str(root.left) right_str = tree_str(root.right) if left_str != '' and right_str != '': return '(' + left_str + ')' + str(root.val) + '(' + right_str + ')' if left_str != '' and right_str == '': return '(' + left_str + ')' + str(root.val) if left_str == '' and right_str != '': return str(root.val) + '(' + right_str + ')' else: return str(root.val)"},{"prompt":"Write a TensorFlow code snippet to build a convolutional neural network and display the results of the training process.","completion":"import tensorflow as tf # define a convolutional neural network model = tf.keras.models.Sequential([ tf.keras.layers.Conv2D(32, (3, 3), activation='relu', input_shape=(28, 28, 1)), tf.keras.layers.MaxPooling2D(2,2), tf.keras.layers.Flatten(), tf.keras.layers.Dense(128, activation='relu'), tf.keras.layers.Dense(10, activation='softmax') ]) # compile and fit model model.compile(optimizer='adam', loss='sparse_categorical_crossentropy', metrics=['accuracy']) model.fit(x_train, y_train, epochs=5) # display results model.evaluate(x_test, y_test) ['loss', 'accuracy'] [0.32971992206192017, 0.8856600217819214]"},{"prompt":"Create a Python code snippet to identify the root cause of a Software Bug.","completion":"def find_causes(data): # identify the root cause of the bug causes = set() for line in data: for cause in line.get('causes', []): causes.add(cause) # filter insignificant causes causes = [cause for cause in causes if cause not in insignificant_causes] return causes"},{"prompt":"Rewrite the following code in a more descriptive style and make it easier to read. for i in range(1, n): for j in range(1, n): if i + j == n: print(i, j)","completion":"for i in range(1, n): for j in range(1, n): # check if the sum of i and j is equal to n if (i + j) == n: print(i, j)"},{"prompt":"Write a code snippet to find all the elements in a list that are greater than a specified number. lst = [1, 5, 10, 15, 27] k = 10","completion":"# Initializing an empty list new_lst = [] # Iterating over the given list for elem in lst: # Appending elements that are greater than 10 if elem > k: new_lst.append(elem) # Printing corresponding result print(new_lst) # Output: [15, 27]"},{"prompt":"Determine if the word \\"hello\\" is present in the provided list. words = [\\"hi\\", \\"goodbye\\", \\"apple\\", \\"orange\\"]","completion":"if \\"hello\\" in words: print(\\"Yes, the word hello is present in the provided list.\\") else: print(\\"No, the word hello is not present in the provided list.\\")"},{"prompt":"Generate a random letter from the string provided. string = \\"Hello World","completion":"import random random_letter = random.choice(string) # Output: a randomly generated letter from the string"},{"prompt":"Print the total number of keys present in a given dictionary. phone_numbers = { \\"John\\" : \\"123-456-7890\\", \\"Jane\\" : \\"890-567-1234\\", \\"Jack\\" : \\"345-678-9012\\" }","completion":"print(len(phone_numbers)) # Output: 3"},{"prompt":"Write a Python program to insert a given string into another string at a certain index. Variable String = \\"The quick brown fox\\" String To Insert = \\"jumps over\\" Index = 16","completion":"The quick brown jumps over fox"},{"prompt":"Find a way to insert the given data into a MongoDB database using Mongoose. data = [ {name: \\"John Doe\\", age: 34}, {name: \\"Jane Smith\\", age: 25} ]","completion":"const mongoose = require('mongoose'); const Schema = mongoose.Schema; const userSchema = new Schema({ name: { type: String }, age: { type: Number } }); const User = mongoose.model('User', userSchema); data.forEach( (user) => { const newUser = new User(user); newUser.save() .then( () => console.log('User saved') ) .catch( err => console.log(err)) });"},{"prompt":"Create a script that filters the list of strings and returns only the strings that contain the specific, user-specified character. User Character: 'a' List: ['apple','peach','pear','tangerine','plum','grape','banana']","completion":"def filter_string(strings, char): result = [] for string in strings: if char in string: result.append(string) return result print(filter_string(['apple','peach','pear','tangerine','plum','grape','banana'], 'a'))"},{"prompt":"Generate a random 2D array with the given dimensions. Rows: 5 Columns: 3","completion":"import numpy as np rows = 5 columns = 3 arr = np.random.randint(0, 11, size=(rows, columns)) print(arr)"},{"prompt":"Change the color of the text to blue. Text: The quick brown fox","completion":"<span style=\\"color:blue;\\">The quick brown fox</span>"},{"prompt":"Find the length of a Python list. List = [1,2,3]","completion":"List = [1,2,3] length = len(List) print(length) # Output 3"},{"prompt":"And the list of product details as a JSON format. products = [ { \\"name\\": \\"iPhone XS\\", \\"price\\": 1000 }, { \\"name\\": \\"iPhone XR\\", \\"price\\": 800 }, { \\"name\\": \\"iPad Air\\", \\"price\\": 600 } ]","completion":"[ { \\"name\\": \\"iPhone XS\\", \\"price\\": 1000 }, { \\"name\\": \\"iPhone XR\\", \\"price\\": 800 }, { \\"name\\": \\"iPad Air\\", \\"price\\": 600 } ]"},{"prompt":"Use the input to write a loop in Python to print each product details. products = [ { \\"name\\": \\"iPhone XS\\", \\"price\\": 1000 }, { \\"name\\": \\"iPhone XR\\", \\"price\\": 800 }, { \\"name\\": \\"iPad Air\\", \\"price\\": 600 } ]","completion":"for product in products: print(\\"Product name: \\" + product['name'] + \\", Price: \\" + str(product['price'])) # Output # Product name: iPhone XS, Price: 1000 # Product name: iPhone XR, Price: 800 # Product name: iPad Air, Price: 600"},{"prompt":"Write a function in Python to remove the element with the value of ‘apple’ from the list. fruits =[\\"banana\\", \\"apple\\", \\"mango\\", \\"orange\\"]","completion":"def removeValue(fruits, elem): for e in fruits: if e == elem: fruits.remove(e) break removeValue(fruits, \\"apple\\") print(fruits) # ['banana', 'mango', 'orange']"},{"prompt":"Edit the following CSS code to make the text red. .message { font-size: 14px; }","completion":".message { font-size: 14px; color: red; }"},{"prompt":"Create a HTML page that shows the data provided in an interactive table. data = [ { \\"id\\": 1, \\"first_name\\": \\"John\\", \\"last_name\\": \\"Doe\\" }, { \\"id\\": 2, \\"first_name\\": \\"Amy\\", \\"last_name\\": \\"Smith\\" }, { \\"id\\": 3, \\"first_name\\": \\"Brian\\", \\"last_name\\": \\"Green\\" } ]","completion":"<html> <head> <title>Interactive Table</title> </head> <body> <table> <thead> <tr> <th>ID</th> <th>First Name</th> <th>Last Name</th> </tr> </thead> <tbody> {% for item in data %} <tr> <td>{{ item.id }}</td> <td>{{ item.first_name }}</td> <td>{{ item.last_name }}</td> </tr> {% endfor %} </tbody> </table> </body> </html>"},{"prompt":"Return the names of the customers that contain the string “ali”.","completion":"SELECT name FROM customers WHERE name LIKE '%ali%';"},{"prompt":"Write a function in Python to generate a list with the numbers from 0 to the provided number. num = 10","completion":"def generateList(n): list = [] for i in range(n+1): list.append(i) return list print(generateList(num)) # [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]"},{"prompt":"Write a SQL query to sort all the customers by their first name in ascending order.","completion":"SELECT * FROM customers ORDER BY first_name ASC;"},{"prompt":"Use the input to generate a loop in JavaScript to print an increasing count starting from the given number. num = 5","completion":"for (let i = num; i < num + 10; i++) { console.log(i); } # Output # 5 # 6 # 7 # 8 # 9 # 10 # 11 # 12 # 13 # 14"},{"prompt":"Rewrite the following linear equation into the standard form y = mx + c: x + 2y = 5","completion":"y = - x/2 + 5/2 This equation can be written in standard form as y = -0.5x + 2.5"},{"prompt":"Design a SQL query to count the number of records in the first 5 rows of the table named \\"users\\".","completion":"SELECT COUNT(*) FROM users LIMIT 5;"},{"prompt":"Write a JavaScript code that creates an array of objects having keys \\"name\\", \\"age\\" and \\"city\\".","completion":"const users = [ {name: 'John', age: 30, city: 'New York'}, {name: 'Lisa', age: 25, city: 'Sydney'}, {name: 'Alex', age: 27, city: 'London'}, {name: 'Cathy', age: 28, city: 'Tokyo'}, {name: 'David', age: 32, city: 'Berlin'} ];"},{"prompt":"w many bytes does a char data type take in C/C++?","completion":"A char data type takes one byte of memory in C/C++."},{"prompt":"Write a Java program to find the area of a triangle where the three sides are given as x, y, and z. x = 6, y = 7, z = 8","completion":"public class AreaOfTriangle { public static void main(String[] args) { int x = 6, y = 7, z = 8; double s = (x + y + z) / 2; double area = Math.sqrt(s * (s - x) * (s - y) * (s - z)); System.out.println(\\"Area of triangle: \\" + area); } }"},{"prompt":"mplement a function in JavaScript that takes an array and returns an object with the count of each element value. array = [true, false, false, true, false, true]","completion":"function countElements(arr) { const obj = {}; arr.forEach(element => { if (obj.hasOwnProperty(element)) { obj[element] += 1; } else { obj[element] = 1; } }); return obj; } const array = [true, false, false, true, false, true]; const countedElements = countElements(array); console.log(countedElements); // { true: 3, false: 3 }"},{"prompt":"Given an array of objects, sort them in descending order according to their age. array = [ {name: 'John', age: 25}, {name: 'Peter', age: 32}, {name: 'Alex', age: 21} ]","completion":"import java.util.Arrays; import java.util.Comparator; public class SortByAge { public static void main(String[] args) { // Array of objects object[] array = { {name: 'John', age: 25}, {name: 'Peter', age: 32}, {name: 'Alex', age: 21} }; // Sorting array of objects by age in descending order Arrays.sort(array, Comparator.comparing(o -> o.age, Comparator.reverseOrder())); // Printing the sorted array of objects System.out.println(\\"Sorted objects array in descending order of age:\\"); Arrays.stream(array) .forEach(e -> System.out.println(e.name + \\" \\" + e.age)); } }"},{"prompt":"Write a Java program to clone an array of objects.","completion":"public class CloneObjectArray { public static void main(String[] args) { // Creating an array of objects Employee[] employees = {new Employee(\\"John\\", 25), new Employee(\\"Tim\\", 30), new Employee(\\"Tom\\", 35)}; // Cloning the array Employee[] clone = employees.clone(); // Printing the current array System.out.println(\\"Employees array:\\"); for (Employee emp : employees) { System.out.println(emp); } // Printing the cloned array System.out.println(\\"Cloned Employees array:\\"); for (Employee emp : clone) { System.out.println(emp); } } } class Employee implements Cloneable { String name; int age; Employee(String name, int age) { this.name = name; this.age = age; } // Override clone method @Override protected Object clone() throws CloneNotSupportedException { return super.clone(); } @Override public String toString() { return this.name + \\" \\" + this.age; } }"},{"prompt":"Design a JSON object containing Book information such as title, author and publication year.","completion":"{ \\"title\\": \\"The Catcher in the Rye\\", \\"author\\": \\"J.D. Salinger\\", \\"publication_year\\": 1951 }"},{"prompt":"Explain what a while loop is.","completion":"A while loop is a control flow statement that repeats a set of instructions while a certain condition is true. It consists of a loop condition and a set of instructions that are to be executed as long as the condition remains true. The loop condition is evaluated first, and if it returns true then the instruction set is executed, after which the condition is evaluated again. This process is repeated until the condition returns false, at which point the loop terminates and execution continues at the statement after the loop."},{"prompt":"Create an algorithm to find the median of a given list of numbers. [2, 5, 7, 4, 3]","completion":"def find_median(list_of_numbers): sorted_list = sorted(list_of_numbers) length = len(sorted_list) if length % 2 == 0: median1 = sorted_list[length // 2] median2 = sorted_list[(length // 2) - 1] median = (median1 + median2) / 2 else: median = sorted_list[length // 2] return median"},{"prompt":"What language do we use to write HTML?","completion":"HTML is written in a markup language known as HyperText Markup Language (HTML). HTML is a language for describing web pages. It is used for structuring and presenting content for the web. It is written in the form of HTML elements consisting of tags enclosed in angle brackets."},{"prompt":"Write a method that produces a random password with the specified number of characters.","completion":"import string import random def generate_password(characters): password = '' for _ in range(characters): password += random.choice(string.ascii_letters + string.digits) return password"},{"prompt":"Generate a list of all pairwise combinations of the numbers in the given list. [1,2,3,4]","completion":"def combinations(list_of_numbers): result = [] for i in range(len(list_of_numbers)): for j in range(len(list_of_numbers)): if i != j: result.append([list_of_numbers[i], list_of_numbers[j]]) return result"},{"prompt":"Why is JavaScript called a multi-paradigm language?","completion":"JavaScript is called a multi-paradigm language because it allows developers to use multiple different programming paradimms such as object-oriented programming, functional programming, event-driven programming, and procedural programming. This flexibility allows developers to have more control over the structure of their code and enables them to write programs in whatever style they desire. It also makes JavaScript more versatile, allowing developers to find the best approach for any given problem."},{"prompt":"mplement a function to calculate the sum of digits of a given positive integer.","completion":"def sum_digits(n): total = 0 while n: total += n % 10 n //= 10 return total"},{"prompt":"Design a Python program to read string inputs and print out the reverse of the same","completion":"def reverse_string(string): string = string[::-1] return string"},{"prompt":"Generate a valid python loop to print out the elements of a list. List = [1,2,3,4,5]","completion":"for element in List: print(element)"},{"prompt":"Find the most suitable 10-lines python code to generate all permutations of a 3 letters word","completion":"from itertools import permutations def all_permutations(str): permList = permutations(str) for perm in list(permList): print(''.join(perm)) if __name__ == \\"__main__\\": string = \\"ABC\\" all_permutations(string)"},{"prompt":"Using this list, write a Python program to print out all the duplicate elements my_list = [1, 2, 3, 2, 4, 3]","completion":"duplicate = [] for value in my_list: if my_list.count(value) > 1: if value not in duplicate: duplicate.append(value) print(duplicate)"},{"prompt":"Create a program in Python which takes any string as an input and prints the number of each of its characters hello","completion":"character_count = {'h':1, 'e':1, 'l':2, 'o':1}"},{"prompt":"Write a snippet of code to swap two variables without using the third variable a = 5 b = 10","completion":"a, b = b, a"},{"prompt":"Generate a valid syntax to remove the last element of a list","completion":"my_list.pop()"},{"prompt":"Construct a program to find the result of the following equation (x-1)^2","completion":"def equation(x): return (x-1)**2"},{"prompt":"Design a Python program which prints the elements in reverse order my_list = [1,2,3,4,5]","completion":"def print_reverse(my_list): for i in range(len(my_list)-1, -1, -1): print(my_list[i]) print_reverse(my_list)"},{"prompt":"put an array and remove all duplicates from the given array. arr = [1, 2, 3, 1, 2]","completion":"def remove_duplicates(arr): result = [] for item in arr: if item not in result: result.append(item) return result print(remove_duplicates(arr)) # Output: [1, 2, 3]"},{"prompt":"put a sentence with repeated words and write a Python code to remove all the repeated words. sentence = 'The the cat cat sat sat on on the the mat'","completion":"def remove_repeated_words(sentence): words = sentence.split(\\" \\") result = [] for word in words: if word not in result: result.append(word) return \\" \\".join(result) print(remove_repeated_words(sentence)) # Output: The cat sat on the mat"},{"prompt":"Write a Ruby method that takes two integers, n and m, as arguments and return an array containing the even numbers from n to m. m = 10 n = 1","completion":"def even_numbers_array(n, m) evens = [] (n..m).each do |i| evens << i if i.even? end evens end p even_numbers_array(n, m) # Output: [2, 4, 6, 8, 10]"},{"prompt":"Create a function in C# that takes a string and returns true if all the characters are unique in the string.","completion":"public static bool IsUnique(string str) { char[] charArray = str.ToCharArray(); HashSet<char> charSet = new HashSet<char>(charArray); return str.Length == charSet.Count; }"},{"prompt":"put two arrays and write a program to merge the two given sorted arrays into one sorted array. arr1 = [3, 5, 7] arr2 = [2, 4]","completion":"def merge_arrays(arr1, arr2): # creating a new list to store the result merged_arr = [] # looping over the two arrays for i in range(len(arr1)): merged_arr.append(arr1[i]) for i in range(len(arr2)): merged_arr.append(arr2[i]) # sorting function to sort the merged array merged_arr.sort() return merged_arr # Driver code new_arr = merge_arrays(arr1, arr2) # to print the sorted merged array print(new_arr) # Output: [2, 3, 4, 5, 7]"},{"prompt":"Create an HTML page that displays one web page with two vertical panenls.","completion":"<html> <head> <style> #left, #right{ height: 300px; width: 200px; float: left; padding: 10px; background-color: #ddd; } </style> </head> <body> <div contenteditable=\\"true\\" id=\\"left\\"></div> <div contenteditable=\\"true\\" id=\\"right\\"></div> </body> </html>"},{"prompt":"Create a TensorFlow 2.0 program that takes a 3D array and normalizes the values by dividing each element by the sum of all elements in the array.","completion":"import numpy as np import tensorflow as tf # Function to normalize a 3D array # by dividing each element by the sum of all elements def normalize3d(arr): # Shape of the array m, n, o = arr.shape # Calculating sum sum_ = np.sum(arr) # Initializing the output array output = np.empty_like(arr) # calculating the normalized value # and storing in output array for i in range(m): for j in range(n): for k in range(o): output[i][j][k] = arr[i][j][k]/sum_ # returning the normalized array return output # Initializing the array arr = np.random.randint(1, 10, (2, 2, 4)) # Using tensorflow method output = tf.expand_dims(tf.constant(arr, dtype=tf.float32), axis=-1) / tf.math.reduce_sum(tf.constant(arr)) # Printing the normalized array using both methods print(normalize3d(arr)) print(output)"},{"prompt":"Generate a PHP program to accept a string as an input and convert it to uppercase.","completion":"<?php str = 'Hello World!'; echo strtoupper(str); // Output: HELLO WORLD! ?>"},{"prompt":"Write a function to check if the given string \`str1\` is a permutation of the string \`str2\` str1 = 'program' str2 = 'gramopr'","completion":"def is_permutation(str1, str2): \\"\\"\\" Function to check if the given string str1 is a permutation of the string str2 Parameters: str1 (str): first string str2 (str): second string Returns: bool: True if str1 is a permutation of str2, False otherwise \\"\\"\\" if (len(str1) != len(str2)): return False else: count = [0] * 128 for i in range(len(str1)): count[ord(str1[i])] +=1 count[ord(str2[i])] -=1 for i in range(128): if count[i] != 0: return False return True"},{"prompt":"What is the most efficient way to insert a new element into an existing unsorted array?","completion":"The most efficient way to insert a new element into an existing unsorted array is to append it to the end of the array. This is the fastest way since no shifting of elements is required. This is O(1) time complexity."},{"prompt":"Format the following array of numbers using Python. arr = [3, 1, 4, 5, 9, 8]","completion":"arr = [3, 1, 4, 5, 9, 8] # sorting the array arr.sort() # print the array print(arr) # Output: [1, 3, 4, 5, 8, 9]"},{"prompt":"Construct a basic data structure to store a dictionary of words and their definitions.","completion":"class WordDictionary(object): def __init__(self): self.words = {} def add_definition(self, word, definition): self.words[word] = definition def lookup_definition(self, word): if word in self.words: return self.words[word] else: return None def delete_word(self, word): del self.words[word]"},{"prompt":"Reverse an array of integers using Python. arr = [1, 2, 3, 4, 5]","completion":"arr = [1, 2, 3, 4, 5] # reversing the array arr.reverse() # print the reversed array print(arr) # Output: [5, 4, 3, 2, 1]"},{"prompt":"What is a common use case for a ternary operator?","completion":"A common use case for a ternary operator is to use it as a shortcut for an if/else statement. A ternary operator can be used to quickly assign the result of a boolean expression to a variable. For example, the following code is similar to an if/else statement: a = 5 b = 10 result = a if a > b else b In this example, if a is greater than b, then result will be assigned the value of a. Otherwise, it will be assigned the value of b."},{"prompt":"ert a comment that explains what the following C++ code does. sum = 0 for (i = 0; i < 10; i++): sum += arr[i]","completion":"// Set \\"sum\\" to 0 // Iterate over the array \\"arr\\", from its 0th element to 9th element // and add each element of the array to the \\"sum\\" at each iteration"},{"prompt":"Rewrite the following Python function so it returns the opposite of the original output. def returnsThree() : return 3","completion":"def returnsThree(): return -3"},{"prompt":"Generate a SQL query to find the names of all users whose credit scores are lower than 50.","completion":"SELECT name FROM users WHERE credit_score < 50"},{"prompt":"Write a SQL query to find the average credit score of users who are 18 years or younger.","completion":"SELECT AVG(credit_score) FROM users WHERE age <= 18"},{"prompt":"Given a SQL table of user accounts, write a SQL query to find the account with the lowest number of login attempts.","completion":"SELECT * FROM users ORDER BY login_attempts ASC LIMIT 1"},{"prompt":"Generate a theta join query to find companies located in a given zip code. Zip Code: 45112","completion":"SELECT * FROM companies c INNER JOIN locations l ON c.company_id = l.company_id WHERE l.zip_code = '45112'"},{"prompt":"Rewrite the following Ruby method using an empty line between each statement. def doubles(array) array.map { |e| e * 2 } end","completion":"def doubles(array) array.map { |e| e * 2 } end"},{"prompt":"Describe the basics of programming for a beginner.","completion":"Programming is the process of writing computer code to create programs that can perform specific tasks or operations. It involves using a programming language to give instructions to a computer to carry out a specific task. A program can involve calculations, data processing, and more complex tasks such as simulation, game-playing, and artificial intelligence. A programmer typically communicates their code in a language that can be understood by the computer, such as HTML, Python, or Java. Programming can be a rewarding and challenging experience, as programmers are often creating something that did not previously exist."},{"prompt":"Write a code for a Javascript program to return the nth Fibonacci number. 8","completion":"// returns the nth Fibonacci number function nthFibonacciNumber(n) { let fib = [0, 1]; for (i=2; i<=n; i++) { fib[i] = fib[i-2] + fib[i-1]; } return fib[n]; } console.log(nthFibonacciNumber(8));"},{"prompt":"Write a code in C to get the greatest common divisor between two numbers. 25, 10","completion":"#include <stdio.h> int gcd(int a, int b) { if (a == 0) return b; return gcd(b % a, a); } // Driver program to test above function int main() { int a = 25, b = 10; printf(\\"GCD of %d and %d is %d \\", a, b, gcd(a, b)); return 0; }"},{"prompt":"w can you create a for loop in Python to loop through a list?","completion":"# loop through a list list = [1, 2, 3, 4, 5] for item in list: print(item)"},{"prompt":"Write a code to reverse a stack and return the new stack. Stack: [1, 2, 3, 4, 5]","completion":"#include<stack> #include<iostream> using namespace std; stack<int> reverseStack(stack<int> s) { stack<int> tempStack; while (!s.empty()) { int temp = s.top(); tempStack.push(temp); s.pop(); } return tempStack; } int main() { stack<int> s; s.push(1); s.push(2); s.push(3); s.push(4); s.push(5); stack<int> revStack = reverseStack(s); while (!revStack.empty()) { cout << revStack.top() << \\" \\"; revStack.pop(); } return 0; }"},{"prompt":"w can you represent an integer in binary?","completion":"Integers can be represented in binary using a series of ones and zeroes. In a binary system, the position of a bit (binary digit) indicates its place value in the number. For example, the rightmost bit has the value of 1, the second-rightmost bit has the value of 2, the third-rightmost bit has the value of 4, and so on."},{"prompt":"Write a code in C# to convert a decimal number to binary format with or without bitwise operators. 15","completion":"public static class Program { public static string DecimalToBinary(int n) { string binary = \\"\\"; int remainder; //without using bitwise operators while (n != 0) { remainder = n % 2; n /= 2; binary = remainder + binary; } return binary; } public static void Main() { string binary = DecimalToBinary(15); Console.WriteLine(binary); } }"},{"prompt":"Create an array of 10 numbers in Java and assign random values from 1 to 10 to each item of the array.","completion":"int[] nums = new int[10]; Random rand = new Random(); for(int i=0; i<nums.length; i++) { nums[i] = rand.nextInt(10) + 1; }"},{"prompt":"What is the maximum limit of frames which a HTML page can hold?","completion":"A HTML page can contain up to 16,000 frames."},{"prompt":"Find the 5th element of the list in Python. list = [12, 34, 87, 90, 80, 21]","completion":"element = list[4] print(element) # 80"},{"prompt":"Write a function in C++ that takes an integer array as a parameter and returns the average value in the array.","completion":"float getAverage(int arr[], int n){ int sum=0; for (int i=0; i<n; i++) sum += arr[i]; return (sum/n); }"},{"prompt":"Extract a numeric value from the following string in Python. myString = \\"The length of the tree is 25 meter","completion":"import re newString = re.findall(r\\"[d.]+\\", myString) print(newString[0]) # 25"},{"prompt":"Write a SQL query to find all the students with a last name beginning with 'D'.","completion":"SELECT * FROM students WHERE last_name LIKE 'D%';"},{"prompt":"Write a CSS property to display an element as a flex item.","completion":"display: flex;"},{"prompt":"Create a tuple containing user data about a person.","completion":"user_data = (\\"John Doe\\", 29, \\"Male\\", \\"New York\\")"},{"prompt":"Find the middle element of a given linked list. 1 -> 2 -> 3 -> 4 -> 5","completion":"The middle element of the linked list is 3."},{"prompt":"Write a regex pattern to find all words that start with 'a' in a sentence. Sentence: \\"All animals are amazing","completion":"\\"\\"\\" Find all words that start with 'a' in a sentence \\"\\"\\" import re def find_words_with_a(sentence): pattern = r\\"b[aA]w+b\\" matches = re.findall(pattern, sentence) return matches if __name__ == '__main__': sentence = \\"All animals are amazing\\" print(find_words_with_a(sentence))"},{"prompt":"Write a function to convert a 3 letter acronym to its full form. Acronym: \\"GDP","completion":"\\"\\"\\" Convert a 3 letter acronym to its full form \\"\\"\\" def acronym_to_full_form(acronym): acronyms = { 'GDP': 'Gross Domestic Product', 'CIA': 'Central Intelligence Agency', 'NASA': 'National Aeronautics and Space Administration' } return acronyms[acronym] if __name__ == '__main__': acronym = \\"GDP\\" print(acronym_to_full_form(acronym))"},{"prompt":"Generate a random password using a given string of characters. String: \\"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ!@#%^&*()","completion":"\\"\\"\\" Generate a random password using a given string of characters \\"\\"\\" import random def generate_password(string): password = '' for _ in range(16): password += random.choice(string) return password if __name__ == '__main__': string = \\"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ!@#%^&*()\\" print(generate_password(string))"},{"prompt":"Given a list of student's grades, write a program to calculate their average. Grades = [90, 95, 80, 75]","completion":"\\"\\"\\" Calculate the average of a given list of grades \\"\\"\\" def average(grades): sum = 0 for grade in grades: sum += grade return sum / len(grades) if __name__ == '__main__': grades = [90, 95, 80, 75] print(average(grades))"},{"prompt":"Assign a numerical value to a given string. \\"Apple","completion":"\\"Apple\\" = 1"},{"prompt":"Create a web form in HTML with two fields - first name and last name","completion":"<form> <label for=\\"firstName\\">First Name</label><br> <input type=\\"text\\" id=\\"firstName\\" name=\\"firstName\\"><br><br> <label for=\\"lastName\\">Last Name</label><br> <input type=\\"text\\" id=\\"lastName\\" name=\\"lastName\\"><br><br> </form>"},{"prompt":"Compose a style sheet in CSS that will make all text with the class \\"blue\\" have a blue color.","completion":".blue { color: blue; }"},{"prompt":"Create a query in SQL to find the product IDs of all items having a given color. color = \\"red","completion":"SELECT product_id FROM products WHERE color = 'red';"},{"prompt":"Design a method in Ruby that can be used to determine if a given number is a prime number or not. number = 7","completion":"def prime?(number) (2..number/2).each do |i| if number % i == 0 return false end end return true end"},{"prompt":"Construct a query in Java to find the last day of the month.","completion":"Calendar now = Calendar.getInstance(); int lastDayOfMonth = now.getActualMaximum(Calendar.DAY_OF_MONTH);"},{"prompt":"Develop a machine learning model in Python to predict the credit risk of a customer based on their bank transaction data. <100 rows of bank transaction data>","completion":"#import necessary models from sklearn.model_selection import train_test_split from sklearn.linear_model import LogisticRegression #split data into train and test sets x_train, x_test, y_train, y_test = train_test_split(bank_data, credit_risk, test_size = 0.3) #create the machine learning model lr_model = LogisticRegression() #train the model lr_model.fit(x_train, y_train)"},{"prompt":"Generate a method in C++ to sort a given array in descending order. arr = [3,5,1]","completion":"void sort_descending(int arr[], int n) { int temp; for (int i=0; i<n; i++) { for (int j=i+1; j<n; j++) { if (arr[i] < arr[j]) { temp = arr[i]; arr[i] = arr[j]; arr[j] = temp; } } } }"},{"prompt":"Write a class in Scala to define dog characteristics such as color, breed, and size.","completion":"class Dog(color:String, breed:String, size:String){ def description = s\\"This dog is a color breed, and is size.\\" }"},{"prompt":"Use HTML and CSS to create a navigation bar on the top of the page.","completion":"<header> <nav> <ul> <li><a href=\\"#\\">Home</a></li> <li><a href=\\"#\\">About</a></li> <li><a href=\\"#\\">Blog</a></li> <li><a href=\\"#\\">Contact</a></li> </ul> </nav> </header> <style> header { background-color: #222; } nav { float: right; margin-right:50px; } ul { list-style-type: none; margin: 0; padding: 0; overflow: hidden; } li { float: left; } li a { display: block; color: white; text-align: center; padding: 14px 25px; text-decoration: none; } li a:hover { background-color: #111; } </style>"},{"prompt":"Write a method that takes a parameter, text, and returns the words in the text in reverse order. text = \\"Hello world!","completion":"def reverse_words(text): words = text.split(\\" \\"); reversedWords = words[::-1]; return \\" \\".join(reversedWords);"},{"prompt":"Analyze the following code and answer the following question: Is there a bug in this code? def foo(num): if num == 0: return 1 else: return foo(num - 1)","completion":"Yes, there is a bug in this code. The function \`foo\` does not have a base case and will cause an infinite recursion if it is called with a non-zero argument. The base case should be if \`num == 0\` then \`return 1\` else \`return foo(num - 1)\`."},{"prompt":"Generate HTML code for a table that displays the result of multiplication for the numbers from 1 to 10.","completion":"<table> <thead> <tr> <th>x</th> <th>1</th> <th>2</th> <th>3</th> <th>4</th> <th>5</th> <th>6</th> <th>7</th> <th>8</th> <th>9</th> <th>10</th> </tr> </thead> <tbody> <tr> <td>1</td> <td>1</td> <td>2</td> <td>3</td> <td>4</td> <td>5</td> <td>6</td> <td>7</td> <td>8</td> <td>9</td> <td>10</td> </tr> <tr> <td>2</td> <td>2</td> <td>4</td> <td>6</td> <td>8</td> <td>10</td> <td>12</td> <td>14</td> <td>16</td> <td>18</td> <td>20</td> </tr> <tr> <td>3</td> <td>3</td> <td>6</td> <td>9</td> <td>12</td> <td>15</td> <td>18</td> <td>21</td> <td>24</td> <td>27</td> <td>30</td> </tr> <tr> <td>4</td> <td>4</td> <td>8</td> <td>12</td> <td>16</td> <td>20</td> <td>24</td> <td>28</td> <td>32</td> <td>36</td> <td>40</td> </tr> <tr> <td>5</td> <td>5</td> <td>10</td> <td>15</td> <td>20</td> <td>25</td> <td>30</td> <td>35</td> <td>40</td> <td>45</td> <td>50</td> </tr> <tr> <td>6</td> <td>6</td> <td>12</td> <td>18</td> <td>24</td> <td>30</td> <td>36</td> <td>42</td> <td>48</td> <td>54</td> <td>60</td> </tr> <tr> <td>7</td> <td>7</td> <td>14</td> <td>21</td> <td>28</td> <td>35</td> <td>42</td> <td>49</td> <td>56</td> <td>63</td> <td>70</td> </tr> <tr> <td>8</td> <td>8</td> <td>16</td> <td>24</td> <td>32</td> <td>40</td> <td>48</td> <td>56</td> <td>64</td> <td>72</td> <td>80</td> </tr> <tr> <td>9</td> <td>9</td> <td>18</td> <td>27</td> <td>36</td> <td>45</td> <td>54</td> <td>63</td> <td>72</td> <td>81</td> <td>90</td> </tr> <tr> <td>10</td> <td>10</td> <td>20</td> <td>30</td> <td>40</td> <td>50</td> <td>60</td> <td>70</td> <td>80</td> <td>90</td> <td>100</td> </tr> </tbody> </table>"},{"prompt":"Create a method to convert a given number to Roman numeral format. num = 2020","completion":"def int_to_roman(num): roman_numerals = { 1: 'I', 4: 'IV', 5: 'V', 9: 'IX', 10: 'X', 40: 'XL', 50: 'L', 90: 'XC', 100: 'C', 400: 'CD', 500: 'D', 900: 'CM', 1000: 'M' } result = '' for n in sorted(roman_numerals.keys(), reverse=True): count = num // n result += roman_numerals[n] * count num %= n return result if __name__ == '__main__': num = 2020 print(int_to_roman(num))"},{"prompt":"Create an algorithm that takes two integers and returns the smallest common multiple of the two numbers. x = 12 y = 24","completion":"def smallest_common_multiple(x, y): for i in range(1, y+1): if (i % x == 0) and (i % y == 0): return i if __name__ == '__main__': x = 12 y = 24 print(smallest_common_multiple(x, y))"},{"prompt":"Create a Python program to calculate the square root of a number provided by the user.","completion":"def square_root(number): \\"\\"\\"This program takes a number and calculates its square root.\\"\\"\\" return number**0.5 num = int(input(\\"Enter a number: \\")) print(\\"The square root of \\", num, \\" is \\", square_root(num))"},{"prompt":"Create a function that takes an array and prints out the biggest number in it. [1, 7, 2, 11, 4]","completion":"def find_max_num(nums_list): \\"\\"\\"This function takes an array and prints out the biggest number in it.\\"\\"\\" max_num = nums_list[0] for num in nums_list: if num > max_num: max_num = num return max_num nums_list = [1, 7, 2, 11, 4] print(find_max_num(nums_list))"},{"prompt":"Given the following array, delete all occurrences of the number 4. list1 = [4, 3, 4, 2, 3, 4, 4]","completion":"list1 = [4, 3, 4, 2, 3, 4, 4] def delete_four(arr): \\"\\"\\"This function deletes all occurrences of the number 4 in the given array\\"\\"\\" for i in range(len(arr)): if arr[i] == 4: arr.pop(i) i -= 1 return arr print(delete_four(list1))"},{"prompt":"Create a database query that shows the average price of all items.","completion":"SELECT AVG(price) FROM items;"},{"prompt":"Create a SQL query that selects the top three most recently purchased products. Table Name: Purchases Columns: Product Name, Date","completion":"SELECT * FROM Purchases ORDER BY Date DESC LIMIT 3;"},{"prompt":"Develop a for loop in Javascript to output integers from 0 to 10","completion":"for (let i = 0; i < 11; i++) { console.log(i); }"},{"prompt":"Write a Java program to replace all non-alphanumeric characters with underscores. Hello, World!","completion":"public class ReplaceNonAlpha { public static void main(String[] args) { String string = \\"Hello, World!\\"; string = string.replaceAll(\\"[^A-Za-z0-9]\\", \\"_\\"); System.out.println(string); } }"},{"prompt":"Construct a C++ code snippet to output a Fibonacci sequence with a given number of elements 7","completion":"#include <iostream> using namespace std; int Fibonacci(int n) { if (n <= 1) return n; return Fibonacci(n - 1) + Fibonacci(n - 2); } int main () { int n; cout<<\\"Enter the number of elements: \\"; cin>>n; cout << \\"Fibonacci sequence: \\"; for (int i = 0; i < n; i++) cout << Fibonacci(i) <<\\" \\"; return 0; } ;"},{"prompt":"Modify the following python program to include a comment explaining the purpose of the code numbers = [1, 2, 3, 4, 5] sum = 0 for num in numbers: sum += num","completion":"# This program is used to calculate the sum of a given list of numbers numbers = [1, 2, 3, 4, 5] sum = 0 for num in numbers: sum += num"},{"prompt":"Analyze the following code and suggest a modification def hello(): print('Hello!')","completion":"# This code prints out \\"Hello!\\" when called. # A modification to include a parameter for a name would be as follows: def hello(name): print('Hello, ' + name + '!')"},{"prompt":"Design a CSS style to make an element a circle and have a red border","completion":"#circle { width: 50px; height: 50px; border-radius: 50%; border: 1px solid red; }"},{"prompt":"Write an SQL query to get the number of customers per country Table Name: Customers Columns: Name, Country","completion":"SELECT Country, COUNT(*) AS NumberOfCustomers FROM Customers GROUP BY Country;"},{"prompt":"Use Swift to print a welcome message in the console","completion":"print(\\"Welcome to Swift!\\")"},{"prompt":"Modify the following JavaScript code to find all of the prime numbers from 1 to 100 for (let i = 1; i <= 10; i++) { console.log(i); }","completion":"for (let i = 1; i <= 100; i++) { let isPrime = true; for (let j = 2; j < i; j++) { if (i % j == 0) { isPrime = false; break; } } if (isPrime) { console.log(i); } }"},{"prompt":"Provide a regular expression to find all the strings that starts with an alphabetical character followed by a sequence of letters, digits, and underscores.","completion":"^[A-Za-z]+w*"},{"prompt":"Write a function to take a list of strings and return true if any element in the list starts with the letter \\"t ['dog', 'turtle', 'car', 'cat']","completion":"true"},{"prompt":"Create a function that processes an array to remove all the duplicated elements [1, 1, 2, 5, 6, 6, 10]","completion":"def remove_duplicates(arr): new_arr = [] for i in arr: if i not in new_arr: new_arr.append(i) return new_arr remove_duplicates([1, 1, 2, 5, 6, 6, 10]) # returns [1, 2, 5, 6, 10]"},{"prompt":"Create a pandas dataframe to display the given data as a table. Name Age City Alice 25 London Bob 32 Tokyo","completion":"import pandas as pd data = [ {'Name': 'Alice', 'Age': 25, 'City': 'London' }, {'Name': 'Bob', 'Age': 32, 'City': 'Tokyo' } ] data_frame = pd.DataFrame(data) print(data_frame) Output: Name Age City 0 Alice 25 London 1 Bob 32 Tokyo"},{"prompt":"Write a SQL query to select customers who have an email address ending with \\".com\\".","completion":"SELECT * FROM customers WHERE email LIKE '%.com'"},{"prompt":"Create a SQL table called \\"products\\" to store information about products.","completion":"CREATE TABLE products ( id INTEGER PRIMARY KEY, name TEXT, description TEXT, price DECIMAL(10,2) );"},{"prompt":"Generate a Python code snippet to print the list of numbers from 0 to 9.","completion":"for i in range(0,10): print(i)"},{"prompt":"Construct an SQL query to list the names of people who live in the \\"Sacramento\\" city.","completion":"SELECT name FROM people WHERE city=\\"Sacramento\\";"},{"prompt":"Modify the given JavaScript code to display \\"Hello World\\" using alert. let message = 'Hi'; alert(message);","completion":"let message = 'Hello World'; alert(message);"},{"prompt":"Devise a Python code snippet to return the last character of a given string. string = \\"stackoverflow","completion":"last_char = string[-1] print(last_char)"},{"prompt":"Construct an HTML form to collect the name, address and phone number of a user.","completion":"<form> <label>Name:</label><br> <input type=\\"text\\" name=\\"name\\"><br> <label>Address:</label><br> <input type=\\"text\\" name=\\"address\\"><br> <label>Phone number:</label><br> <input type=\\"text\\" name=\\"phone\\"><br> <input type=\\"submit\\" value=\\"Submit\\"> </form>"},{"prompt":"Develop a SQL query to delete all entries with discount greater than 10 in the \\"products\\" table.","completion":"DELETE FROM products WHERE discount > 10;"},{"prompt":"Design a C++ program to convert a given number from binary to decimal. <<noinput>>","completion":"#include<iostream> #include<math.h> int BinToDec(long long n) { int decimalNumber = 0, i = 0, remainder; while (n!=0) { remainder = n % 10; n /= 10; decimalNumber += remainder*pow(2,i); ++i; } return decimalNumber; } int main() { long long bNum; std::cout << \\"Enter a binary number: \\"; std::cin >> bNum; int dec = BinToDec(bNum); std::cout << \\"Decimal Representation of \\" << bNum << \\" is \\" << dec << std::endl; return 0; }"},{"prompt":"Construct a HTML form to collect the name , age and gender of the user.","completion":"<form> <label>Name:</label><br> <input type=\\"text\\" name=\\"name\\"><br> <label>Age:</label><br> <input type=\\"text\\" name=\\"age\\"><br> <label>Gender:</label><br> <select name=\\"gender\\"> <option value=\\"male\\">Male</option> <option value=\\"female\\">Female</option> <option value=\\"other\\">Other</option> </select><br> <input type=\\"submit\\" value=\\"Submit\\"> </form>"},{"prompt":"Generate an HTML page which contains the following elements: a heading, a paragraph, and a button.","completion":"<html> <head> <title>My HTML Page</title> </head> <body> <h1>Hello World!</h1> <p>This is a simple HTML page created using code.</p> <button>Click Me!</button> </body> </html>"},{"prompt":"Create a SQL query that returns a list of cities in a given state. state='New York'","completion":"SELECT City FROM List_of_Cities WHERE State='New York'"},{"prompt":"Construct a class to represent a basic calculator with functions for addition, subtraction, multiplication and division.","completion":"class Calculator: def __init__(self): pass def add(self, a, b): return a + b def subtract(self, a, b): return a - b def multiply(self, a, b): return a * b def divide(self, a, b): return a / b"},{"prompt":"Write a function to create a matrix NxN with values of 0 filled in.","completion":"def generate_matrix(n): matrix = [] for _ in range(n): matrix.append([0 for _ in range(n)]) return matrix"},{"prompt":"Design a function to input an array and sort it using QuickSort algorithm.","completion":"def quicksort(arr): if len(arr) <= 1: return arr pivot = arr[len(arr) // 2] left = [x for x in arr if x < pivot] middle = [x for x in arr if x == pivot] right = [x for x in arr if x > pivot] return quicksort(left) + middle + quicksort(right)"},{"prompt":"Create a program for calculating the surface area of a cube.","completion":"def cube_area(length): # Surface area of a cube = 6* (length)^2 return 6* (length**2)"},{"prompt":"Write a function for finding the minimum value in a given array.","completion":"def find_min(arr): min_value = arr[0] for element in arr: if (element < min_value): min_value = element return min_value"},{"prompt":"Write a REGEX pattern to match strings consisting of three numbers separated by a dash.","completion":"^d{1,3}-d{1,3}-d{1,3}"},{"prompt":"Design a function to calculate the GCD (greatest common divisor) of two given integers.","completion":"def gcd(a, b): while b != 0: a, b = b, a % b return a"},{"prompt":"Construct a script that takes inputs from the user and prints out the Fibonacci sequence up to a given number.","completion":"def fibonacci_seq(n): # Start and endpoints for the Fibonacci sequence num1 = 0 num2 = 1 # List to store the sequence Fibonacci_seq = [num1, num2] while num2 < n: num3 = num1 + num2 num1 = num2 num2 = num3 Fibonacci_seq.append(num2) print(Fibonacci_seq)"},{"prompt":"Generate a function in Python to compute the area of a rectangle.","completion":"def area_rectangle(length, breadth): return length * breadth"},{"prompt":"Modify the given line of code to print the message \\"Hello World! print(\\"Good Luck!\\")","completion":"print(\\"Hello World!\\")"},{"prompt":"Create a method to filter out odd numbers from an array. array = [6, 5, 9, 10, 11, 8]","completion":"def filter_odd_numbers(array): result = [] for i in array: if i % 2 == 0: result.append(i) return result # Driver code array = [6, 5, 9, 10, 11, 8] print(filter_odd_numbers(array))"},{"prompt":"Write a Python program to calculate the number of bits needed to represent an integer in binary form.","completion":"def num_of_bits(num): return len(bin(num)[2:]) if __name__ == '__main__': print(num_of_bits(50))"},{"prompt":"Take the following list of temperatures in Celsius and convert them to Fahrenheit. [10, 15, 20, 25, 30]","completion":"def celsius_to_fahrenheit(celsius): return (celsius * (9/5)) + 32 if __name__ == '__main__': temperatures = [10, 15, 20, 25, 30] fahrenheit_temperatures = [] for temp in temperatures: fahrenheit_temperatures.append(celsius_to_fahrenheit(temp)) print(fahrenheit_temperatures)"},{"prompt":"Write a Python code to generate random numbers from the given list. [10, 20, 30, 40]","completion":"import random numbers = [10, 20, 30, 40] random_number = random.choice(numbers) print(random_number)"},{"prompt":"Find the number of occurrences of ‘Python’ in the given string. Python is a great language. Python is easy to learn.","completion":"def count_occurences(str, word): return str.count(word) if __name__ == '__main__': str = 'Python is a great language. Python is easy to learn.' print(count_occurences(str, 'Python'))"},{"prompt":"Generate a SQL query to return a list of customers who ordered more than one item","completion":"SELECT c.id, c.name FROM customers c INNER JOIN orders o ON c.id = o.customer_id GROUP BY c.id, c.name HAVING COUNT(o.order_id) > 1"},{"prompt":"Remove any element from an array that is greater than 10 [3, 5, 10, 20, 7]","completion":"def removeGreaterThanTen(arr): # Create a new_arr array new_arr = [] # Iterate each element in array for i in range(len(arr)): # Check if the element is greater than 10 if arr[i] <= 10: # Add the element to the new_arr new_arr.append(arr[i]) return new_arr"},{"prompt":"Find the largest key in a dictionary {'a':1, 'b':5, 'c':6, 'd':9}","completion":"def findLargestKey(d): # Initialize largest_key and largest_val largest_key = None largest_val = -1 # Iterate each key-value in dictionary for key, value in d.items(): # Initialize largest_key and largest_val if value > largest_val: largest_val = value largest_key = key return largest_key"},{"prompt":"Create a function to get the intersection of two sorted arrays arr1 = [1, 3, 4, 5, 6] arr2 = [3, 5, 7, 8]","completion":"def intersection(arr1, arr2): # Initialize a result array res = [] # Iterate each element of the first array and find in second array for i in range(len(arr1)): for j in range(len(arr2)): # If element is present then append it to result array if arr1[i] == arr2[j]: res.append(arr1[i]) return res"},{"prompt":"Create a function that takes a list and returns a tuple containing the maximum and minimum values of the list. [1, 4, 7, 3, 8]","completion":"def maxMin(arr): # Initialize the maximum and the minimum value maxi = arr[0] mini = arr[0] # Iterate each element in arr to find the maximum and minimum for i in range(1, len(arr)): if arr[i] > maxi: maxi = arr[i] elif arr[i] < mini: mini = arr[i] return (maxi, mini)"},{"prompt":"Write a multi-line comment in Python describing what the following program does. def hello(): print(\\"Hello World\\")","completion":"\\"\\"\\" This program prints \\"Hello World\\" when executed. It defines a function called \\"hello\\" that does not take any parameters and simply prints out \\"Hello World\\" when it is called. \\"\\"\\""},{"prompt":"Write a SQL query to find the average score of students who are aged between 20 and 23.","completion":"SELECT AVG(score) FROM students WHERE age BETWEEN 20 AND 23;"},{"prompt":"Create a Python Exception to handle Nonetype Error.","completion":"try: my_list = [1, 2, 3] my_list[3] except TypeError: print(\\"Error: Nonetype Found\\")"},{"prompt":"Create a variable in Python to store 10 multidimensional arrays.","completion":"arrays = [[[1,2], [3,4]], [[5,6], [7,8]], [[9,10], [11,12]], [[13,14], [15,16]], [[17,18], [19,20]], [[21,22], [23,24]], [[25,26], [27,28]], [[29,30], [31,32]], [[33,34], [35,36]], [[37,38], [39,40]]]"},{"prompt":"Create a function in Java to remove values from an array that are greater than a given number. int[] array = {5, 8, 2, 9, 10, 6};","completion":"public static int[] removeGreater(int [] array, int limit){ return Arrays.stream(array) .filter(x -> x < limit) .toArray(); }"},{"prompt":"Write an HTML program to create a simple page layout.","completion":"<!DOCTYPE html> <html> <head> <title>Simple Page Layout</title> </head> <body> <div>Header Content</div> <div>Body Content</div> <div>Footer Content</div> </body> </html>"},{"prompt":"Create a MongoDB query to get the average salary for all employees.","completion":"db.Employees.aggregate([ { group: { _id: null, average_salary: { avg: \\"salary\\" } } } ])"},{"prompt":"Convert the Python code using the range function in the for loop to a list comprehension statement. my_list = [] for i in range(10): my_list.append(i)","completion":"my_list = [i for i in range(10)]"},{"prompt":"Write a Python code to generate Fibonacci sequence up to 'n' numbers, where 'n' is a given integer.","completion":"def generateFib(n): fib = [0, 1] while len(fib) < n : fib.append(fib[-1] + fib[-2]) return fib[:n]"},{"prompt":"Write a JavaScript code to count the number of occurrences of an input string in a text string. str1 = \\"My name is Mary and my friend's name is Sarah\\" str2 = \\"name","completion":"const countOccurences = (text, str) => { let count = 0; for (let i = 0; i < text.length; i++) { if (text.slice(i, i + str.length) === str) { count++; } } return count; }; countOccurences(str1, str2);"},{"prompt":"Write an SQL command to create a new table called 'users' with three columns: 'user_id', 'fname' and 'lname'.","completion":"CREATE TABLE users ( user_id INT PRIMARY KEY, fname VARCHAR(50), lname VARCHAR(50) );"},{"prompt":"Write a JavaScript code snippet to sort an array of objects by a given property name. var animals = [ {name: \\"cat\\", age: 3}, {name: \\"dog\\", age: 5}, {name: \\"bird\\", age: 1} ];","completion":"animals.sort((a, b) => (a.age > b.age) ? 1 : -1);"},{"prompt":"Write a JavaScript code to print the characters of a string one by one in an alert message. str = \\"Hello World!","completion":"for (let i = 0; i < str.length; i++) { alert(str.charAt(i)); }"},{"prompt":"Replace the \\"TODO\\" comment in the following Python statement with an appropriate value. count = 0 # TODO: add 1 to cou","completion":"count = 0 count += 1"},{"prompt":"Write an SQL query to find the oldest user in the users table.","completion":"SELECT * FROM users ORDER BY age DESC LIMIT 1;"},{"prompt":"the following JavaScript function, edit the function body so that it returns the number stored in the variable 'currentNum' minus 5. function subtractFive(currentNum) { // TODO }","completion":"function subtractFive(currentNum) { return currentNum - 5; }"},{"prompt":"Create a Java program for finding the first non-repeated character in a string. String: hello","completion":"public class NonRepeatedCharacters { static final int NO_OF_CHARS = 256; /* Returns an array of size 256 conaining count of characters in the passed char array */ static int[] getCharCountArray(String str) { int count[] = new int[NO_OF_CHARS]; int len = str.length(); /* Increment count of characters in count[] */ for (int i = 0; i < len; i++) count[str.charAt(i)]++; return count; } /* The function returns index of first non-repeating character in a string. If all characters are repeating then returns -1 */ static int firstNonRepeating(String str) { int count[] = getCharCountArray(str); int index = -1, i; for (i = 0; i < str.length(); i++) { if (count[str.charAt(i)] == 1) { index = i; break; } } return index; } }"},{"prompt":"dentify the class of the given IP address. IP Address: 192.168.1.1","completion":"Class C."},{"prompt":"Create a C++ program for computing the sum of the digits in a number. Number: 1234","completion":"#include <iostream> using namespace std; int getSumOfDigits(int n) { // Base case if (n == 0) return 0; return (n % 10 + getSumOfDigits(n / 10)); } // Driver code int main() { int n = 1234; cout << getSumOfDigits(n) << endl; return 0; }"},{"prompt":"Parse this HTML code and extract the text. <p>This is a pararaph of text<p>","completion":"String text = doc.select(\\"p\\").text(); // text = \\"This is a pararaph of text\\""},{"prompt":"Are these two strings equal? String 1: Hi String 2: H","completion":"Yes, the two strings are equal."},{"prompt":"What is the http status code for \\"Not Found\\"?","completion":"404."},{"prompt":"Create a JSON object for this data. Name: John Age: 25 Gender: Male","completion":"{\\"name\\": \\"John\\", \\"age\\": 25, \\"gender\\": \\"Male\\"}"},{"prompt":"Find the slope of this line. Point 1 (3, 2) Point 2 (6, 4)","completion":"The slope of the line is 0.5."},{"prompt":"Write an angular directive to highlight the selected word in a text.","completion":"myApp.directive('highlight', function() { return { restrict: 'A', link: function(scope, element, attrs) { attrs.observe('highlight', function(word) { var text = element[0].innerHTML; if (word) { var regex = new RegExp('('+ word +'b)', 'gi'); var replacedText = text.replace(regex, '<span class=\\"highlighted\\">1</span>'); element[0].innerHTML = replacedText; } else { element[0].innerHTML = text; } }); } }; });"},{"prompt":"dentify the wrong statement about the recursive function in the given code. def recursive(lr): # base case if lr is None: return for i in lr: recursive(i) # recursive call recursive(lr)","completion":"The function makes a recurrent call at the end of the function, which is redundant."},{"prompt":"Trace the output of the given program. def foo(x, y): if y > 0: return x + y else: return x * y a = foo(2, 3) b = foo(2, -2) print(a, b)","completion":"5 -4"},{"prompt":"Translate the given pseudocode to C programming language. BEGIN int sum, i for i ← 1 to 20 sum ← sum + i end for Print sum END","completion":"#include <stdio.h> int main() { int sum = 0, i; for (i = 1; i <= 20; i++) sum = sum + i; printf(\\"Sum = %dn\\",sum); return 0; }"},{"prompt":"Rewrite the following if-elif-else statement using the ternary operator. if x > y: result = \\"x is greater than y\\" elif x < y: result = \\"x is less than y\\" else: result = \\"x is equal to y","completion":"result = x > y ? \\"x is greater than y\\" : ( x < y ? \\"x is less than y\\" : \\"x is equal to y\\" )"},{"prompt":"Generate a regular expression that matches strings containing any number of digits, but does not contain any non-digit character.","completion":"^[0-9]+"},{"prompt":"Write an AppleScript program to open Calculator app.","completion":"tell application \\"Calculator\\" launch end tell"},{"prompt":"Find the number of prime numbers between 1 and 100.","completion":"25"},{"prompt":"Edit the provided code so that it prints 10 rows and 10 columns of stars. for row in range(5): for col in range(5): print(\\"*\\")","completion":"for row in range(10): for col in range(10): print(\\"*\\", end=\\"\\") print()"},{"prompt":"Edit the given HTML code so that the paragraphs are numbered. <p>These are some sample paragraphs.</p> <p>This is another one.</p>","completion":"<ol> <li><p>These are some sample paragraphs.</p></li> <li><p>This is another one.</p></li> </ol>"},{"prompt":"Generate a unique ID string in Java.","completion":"import java.util.UUID; public class App { public static void main(String[] args) { // generate a unique ID string String uniqueID = UUID.randomUUID().toString(); System.out.println(\\"Unique ID String: \\" + uniqueID); } }"},{"prompt":"Write an SQL query to return the top three highest-scoring players from a table 'scores'.","completion":"SELECT player_name FROM scores ORDER BY score DESC LIMIT 3;"},{"prompt":"Develop a high-level algorithm for pathfinding.","completion":"def find_path(start, end): # Create an empty list to store the path path = [] # Create a dictionary to store visited nodes visited = {start: None} # Create a queue and add the initial space to it queue = [start] # Keep looping until the queue is empty while len(queue) > 0: # Get the first element in the queue curr = queue.pop(0) # Add the current node to the path path.append(curr) # Check if we reached the end of the path if curr == end: return path # Explore all neighbours of the current node for neighbour in get_neighbours(curr): # Check if the neighbour is not visited previously if neighbour not in visited: # Add the neighbour to the queue and mark it as visited queue.append(neighbour) visited[neighbour] = curr # If the queue is empty, there is no path return None"},{"prompt":"Using React, create a component to display a table containing a list of cities.","completion":"const CityTable = ({ cities }) => { const cityRows = cities.map(city => ( <tr key={city.id}> <td>{city.name}</td> <td>{city.population}</td> <td>{city.country}</td> </tr> )); return ( <table> <thead> <tr> <th>Name</th> <th>Population</th> <th>Country</th> </tr> </thead> <tbody>{cityRows}</tbody> </table> ); };"},{"prompt":"Write an expression in Java to calculate the exponential value of a number.","completion":"Math.exp(x)"},{"prompt":"Debug the following Java code snippet to makes sure it is syntactically correct: public class Test { public static void main(String[] args) { int num1 = 0; int num2 = 0; if (num1 = 0) { num2 = 1; } } }","completion":"public class Test { public static void main(String[] args) { int num1 = 0; int num2 = 0; if (num1 == 0) { num2 = 1; } } }"},{"prompt":"Create a regular expression to match a string that contains a number followed by a letter.","completion":"/d[a-zA-Z]/"},{"prompt":"Edit the SQL query to get the users from Canada who joined within the last 6 months. SELECT * FROM user","completion":"SELECT * FROM users WHERE country = 'Canada' AND CAST(DATEDIFF(MONTH, joined_date, GETDATE()) AS INT) <= 6;"},{"prompt":"Write a Python script to convert a given number of minutes into hours and minutes.","completion":"def minutes_to_hours(minutes): hours = minutes // 60 minutes = minutes % 60 return hours, minutes"},{"prompt":"Extract only the digits from a given string using Python.","completion":"import re def extract_digits(string): regex = r\\"D\\" return re.sub(regex, \\"\\", string)"},{"prompt":"Write an HTML code snippet for a form to get two inputs: name and email.","completion":"<form> <label for=\\"name\\">Name:</label> <input type=\\"text\\" id=\\"name\\" name=\\"name\\"> <label for=\\"email\\">Email:</label> <input type=\\"email\\" id=\\"email\\" name=\\"email\\"> <input type=\\"submit\\" value=\\"Submit\\"> </form>"},{"prompt":"Use the given SQL table named 'employess' to find the total number of employees with the gender 'Male'. CREATE TABLE employees ( empid INTEGER, firstname VARCHAR(50) NOT NULL, lastname VARCHAR(50) NOT NULL, gender VARCHAR(6) NOT NULL );","completion":"SELECT COUNT(*) FROM employees WHERE gender = \\"Male\\";"},{"prompt":"Write a JavaScript function to convert the given string to title case.","completion":"function toTitleCase(str) { return str.replace(/wS*/g, function(txt){ return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase(); }); }"},{"prompt":"Look at the given code and find the bug in it. def add_numbers(x,y): return x + y + 1","completion":"The bug in the given code is that it adds 1 extra to the result of the function. To fix this, the return statement should be modified to: return x + y."},{"prompt":"Use the given CSS code to set the color of all h1 elements to blue.","completion":"h1 { color: blue; }"},{"prompt":"Write a React component to display a list of all the countries.","completion":"import React from \\"react\\"; const CountryList = ({ countries }) => { return ( <ul> {countries.map(country => { return <li>{country}</li>; })} </ul> ); }; export default CountryList;"},{"prompt":"Find any errors in the given PHP code. <?php name = “John”; message = “Hello, my name is Name.”; echo message;","completion":"The given PHP code contains an error in the variable name. The variable is written as Name instead of name, so it is not getting replaced with the given value of John. The code should be corrected to: name = \\"John\\"; message = \\"Hello, my name is name.\\"; echo message;"},{"prompt":"Given a string, find the number of times a given character appears in the string. String: \\"Hello World\\" Character: \\"l","completion":"The given character 'l' appears 3 times in the given string \\"Hello World\\"."},{"prompt":"Read the given CSS selector and explain what it does.","completion":"The given CSS selector \\"div > p:not(.special)\\" will select all the <p> elements that are children of <div> which do not have a class of \\"special\\"."},{"prompt":"w would you query a database table using MySQL?","completion":"SELECT * FROM table_name;"},{"prompt":"w can you access the value of a key from a JavaScript object?","completion":"You can access a value from a JavaScript object using either dot notation or square bracket notation. Using dot notation, you can do something like \\"object.key\\", where the key is the name of the property you want to access. Using bracket notation, you can do something like \\"object[\\"key\\"]\\", where the key is a string containing the name of the property you want to access."},{"prompt":"Write a JavaScript code to filter a given array and return only the even numbers. array = [1,2,3,4,5,6,7]","completion":"const even = array.filter(num => num % 2 === 0);"},{"prompt":"w can you validate a credit card number using JavaScript?","completion":"You can validate a credit card number using JavaScript with the Luhn algorithm. The Luhn algorithm is a simple checksum formula that can be used to validate various identification numbers, such as credit card numbers, National Provider Identifier (NPI) numbers, and Canadian Social Insurance Numbers (SINs)."},{"prompt":"Write a C program to add every two elements in an array and print the sum. numbers = [2, 3, 4, 5, 6]","completion":"#include<stdio.h> int main() { int numbers[] = {2, 3, 4, 5, 6}; int size = sizeof(numbers) / sizeof(numbers[0]); int i; int sum; for (i=1; i<size; i+=2) { sum=numbers[i] + numbers[i-1]; printf(\\"sum of %d and %d is %d n\\",numbers[i-1], numbers[i], sum); } return 0; }"},{"prompt":"Write a Python code to sort a given list into descending order.","completion":"def sortDescending(nums): nums.sort(reverse=True) return nums"},{"prompt":"Solve the following problem. Given an array of integers, return an array with the elements multiplied by two. arr = [2, 8, 10, 9]","completion":"def doubleElements(arr): return [num * 2 for num in arr] arr = [2, 8, 10, 9] print(doubleElements(arr)) // [4, 16, 20, 18]"},{"prompt":"Write a C program to find the difference between the maximum and minimum values in an array. arr = {2, 8, 10, 9}","completion":"#include<stdio.h> int diffMaxMin(int arr[], int n) { int max_num = arr[0], min_num = arr[0]; int i; for (i = 0; i < n; i++) { max_num = max_num > arr[i] ? max_num : arr[i]; min_num = min_num < arr[i] ? min_num : arr[i]; } return (max_num - min_num); } int main() { int arr[] = {2, 8, 10, 9}; int n = sizeof(arr) / sizeof(arr[0]); printf(\\"%dn\\", diffMaxMin(arr, n)); return 0; }"},{"prompt":"Calculate the value of PI using the Leibniz formula.","completion":"def calculatePi(): pi = 0.0 N = 10000 sign = 1 for i in range(N): pi += 4.0 * sign / (2.0 * i + 1.0) sign *= -1 return pi print(\\"π = \\", calculatePi()) # 3.141592653589793"},{"prompt":"Write an SQL query to find the names of all employee who have \\"Programmer\\" as their job title.","completion":"SELECT name FROM employee WHERE job_title = 'Programmer';"},{"prompt":"Write a C++ program to print the following sequence: 1, 2, 4, 8, 16, 32, ......","completion":"#include <iostream> using namespace std; int main() { int i, n; for (i = 1; i <= 32; i *= 2) { cout << i << \\" \\"; } return 0; }"},{"prompt":"w do you define and call a function in Python?","completion":"In Python, a function is defined using the \`def\` keyword followed by the function name, a list of parameters and the code block that implements the function. To call a function, you need to provide the name of the function followed by a list of arguments. For example, to define and call a function called \`myfunc\` with an argument \`x\`: def myfunc(x): # function implementation myfunc(x) # call the function with argument x"},{"prompt":"Write a SQL query to get the names and the total number of orders for each customer in a table called 'orders'.","completion":"SELECT c.name, COUNT(o.order_id) AS total_orders FROM customers c INNER JOIN orders o ON c.customer_id = o.customer_id GROUP BY c.name;"},{"prompt":"What is the syntax for performing an instruction inside a loop in JavaScript?","completion":"The syntax for performing an instruction inside a loop in JavaScript is: for (initialization; condition; iteration) { // instruction }"},{"prompt":"what languages can the TensorFlow library be used?","completion":"The TensorFlow library can be used in Python, C++, JavaScript, Java, Go, Swift, and R. It is also supported in different platforms such as iOS, Android, and web browsers."},{"prompt":"Create a GraphQL query that returns all the top five countries in terms of population.","completion":"query { countries(first: 5) { name population } }"},{"prompt":"mplement a bubble sort on the given array of integers. [4, 8, 1, 3, 9]","completion":"def bubble_sort(arr): for _ in range(len(arr) -1): for i in range(len(arr)-1): if arr[i] > arr[i+1]: arr[i], arr[i+1] = arr[i+1], arr[i] return arr print(bubble_sort([4, 8, 1, 3, 9])) # [1, 3, 4, 8, 9]"},{"prompt":"Create a Python script that inputs an integer and prints \\"odd\\" if the number is odd, or \\"even\\" if the number is even.","completion":"def check_even_or_odd(num): if num % 2 == 0: print(\\"even\\") else: print(\\"odd\\") check_even_or_odd(5) # odd"},{"prompt":"Re-implement the same program in a different language of your choice. def quick_sort(arr): if len(arr) < 2: return arr else: pivot = arr[0] less = [i for i in arr[1:] if i <= pivot] greater = [i for i in arr[1:] if i > pivot] return quick_sort(less) + [pivot] + quick_sort(greater)","completion":"def quick sort(arr): if len(arr) < 2: return arr else: pivot = arr[0] left = [x for x in arr[1:] if x <= pivot] right = [x for x in arr[1:] if x > pivot] return quick_sort(left) + [pivot] + quick_sort(right)"},{"prompt":"Create a NodeJS server that listens on port 8080 and serves a simple HTML page.","completion":"const http = require('http'); const port = 8080; const server = http.createServer(function (request, response) { response.writeHead(200, { \\"Content-Type\\": \\"text/html\\" }); response.write('<html><body><h1>Hello, World!</h1></body></html>'); response.end(); }); server.listen(port); console.log(\\"Listening at port\\", port);"},{"prompt":"Edit the following HTML document and add a CSS style to changes the background color to blue. <html> <head> </head> <body> <h1>Hello, World!</h1> </body> </html>","completion":"<html> <head> <style> body { background-color: blue; } </style> </head> <body> <h1>Hello, World!</h1> </body> </html>"},{"prompt":"Create a Python class for a movie instance with name, director, and year fields.","completion":"class Movie: def __init__(self, name, director, year): self.name = name self.director = director self.year = year"},{"prompt":"Create an algorithm to compute the greatest common divisor between two numbers. m = 8, n = 20","completion":"def gcd(m, n): # base case if m == 0: return n # recursive case return gcd(n % m, m) print(gcd(8, 20)) # Output: 4"},{"prompt":"Write a function in C++ that takes in a string of text and removes all the punctuation from the string.","completion":"#include <string> #include <cctype> string remove_punctuation(string s) { string str; for (char c : s) { if (ispunct(c) == false) str.push_back(c); } return str; }"},{"prompt":"Given a list of integers, determine the sum of all of elements in the list. [3, 4, 5, 6]","completion":"def get_sum(nums): total_sum = 0 for num in nums: total_sum += num return total_sum"},{"prompt":"Create a program that will guess a number between 0 and 10.","completion":"import random def guessing_game(): secret_number = random.randint(0, 10) guess = int(input(\\"Guess a number between 0 and 10: \\")) while guess != secret_number: print(\\"Incorrect! Try again.\\") guess = int(input(\\"Guess a number between 0 and 10: \\")) print(\\"Correct!\\")"},{"prompt":"Write an algorithm that takes in two integers and returns true if they are evenly divisible.","completion":"def is_evenly_divisible(x, y): return x % y == 0"},{"prompt":"Read a code that prints out the Fibonacci Series.","completion":"def fibonacci(n): a = 0 b = 1 if n < 0: print(\\"Incorrect input\\") elif n == 0: return a elif n == 1: return b else: for i in range(2,n): c = a + b a = b b = c return b"},{"prompt":"Create a code that recognizes if an inputted string is a palindrome or not.","completion":"def is_palindrome(input_string): rev_input = input_string[::-1] return input_string == rev_input"},{"prompt":"You are given a list of integers and need to calculate the maximum number in the list. [3, 4, 7, 1]","completion":"def get_max(numbers): max_value = numbers[0] for number in numbers: if (number > max_value): max_value = number return max_value"},{"prompt":"Write an algorithm that takes in two numbers and returns the remainder of the first number divided by the second number.","completion":"def get_remainder(x, y): return x % y"},{"prompt":"Read a given code and determine if it contains any errors or not. def factorial(n): product = 1 for i in range(2, 3): product *= i return produc","completion":"true"},{"prompt":"Create a function in JavaScript that squares a given number.","completion":"const square = (num) => { return num * num; }"},{"prompt":"Complete the following function in Python which will return all the numbers in a list between a given minimum and maximum. def getRange(min, max)","completion":"def getRange(min, max): return [i for i in range(min, max+1)]"},{"prompt":"Write a C++ class called Vector3D which can be used to represent a 3D vector with 3 float values.","completion":"#include <iostream> class Vector3D { private: float x, y, z; public: Vector3D(float x, float y, float z) : x(x), y(y), z(z) {} float dotProduct(Vector3D v) { return x * v.x + y * v.y + z * v.z; } };"},{"prompt":"Create a function in JavaScript that calculates the area of a rectangular room given its width and length.","completion":"const calculateArea = (width, length) => { return width * length; }"},{"prompt":"Create a function in Python that prints out all prime numbers between two given numbers.","completion":"def print_primes(start, end): for num in range(start, end): if num > 1: for i in range(2, num): if (num % i) == 0: break else: print(num)"},{"prompt":"Generate the output given the following input to the Python function you wrote in task 11. print_primes(5, 15)","completion":"5 7 11 13"},{"prompt":"Edit the following Java code to create a method which will calculate the area of a rectangle, given its width and length. public class Rectangle { private double width; private double length;","completion":"public class Rectangle { private double width; private double length; public double calculateArea() { return width * length; } }"},{"prompt":"Create a C++ program that asks the user to type their age and will print out an appropriate message to the user.","completion":"#include <iostream> int main() { int age; std::cout << \\"Please type your age: \\"; std::cin >> age; if(age < 12) { std::cout << \\"You are still young!\\" << std::endl; } else if (age < 18) { std::cout << \\"You are a teenager!\\" << std::endl; } else { std::cout << \\"Welcome to adulthood!\\" << std::endl; } return 0; }"},{"prompt":"What is the difference between supervised learning and unsupervised learning?","completion":"Supervised learning is a type of machine learning where the algorithm is given a labelled dataset and its goal is to learn a mapping between the given input and the given output. The labels in the dataset act as a supervisor to guide the algorithm towards its learning path. Unsupervised learning is a type of machine learning where the algorithm is given an unlabelled dataset and its goal is to learn from the data and discover patterns and insights from the data without being given any explicit guidance. The algorithm must learn by itself how to organize the data and extract useful information from it."},{"prompt":"Write a Java program that counts the number of vowels in a given string. String str = \\"This is a test string\\";","completion":"public class VowelCounter { public static int countVowels(String str) { int count = 0; for(int i = 0; i < str.length(); i++) { char currentChar = str.charAt(i); if(currentChar == 'a' || currentChar == 'e' || currentChar == 'i' || currentChar == 'o' || currentChar == 'u') { count++; } } return count; } public static void main(String[] args) { String str = \\"This is a test string\\"; int count = countVowels(str); System.out.println(\\"Number of vowels = \\" + count); } }"},{"prompt":"Explain the practical application of sorting algorithms","completion":"Sorting algorithms are used in many practical applications, such as sorting data in databases, large scale data analysis, and search engine optimization. They are also used in sorting algorithms used in operating system kernels and in finding the shortest path in graph theory. Sorting algorithms can also be used to improve the performance of applications by sorting data according to certain criteria, thus reducing the amount of computation time required. In addition, sorting algorithms are used in designing algorithms for data compression and in machine learning. Generally, sorting algorithms are used to bring data into some form of order so that it can be searched or traversed more easily. By improving the efficiency of data retrieval, sorting algorithms can improve the overall performance of applications."},{"prompt":"Write a code to find the day of the week corresponding to a given date using the calendar module? Day: 25 Month: December Year: 2020","completion":"\\"\\"\\" Find the day of the week corresponding to a given date using calendar module \\"\\"\\" import calendar def get_day_of_week(day, month, year): dayNumber = calendar.weekday(year,month,day) dayName = calendar.day_name[dayNumber] return dayName if __name__ == '__main__': day = 25 month = 12 year = 2020 print(get_day_of_week(day, month, year))"},{"prompt":"Write a SQL query to get all distinct posts with the highest score.","completion":"SELECT DISTINCT Posts.ID, MAX(Posts.Score) FROM Posts GROUP BY Posts.ID;"},{"prompt":"Write a HTML code snippet to create a 4x3 table of no border and gradient.","completion":"<table style=\\"border: none; background: linear-gradient(#ff0000, #00ff00, #0000ff);\\"> <tr> <td>Cell 1</td> <td>Cell 2</td> <td>Cell 3</td> </tr> <tr> <td>Cell 4</td> <td>Cell 5</td> <td>Cell 6</td> </tr> <tr> <td>Cell 7</td> <td>Cell 8</td> <td>Cell 9</td> </tr> <tr> <td>Cell 10</td> <td>Cell 11</td> <td>Cell 12</td> </tr> </table>"},{"prompt":"Name the different levels of accessibility supported in HTML?","completion":"The different levels of accessibility supported in HTML are: A (minimal), AA (structured data and metadata), AAA (full accessibility)."},{"prompt":"w can you write a JavaScript regular expression to validate an email address?","completion":"var re = /^(([^<>()[].,;:s@\\"]+(.[^<>()[].,;:s@\\"]+)*)|(\\".+\\"))@(([^<>()[].,;:s@\\"]+.)+[^<>()[].,;:s@\\"]{2,})/i;"},{"prompt":"What does a negative index signify in a Python array?","completion":"A negative index in a Python array is used to access elements from the end of the array, where the last element of the array is at index -1."},{"prompt":"Edit the following code to remove the syntax error so that the program will run correctly. def double(x): return x * 2","completion":"def double(x): return x * 2"},{"prompt":"Change the following code to accept multiple arguments. func add(a, b) { return a + b; }","completion":"func add(...args) { let result = 0; for (const arg of args) { result += arg; } return result; }"},{"prompt":"Rewrite the following jQuery code to its vanilla JavaScript equivalent. (\\"#list li\\").each(function(){ //some code });","completion":"document.querySelectorAll(\\"#list li\\").forEach(function (el) { //some code });"},{"prompt":"Generate a function \`recursive_sum\` that computes the sum of a list of integers recursively.","completion":"def recursive_sum(lst): # Base case if not len(lst): return 0 return lst[0] + recursive_sum(lst[1:])"},{"prompt":"Calculate the total sum of a given list using an accumulator pattern. numbers = [2, 3, 4]","completion":"numbers = [2, 3, 4] total_sum = 0 # iterate through the list and add each element to the total sum for n in numbers: total_sum += n print(total_sum)"},{"prompt":"Using a while loop, print all numbers between 0 and a given number, 10.","completion":"i = 0 while i <= 10: print(i) i+=1"},{"prompt":"Using list comprehension, create a list of all even numbers from 0 to 10.","completion":"even_numbers = [num for num in range(11) if num % 2 == 0]"},{"prompt":"Extend the given list of numbers by adding all odd numbers from 0 to 10. my_list = [0, 2, 4, 6, 8, 10]","completion":"my_list = [0, 2, 4, 6, 8, 10] my_list.extend([num for num in range(11) if num % 2 != 0])"},{"prompt":"Create a generator expression to print the square of a list of numbers. numbers = [1, 2, 3, 4, 5]","completion":"numbers = [1, 2, 3, 4, 5] # generator expression squares = (num ** 2 for num in numbers) for square in squares: print(square)"},{"prompt":"Utilize regular expressions to parse and return a list of words from a sentence. sentence = \\"The quick brown fox jumps over the lazy dog","completion":"sentence = \\"The quick brown fox jumps over the lazy dog\\" # regular expression import re words = re.findall(r'w+', sentence) print(words)"},{"prompt":"Sort a given dictionary of strings alphabetically. my_dict = {'a':\\"apple\\", 'c':\\"cat\\", 'b':\\"banana\\"}","completion":"my_dict = {'a':\\"apple\\", 'c':\\"cat\\", 'b':\\"banana\\"} # sort the dictionary sorted_dict = {key: my_dict[key] for key in sorted(my_dict.keys())} print(sorted_dict)"},{"prompt":"Compare two arrays for equality [1, 2, 3] [1, 2, 4]","completion":"False"},{"prompt":"Write a for loop that iterates through a list of numbers and prints only the even numbers. [1, 2, 3, 4, 5, 6]","completion":"for i in [1,2,3,4,5,6]: if i % 2 == 0: print(i)"},{"prompt":"Create a class Person with a name, age and gender attributes.","completion":"class Person: def __init__(self, name, age, gender): self.name = name self.age = age self.gender = gender"},{"prompt":"Write a lambda expression to deduct 10 from a number.","completion":"lambda x: x-10"},{"prompt":"Create a dictionary with the item and their corresponding prices. Apple - 2.99 Banana - 0.99","completion":"d = {'Apple': 2.99, 'Banana': 0.99}"},{"prompt":"Construct an appropriate list of even numbers between 0 and 10.","completion":"[0, 2, 4, 6, 8, 10]"},{"prompt":"Remove the first element in a list using slicing. [1, 2, 3, 4, 5]","completion":"list[1:]"},{"prompt":"Write a class to define a car object with the attribute of brand, model and year.","completion":"class Car: def __init__(self, brand, model, year): self.brand = brand self.model = model self.year = year"},{"prompt":"Using the .sort() method, sort an array in ascending order. [5, 3, 9, 1]","completion":"arr.sort()"},{"prompt":"Write a for loop to print out the squared value of each element in the list. [1, 2, 3, 4]","completion":"for i in [1,2,3,4]: print(i*i)"},{"prompt":"Write a function in Python to generate a list of numbers that is the square of all numbers between 1 and the number provided. num = 10","completion":"def generate_square_list(num): result = [] for i in range(1, num+1): result.append(i*i) return result"},{"prompt":"Given a list of sentence fragments, use a loop in Python to print each fragment on a separate line. sentences = [\\"Hello\\", \\"My name is\\", \\"John\\", \\"Nice to meet you!\\"]","completion":"for sentence in sentences: print(sentence)"},{"prompt":"the following Python function, insert code to check if the given number is even or odd. def check_num(num): # TODO if num % 2 == 0: print(\\"Even\\") else: print(\\"Odd\\")","completion":"def check_num(num): assert isinstance(num, int), \\"num must be an integer value\\" if num % 2 == 0: print(\\"Even\\") else: print(\\"Odd\\")"},{"prompt":"Write an SQL query to delete all the records in a table named \\"users\\".","completion":"DELETE FROM users;"},{"prompt":"Create a new class in Python named \\"Employee\\".","completion":"class Employee: def __init__(self): pass"},{"prompt":"Create a MySQL table with three columns \\"name\\", \\"id\\", and \\"age\\".","completion":"CREATE TABLE users ( name VARCHAR(255) NOT NULL, id INT NOT NULL, age INT NOT NULL );"},{"prompt":"Using the comment as a guide, write code in JavaScript to generate a random number between 1 and 10. // TODO","completion":"let randomNumber = Math.floor(Math.random() * 10 + 1);"},{"prompt":"the following code, write a switch statement in JavaScript that identifies whether a number is positive, negative, or zero. num = 5","completion":"switch(num) { case (num > 0): console.log(\\"positive\\"); break; case (num < 0): console.log(\\"negative\\"); break; case (num == 0): console.log(\\"zero\\"); break; default: console.log(\\"Error\\"); break; }"},{"prompt":"Given a list of numbers, write a function in Java to arrange the list in ascending order. nums = [10, 2, 9, 6]","completion":"static int[] sortAscending(int[] nums) { for (int i = 0; i < nums.length-1; i++) { for (int j = 0; j < nums.length-1-i; j++) { if (nums[j] > nums[j+1]) { int temp = nums[j]; nums[j] = nums[j+1]; nums[j+1] = temp; } } } return nums; }"},{"prompt":"Create a Java program to implement the classic Tic Tac Toe game.","completion":"import java.util.Scanner; public class TicTacToe { public static char[][] board = new char[3][3]; public static boolean playerX; public static Scanner scan; public static void main(String[] args) { scan = new Scanner(System.in); playerX = true; initializeBoard(); while(true) { printBoard(); nextMove(playerX); if(checkWinner()) { break; } playerX = !playerX; } } public static void initializeBoard() { for(int i=0;i<3;i++) for(int j=0;j<3;j++) board[i][j] = '-'; } public static void printBoard() { System.out.println(\\"-------------\\"); for (int i = 0; i < 3; i++) { System.out.print(\\"| \\"); for (int j = 0; j < 3; j++) { System.out.print(board[i][j] + \\" | \\"); } System.out.println(); } System.out.println(\\"-------------\\"); } public static void nextMove(boolean player) { if(player) System.out.print(\\"Player X, enter your move row,col: \\"); else System.out.print(\\"Player O, enter your move row,col: \\"); int row = scan.nextInt() - 1; int col = scan.nextInt() - 1; board[row][col] = player ? 'X' : 'O'; } public static boolean checkWinner() { // Horizontal win for(int i=0;i<3;i++) { if(board[i][0] == board[i][1] && board[i][1] == board[i][2]) return true; } // Vertical win for(int j=0;j<3;j++) { if(board[0][j] == board[1][j] && board[1][j] == board[2][j]) return true; } // Diagonal win if(board[0][0] == board[1][1] && board[1][1] == board[2][2]) return true; if(board[2][0] == board[1][1] && board[1][1] == board[0][2]) return true; return false; } }"},{"prompt":"Output the binary representation of a given number. 14","completion":"1110"},{"prompt":"dentify any typos or grammatical errors in this sentence. Emmm, it seemms so.","completion":"typos: \\"seemms\\" grammatical errors: none"},{"prompt":"Fix the bug in this code. def calculate_area(length, width): area = (length * width) if area > 20: return 'Area too large'","completion":"def calculate_area(length, width): area = (length * width) if area > 20: return 'Area too large' else: return area"},{"prompt":"Find the simplest possible way to print \\"Welcome to Tech World!\\" five times.","completion":"for _ in range(5): print(\\"Welcome to Tech World!\\")"},{"prompt":"Calculate the mean of the following list of numbers: 4, 6, 8, 10.","completion":"mean = (4 + 6 + 8 + 10) / 4 = 7.5"},{"prompt":"Add try-catch block for the code below. x = 1 y = 0 print(x / y)","completion":"try: x = 1 y = 0 print(x / y) except ZeroDivisionError: print(\\"Cannot divide by zero!\\")"},{"prompt":"Write a function that prints Fibonacci numbers up to N (N>1).","completion":"def Fibonacci(n): a = 0 b = 1 if n < 0: print(\\"Incorrect input\\") elif n == 0: return a elif n == 1: return b else: for i in range(2, n+1): c = a + b a = b b = c return b"},{"prompt":"Create an array of 5 students and output their names. var students = [ {name: 'John', age: 19}, {name: 'Amy', age: 22}, {name: 'Luke', age: 17}, {name: 'Alex', age: 18}, {name: 'Tom', age: 20} ];","completion":"names = [students[0].name, students[1].name, students[2].name, students[3].name, students[4].name]; console.log(names); // output: ['John', 'Amy', 'Luke', 'Alex', 'Tom']"},{"prompt":"Create a for loop that reads an array of strings and prints each string var strings = [\\"Hello\\", \\"world\\", \\"how\\", \\"are\\", \\"you\\"];","completion":"for(var i=0; i < strings.length ;i++){ console.log(strings[i]); } //output: //Hello //world //how //are //you"},{"prompt":"Create an object with two fields, a name and an id.","completion":"var obj = { name: 'John', id: '12345' };"},{"prompt":"Write a script that sorts an array of numbers from smallest to largest. var numbers = [3, 7, 4, 2, 9, 1];","completion":"numbers.sort(function(a, b){ return a-b }); console.log(numbers); //output: [1, 2, 3, 4, 7, 9]"},{"prompt":"Write a function that takes a string and turns it into all uppercase. var string = 'Hello World';","completion":"function toUpperCase(string) { let upperCaseString = string.toUpperCase(); return upperCaseString; } toUpperCase(string); //output: HELLO WORLD"},{"prompt":"Write a Python function to sort the given array of dictionaries by key value. arr = [{'name': 'Jose', 'age': 32}, {'name': 'Ravi', 'age': 23}, {'name': 'Paul', 'age': 26}]","completion":"def sort_by_key(arr): return sorted(arr, key=lambda i: i['name'])"},{"prompt":"Specify a type for the following variable in C. char c = '&';","completion":"char c = '&'; //Type is char."},{"prompt":"Why is HashTable data structure the best choice for fast lookup operations?","completion":"HashTable data structure is the best choice for fast lookup operations because it stores the data in key-value pairs and uses hashing algorithms to quickly identify the location of the data in memory. With this data structure, lookups can be done in O(1) time complexity, which is much more efficient than other data structures."},{"prompt":"Compress the following data using RLE algorithm. AABBCC","completion":"AABBCC --> A2B2C2"},{"prompt":"Create a function to calculate the Euclidean distance from (x, y) to (a, b).","completion":"def euclidean_distance(x, y, a, b): return np.sqrt((x-a)**2 + (y-b)**2)"},{"prompt":"Provide a solution for displaying another message if the user's input is invalid. name = input('What's your name? ')","completion":"name = input('What's your name? ') if not name.isalpha(): print('Error: Invalid input.')"},{"prompt":"Create a program that outputs the results of an election. votes = [(\\"A\\", 55), (\\"B\\", 43), (\\"C\\", 21)]","completion":"votes = [(\\"A\\", 55), (\\"B\\", 43), (\\"C\\", 21)] total = 0 for name, count in votes: total += count for name, count in votes: print(\\"{}: {:.2f}%\\".format(name, count/total*100)) # Output: # A: 59.77% # B: 47.60% # C: 23.63%"},{"prompt":"Find the running time of this code snippet. list = [2, 5, 1, 6, 9] x = 0 for item in list: x += item","completion":"The running time of this code snippet is O(n), where n is the length of the list."},{"prompt":"Create a Visual Studio Code extension that provides auto-complete features for a specific language.","completion":"This Visual Studio Code extension will create an Auto-Complete Provider for a specific language (e.g. JavaScript, Python, etc.). It will analyze the syntax of a given language and provide word suggestions while typing in the source code. The extension should be able to detect the language type from the file extension and then provide the auto-complete suggestions accordingly."},{"prompt":"Provide the logic for sorting an array of strings alphabetically.","completion":"for i in range(len(arr)): for j in range(i + 1, len(arr)): if arr[i] > arr[j]: arr[i], arr[j] = arr[j], arr[i]"},{"prompt":"Replace the character at the second index with \\"X\\". s = \\"Hello!","completion":"s = \\"Hello!\\" new_str = s[:1] + \\"X\\" + s[2:] print(new_str) # Output: HXllo!"},{"prompt":"Suggest a possible numpy code to normalize a data in the following manner. Normalize the data such that the values lie in the range 0-1.","completion":"import numpy as np def normalize(arr): arr = np.array(arr) return (arr - arr.min()) / (arr.max() - arr.min())"},{"prompt":"Suggest a code to sort the following array of strings. [\\"dinosaur\\", \\"cat\\", \\"dog\\", \\"elephant\\", \\"tiger\\"]","completion":"arr = [\\"dinosaur\\", \\"cat\\", \\"dog\\", \\"elephant\\", \\"tiger\\"] arr.sort()"},{"prompt":"Fill in the __ in the following code to print the reversed string. original_string = \\"Hello World\\" reversed_string = original_string[ __ : __ ] print(reversed_string)","completion":"original_string = \\"Hello World\\" reversed_string = original_string[::-1] print(reversed_string)"},{"prompt":"Construct a code to add a new item to the end of the list. list_of_items = [\\"apple\\", \\"orange\\", \\"cherry\\"]","completion":"list_of_items = [\\"apple\\", \\"orange\\", \\"cherry\\"] list_of_items.append(\\"banana\\")"},{"prompt":"Suggest a python code to print all the even numbers from the given list. list_of_numbers = [11, 22, 31, 37, 44]","completion":"list_of_numbers = [11, 22, 31, 37, 44] for num in list_of_numbers: if num % 2 == 0: print(num)"},{"prompt":"Construct an algorithm to check for palindrome in a given string.","completion":"def is_palindrome(text): rev = ''.join(reversed(text)) return rev == text"},{"prompt":"Suggest a code to iterate a list of numbers and add them to a variable. list_of_numbers = [10, 20, 30, 40]","completion":"list_of_numbers = [10, 20, 30, 40] total = 0 for num in list_of_numbers: total += num"},{"prompt":"Suggest a code to print the last two elements of a list. list_of_items = [\\"apple\\", \\"banana\\", \\"cherry\\", \\"orange\\"]","completion":"list_of_items = [\\"apple\\", \\"banana\\", \\"cherry\\", \\"orange\\"] last_two = list_of_items[-2:] print(last_two)"},{"prompt":"Suggest a code to insert an element at the nth position of a given list. list_of_items = [\\"apple\\", \\"banana\\", \\"grapes\\", \\"mango\\"]","completion":"list_of_items = [\\"apple\\", \\"banana\\", \\"grapes\\", \\"mango\\"] list_of_items.insert(2, \\"pineapple\\")"},{"prompt":"Suggest a code to remove the third element of a list. list_of_items = [\\"apple\\", \\"banana\\", \\"cherry\\", \\"orange\\"]","completion":"list_of_items = [\\"apple\\", \\"banana\\", \\"cherry\\", \\"orange\\"] list_of_items.pop(2)"},{"prompt":"Create a pandas DataFrame based on the given input CSV. EmployeeID,EmployeeName,Salary 1,John,12345 2,David,23456 3,Steve,34567","completion":"import pandas as pd df = pd.read_csv(\\"input.csv\\") print(df)"},{"prompt":"Propose a fast sorting algorithm for a list of integers","completion":"The QuickSort algorithm is a fast sorting algorithm for a list of integers. QuickSort is a divide and conquer algorithm, meaning it divides a list into smaller lists and then sorts and combines the lists. It starts by partitioning the input list around a pivot element, then recursively sorts the two partitions and recombines them. Its average time complexity is O(n log n) with a space complexity of O(n)."},{"prompt":"Construct a regex expression to extract 3 digits in a string","completion":"d{3}"},{"prompt":"Write a code in Java to find the GCD of two numbers","completion":"public static int gcd(int num1, int num2) { if(num2==0) return num1; return gcd(num2, num1%num2); }"},{"prompt":"Design a function to generate the random password","completion":"import random def generate_password(): #Declare a string of all possible characters all_chars = \\"1234567890abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ!@#%^&*()_+=-\`'\\" #Declare the length of password password_len = 8 #Create empty string password = \\"\\" for i in range(password_len): #Generate a random index rand_index = random.randint(0, len(all_chars)-1) #Append character at the index to password password += all_chars[rand_index] return password"},{"prompt":"de a Python program, how would you convert a float number to a string?","completion":"str_number = str(float_number)"},{"prompt":"What should be the output of the following JavaScript statement? let x = 5 + 4","completion":"The output of the statement is 9."},{"prompt":"w to clear the console screen in C++?","completion":"The console screen can be cleared in C++ using the system() command with the clear argument: system(\\"clear\\");"},{"prompt":"Develop a Python function that returns the first two characters of a string. string = \\"GPT-3","completion":"def first_two_chars(string): return string[:2]"},{"prompt":"Construct a block of JavaScript code to find the smallest of 3 numbers","completion":"let num1 = 10; let num2 = 20; let num3 = 15; let smallest = Math.min(num1, num2, num3); console.log(smallest);"},{"prompt":"Construct an SQL query that returns the names of customers from the \\"Customers\\" table whose age is between 20 and 30.","completion":"SELECT name FROM Customers WHERE age BETWEEN 20 and 30;"},{"prompt":"Develop a valid C code to print the array elements. int arr[] = {1,2,3,4,5}","completion":"#include <stdio.h> int main() { int arr[] = {1,2,3,4,5}; int size = sizeof(arr)/sizeof(arr[0]); for (int i = 0; i < size; i++) { printf(\\"%dn\\", arr[i]); } return 0; }"},{"prompt":"Write an SQL statement that returns the salary of the employee with the highest salary of the \\"Employees\\" table.","completion":"SELECT MAX(salary) FROM Employees;"},{"prompt":"w would you edit the following HTML code so that it displays content in two columns? <div> <p>This is the content</p> </div>","completion":"<div> <div style=\\"float: left; width: 50%;\\"> <p>This is the content 1</p> </div> <div style=\\"float: right; width: 50%;\\"> <p>This is the content 2</p> </div> </div>"},{"prompt":"Construct a valid SQL statement to calculate the sum of the \\"price\\" column in the \\"Orders\\" table","completion":"SELECT SUM(price) FROM Orders;"},{"prompt":"Write a SQL query to find all the records in the \\"employees\\" table where the job_title is \\"Software Engineer\\". Table Name: employees Columns: employee_id, job_title","completion":"SELECT * FROM employees WHERE job_title = 'Software Engineer';"},{"prompt":"Reverse a string using a stack. string: hello","completion":"def reverse_string_using_stack(string): stack = [] for char in string: stack.append(char) reversed_string = '' while len(stack) > 0: reversed_string += stack.pop() return reversed_string"},{"prompt":"Create a Java function to remove duplicate characters in a string. string: hello","completion":"public string removeDuplicateChars(String str){ Set<Character> set = new HashSet<Character>(); StringBuffer sb = new StringBuffer(); for (int i = 0; i < str.length(); i++) { Character ch = str.charAt(i); if(!set.contains(ch)) { set.add(ch); sb.append(ch); } } return sb.toString(); }"},{"prompt":"Calculate the distance between two points using Pythagoras theorem. Point A: (3, 4) Point B: (7, 8)","completion":"distance = sqrt((7-3)^2 + (8-4)^2) = sqrt(16 + 16) = sqrt(32) = 5.657"},{"prompt":"Create a jQuery function to detect when a page is scrolled.","completion":"(window).scroll(function() { console.log('Scroll detected'); });"},{"prompt":"Create an RNN model to classify emails into spam and not spam.","completion":"#imports import tensorflow as tf from tensorflow.keras.layers import Embedding, LSTM, Dense, Dropout #Model model = tf.keras.models.Sequential([ Embedding(vocab_size, embedding_dim, input_length = max_len), LSTM(128), Dense(64, activation = 'relu'), Dropout(0.25), Dense(1, activation = 'sigmoid') ])"},{"prompt":"Create a CSS style to set the font color to red for a heading element.","completion":"h1 { color: red; }"},{"prompt":"Write an algorithm for sorting a given array of numbers. array: [2, 5, 3, 4, 1]","completion":"function sort(array) { for (let i = 0; i < array.length - 1; i++) { for (let j = 0; j < array.length - i - 1; j++) { if (array[j] > array[j+1]) { let temp = array[j]; array[j] = array[j+1]; array[j+1] = temp; } } } return array; }"},{"prompt":"Create a JavaScript object with 3 keys and 3 values.","completion":"const myObject = { key1: 'value1', key2: 'value2', key3: 'value3' }"},{"prompt":"Write a function that calculates surface area of a regular 3D-pyramid. Let the base of the pyramid is 5 meters and its height is 8 meter","completion":"def surface_area_pyramid(base_length, height): area_of_base = base_length * base_length side_of_base = (base_length ** 2 + height ** 2) ** 0.5 area_of_sides = (side_of_base * base_length) * 4 return area_of_base + area_of_sides"},{"prompt":"Format this JavaScript code in a readable way. function foo(){console.log(\\"this is a test\\")}","completion":"function foo() { console.log(\\"this is a test\\"); }"},{"prompt":"Write a JavaScript program to calculate the exponential for a given base and exponent. Base = 3, exponent=4","completion":"function calculateExponential(base, exponent) { let result = 1; for (let i = 0; i < exponent; i++) { result *= base; } return result; }"},{"prompt":"Develop a solution to this algorithm problem. Given an int array A, find the min absolute difference between any two of its elements.","completion":"def minAbsDifference(arr): min_difference = float(\\"inf\\") for i in range(len(arr)): for j in range(i+1,len(arr)): diff = abs(arr[i] - arr[j]) if diff < min_difference: min_difference = diff return min_difference"},{"prompt":"Rewrite this C++ function in Python int max (int a, int b) { if (a > b) return a; else return b; }","completion":"def max(a, b): if a > b: return a else: return b"},{"prompt":"Design a program that produces the following output: . . . . . . . . . . . . . . . . . . . . .","completion":"#include <iostream> int main() { for (int i=0; i<17; i++) { std::cout << \\".\\"; } std::cout << std::endl; return 0; }"},{"prompt":"Write a Python code to print the following output: day temperature Monday 20 Tuesday 25","completion":"print(\\"day temperature\\") print(\\"Monday 20\\") print(\\"Tuesday 25\\")"},{"prompt":"w can we set a variable in C++?","completion":"In C++, we can set a variable in two ways: 1. By using an assignment operator (=), for example: int x = 5; 2. By using the declaration of the variable, for example: int x; x = 5;"},{"prompt":"Write a code to flatten a two-dimensional list into one-dimensional list in Python. Two-dimensional List: [[1,2], [3,4], [5,6]]","completion":"def flatten_2d_list(lst): flat_list = [] for elem in lst: for item in elem: flat_list.append(item) return flat_list test_list = [[1,2], [3,4], [5,6]] print(flatten_2d_list(test_list))"},{"prompt":"w can we dynamically add an element to a set in Python?","completion":"In Python, we can dynamically add an element to a set using the add() method. For example, s = set() s.add(4) print(s)"},{"prompt":"Write a Java program to find the second most frequent character in a string. String: \\"Hello World!","completion":"public class SecondMostFrequent { public static char findSecondMostFrequent(String str) { int[] counts = new int[26]; for(int i = 0; i < str.length(); i++) counts[str.charAt(i)- 'a']++; int index = 0; int max_count = 0; for(int i = 0; i < str.length(); i++) { if(counts[str.charAt(i) - 'a'] > max_count) { max_count = counts[str.charAt(i) - 'a']; index = i; } } int sec_max = 0; int sec_index = 0; for(int i = 0; i < str.length(); i++) { if(counts[str.charAt(i) - 'a'] > sec_max && counts[str.charAt(i) - 'a'] < max_count) { sec_max = counts[str.charAt(i) - 'a']; sec_index = i; } } return str.charAt(sec_index); } public static void main(String args[]) { String str = \\"hello world!\\"; System.out.println( findSecondMostFrequent(str)); } }"},{"prompt":"Change the following list of strings to uppercase in Python. List: ['one', 'two', 'three']","completion":"list_strings = [\\"one\\", \\"two\\", \\"three\\"] list_strings = [string.upper() for string in list_strings] print(list_strings)"},{"prompt":"Describe what is polymorphism in Java.","completion":"In Java, polymorphism is a programming concept that allows the same code to be used to perform different tasks. This is achieved by assigning different behaviors to different objects that share a common base class. Thus, when a method is invoked, the runtime determines which version of the method should be executed by examining the object on which the method is called."},{"prompt":"w can we create an array of ten zeroes in JavaScript?","completion":"In JavaScript, we can create an array of ten zeroes using the Array.from() method. For example: const array = Array.from({length: 10}, () => 0); console.log(array);"},{"prompt":"Create a python function that computes the area of a rectangle given the length and width.","completion":"def calculateRectangleArea(length, width): area = length * width return area"},{"prompt":"Generate a random 29 character hexadecimal string using javascript.","completion":"function generateRandomHexString(length) { let result = ''; const characters = '0123456789ABCDEF'; for (let i = 0; i < length; i++) { result += characters.charAt(Math.floor(Math.random() * characters.length)); } return result; } let hexString = generateRandomHexString(29); console.log(hexString);"},{"prompt":"Create a regular expression that matches strings that start with a certain prefix, followed by two or more numbers, and ending with two or more alphabet characters. prefix = \\"ABC","completion":"import re prefix = \\"ABC\\" pattern = re.compile('^' + prefix + 'd{2,}[A-Za-z]{2,}')"},{"prompt":"Create a SQL query to update the 'name' on table 'employees' with the value 'User 1' where the id is 1.","completion":"UPDATE employees SET name = 'User 1' WHERE id = 1;"},{"prompt":"Edit the program below to print out the square root of a number. #include <iostream> int main() { int number; std::cout << \\"Enter an integer: \\"; std::cin >> number; // Add code to print square root of the number return 0; }","completion":"#include <iostream> #include <cmath> int main() { int number; std::cout << \\"Enter an integer: \\"; std::cin >> number; // Add code to print square root of the number std::cout << \\"Square root of \\" << number << \\" is: \\" << sqrt(number) << std::endl; return 0; }"},{"prompt":"Design a JavaScript program that takes two numbers as input and prints their sum.","completion":"// Define a function to add two numbers function addTwoNumbers(num1, num2){ return num1 + num2; } // Main program // Get two numbers from user let num1 = prompt(\\"Enter the first number to add:\\"); let num2 = prompt(\\"Enter the second number to add:\\"); // Call the function to get the sum let sum = addTwoNumbers(num1, num2); // Print result to the user console.log(\`The sum of {num1} and {num2} is: {sum}\`);"},{"prompt":"Create a recursive SQL query to find the level of each node in a tree structure. WITH RECURSIVE tree_levels (node, parent, level) AS ( SELECT node, parent, 0 FROM root_table WHERE parent IS NULL UNION ALL SELECT child.node, child.parent, tree_levels.level + 1 FROM root_table AS child JOIN tree_levels ON child.parent = tree_levels.node )","completion":"SELECT tree_levels.node, tree_levels.level FROM tree_levels ORDER BY tree_levels.node;"},{"prompt":"Create an algorithm to classify a given set of data into three classes.","completion":"from sklearn.neighbors import KNeighborsClassifier import numpy as np # X is the training data X = np.array([[0, 0], [1, 1], [1, 0], [0, 1], [1, 2], [2, 1], [2, 2]]) # y is the labels of the classes y = np.array([0, 0, 1, 1, 2, 2, 2]) # Create the model model = KNeighborsClassifier(n_neighbors=3) # Fit the model using the training data model.fit(X, y) # Use the model to make predictions prediction = model.predict([[2, 3]]) print(prediction)"},{"prompt":"Write a Python script to compute Pi to the Nth digit.","completion":"import math n = int(input(\\"Enter the number of digits of pi to compute: \\")) # Compute pi to nth decimal place pi = round(math.pi, n) print(\\"The value of pi to {0} decimal places is: {1}\\".format(n, pi))"},{"prompt":"Create a query to find all unique combinations of size two in a given list. [1, 2, 3, 4]","completion":"SELECT DISTINCT a.val AS val1, b.val AS val2 FROM myTable a JOIN myTable b ON a.id <> b.id WHERE a.val IN (1,2,3,4) AND b.val IN (1,2,3,4) ORDER BY a.val, b.val;"},{"prompt":"Create an algorithm to calculate the mean, mode and median in a given set of numbers.","completion":"def mean(nums): return sum(nums)/len(nums) def mode(nums): countDict = {} for num in nums: if num in countDict: countDict[num] += 1 else: countDict[num] = 1 maxValue = 0 maxKey = -1 for key, value in countDict.items(): if value > maxValue: maxValue = value maxKey = key return maxKey def median(nums): nums.sort() if len(nums) % 2 == 0: return (nums[len(nums)//2] + nums[len(nums)//2-1])/2 else: return nums[(len(nums)-1)//2] if __name__ == '__main__': nums = [1,2,2,2,3,4,5] print(\\"Mean: \\", mean(nums)) print(\\"Mode: \\", mode(nums)) print(\\"Median: \\", median(nums))"},{"prompt":"Create a JavaScript function that takes in two arrays of numbers, and returns an array containing only the numbers that appear in both arrays. arr1 = [1, 2, 3, 4, 5]; arr2 = [3, 4, 5, 6, 7]","completion":"function containsSameNumbers(arr1, arr2) { const intersection = []; for (let i = 0; i < arr1.length; i++) { if (arr2.includes(arr1[i])) { intersection.push(arr1[i]); } } return intersection; } containsSameNumbers(arr1, arr2); // Output: [3, 4, 5]"},{"prompt":"Python, create a function that takes a string as an argument and returns a string with the vowels replaced with an asterisk (*).","completion":"def replace_vowels(string): vowels = \\"aeiou\\" result = \\"\\" for char in string: if char in vowels: char = \\"*\\" result += char return result"},{"prompt":"What is the purpose of the \`sort()\` JavaScript array method?","completion":"The sort() JavaScript array method is used to sort the elements of an array in place and returns the sorted array. The default sort order is ascending according to the string Unicode code points."},{"prompt":"Design an HTML form that allows the user to submit his/her contact details.","completion":"<form action=\\"contactaction.php\\" method=\\"post\\"> <label for=\\"name\\">Name:</label> <input type=\\"text\\" name=\\"name\\"> <br> <label for=\\"email\\">Email:</label> <input type=\\"email\\" name=\\"email\\" placeholder=\\"example@domain.com\\"><br> <label for=\\"phone\\">Phone:</label> <input type=\\"tel\\" name=\\"phone\\" placeholder=\\"123-456-7890\\"><br> <input type=\\"submit\\" value=\\"Submit\\"> </form>"},{"prompt":"Create a JavaScript function that takes a positive integer as an argument and returns the first prime number larger than that integer. num = 10","completion":"function nextPrime(num) { let isPrime = true; let nextNum = num + 1; while (isPrime) { for (let i = 2; i < nextNum; i++) { if (nextNum % i === 0) { nextNum++; isPrime = false; break; } } if (isPrime) { return nextNum; } } } nextPrime(num); // Output: 11"},{"prompt":"Create a JavaScript object with two properties, \`name\` and \`age\`, and two methods \`sayHello\`, which logs \\"Hello\\" to the console, and \`addOneToAge\`, which increments the \`age\` by one.","completion":"const user = { name: 'John', age: 20, sayHello: function() { console.log('Hello'); }, addOneToAge: function() { this.age++; } }"},{"prompt":"Write a CSS style sheet to make all \`<h2>\` headings have a blue background and white text.","completion":"h2 { background-color: blue; color: white; }"},{"prompt":"JavaScript, write 3 lines of code to define a function \`add()\` which will take two numbers as arguments and returns their sum.","completion":"function add(a, b) { let sum = a + b; return sum; }"},{"prompt":"Bash, write a command line to create a directory called \`myFolder\` in the current working directory.","completion":"mkdir myFolder"},{"prompt":"Python, write a function to print out a sequence of numbers from 1 to 10.","completion":"def print_sequence(): for i in range(1, 11): print(i) print_sequence() # Output: 1 2 3 4 5 6 7 8 9 10"},{"prompt":"w can you generate a random number in the range of 1 to 10 in Python?","completion":"import random random_number = random.randint(1, 10)"},{"prompt":"Convert the following 10 bytes data into a string. b\\"x00x0fx14x03x11x07x08x13x05x10","completion":"data = b\\"x00x0fx14x03x11x07x08x13x05x10\\" output_string = data.decode() print(output_string) # Output: \\"ؐءؔ؃ؗ؈ؓ\\""},{"prompt":"What is a MongoDB document?","completion":"A MongoDB document is a record in a NoSQL database that is represented in the form of a JSON-like structure. It contains a set of key-value pairs where each key is associated with a specific value. Documents can also be nested and can contain arrays and other documents."},{"prompt":"Write a function to split a string of words by comma. string = 'apple,orange,banana,grapes'","completion":"def split_by_comma(string): return string.split(\\",\\")"},{"prompt":"Calculate the maximum element in the given list. my_list = [2, 1, 7, 5, 3]","completion":"def max_element(my_list): max_num = my_list[0] for num in my_list: if num > max_num: max_num = num return max_num"},{"prompt":"Write a JavaScript program to accept two numbers from the user and multiply them.","completion":"let num1 = prompt('Enter the first number:'); let num2 = prompt('Enter the second number:'); let result = parseInt(num1) * parseInt(num2); console.log(\`The product of {num1} and {num2} is {result}\`);"},{"prompt":"Create a report in PDF format that displays the most frequent words used in the New York Times articles.","completion":"import nltk from nltk.sentiment.vader import SentimentIntensityAnalyzer from textblob import TextBlob from nltk.tokenize import word_tokenize from nltk.tokenize import sent_tokenize from nltk.probability import FreqDist import matplotlib import matplotlib.pyplot as plt from matplotlib.backends.backend_pdf import PdfPages def get_top_words(string): tokenized_words = word_tokenize(string) freqdist = FreqDist(tokenized_words) return freqdist.most_common(15) # Download nltk dependencies # nltk.download('punkt') # nltk.download('vader_lexicon') # Scrape news articles articles = scrape_nyt() # Get top words top_words = [] for article in articles: top_words.append(get_top_words(article)) # Create PDF report pp = PdfPages('nyt_word_freq.pdf') plt.figure(figsize=(15,10)) plt.bar(*zip(*top_words)) plt.xticks(rotation=90) pp.savefig() pp.close()"},{"prompt":"Construct an algorithm to predict the next 3 days' stock market movements given the stock prices from the past 5 days. [69.04, 67.07, 68.3, 68.91, 70.09]","completion":"def predict_stock_movements(data): # Initialize empty list to store predicted values predictions = [] # Iterate over the given data for i in range(len(data)-2): # Calculate the average of the 5 days avg = sum(data[i:i+3])/3 # Calculate the current and past day market movement curr_mov = data[i+2] - data[i+1] past_mov = data[i+1] - data[i] # Predict the next day prediction = avg + curr_mov + past_mov predictions.append(prediction) return predictions"},{"prompt":"Create a program to determine whether a given sequence is an arithmetic progression or not. [-6, -2, 2, 6]","completion":"def is_arithmetic_progression(arr): # Check if the given array is empty if len(arr) == 0: return False # Initialize the common difference and the first element commonDifference = arr[1] - arr[0] firstElement = arr[0] # Iterate over the array for i in range(len(arr)): if arr[i] != firstElement + (i * commonDifference): return False # If all elements are in an arithmetic progression return True"},{"prompt":"Construct a classifier to identify which programming language a given code snippet belongs to. def foo(x, y): return x + y","completion":"from sklearn.feature_extraction.text import CountVectorizer from sklearn.naive_bayes import MultinomialNB def get_features(code): # Count the words in the code vectorizer = CountVectorizer(token_pattern=r\\"(?u)bw+b\\") count_vectors = vectorizer.fit_transform([code]) return count_vectors.toarray() def classify_language(code): # Training data data = [(\\"Python\\", \\"def foo(x, y):n return x + y\\"), (\\"Java\\", \\"public int foo(int x, int y) {n return x + y;n }\\"), (\\"C++\\", \\"int foo(int x, int y) {n return x + y;n }\\"), (\\"JavaScript\\", \\"function foo(x, y) {n return x + y;n }\\")] languages, codes = zip(*data) # Extract features from the code X_train = [get_features(c) for c in codes] # Train a classifier clf = MultinomialNB().fit(X_train, languages) # Extract features from the given code X_input = get_features(code) # Predict the language return clf.predict([X_input])[0]"},{"prompt":"Write a function to implement the Levenshtein Distance algorithm. The Levenshtein Distance algorithm calculates the minimum number of single-character edits (insertions, deletions, or substitutions) necessary to transform one string into another string. \\"cats\\", \\"dog","completion":"def levenshtein_distance(str1, str2): # Create a matrix for storing the distances m = [[0 for x in range(len(str2) + 1)] for x in range(len(str1) + 1)] # Mark the first Edit Distance value as 0 m[0][0] = 0 # Iterate over the matrix for i in range(0, len(str1) + 1): for j in range(0, len(str2) + 1): # If we are at the first row or first col, mark the cells with corresponding numbers if i == 0: m[i][j] = j elif j == 0: m[i][j] = i # Otherwise, calculate the distance according to the formula else: if str1[i-1] == str2[j-1]: m[i][j] = m[i-1][j-1] else: m[i][j] = min(m[i-1][j], m[i-1][j-1], m[i][j-1]) + 1 # Return the last element in the matrix, which is the Levenshtein Distance return m[-1][-1]"},{"prompt":"Write a Python script that uses regular expressions to check whether a given URL is correctly formatted or not.","completion":"import re def is_valid_url(url): # Check if the URL is valid using a regex regex = re.compile(r\\"^(?:http|ftp)s?://([^/]+[.])*[^/]+/?.*\\") if regex.match(url): return True return False"},{"prompt":"Write a function to remove duplicate elements from a list keeping only the first occurrence of each element. [1, 2, 3, 3, 3, 4, 4, 5]","completion":"def remove_duplicates(nums): # Create a list to store the first occurrence of each number seen = [] # Iterate over the list for num in nums: # If the number is not in the seen list, add it if num not in seen: seen.append(num) return seen"},{"prompt":"Create a function that takes a list of strings as input and returns a string of the list sorted in the alphabetical order. [\\"apple\\", \\"banana\\", \\"cherry\\"]","completion":"def sort_strings_alphabetically(words): # Use the built-in sorted() function to sort the list of strings sorted_words = sorted(words) # Join the sorted list of words separated by spaces return \\" \\".join(sorted_words)"},{"prompt":"Modify the following code so that it prints the reversed version of a list. list1 = [1, 2, 3, 4, 5] def print_reverse_list(my_list)","completion":"list1 = [1, 2, 3, 4, 5] def print_reverse_list(my_list): my_list.reverse() print(my_list)"},{"prompt":"Create a valid JSON string which contains the following elements name: John age: 32 city: New York","completion":"{ \\"name\\": \\"John\\", \\"age\\": 32, \\"city\\": \\"New York\\" }"},{"prompt":"Suggest a method to run a python program from an interactive terminal session.","completion":"The simplest way to run a python program from an interactive terminal session is to use the \\"python\\" command. For example, if you have a file called \\"myprog.py\\", you can type \\"python myprog.py\\" at the command line and the program will be executed. Alternately, you can use the \\"execfile\\" command, which takes a file name as an argument and executes it."},{"prompt":"Create a class representing a car","completion":"class Car: def __init__(self, make, model, year, engine_size): self.make = make self.model = model self.year = year self.engine_size = engine_size"},{"prompt":"Suggest a way to check if a given string contains alphanumeric characters","completion":"The simplest way to check if a given string contains alphanumeric characters is to use the built-in isalnum() method which will return True if the string contains at least one alphanumeric character and False otherwise. Example: my_string = 'Hello123' if my_string.isalnum(): print('Contains alphanumeric characters') else: print('Does not contain alphanumeric characters')"},{"prompt":"Modify the following code to insert the element 'x' into the list at position 'index' list1 = [1, 2, 3, 4, 5] x = 6 index = 3","completion":"list1 = [1, 2, 3, 4, 5] x = 6 index = 3 list1.insert(index, x)"},{"prompt":"Create a class in Java to build a singly linked list.","completion":"public class SinglyLinkedList { Node head; // head of list // Linked list Node. // This inner class is made static // so that main() can access it static class Node { int data; Node next; Node(int d) { data = d; next = null; } // Constructor } public void printList() { Node n = head; while (n != null) { System.out.print(n.data + \\" \\"); n = n.next; } } public void push(int new_data) { Node new_node = new Node(new_data); new_node.next = head; head = new_node; } }"},{"prompt":"Create a SQL query to select only the rows with an age greater than 10. Table Name: users Columns: name, age","completion":"SELECT * FROM users WHERE age > 10;"},{"prompt":"Create a regex expression to match with a specific format of email address.","completion":"/([a-zA-Z0-9_-.]+)@([a-zA-Z0-9_-.]+).([a-zA-Z]{2,5})/"},{"prompt":"Retrieve unique values from a list of integers. List: [3, 5, 7, 3, 4, 6, 7, 8]","completion":"[3, 5, 7, 4, 6, 8]"},{"prompt":"Perform sentiment analysis on the following sentence and indicate if it is positive or negative. Sentence: I had a really bad experience at the shop.","completion":"Negative sentiment."},{"prompt":"Create a matrix in R and fill it with random numbers. Size: 4 x 5","completion":"matrix2 <- matrix(runif(n = 20, min = 0, max = 10), nrow = 4, ncol = 5)"},{"prompt":"Convert the following hex color to RGB. Hex Color: #4286f4","completion":"RGB(66, 134, 244)"},{"prompt":"Create a bash script to print the version of python installed in the computer.","completion":"#!/bin/bash python --version"},{"prompt":"mplement a constructor to create an account class Accou","completion":"def __init__(self, name, balance): self.name = name self.balance = balance"},{"prompt":"Generate a regular expression to match the following patterns wxyz - w:[a-c] x:[0-9] y:[a-z] z:[A-Z]","completion":"^[a-c][0-9][a-z][A-Z]"},{"prompt":"dentify the time complexity for the following piece of code arr = [5, 2, 4, 8, 1] for i in range (len(arr)): for j in range (len(arr))","completion":"O(n^2)"},{"prompt":"Generate valid HTML for a table with three columns","completion":"<table> <tr> <th>Column1</th> <th>Column2</th> <th>Column3</th> </tr> </table>"},{"prompt":"mplement a function to remove all occurrences of an element in a given list","completion":"def remove_element(list, element): return [x for x in list if x != element]"},{"prompt":"Generate a valid JSON object for a user","completion":"{ \\"full_name\\": \\"\\", \\"age\\": 0, \\"address\\": { \\"street\\": \\"\\", \\"city\\": \\"\\", \\"state\\": \\"\\" } }"},{"prompt":"Recognize the type of error in the given code and provide which line of code is causing the error. def divide(numerator, denominator): return numerator / denominator number = int(input(\\"Enter a number: \\")) result = divide(100, number)","completion":"Line 4 is causing a syntax error due to improper indentation."},{"prompt":"Parse the following HTML content and print the text present in the <p> tag. <div> <p>Hello World!</p> </div>","completion":"print(soup.find('p').text) # 'Hello World!'"},{"prompt":"Retrieve all the values from the nested dictionary. data_dict = { 'key1': { 'inner_key1': \\"1\\", 'inner_key2': \\"2\\" }, 'key2': { 'inner_key1': \\"3\\", 'inner_key2': \\"4\\" } }","completion":"for key1_value in data_dict.values(): for (inner_key1, inner_key2) in key1_value.items(): print(inner_key1, inner_key2)"},{"prompt":"Grant access to content by creating a function that takes in an age and returns a boolean. Age: 20","completion":"def check_age(age): if age < 18: return False else: return True"},{"prompt":"Fix any code errors in the given function. def addToList list: num list.append(num) return l","completion":"def addToList(List, num): List.append(num); return List"},{"prompt":"Construct a lambda expression to multiply the numbers by 2.","completion":"x = lambda n : n * 2"},{"prompt":"Create a class to store a given list of strings. List: ['hello', 'world', 'hi']","completion":"class StrList: def __init__(self, str_list): self.str_list = str_list def get_list(self): return self.str_list"},{"prompt":"Get the name and message property from the given dictionary. data = { 'name': 'John', 'message': 'Hello World!', 'city': 'New York' }","completion":"name = data['name'] message = data['message']"},{"prompt":"Find the most commonly used element in a given list. List: [8, 1, 7, 7, 4, 8, 8, 7]","completion":"from collections import Counter list = [8, 1, 7, 7, 4, 8, 8, 7] most_common = Counter(list).most_common(1)[0] print(\\"Most common element is {}\\".format(most_common[0]))"},{"prompt":"Execute a query to access the records from the table. SELECT * FROM tablename","completion":"cursor.execute(\\"SELECT * FROM tablename\\")"},{"prompt":"Given a list of numbers and a target number, write a Python program to find if there exists a sublist whose sum equals the target. numbers = [2, 4, 8, 9, 5, 7], target = 15","completion":"def sublist_sum(numbers, target) : n = len(numbers) # Consider all sublists of arr[] and return # true if given sum is present in any of them for i in range(n) : curr_sum = numbers[i] # Try different endpoints for current subarray j = i+1 while j<=n : if curr_sum == target : return True if curr_sum > target or j == n: break curr_sum = curr_sum + numbers[j] j += 1 return False"},{"prompt":"Write a Python script to calculate the total of all the elements in a nested list. nested_list = [[1,2,3], [4,5,6], [7,8,9]]","completion":"def sum_of_nested_list(nested_list): total = 0 for internal_list in nested_list: for num in internal_list: total += num return total"},{"prompt":"Change all the character in a given string to its corresponding upper case. string = \\"I love programming.","completion":"string.upper()"},{"prompt":"Write a Python script to find the maximum depth of a given nested list. nested_list = [[1,2], [3,4], [5,6,7]]","completion":"def max_depth_of_nested_list(nested_list): max_depth = 1 for inner_list in nested_list: depth = 1 if type(inner_list) == list: depth += max_depth_of_nested_list(inner_list) max_depth=max(depth, max_depth) return max_depth"},{"prompt":"Write a query statement to select the name, age and address of the oldest person in our database?","completion":"SELECT name, age, address FROM TableName ORDER BY age DESC LIMIT 1;"},{"prompt":"Modify the following script to format the output to just two decimal places. original_script.py import math a = math.pi print(a)","completion":"import math a = math.pi print(\\"{:.2f}\\".format(a))"},{"prompt":"Given a list of integers, write a Python code to return the most frequent item. num_list = [3, 7, 8, 8, 5, 7, 8, 6, 8]","completion":"ModeElement = max(set(num_list), key = num_list.count) print(\\"Most Frequent Element : \\", ModeElement)"},{"prompt":"Generate a random list of 20 unique numbers from 0 to 30.","completion":"[3, 5, 12, 11, 14, 0, 22, 19, 10, 6, 1, 25, 18, 27, 24, 16, 17, 21, 20, 15]"},{"prompt":"Construct a while loop with an if-else statement in Java to print all odd numbers between 1 to 10.","completion":"int i = 1; while (i <= 10) { if (i % 2 != 0) { System.out.print(i + \\" \\"); } i++; }"},{"prompt":"Compile a given c code and debug the program to find the exact output. #include<stdio.h> int main() { char str[] = \\"Hello\\"; char *p; p = &str[2]; printf(\\"%cn\\", *(p++)); printf(\\"%c\\", *p); return 0; }","completion":"ll o"},{"prompt":"Create a function to calculate the factorial of 5 using Python.","completion":"def factorial(n): if n == 0: return 1 else: return n * factorial(n-1) print(factorial(5)) # Output: 120"},{"prompt":"Given an array of integers, write JavaScript code to find the largest number amongst the array elements. arr = [5, 10, 2, 7, 3]","completion":"let largestNumber = arr.reduce( (mostRecentLargest, currentItem) => currentItem > mostRecentLargest ? currentItem : mostRecentLargest ); console.log(largestNumber); // Output: 10"},{"prompt":"Provide a list of all the functionality available to a React Native application.","completion":"React Native applications will have access to a range of features, such as: - Navigation - Data store - Image and video manipulation - Network and internet data access - Geolocation - Offline storage - Push notifications - Animations - Accessibility - Internationalization - Integration with third-party platforms/APIs"},{"prompt":"Given an array of integers, write an algorithm to sort them in an ascending order. arr = [23, 32, 19, 17, -5, 3]","completion":"let arrLength = arr.length; let temp; for(i = 0; i < arrLength; i++){ for(j = 0; j < (arrLength - i - 1); j++){ // Compare two adjacent elements if(arr[j] > arr[j+1]){ // Swap them temp = arr[j]; arr[j] = arr[j+1]; arr[j+1] = temp; } } } console.log(arr); // Output: [-5, 3, 17, 19, 23, 32]"},{"prompt":"Write a SQL query to find the name of the top 10 highest salary employees in the company.","completion":"SELECT TOP 10 Name, Salary FROM Employees ORDER BY Salary DESC;"},{"prompt":"Create a function to check if two strings are an anagram of one another using Python. str1 = 'cat' str2 = 'tac'","completion":"def anagram_checker(str1, str2): if (len(str1)==len(str2)): if (\\"\\".join(sorted(str1.lower())) == \\"\\".join(sorted(str2.lower()))): return True else: return False"},{"prompt":"Build a Lambda function using Python to calculate the sum of two numbers. n1 = 5 n2 = 8","completion":"def add_two_numbers(n1, n2): return n1 + n2"},{"prompt":"Create a program that calculates the area of a triangle using C#. base = 10 height = 8","completion":"public class AreaCalculator { public static void main(String[] args) { int base = 10; int height = 8; double area = (base*height)/2; System.out.println(\\"The area of the triangle is: \\"+area); } }"},{"prompt":"What is the capital of Spain?","completion":"The capital of Spain is Madrid."},{"prompt":"Create an object in Ruby that stores a student's name, age, and GPA.","completion":"student = { name: \\"John Smith\\", age: 22, gpa: 3.5 }"},{"prompt":"Compose a SQL query to find the names of all professors in the department of Computer Science.","completion":"SELECT name FROM professor WHERE department = 'Computer Science';"},{"prompt":"Utilize a regular expression to match all words that begin with 'b' in a given text. text = \\"The quick brown fox jumps over the lazy dog.","completion":"import re text = \\"The quick brown fox jumps over the lazy dog.\\" word_list = re.findall(r\\"b[bB]w+\\", text) print(word_list) # output: ['brown', 'fox', 'b jumps', 'b lazy']"},{"prompt":"Generate a list in Python that contains the numbers from 0 to 50 that are divisible by 7.","completion":"numbers = [] for i in range(51): if i % 7 == 0: numbers.append(i) print(numbers) # output: [0, 7, 14, 21, 28, 35, 42, 49]"},{"prompt":"Generate a table in SQL to store student information like name, age and grade.","completion":"CREATE TABLE student_info ( student_id INT PRIMARY KEY, student_name VARCHAR(50), student_age INT, student_grade INT );"},{"prompt":"Build a Node.js program to find the maximum and minimum item from an array. arr = [100, 200, 75, 10, 50]","completion":"let arr = [100, 200, 75, 10, 50]; let min = Math.min(...arr); let max = Math.max(...arr); console.log(\`The minimum of the array is {min}\`); console.log(\`The maximum of the array is {max}\`);"},{"prompt":"Create a program to sum numbers in a given range m to n inclusive. m = 4, n = 8","completion":"def sum_in_range(m, n): sum = 0 for i in range(m, n+1): sum+=i return sum"},{"prompt":"Write a Python code snippet to get the first 1000 prime numbers.","completion":"primes = [] n = 2 while len(primes) < 1000: if is_prime(n): primes.append(n) n += 1 print(primes)"},{"prompt":"Write a CSS code snippet to apply a border to all p elements.","completion":"p { border: 1px solid #000; }"},{"prompt":"Write a Python code snippet to sum up all the elements in a given dictionary. { 'a': 10, 'b': 15, 'c': 20 }","completion":"d = {'a': 10, 'b': 15, 'c': 20} print(sum(d.values())) # Output: 45"},{"prompt":"Create a function to flatten a 2D array. [[1, 2], [3, 4], [5, 6]]","completion":"def flatten_2D_array(arr): \\"\\"\\" A function to flatten a 2D array. Input: A 2D array. Output: A 1D array. \\"\\"\\" flattened_arr = [] for sub_arr in arr: flattened_arr += sub_arr return flattened_arr"},{"prompt":"Write a code to take in a string and determine if the string is a palindrome or not. string = \\"civic","completion":"def is_palindrome(string): \\"\\"\\" Return True is the input string is a Palindrome, False if not. Input: string Output: Boolean \\"\\"\\" # Cast input to string if not isinstance(string, str): string = str(string) # Reverse the string rev_string = string[::-1] #Compare original string with reversed string if string == rev_string: return True else: return False"},{"prompt":"Create a code to search a given string for a specific keyword and return the index of the keyword. text = \\"Report on the COVID-19 pandemic\\" keyword = \\"COVID-19","completion":"def search_string(text, keyword): \\"\\"\\" A function to search a given string for a specific keyword and return the index of the keyword. Input: string, keyword Output: integer or None \\"\\"\\" # Use the find() method to search the string index = text.find(keyword) # Return None if the keyword was not found if index == -1: return None # Return the index if the keyword was found else: return index"},{"prompt":"Create a code to format the given text using a given indentation level. text = \\"This is a sample text to format.\\" indentation = 4","completion":"def indent_text(text, indentation): \\"\\"\\" A function to format the given text using a given indentation level. Input: string, integer Output: string \\"\\"\\" # Split the text into lines lines = text.splitlines() # Iterate through each line of the text for i in range(len(lines)): # Add the indentation to each line lines[i] = \\" \\" * indentation + lines[i] # Join all the lines indented_text = \\"n\\".join(lines) return indented_text"},{"prompt":"Develop a code to rotate a given list by a given value. my_list = [1, 2, 3, 4, 5] k = 3","completion":"def rotate_list(my_list, k): \\"\\"\\" A function to rotate a given list by a given value. Input: list, integer Output: list \\"\\"\\" # Get the length of list length = len(my_list) # Rotate the list rotated = my_list[-k % length:] + my_list[:-k % length] return rotated"},{"prompt":"What's the output of this program in Python given the following input? input_string = \\"Hello, World!\\" list_of_chars = list(input_string) for current_char in list_of_chars: print(current_char)","completion":"H e l l o , W o r l d !"},{"prompt":"Create a Java program to compute the distance between two points. PointA = (2, 3) PointB = (4, 9)","completion":"public class DistanceCalculator { public static double distanceCalculator(int x1, int y1, int x2, int y2) { double distance = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2)); return distance; } } class DistanceCalculatorTest { public static void main(String[] args) { double distance = DistanceCalculator.distanceCalculator(2, 3, 4, 9); System.out.println(\\"The distance between two points is \\" + distance); } }"},{"prompt":"Scan through the following code in JavaScript and replace the placeholders with appropriate code. var numbers = [1, 2, 3, 4]; for(___){ console.log(___); }","completion":"var numbers = [1, 2, 3, 4]; for(var i = 0; i < numbers.length; i++){ console.log(numbers[i]); }"},{"prompt":"Think of a situation where you would use recursion.","completion":"Recursion can be used when performing a task that can be broken down into smaller, simpler parts. For example, performing a Depth-First Search on a Graph. It can also be used when implementing algorithms to solve complex problems such as finding the largest number in a list or creating a binary search tree."},{"prompt":"Write a script in Ruby for calculating the sum of two numbers. a = 5 b = 10","completion":"a = 5 b = 10 def add_numbers(a, b) a + b end sum = add_numbers(a,b) puts \\"The sum of #{a} and #{b} is #{sum}.\\""},{"prompt":"You are given a data set containing employee details. Write a query to get the sum of all salaries.","completion":"SELECT SUM(salary) FROM employees;"},{"prompt":"Create a program in Haskell that multiplies any given number by 2. x = 10","completion":"multiplyByTwo x = x * 2 main = do let x = 10 let result = multiplyByTwo x print result"},{"prompt":"Construct a database schema for a \\"Products\\" table.","completion":"CREATE TABLE Products ( id INTEGER PRIMARY KEY AUTOINCREMENT, product_name TEXT NOT NULL, product_price REAL NOT NULL, product_image TEXT, product_description TEXT );"},{"prompt":"Consider the following code. Explain the purpose of the for loop in the code. nums = [2, 4, 6, 8] for num in nums: print(num ** 2)","completion":"The for loop iterates through the list nums and prints each element to the console, after having been squared."},{"prompt":"Create an HTML page design for displaying a website homepage.","completion":"<!DOCTYPE html> <html> <head> <title>Website Homepage</title> </head> <body> <h1>Welcome to the website!</h1> <p>This is the homepage for a new website.</p> <ul> <li> About Us </li> <li> Services </li> <li> Contact Us </li> </ul> </body> </html>"},{"prompt":"Suppose you have two arrays A and B. Write a C++ program to sum up the elements in A and B. A = [1,5,9,10] B = [2,5,7,10]","completion":"#include <iostream> using namespace std; int main(void) { int a[]={1,5,9,10}; int b[]={2,5,7,10}; int c[4]; for(int i=0;i<4;i++) c[i] = a[i] + b[i]; for(int i=0;i<4;i++) cout<<c[i]<<\\" \\"; return 0; }"},{"prompt":"Suppose you have a list of integers. Write a program in R language to compute the minimum of the list. list_of_integers <- c(5,9,7,8,2,1)","completion":"min_val <- min(list_of_integers) print(min_val)"},{"prompt":"Write a code to collect the name, email address, and phone number from the user.","completion":"name = input(\\"What is your name? \\") email = input(\\"What is your email address? \\") phone = input(\\"What is your phone number? \\")"},{"prompt":"Refractor the given code using SQL query commands. SELECT * FROM customers WHERE age > 18 AND (state = 'NY' OR experience > 3) AND (country = 'US' OR experience > 5)","completion":"SELECT * FROM customers WHERE age > 18 AND (state = 'NY' OR experience > 3 OR (country = 'US' AND experience > 5))"},{"prompt":"You need to tell the assistant which language is this code written in. #include <iostream> using namespace std; int main() { int a = 10, b= 15; int c = a + b; cout << \\"The sum of \\" << a << \\" and \\" << b << \\" is: \\" << c << endl; return 0; }","completion":"C++"},{"prompt":"mplement a function in Java to find the frequency of a particular character in a given string.","completion":"public static int getCharFrequency(String str, char c) { int count = 0; for (int i = 0; i < str.length(); i++) { if (str.charAt(i) == c) count++; } return count; }"},{"prompt":"Suppose you have two dictionaries, A and B. Write a code in Java to find the intersection of A and B. A = {1: 'a', 2: 'b'} B = {2: 'b', 3: 'c'}","completion":"public static HashMap<Integer, String> intersect(HashMap<Integer, String> A, HashMap<Integer, String> B) { HashMap<Integer, String> result = new HashMap<>(); for (Integer key: A.keySet()) { if (B.containsKey(key)) { result.put(key, A.get(key)); } } return result; }"},{"prompt":"Describe in one sentence how a given neural network model works. A convolutional neural network","completion":"The convolutional neural network utilizes convolutional filters to learn features in an input, followed by layers of non-linear processing to produce an output."},{"prompt":"Edit the following Python code to make it error-free. a = 33 ab = a +","completion":"a = 33 ab = a + b"},{"prompt":"Using JavaScript, write code to display the current time in the format \\"hh:mm:ss\\".","completion":"let now = new Date(); let time = now.getHours() + \\":\\" + now.getMinutes() + \\":\\" + now.getSeconds(); console.log(time);"},{"prompt":"Write a JavaScript function that accepts two parameters - a number and a string - and returns a sentence with both parameters combined. num=10; str=\\"apple","completion":"function combine(num, str) { return \`There are {num} {str}!\`; }"},{"prompt":"Construct a SQL query to find the names and states of all employees located in California.","completion":"SELECT name, state FROM Employees WHERE state = 'California';"},{"prompt":"Construct a C++ program to convert miles to kilometers.","completion":"#include <iostream> double MilesToKilometers(double miles) { return 1.609 * miles; } int main() { double miles = 0.0; std::cout << \\"Enter the number of miles: \\"; std::cin >> miles; double kilometers = MilesToKilometers(miles); std::cout << miles << \\" miles is \\" << kilometers << \\" kilometers.n\\"; return 0; }"},{"prompt":"Convert the following recursive function to an iterative one. def factorial(n): if n == 0: return 1 else: return n * factorial(n - 1)","completion":"def factorial(n): result = 1 for i in range(1, n + 1): result = result * i return result"},{"prompt":"Sanitize the following user input. \\"user' OR '1'='1","completion":"String sanitizedInput = input.replaceAll(\\"[\\"']\\",\\"\\");"},{"prompt":"Write a Java program to find the length of a string without using the length() method.","completion":"public static int stringLength(String str){ int count = 0; for (int i=0; i<str.length(); i++){ if(str.charAt(i)!=' '){ count++; } } return count; }"},{"prompt":"Write a SQL query to retrieve the names of all products from the table 'Product' with a price greater than 100. Table name: Product Attributes: id (integer), name (string), price (integer)","completion":"SELECT name FROM Product WHERE price > 100;"},{"prompt":"Generate a Python class definition for a pig object that includes the following properties. name: string color: string age: integer","completion":"class Pig(object): def __init__(self, name, color, age): self.name = name self.color = color self.age = age def set_name(self, name): self.name = name def set_color(self, color): self.color = color def set_age(self, age): self.age = age"},{"prompt":"Delete the elements at indices 2 and 4 in the following list. ['a', 'b', 'c', 'd', 'e', 'f']","completion":"l = ['a', 'b', 'c', 'd', 'e', 'f'] del l[2:4]"},{"prompt":"Extract the value \\"qux\\" in the following dictionary. d = { 'foo': 'bar', 'baz': { 'qux': 12 } }","completion":"d = { 'foo': 'bar', 'baz': { 'qux': 12 } } qux = d['baz']['qux']"},{"prompt":"Complete the following function so that all strings in the list have a length of 5 characters. lst = [\\"aaa\\", \\"bb\\", \\"ccccc\\", \\"dddddd\\"]","completion":"def make_length_five(lst): '''This function will ensure that all strings in the list have a length of 5 characters.''' for i in range(len(lst)): if len(lst[i]) < 5: lst[i] = lst[i] + ' ' * (5 - len(lst[i])) elif len(lst[i]) > 5: lst[i] = lst[i][:5] return lst"},{"prompt":"Format the following list of numbers as strings, with 3 decimal places. [123.4567, 678.9012, 789.3456]","completion":"lst = [123.4567, 678.9012, 789.3456] lst = [format(num, '.3f') for num in lst]"},{"prompt":"Sort the following dictionary objects by the value of the \\"age\\" field. [{'name': 'John', 'age': 32}, {'name': 'Jane', 'age': 28}, {'name': 'Alex', 'age': 24}]","completion":"lst = [{'name': 'John', 'age': 32}, {'name': 'Jane', 'age': 28}, {'name': 'Alex', 'age': 24}] lst.sort(key = lambda k: k['age'])"},{"prompt":"Create a function that will return the total number of specific items in a list. [1, 1, 2, 3, 3, 3]","completion":"def count_items(lst, item): '''This function will return the total number of specific items in a list.''' return len([x for x in lst if x == item])"},{"prompt":"Create a function that will calculate the cumulative sum of a list. [1, 2, 3, 4, 5]","completion":"def cumulative_sum(lst): '''This function will calculate the cumulative sum of a list.''' result = [] s = 0 for item in lst: s += item result.append(s) return result"},{"prompt":"Create a new dictionary that contains the intersection between the following two dictionaries. d1 = {'a': 1, 'b': 2, 'c': 3} d2 = {'b': 2, 'c': 4, 'd': 5}","completion":"d1 = {'a': 1, 'b': 2, 'c': 3} d2 = {'b': 2, 'c': 4, 'd': 5} d3 = { k:v for k,v in d1.items() if k in d2.keys() }"},{"prompt":"Solve the following programming puzzle using Python. A rope connected two opposite trees. You need to cut the rope so the rope is never longer than 10 meters. What is the shortest distance you can cut?","completion":"def closest_cutting_distance(total_rope_length): '''This function will calculate the shortest distance you can cut a rope so the rope is never longer than 10 meters.''' if total_rope_length <= 10: return total_rope_length else: return total_rope_length - 10"},{"prompt":"Create an array in Python that contains numbers from 1 to 5.","completion":"my_array = [1, 2, 3, 4, 5]"},{"prompt":"Write a function in JavaScript that counts the number of characters in a sentence. The quick brown fox","completion":"function characterCounter(str) { return str.length; }"},{"prompt":"Write a selector in CSS that selects div elements which are inside a main section.","completion":"main > div { [select style code] }"},{"prompt":"Write a code in Python that returns an inversion of a given string. te","completion":"def reverseStr(s): return s[::-1] s = \\"tea\\" print(reverseStr(s))"},{"prompt":"Edit a JSON object so that it stores information about a person in a defined format. { name: John }","completion":"{ \\"name\\": \\"John\\", \\"age\\": 0, \\"address\\": { \\"street\\": \\"\\", \\"city\\": \\"\\", \\"state\\": \\"\\", \\"zip\\": \\"\\" }, \\"phone\\": \\"\\" }"},{"prompt":"Write a Class in Java that represents a student.","completion":"public class Student { private String firstName; private String lastName; private int studentId; public Student(String firstName, String lastName, int studentId) { this.firstName = firstName; this.lastName = lastName; this.studentId = studentId; } public String getFirstName() { return firstName; } public String getLastName() { return lastName; } public int getStudentId() { return studentId; } }"},{"prompt":"Write a code in PHP for finding the longest word in a string. This is a test string","completion":"function longest_word(string){ words = explode(\\" \\", string); longestword = 0; foreach (words as word) { if (strlen(word) > longestword) { longestword = strlen(word); longest_word = word; } } return longest_word; } echo longest_word(\\"This is a test string\\");"},{"prompt":"What is the complexity class of the below Python code snippet for adding an item to a list? list = [1, 2, 3] list.append(4)","completion":"The complexity class of this code snippet is O(1) since appending an item to a list has constant time complexity."},{"prompt":"Define a JavaScript class called Person that has a constructor for setting the name of the person.","completion":"class Person { constructor(name) { this.name = name } }"},{"prompt":"What is the output of the following Ruby code? arr = [2, 3, 4] sum = 0 arr.each{|x| sum += x }","completion":"The output is that the value of sum is 9."},{"prompt":"What is the output of the following Java code? int x = 7; int y = 3; int z = x % y;","completion":"The output is that the value of z is 1."},{"prompt":"w would you convert the following JavaScript object to a JSON string? let myObj = { name: \\"John Doe\\", age: 32 };","completion":"let myJSON = JSON.stringify(myObj);"},{"prompt":"What is the data type of the following variable in JavaScript? let myNumber = 10","completion":"The data type of the variable myNumber is a number."},{"prompt":"Write a Python class that has two variables 'name' and 'age' and a method to print the values of both variables.","completion":"class Person: def __init__(self, name, age): self.name = name self.age = age def print_values(self): print(\\"Name:\\", self.name) print(\\"Age:\\", self.age)"},{"prompt":"mplement quick sort in Java.","completion":"public static void quickSort(int[] arr, int low, int high) { if (arr == null || arr.length == 0) return; if (low >= high) return; // pick the pivot int middle = low + (high - low) / 2; int pivot = arr[middle]; // make left < pivot and right > pivot int i = low, j = high; while (i <= j) { while (arr[i] < pivot) { i++; } while (arr[j] > pivot) { j--; } if (i <= j) { int temp = arr[i]; arr[i] = arr[j]; arr[j] = temp; i++; j--; } } // recursively sort two sub parts if (low < j) quickSort(arr, low, j); if (high > i) quickSort(arr, i, high); }"},{"prompt":"Write a JavaScript code snippet to concatenate the given strings: \\"Hello\\" and \\"World!","completion":"var string1 = \\"Hello\\"; var string2 = \\"World!\\"; console.log(string1 + ' ' + string2); // Hello World!"},{"prompt":"Write a PHP code snippet to create an array containing the numbers from 1 to 100.","completion":"arr = range(1, 100);"},{"prompt":"Write a JavaScript method that takes an array of numbers and checks if all values in the array are the same. [2,2,2,2]","completion":"function allValuesSame(arr) { for (var i = 1; i < arr.length; i++) { if (arr[i] !== arr[0]) return false; } return true; }"},{"prompt":"Write a MySQL query to find all records containing the word 'hello' in the 'messages' table. Table: messages ID | Message 1. hello world 2. hey there 3. goodbye 4. hello ag","completion":"SELECT * FROM messages WHERE Message LIKE '%hello%';"},{"prompt":"Java, write a program that finds the sum of two linked lists representing integers.","completion":"public static ListNode addTwoNumbers(ListNode l1, ListNode l2) { ListNode dummyHead = new ListNode(0); ListNode p = l1, q = l2, curr = dummyHead; int carry = 0; while (p != null || q != null) { int x = (p != null) ? p.val : 0; int y = (q != null) ? q.val : 0; int sum = carry + x + y; carry = sum / 10; curr.next = new ListNode(sum % 10); curr = curr.next; if (p != null) p = p.next; if (q != null) q = q.next; } if (carry > 0) { curr.next = new ListNode(carry); } return dummyHead.next; }"},{"prompt":"Using PHP, write a program to generate a string containing the nth Fibonacci number.","completion":"function Fibonacci(n) { if (n == 0) return '0'; else if (n == 1) return '1'; else { fibonaccinumbers[0] = 0; fibonaccinumbers[1] = 1; for (i = 2; i <= n; i++) { fibonaccinumbers[i] = fibonaccinumbers[i - 1] + fibonaccinumbers[i - 2]; } return fibonaccinumbers[n]; } }"},{"prompt":"Write an SQL query to find the records with the maximum value in a given table.","completion":"SELECT * FROM table ORDER BY column DESC LIMIT 1;"},{"prompt":"JavaScript, write a function to calculate the nth term in the Fibonacci series.","completion":"function fibonacci(n){ if (n <= 1) return n; return fibonacci(n - 1) + fibonacci(n - 2); }"},{"prompt":"Given the following code in C, modify it to increment \`num\` by 1. int num = 0;","completion":"int num = 0; num++;"},{"prompt":"Write the SQL query to find the product name, prices, ratings of all products with rating greater than 4 and prices lesser than 10.","completion":"SELECT product_name, price, rating FROM product_table WHERE rating > 4 AND price < 10;"},{"prompt":"Create a Ruby script to return the nth Fibonacci number.","completion":"# Function to return the nth Fibonacci number def calculateFibonacci(num) if num < 0 return 'Incorrect input' elsif num == 0 return 0 elsif num == 1 return 1 end #Recursive Function return calculateFibonacci(num - 1) + calculateFibonacci(num - 2) end # Driver Program puts calculateFibonacci(7)"},{"prompt":"Write a Python code to calculate the total price of a given list of items including taxes. items = [ {\\"name\\": \\"apple\\", \\"price\\": 10}, {\\"name\\": \\"orange\\", \\"price\\": 20}, {\\"name\\": \\"banana\\", \\"price\\": 5} ] tax_rate = 5","completion":"#Calculate total price of a given list of items including taxes items = [ {\\"name\\": \\"apple\\", \\"price\\": 10}, {\\"name\\": \\"orange\\", \\"price\\": 20}, {\\"name\\": \\"banana\\", \\"price\\": 5} ] tax_rate = 5 total_price = 0 for item in items: total_price += item['price'] total_price = total_price + (total_price * (tax_rate/100)) print(total_price)"},{"prompt":"Design a C++ class to represent a student's information such as name, student ID, and grade.","completion":"class Student { private: string name; int studentID; int grade; public: Student(); Student(string name, int studentID, int grade); void setName(string name); string getName(); void setStudentID(int studentID); int getStudentID(); void setGrade(int grade); int getGrade(); };"},{"prompt":"Write a code in Python to print out the common elements of two lists which are [2, 4, 6, 8] and [3, 6, 9, 12].","completion":"#Function to print out the common elements of two lists def commonElements(l1, l2): result = [value for value in l1 if value in l2] return result # Lists to compare list1 = [2, 4, 6, 8] list2 = [3, 6, 9, 12] # Output print(commonElements(list1, list2)) # Output: [6]"},{"prompt":"Modify the code to make sure it is valid according to Java language specification. public class HelloWorld { public static void main(String[] args) { System.out.println(\\"Hello World!\\"); } }","completion":"public class HelloWorld { public static void main(String[] args) { System.out.println(\\"Hello World!\\"); } }"},{"prompt":"Parse a user input in the following format and print it out. x - 10, y - 20","completion":"int x = 10; int y = 20; System.out.println(\\"x = \\" + x + \\" y = \\" + y);"},{"prompt":"Create a function in R to generate a random number between the given range.","completion":"random_number <- function(min, max) { return(runif(1, min=min, max=max)) }"},{"prompt":"Write an SQL query to find all students with grades higher than a given threshold. Threshold = 75","completion":"SELECT * FROM Students WHERE Grades > 75;"},{"prompt":"Check this code and add an if statement to print out “even” if the number is divisible by 2 and “odd” if not. for n in range (1,10): print(n)","completion":"for n in range (1, 10): if n % 2 == 0: print(n, \\"even\\") else: print(n, \\"odd\\")"},{"prompt":"Create a web page using HTML and CSS which displays a user interface for a calculator.","completion":"<html> <head> <title>Calculator Webpage</title> </head> <body> <h1>Calculator</h1> <div class=\\"container\\"> <div class=\\"display\\"> <p>0</p> </div> <div class=\\"keypad\\"> <div class=\\"number-pad\\"> <button type=\\"button\\">7</button> <button type=\\"button\\">8</button> <button type=\\"button\\">9</button> <button type=\\"button\\">4</button> <button type=\\"button\\">5</button> <button type=\\"button\\">6</button> <button type=\\"button\\">1</button> <button type=\\"button\\">2</button> <button type=\\"button\\">3</button> <button type=\\"button\\">0</button> </div> <div class=\\"operator-pad\\"> <button type=\\"button\\" class=\\"operator\\">/</button> <button type=\\"button\\" class=\\"operator\\">*</button> <button type=\\"button\\" class=\\"operator\\">+</button> <button type=\\"button\\" class=\\"operator\\">-</button> <button type=\\"button\\" class=\\"operator\\">=</button> </div> </div> </div> </body> </html>"},{"prompt":"Convert this SQL statement into a LINQ query. SELECT * FROM Products WHERE Price > 100","completion":"var result = from Product in Products where Product.Price > 100 select Product;"},{"prompt":"Fix the code by making changes with the appropriate syntax. def add_two_numbers(a, b) return a + b","completion":"def add_two_numbers(a, b): return a + b"},{"prompt":"Deploy the following ML model on the Cloud.","completion":"1. Prepare the model: - Download, install and configure Cloud platform with the required SDKs. - Upload the ML model on the Cloud. - Perform necessary pre-processing steps. 2. Deploy the model: - Use a deployment framework to deploy the model on the Cloud. - containerize the model using Docker. - provide appropriate access for the model for it to be queried. 3. Test the model: - Run test cases for the model and assess the accuracy and performance of the model. - Set up a monitoring system for the model."},{"prompt":"Perform sentiment analysis on the given text using NLTK library in Python. The food here is amazing.","completion":"from nltk.sentiment.vader import SentimentIntensityAnalyzer sentences = [\\"The food here is amazing!\\"] sid = SentimentIntensityAnalyzer() for sentence in sentences: ss = sid.polarity_scores(sentence) print(\\"for sentence: {}, sentiment analysis: {}\\".format(sentence, ss)) # Output # for sentence: The food here is amazing!, sentiment analysis: {'neg': 0.0, 'neu': 0.436, 'pos': 0.564, 'compound': 0.6249}"},{"prompt":"Design the structure of a database for a hotel booking system.","completion":"Table 1: Customers - customer_id - first_name - last_name - email Table 2: Rooms - room_id - room_type - beds - rate Table 3: Bookings - booking_id - customer_id - room_id - check_in_date - check_out_date - price Table 4: Payments - payment_id - booking_id - payment_type - price Table 5: Reviews - review_id - booking_id - rating - comment"},{"prompt":"Update the following HTML page so that it refreshes the page every 5 seconds. <html> <head> <title>My Webpage</title> </head> <body> Hello World! </body> </html>","completion":"<html> <head> <title>My Webpage</title> <meta http-equiv=\\"refresh\\" content=\\"5\\"> </head> <body> Hello World! </body> </html>"},{"prompt":"Make a bash script to read two user input numbers and print their average.","completion":"#!/bin/bash echo \\"Please enter two numbers:\\" read num1 read num2 sum=((num1 + num2)) echo \\"The average of the two numbers is: ((sum / 2))\\""},{"prompt":"Construct a regex expression to match strings of the form \\"123-456\\".","completion":"^[0-9]{3}-[0-9]{3}"},{"prompt":"Come up with a Scala code snippet to print the powers of 2.","completion":"(0 to 8).foreach( x => { println(Math.pow(2,x)) } )"},{"prompt":"Write an SQL query to rank the products by their sales.","completion":"SELECT product_name, sales, RANK() OVER (ORDER BY sales DESC) AS rank FROM products;"},{"prompt":"Generate a regex to validate the following format of email address: name@domain.extension","completion":"^w+@[a-zA-Z_]+?.[a-zA-Z]{2,3}"},{"prompt":"w do you set a variable to a constant in C#?","completion":"In C#, variables can be set to a constant by using the keyword 'const' before the variable declaration. The constant cannot be changed or reassigned once it is declared. Example: const int a = 5;"},{"prompt":"Write a Node.js program to accept a user input and print it in the console.","completion":"const readline = require('readline'); const rl = readline.createInterface({ input: process.stdin, output: process.stdout }); rl.question('Please enter your input: ', (answer) => { console.log(\`You entered: {answer}\`); rl.close(); });"},{"prompt":"Create a Python dictionary which contains the student name and their grade for the course. { \\"John\\": 85, \\"Alice\\": 91, \\"Bob\\": 74 }","completion":"student_grades = { \\"John\\": 85, \\"Alice\\": 91, \\"Bob\\": 74 }"},{"prompt":"Write a MySQL query to select all the records in a table having the same ID. Table name: \\"customer","completion":"SELECT * FROM customers WHERE id = 'ID';"},{"prompt":"Using SQL, write a query to get the last three rows from a table. Table name: \\"customer","completion":"SELECT * FROM customer ORDER BY id DESC LIMIT 3;"},{"prompt":"Create a function which takes an array and removes all duplicates using a set. [1, 2, 3, 3, 4, 4, 5]","completion":"# Create a function which takes an array and removes all duplicates using a set def remove_duplicates(arr): return list(set(arr)) arr = [1, 2, 3, 3, 4, 4, 5] new_arr = remove_duplicates(arr) print(new_arr) # [1, 2, 3, 4, 5]"},{"prompt":"Find the smallest missing positive number in an array. [-2, 0, 1, 3]","completion":"# Find the smallest missing positive number def smallest_positive(arr): s = set(arr) i = 1 while i in s: i += 1 return i arr = [-2, 0, 1, 3] smallest = smallest_positive(arr) print(smallest) # 2"},{"prompt":"Create a Python class with the following attributes: firstname, lastname and address.","completion":"# Define a python class class Person: def __init__(self, firstname, lastname, address): self.firstname = firstname self.lastname = lastname self.address = address"},{"prompt":"Add a constructor to the above class to make sure that firstname and lastname are provided when creating a new instance.","completion":"# Define a python class class Person: def __init__(self, firstname, lastname, address): # make sure that firstname and lastname are provided when creating a new instance if (firstname == \\"\\" or lastname == \\"\\"): raise ValueError(\\"firstname and lastname can't be empty\\") self.firstname = firstname self.lastname = lastname self.address = address"},{"prompt":"Create a class for a bike which has a color, make and description as attributes.","completion":"# Define a class for a bike class Bike: def __init__(self, color, make, description): self.color = color self.make = make self.description = description"},{"prompt":"Modify the 'Bike' class so that when instances are created they are assigned a unique ID.","completion":"# Define a class for a bike class Bike: _id = 0 def __init__(self, color, make, description): Bike._id += 1 self.id = Bike._id self.color = color self.make = make self.description = description"},{"prompt":"Write a SQL query to create a table with 5 columns and names 'id', 'name', 'age', 'gender' and 'email'.","completion":"CREATE TABLE tablename ( id INT, name VARCHAR(250), age INT, gender VARCHAR(50), email VARCHAR(200) );"},{"prompt":"Write a Python program to find all the factors of an integer. number = 16","completion":"def find_factors(number): factors = [] for i in range(1, number + 1): if number % i == 0: factors.append(i) return factors"},{"prompt":"Write a function to convert a Roman numeral to an integer.","completion":"def roman_to_integer(numeral): romans = {\\"I\\": 1, \\"V\\": 5, \\"X\\": 10, \\"L\\": 50, \\"C\\": 100, \\"D\\": 500, \\"M\\": 1000 } num = 0 i = 0 while i < len(numeral): if i+1 < len(numeral): if romans[numeral[i]] >= romans[numeral[i+1]]: num = num + romans[numeral[i]] else : num = num + romans[numeral[i+1]] - romans[numeral[i]] i+=1 else: num = num + romans[numeral[i]] i+=1 return num"},{"prompt":"Write a Python function to compare two lists and return the elements that are in both of them. list1 = [3, 5, 7, 8] list2 = [3, 5, 10, 12]","completion":"def compare_lists(list1, list2): return [x for x in list1 if x in list2]"},{"prompt":"Edit this code so it can classify whether a number is even or odd. def classify_number(num)","completion":"def classify_number(num): if num % 2 == 0: return \\"even\\" else: return \\"odd\\""},{"prompt":"Explain the purpose of a web browser.","completion":"A web browser is a software application used to retrieve, render and traverse information on the World Wide Web. It uses Hypertext Transfer Protocol (HTTP) to request pages from from web servers, receive them, and display them in an organised way on our device. It also provides tools to allow users to traverse the web and access content such as email, videos, music, social networks, etc."},{"prompt":"dentify the type of output for the given C++ statement. cout<<\\"Hello World\\";","completion":"String output."},{"prompt":"Analyse a given JSON object and list all the keys with their values. { \\"name\\":\\"John\\", \\"age\\":30, \\"cars\\": { \\"car1\\":\\"Ford\\", \\"car2\\":\\"BMW\\", \\"car3\\":\\"Fiat\\" } }","completion":"name: John age: 30 car1: Ford car2: BMW car3: Fiat"},{"prompt":"Given an array of integers, find the maximum difference between two elements in the array such that the larger element appears after the smaller element in the array. [5, 2, 4, 7, 15]","completion":"def maxDifference(arr): # Initialize max difference max_difference = 0 # Traverse the array for i in range(len(arr) - 1): for j in range(i + 1, len(arr)): # Find the difference between two elements diff = arr[j] - arr[i] # Check if the difference is the maximum if diff > max_difference: max_difference = diff return max_difference # Output maxDifference([5, 2, 4, 7, 15]) # 13"},{"prompt":"Override the \\"toString\\" method for a given class in Java.","completion":"public class MyClass { public String toString() { return \\"MyClass Object\\"; } }"},{"prompt":"Write a function that takes a list of words and detects if they are anagrams. a_list=[\\"potato\\",\\"tomato\\"]","completion":"def is_anagram(a_list): l1 = [''.join(sorted(word)) for word in a_list[0]] l2 = [''.join(sorted(word)) for word in a_list[1]] return l1 == l2"},{"prompt":"Write a Python function that takes two lists and returns a new list which contains only the unique elements from both of the lists. list1=[1,2,3,4] list2=[3,4,5,6]","completion":"def unique_from_two_lists(list1,list2): return list(set(list1 + list2))"},{"prompt":"Create a Python program to analyze a given list of URL requests and count the number of unique requests.","completion":"def count_unique_requests(url_list): return len(set(url_list))"},{"prompt":"Write a function that takes a two-dimensional array and flattens it into an one-dimensional array.","completion":"def flatten(arr): return [item for row in arr for item in row]"},{"prompt":"Using Python, parse a given XML document and output the names of all elements with the “class” attribute.","completion":"from xml.etree import ElementTree def find_elements(tree): elements = [] for elem in tree.iter(): if 'class' in elem.attrib: elements.append(elem.tag) return elements"},{"prompt":"Write a Python function to convert a given number of days into weeks, days.","completion":"def convert_days(days): weeks = days // 7 days = days % 7 return (weeks, days)"},{"prompt":"Write a Python function that takes a list of strings as an input and returns a new list with the strings sorted by length.","completion":"def sort_by_length(lst): return sorted(lst, key=len)"},{"prompt":"Write a Python function that takes a list of n strings and a number k and returns the longest string with length of k or less.","completion":"def find_longest_at_length(lst, k): longest_str = lst[0] for s in lst[1:]: if len(s) <= k and len(s) > len(longest_str): longest_str = s return longest_str"},{"prompt":"Create a JSON string representation of the given Python dictionary. {'name': 'John', 'age': 20, 'hobby': 'Coding'}","completion":"var jsonStr = JSON.stringify({name: \\"John\\", age: 20, hobby: \\"Coding\\"});"},{"prompt":"Write a bash script that prints the given input string. String to be printed='Hello World'","completion":"#!/bin/bash echo \\"Hello World\\""},{"prompt":"Create a function in Ruby for performing string manipulations on the given text. Text=\\"Hello World","completion":"def manipulate_string(text) text = text.upcase text = text.reverse text = text.gsub('O', '*') return text end"},{"prompt":"mplement a sorting algorithm in Python to arrange the given array in descending order. [10, 80, 40, 20, 60]","completion":"def descendingOrder(arr): arr.sort(reverse = True) return arr # Driver code arr = [10, 80, 40, 20, 60] output = descendingOrder(arr) print(output)"},{"prompt":"Write a Python class for a Employee object to store the basic properties such as name, age, salary, etc.","completion":"class Employee: def __init__(self, name, age, salary): self.name = name self.age = age self.salary = salary def get_details(self): return \\"Name: {}, Age: {}, Salary: {}\\".format(self.name, self.age, self.salary)"},{"prompt":"Write a JavaScript function for finding the biggest element in an array. [2, 4, 5, 6, 8, 10]","completion":"function findMax(arr) { let max = arr[0]; for (let i = 0; i < arr.length; i++) { if (arr[i] > max) max = arr[i]; } return max; }"},{"prompt":"Create a HTML select element with the given list of countries as options. CountryList = ['India','United States','Canada','Australia','New Zealand','Singapore','Japan']","completion":"<select> <option value=\\"India\\">India</option> <option value=\\"United States\\">United States</option> <option value=\\"Canada\\">Canada</option> <option value=\\"Australia\\">Australia</option> <option value=\\"New Zealand\\">New Zealand</option> <option value=\\"Singapore\\">Singapore</option> <option value=\\"Japan\\">Japan</option> </select>"},{"prompt":"Construct an SQL query for finding the average salary of employees from a given department. Department='Information Technology'","completion":"SELECT AVG(salary) FROM employees WHERE department = 'Information Technology';"},{"prompt":"Create a PHP script for performing basic calculations such as addition, subtraction, multiplication and division.","completion":"<?php function calculate(op, a, b) { switch(op) { case '+': return a + b; case '-': return a - b; case '*': return a * b; case '/': return a / b; } } ?>"},{"prompt":"Write a function in Swift for generating random numbers within a given range. Min=1, Max=20","completion":"func randomNumberInRange(min: Int, max: Int) -> Int { return Int.random(in: min...max) }"},{"prompt":"Create an HTML table with the given list of student's marks. StudentMarks=[34, 78, 63, 57, 92]","completion":"<table> <tr> <th>Student</th> <th>Marks</th> </tr> <tr> <td>1</td> <td>34</td> </tr> <tr> <td>2</td> <td>78</td> </tr> <tr> <td>3</td> <td>63</td> </tr> <tr> <td>4</td> <td>57</td> </tr> <tr> <td>5</td> <td>92</td> </tr> </table>"},{"prompt":"Create a Python class named \\"Bicycle\\" which has two attributes named \\"color\\" and \\"wheels\\".","completion":"class Bicycle: def __init__(self, color, wheels): self.color = color self.wheels = wheels"},{"prompt":"Write a SQL query to find all users who are younger than 25 years old.","completion":"SELECT * FROM users WHERE age < 25;"},{"prompt":"Make a copy of a given dictionary in Python.","completion":"import copy original_dict = {1: 'a', 2: 'b', 3: 'c'} new_dict = copy.deepcopy(original_dict)"},{"prompt":"Write a SQL query to find out the names of users who have \\"B\\" as their second character in the name.","completion":"SELECT name from users WHERE name LIKE '_b%';"},{"prompt":"Make an HTML webpage with a heading \\"Welcome to my webpage!\\" and a paragraph with the text \\"This is my first webpage!\\".","completion":"<!DOCTYPE html> <html lang=\\"en\\"> <head> <meta charset=\\"UTF-8\\"> <meta name=\\"viewport\\" content=\\"width=device-width, initial-scale=1.0\\"> <title>My Webpages</title> </head> <body> <h1>Welcome to my webpage!</h1> <p>This is my first webpage!</p> </body> </html>"},{"prompt":"Write a SQL query to update the age of a certain user. name = \\"John Doe\\" age = 25","completion":"UPDATE users SET age = 25 WHERE name = 'John Doe';"},{"prompt":"Write an HTML form which includes a text field, a submit button and a check box labeled \\"Remember Me\\".","completion":"<form> <input type=\\"text\\" placeholder=\\"Type something...\\"> <input type=\\"submit\\" value=\\"Submit\\"> <input type=\\"checkbox\\" name=\\"rememberme\\" value=\\"true\\">Remember Me </form>"},{"prompt":"Create an array of strings containing the names of the seven days of the week.","completion":"let daysOfWeek = [\\"Monday\\", \\"Tuesday\\", \\"Wednesday\\", \\"Thursday\\", \\"Friday\\", \\"Saturday\\", \\"Sunday\\"];"},{"prompt":"Write a query to count the number of movies released in 2020 from the database.","completion":"SELECT COUNT(*) AS total_movies FROM movies WHERE year = 2020;"},{"prompt":"Create an object in JavaScript containing the output of a multiplication table from 1 to 10.","completion":"let multiplicationTable = { 1:1,2,3,4,5,6,7,8,9,10, 2:2,4,6,8,10,12,14,16,18,20, 3:3,6,9,12,15,18,21,24,27,30, 4:4,8,12,16,20,24,28,32,36,40, 5:5,10,15,20,25,30,35,40,45,50, 6:6,12,18,24,30,36,42,48,54,60, 7:7,14,21,28,35,42,49,56,63,70, 8:8,16,24,32,40,48,56,64,72,80, 9:9,18,27,36,45,54,63,72,81,90, 10:10,20,30,40,50,60,70,80,90,100 };"},{"prompt":"Develop a Python script to count the number of characters, words, and sentences present in a given string. This is a sample sentence to test the program.","completion":"string = 'This is a sample sentence to test the program.' character_count = len(string) word_count = len(string.split()) sentence_count = len(string.split('.')) print('Number of characters: ', character_count) print('Number of words: ', word_count) print('Number of sentences: ', sentence_count) Output: Number of characters: 45 Number of words: 8 Number of sentences: 1"},{"prompt":"Explain what is a non-deterministic algorithm.","completion":"A non-deterministic algorithm is an algorithm that can produce different results when run multiple times with the same inputs. This is because the algorithm may make use of randomness or take different paths based on the input, and the result of each run will be different. Non-deterministic algorithms are useful in solving problems that cannot be solved with traditional deterministic algorithms, such as certain AI problems or certain puzzles."},{"prompt":"Explain the concept of recursion with an example.","completion":"Recursion is a technique in which a function calls itself. It is used to solve problems which can be broken down into sub-problems that are similar to the original problem. An example of recursion is the Fibonacci sequence, where a number in the sequence is the sum of the previous two numbers. The sequence can be computed using a recursive function: def Fibonacci(n): if n<0: print(\\"Incorrect input\\") elif n==1: return 0 elif n==2: return 1 else: return Fibonacci(n-1)+Fibonacci(n-2) # Driver program print(Fibonacci(6)) Output: 5"},{"prompt":"Develop a solution for the classic pattern recognition problem - the Towers of Hanoi.","completion":"// function to solve the Tower of Hanoi problem def solveTowerOfHanoi(n, source, auxillary, destination): if n==1: print(\\"Move disk 1 from source\\",source,\\"to destination\\",destination) return solveTowerOfHanoi(n-1, source, destination, auxillary) print(\\"Move disk\\",n,\\"from source\\",source,\\"to destination\\",destination) solveTowerOfHanoi(n-1, auxillary, source, destination) # Driver code n = 3 solveTowerOfHanoi(n, 'A', 'B', 'C') Output: Move disk 1 from source A to destination C Move disk 2 from source A to destination B Move disk 1 from source C to destination B Move disk 3 from source A to destination C Move disk 1 from source B to destination A Move disk 2 from source B to destination C Move disk 1 from source A to destination C"},{"prompt":"Explain what is an API and why it is important.","completion":"An API (Application Programming Interface) is a set of routines, protocols and tools for building software applications. APIs define the way software components should interact and are used to allow different services, such as web services, to communicate with each other. APIs are important because they allow developers to access services and data without having to rewrite or redevelop an entire application. This allows developers to create more secure, efficient and scalable applications. APIs are also used to create new custom solutions and to increase the overall value and performance of existing services."},{"prompt":"Given an array [6, 4, 15, 10], write a JavaScript code snippet to find the largest number. [6, 4, 15, 10]","completion":"let largest = 0; let arr = [6, 4, 15, 10]; for (let i = 0; i < arr.length; i++) { if (arr[i] > largest) { largest = arr[i]; } } console.log(largest); // 15"},{"prompt":"Create a Git repository for a project named \\"My first project\\".","completion":"git init MyFirstProject"},{"prompt":"Create a function sumToN that takes a single argument and returns the sum of the numbers from 1 to the argument.","completion":"def sumToN(n): sum = 0 for i in range(1, n+1): sum += i return sum"},{"prompt":"Given a string s = 'Hello, World!' create a function that takes a string as an input and returns its length. s = 'Hello, World!'","completion":"def getStringLength(s): return len(s)"},{"prompt":"Write a JavaScript code snippet to retrieve the value of the cookie named \\"userID\\".","completion":"var userID = document.cookie.split(';') .find(c => c.trim().startsWith('userID')) .split('=')[1];"},{"prompt":"Given an array [1, 2, 3, 4], write a Python code snippet to print the items in the array in a single line. [1, 2, 3, 4]","completion":"arr = [1, 2, 3, 4] print(*arr, sep=\\", \\") // 1, 2, 3, 4"},{"prompt":"Write a class for a shopping cart in Python.","completion":"class ShoppingCart: def __init__(self): self.cart = {} def add_item(self, item, price): self.cart[item] = price def get_cart_total(self): return sum(self.cart.values())"},{"prompt":"w to use the reduce function in Python for computing the sum of elements in a list?","completion":"from functools import reduce def my_sum(list): return reduce((lambda x, y: x + y), list)"},{"prompt":"Write an if else statement in Python for checking if a given number is positive or negative.","completion":"if x > 0: print(\\"The number is positive\\") else: print(\\"The number is negative\\")"},{"prompt":"Write a loop in Python for printing all even numbers between 1 and 10.","completion":"for i in range(1, 11): if i % 2 == 0: print(i)"},{"prompt":"Write an SQL query to create a table with name ‘Users’ and three columns: firstname, lastname, email.","completion":"CREATE TABLE Users ( firstname VARCHAR(200) NOT NULL, lastname VARCHAR(200) NOT NULL, email VARCHAR(200) NOT NULL );"},{"prompt":"Write a JavaScript code to sort a list of strings in alphabetical order. words = ['car', 'apple', 'tree', 'book', 'cat']","completion":"let sortedWords = words.sort(); console.log(sortedWords); // ['apple', 'book', 'car', 'cat', 'tree']"},{"prompt":"Write a MATLAB code to find the maximum value for an array of 10 elements. A = [10, 20, 30, 40, 50, 60, 70, 80, 90, 100]","completion":"max_val = max(A); fprintf('Max value is %dn', max_val);"},{"prompt":"Write an R code to find the length of the longest string in an array. strings = c('this', 'is', 'a', 'test')","completion":"strings <- c('this', 'is', 'a', 'test') longest <- max(nchar(strings)) cat('The longest string length is: ', longest) Output: The longest string length is: 4"},{"prompt":"Write an R code to return the first 10 rows of a data frame. states-data.csv","completion":"# Load the data states_data <- read.csv(\\"states-data.csv\\") # Get the first 10 rows head(states_data, 10)"},{"prompt":"Design an algorithm that computes the Fibonacci numbers.","completion":"A Fibonacci algorithm can be written using a simple recursive function: int fibonacci(int n) { if (n == 0 || n == 1) { return n; } else { return fibonacci(n - 1) + fibonacci(n - 2); } }"},{"prompt":"Write a JavaScript function that checks if the given string contains any vowels. String: \\"Hello","completion":"function containsVowel(str) { return /[aeiou]/i.test(str); }"},{"prompt":"Create a database table to store real estate records.","completion":"CREATE TABLE real_estate_records( id INT NOT NULL AUTO_INCREMENT, name VARCHAR(50), address VARCHAR(250), bedrooms INT, bathrooms INT, price DECIMAL(10,2), area INT, PRIMARY KEY(id) );"},{"prompt":"Rewrite the following Python code without using the 'list comprehension' syntax. [x * x for x in range(5)]","completion":"list_result = [] for x in range(5): list_result.append(x*x)"},{"prompt":"Explain how a computer can generate pseudo-random numbers.","completion":"A computer can generate pseudo-random numbers by using an algorithm to generate a sequence of numbers that appear to be random. This algorithm uses an initial seed value, typically an input string or value derived from the computer's internal clock, which is then used to generate a sequence of numbers. The resulting sequence will appear to be random to the user, even though it is always the same. Some common methods of generating pseudo-random numbers include the use of linear congruential generators, which use a linear equation to generate a sequence of numbers; the use of a Blum Blum Shub algorithm, which uses the cycle of two large prime numbers to generate a sequence of numbers; or the use of a Mersenne Twister algorithm, which uses a fixed-point representation of a number to generate a sequence of numbers."},{"prompt":"Write a regular expression that extracts all numbers from the given text. Text: \\"The total number of students is 50 and the average score is 78 out of 100.","completion":"d+"},{"prompt":"Describe the purpose of using an Array in programming.","completion":"An array is a data structure used in programming to store a collection of elements of the same type in a contiguous block of memory. Arrays are used to hold items such as numbers, strings, objects, etc. and to perform operations such as searching, sorting, and manipulation on the elements of the array. Arrays are also used to implement other data structures such as stacks, queues, and linked lists."},{"prompt":"Write a Python program to sort a list of tuples using Lambda. list = [(3, 4), (5, 1), (2, 0)]","completion":"sorted_list = sorted(list, key=lambda x: x[1])"},{"prompt":"Create a function that takes a string and converts the string to CamelCase. string = \\"this_is_a_string","completion":"def toCamelCase(string): s = string.split('_') return s[0] + ''.join(x.title() for x in s[1:])"},{"prompt":"Update the Java code to check the condition that the value of \\"amount\\" is greater than 1000 or not. public class Main { public static void main(String args[]){ double amount = 1100; // TODO System.out.println(\\"The amount is greater than 1000: \\"+ amount); } }","completion":"public class Main { public static void main(String args[]){ double amount = 1100; if (amount > 1000) { System.out.println(\\"The amount is greater than 1000: \\"+ amount); } } }"},{"prompt":"Using the code provided, create an algorithm in Python to print the numbers from 1 to 10.","completion":"for i in range(1, 11): print(i)"},{"prompt":"Modify the program to make sure that only integers are accepted as input. name = input(\\"Enter your name: \\") print(\\"Hello, \\" + name)","completion":"name = input(\\"Enter your name: \\") try: name = int(name) print(\\"Hello, \\" + str(name)) except ValueError: print(\\"Error: That was not an integer.\\")"},{"prompt":"Using the code provided, modify the program to output \\"I like cats\\" instead of \\"I love cats\\". print(\\"I love cats\\")","completion":"print(\\"I like cats\\")"},{"prompt":"Using the HTML code provided, add a meta tag to the \\"head\\" element. <head> <title>My Page</title> </head>","completion":"<head> <title>My Page</title> <meta name=\\"keywords\\" content=\\"HTML,CSS,XML,JavaScript\\"> </head>"},{"prompt":"Create a PHP script to print the numbers 1 to 10.","completion":"<?php for (i = 1; i <= 10; i++) { echo i . \\"<br>\\"; } ?>"},{"prompt":"w do you insert a given element in a balanced AVL tree?","completion":"The process of insertion in a balanced AVL tree is similar to the process in a binary search tree, with two additional steps. First, the tree is checked to see if it needs to be rebalanced. If it does, the tree is rebalanced according to the AVL rules. Second, any newly inserted node is checked against its siblings to see if it is in balance or not. If it's not, the tree is rotated to balance it. In order to insert an element in a balanced AVL tree, the following steps must be taken: 1. Start by searching the tree to see if the node to be inserted already exists in the tree. 2. If the node does not exist, insert it in the same fashion as in a binary search tree. 3. Perform post-insertion balancing. This involves checking the newly inserted node's balance factors and rotation if either one is unequal. 4. Update the current node's balance factor as well as the ancestors' balance factors until the root is reached. 5. Once all nodes that need to be balanced have been updated, the insertion is complete."},{"prompt":"Create a CSS class for displaying content in the center of a page.","completion":".center-content { margin: 0 auto; display: flex; justify-content: center; align-items: center; }"},{"prompt":"Create a JavaScript function for getting the unique elements in an array. const arr = [3, 1, 4, 3, 2, 5]","completion":"const getUniqueElements = array => { const uniqueElements = [...new Set(array)]; return uniqueElements; } console.log(getUniqueElements(arr)); // [3, 1, 4, 2, 5]"},{"prompt":"Write an SQL query for finding the minimum and maximum values of a column.","completion":"SELECT MIN(column_name), MAX(column_name) FROM table_name;"},{"prompt":"Create a ruby method for finding the frequency of an element in an array. array = [2, 3, 4, 3, 2, 5, 2]","completion":"def frequency(array) frequency_hash = Hash.new(0) array.each { |num| frequency_hash[num] += 1 } frequency_hash end puts frequency(array) // {2=>3, 3=>2, 4=>1, 5=>1}"},{"prompt":"Write a PHP function for counting the number of words in a string. str = 'Hello World!'","completion":"function wordCount(str) { stringArray = explode(' ', str); return count(stringArray); } echo wordCount(str); // 2"},{"prompt":"Generate a random password that is at least 8 characters and contains numbers, uppercase letters, and symbols.","completion":"\\"\\"\\" Generate a random password that is at least 8 characters and contains numbers, uppercase letters, and symbols. \\"\\"\\" import random def generate_password(): charset = \\"01234567890ABCDEFGHIJKLMNOPQRSTUVWXYZ!@#%^&*()?\\" password = \\"\\" for _ in range(8): password += random.choice(charset) return password if __name__ == '__main__': print(generate_password())"},{"prompt":"Explain why a stack can be used to reverse a string?","completion":"A stack can be used to reverse a string because it follows the Last In First Out (LIFO) principle. This means that the last item to be added in the stack will be the first item to be removed. So when a string is pushed onto the stack, the characters will be stored in reverse order - the last character to be pushed will be the first character to be popped. By popping the characters one at a time, we can reverse the string."},{"prompt":"Select all customers from the customer_table with age greater than 25 and their zip codes within a given range. customer_table = [['Eliza', 22, 48001], ['John', 26, 48034], ['Michael', 50, 48323]] zipcode_range = (48000, 48200)","completion":"\\"\\"\\" Select all customers from the customer_table with age greater than 25 and their zip codes within a given range. \\"\\"\\" #select customers customers = [ customer for customer in customer_table if (customer[1] > 25) and (customer[2] >= zipcode_range[0] and customer[2] <= zipcode_range[1])] print(customers)"},{"prompt":"Count the number of occurrences of a given number in a list of numbers. numbers = [1,1,2,3,4,4,4,5] number = 4","completion":"\\"\\"\\" Count the number of occurrences of a given number in a list of numbers. \\"\\"\\" numbers = [1,1,2,3,4,4,4,5] number = 4 def count_occurrences(numbers, number): count = 0 for num in numbers: if num == number: count += 1 return count print(count_occurrences(numbers, number))"},{"prompt":"Describe the advantages and disadvantages of using recursion.","completion":"Recursion has many advantages including that it is often easier to understand, it eliminates the need for loops, and it can make for concise code when addressing complex problems. However, recursion also has disadvantages such as the potential for infinite loops and excessive memory consumption due to the overhead of function calls. Additionally, recursion can be slower than using loops in some cases."},{"prompt":"Determine whether a given string is a palindrome using stack data structure. string = \\"racecar","completion":"\\"\\"\\" Determine whether a given string is a palindrome using stack data structure. \\"\\"\\" def is_palindrome(string): # reverse the string stack = [] for char in string: stack.append(char) rev_string = \\"\\" while stack: rev_string = rev_string + stack.pop() # compare reversed string with original string if rev_string == string: return True else: return False if __name__ == '__main__': string = \\"racecar\\" print(is_palindrome(string))"},{"prompt":"Create a class named 'Stack' with the following methods: push, pop, peek, isEmpty.","completion":"\\"\\"\\" Create a class named 'Stack' with the following methods: push, pop, peek, isEmpty. \\"\\"\\" class Stack: def __init__(self): self.items = [] def push(self, item): self.items.append(item) def pop(self): return self.items.pop() def peek(self): return self.items[-1] def isEmpty(self): return self.items == []"},{"prompt":"Given a dictionary of key-value pairs, write a function to reorder the dictionary based on the values. d = {'John': 15, 'Anna': 20, 'Bob': 10}","completion":"\\"\\"\\" Given a dictionary of key-value pairs, write a function to reorder the dictionary based on the values. \\"\\"\\" def reorder_dict(d): sorted_dict = {} sorted_values = sorted(d.values()) while sorted_values: key = sorted(d, key=lambda k: d[k] == sorted_values[0])[0] sorted_dict[key] = d[key] sorted_values.remove(d[key]) return sorted_dict if __name__ == '__main__': d = {'John': 15, 'Anna': 20, 'Bob': 10} print(reorder_dict(d))"},{"prompt":"Sum up all the values in a 2D list. list = [[1,2,3],[4,5,6],[7,8,9]]","completion":"\\"\\"\\" Sum up all the values in a 2D list. \\"\\"\\" def sum_2d_list(list_2d): sum = 0 for l in list_2d: for n in l: sum += n return sum if __name__ == '__main__': list_2d = [[1,2,3],[4,5,6],[7,8,9]] print(sum_2d_list(list_2d))"},{"prompt":"Use a Linked List structure to implement a stack data structure.","completion":"\\"\\"\\" Use a Linked List structure to implement a stack data structure. \\"\\"\\" class Node: def __init__(self, val): self.value = val self.next = None class Stack: def __init__(self): self.top = None self.size = 0 def push(self, val): new_node = Node(val) new_node.next = self.top self.top = new_node self.size += 1 def pop(self): if self.top == None: return None else: pop_node = self.top self.top = self.top.next self.size -= 1 return pop_node.value"},{"prompt":"Construct a SQL query to select all records from a table called “customers”, and adjust the order based on the column “first_name” in descending order.","completion":"SELECT * FROM customers ORDER BY first_name DESC;"},{"prompt":"Create a function using JavaScript to generate a random string of up to 10 characters in length.","completion":"function randomString(length) { let result = ''; let characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789'; let charactersLength = characters.length; for ( let i = 0; i < length; i++ ) { result += characters.charAt(Math.floor(Math.random() * charactersLength)); } return result; }"},{"prompt":"Construct a loop in JavaScript that prints out each item in an array. let arr = [1,2,3,4,5]","completion":"for (let i = 0; i < arr.length; i++) { console.log(arr[i]); }"},{"prompt":"Write a code snippet in Python to generate a random float with up to 4 decimal places.","completion":"import random def random_float(a,b): return round(random.uniform(a,b), 4)"},{"prompt":"What is the value of variable \\"a\\" at the end of the code? a = 0 for i in range (10): a +=","completion":"45"},{"prompt":"Below is a simple function, improve it for efficiency and readability: def get_sum(x, y): m = max(x, y) n = min(x, y) z = 0 while n <= m: z += n n += 1 return z","completion":"def get_sum(x, y): # get the lower bound and upper bound lower, upper = min(x, y), max(x, y) # apply the arithmetic series formula return (upper * (upper + 1) - lower * (lower - 1)) // 2"},{"prompt":"ert the missing symbol which will make the code syntactically correct. if x 0","completion":"if x == 0"},{"prompt":"Combine the two objects with the same property value. obj1 = { \\"name\\": \\"John\\", \\"age\\": 22 } obj2 = { \\"name\\": \\"John\\", \\"location\\": \\"New York\\" }","completion":"obj3 = { \\"name\\": \\"John\\", \\"age\\": 22, \\"location\\": \\"New York\\" }"},{"prompt":"Complete the code to slice the list up to index 4. my_list = [1, 2, 3, 4, 5, 6, 7]","completion":"my_list = my_list[:4] # my_list is now [1, 2, 3, 4]"},{"prompt":"Construct a regex pattern to match the following words. words = [\\"cat\\", \\"bat\\", \\"rat\\"]","completion":"pattern = r\\"(cat|bat|rat)\\""},{"prompt":"Using SQL, write a query to fetch the names of all products with a price lower than 50. Table: products Columns: id, name, price Entries: 1, Produce A, 35 2, Produce B, 45 3, Produce C, 75","completion":"SELECT name FROM products WHERE price < 50;"},{"prompt":"Write a C++ program to determine the greatest common factor of two numbers. 14, 63","completion":"#include <iostream> int gcd(int a, int b) { if (b == 0) { return a; } return gcd(b, a % b); } int main() { int a = 14; int b = 63; std::cout << \\"GCD of \\" << a << \\" and \\" << b << \\" is \\" << gcd(a, b) << std::endl; return 0; }"},{"prompt":"Given the following list of strings, return a new list with only the strings that contain the letter \\"e [\\"hello\\", \\"world\\", \\"foo\\", \\"bar\\", \\"elephant\\", \\"cat\\"]","completion":"[\\"hello\\", \\"elephant\\"]"},{"prompt":"Convert the following list of numbers from decimal notation to binary notation. [45, 11, 80, 12]","completion":"[101101, 1011, 1010000, 1100]"},{"prompt":"Using the Jest JavaScript test framework, write a test that checks if a given number is divisible by 2. n = 6","completion":"test('divisible by 2', () => { expect(n % 2).toBe(0); });"},{"prompt":"Create a mongoose model for employees who have the fields 'name', 'age', 'gender', and 'salary'.","completion":"const mongoose = require(\\"mongoose\\"); const EmployeeSchema = new mongoose.Schema({ name: String, age: Number, gender: String, salary: Number, }); module.exports = mongoose.model(\\"Employee\\", EmployeeSchema);"},{"prompt":"Re-write the code below in Java to reverse the first string while preserving the order of the elements in the other strings. arr = [string1, string2, string3]","completion":"String[] arr = {\\"string1\\", \\"string2\\", \\"string3\\"}; String temp = arr[0]; arr[0] = new StringBuilder(temp).reverse().toString(); System.out.println(Arrays.toString(arr));"},{"prompt":"Sort the following array of objects based on the 'name' key in descending order. arr = [ { name: ‘Bill’, age: 25 }, { name: ‘Bob’, age: 21 }, { name: ‘Adam’, age: 20 } ]","completion":"arr.sort((a, b) => (a.name < b.name) ? 1 : -1);"},{"prompt":"Write a SQL query to select all books with a title starting with “The” from the database. Table: books Columns: id, title, year Entries 1, ‘The Millionaire Network’, 2020 2, ‘Web Development for Dummies’, 2020 3, ‘The Network for Beginners’, 2021","completion":"SELECT * FROM books WHERE title LIKE ‘The%’;"},{"prompt":"Write a SQL query to find the names of all customers who bought a laptop from a store. TableName: Customers Columns: CustomerId INT Name VARCHAR(50) PurchaseItem VARCHAR(20) TableName: Purchases Columns: PurchaseId INT CustomerId INT PurchaseItem VARCHAR(20)","completion":"SELECT c.Name FROM Customers c INNER JOIN Purchases p ON c.CustomerId = p.CustomerId WHERE p.PurchaseItem = 'laptop';"},{"prompt":"Create a regex expression to extract all words that contain 3 consonants in a row.","completion":"[a-zA-Z]*[bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ]{3}[a-zA-Z]*"},{"prompt":"Write an algorithm in pseudocode to convert a temperature given in Celsius to its equivalent value in Fahrenheit.","completion":"// Algorithm to convert Celsius to Fahrenheit // Input: numeric value in Celsius (c) // Output: numeric value in Fahrenheit (f) // Step 1: Multiply c by 9 // Step 2: Divide the result 9 by 5 // Step 3: Add 32 to the result // Step 4: Output f f = ( 9 / 5 ) * c + 32"},{"prompt":"Design a logic in Rust to check if an entered integer is a prime number or not.","completion":"fn is_prime(number: i32) -> bool { if number == 0 || number == 1 { return false } for i in 2..(number/2) { if number % i == 0 { return false } } return true }"},{"prompt":"Create a SQL query to count all buyers from a country. TableName: Customers Columns: CustomerID INT Name VARCHAR(40) Country VARCHAR(20) TableName: Purchases Columns: PurchaseID INT CustomerID INT","completion":"SELECT COUNT(*) FROM Customers c INNER JOIN Purchases p ON c.CustomerID = p.CustomerID WHERE c.Country = 'CountryName';"},{"prompt":"Construct a regex expression to identify all numbers within a given string.","completion":"d+"},{"prompt":"mplement a function in Python that takes two array-like structures and returns a new array containing all elements from the first one that do not appear in the second one. list_1 = [9, 4, 2, 1, 5] list_2 = [4, 6, 2]","completion":"def difference_array(list_1, list_2): new_list = [] for i in list_1: if i not in list_2: new_list.append(i) return new_list"},{"prompt":"Create a script that prints the prime numbers up to a given integer n.","completion":"def printPrimesUpTo_n(n): while n > 1: if not (n % 2 and n > 2): flag = False for i in range(2, int(n**0.5) +1): if not n % i: flag = True break if not flag: print(n) n -= 1"},{"prompt":"Create a function in Java that takes an integer n and prints the first n Fibonacci numbers.","completion":"public void printFibonacci(int n) { int a = 0, b = 1, c; if (n == 0) return; for (int i = 1; i <= n; i++) { c = a + b; System.out.print(a + \\" \\"); a = b; b = c; } }"},{"prompt":"Design a procedure in SQL to get maximum salary from the 'employees' table.","completion":"SELECT MAX(salary) FROM employees;"},{"prompt":"mplement a function in Python that takes a list of integers and the size of the list. The function should return a list in which every element is multiplied by three and none of the elements exceeding the size of the list. s=[1,2,3,4]","completion":"def multiply_by_3(s): result = [] for x in s: if x*3 <len(s): result.append(x * 3) return result"},{"prompt":"Write a piece of code in C++ to write \\"Hello World\\" to the console.","completion":"#include <iostream> int main() { std::cout << \\"Hello World!\\"; return 0; }"},{"prompt":"Create a function in JavaScript that removes all vowels from a string.","completion":"function removeVowels(str) { let result = \\"\\"; for (let i = 0; i < str.length; i++) { if ((str[i] !== 'a') && (str[i] !== 'e') && (str[i] !== 'i') && (str[i] !== 'o') && (str[i] !== 'u')) { result += str[i]; } } return result; }"},{"prompt":"Write an algorithm in Python to count how many words a given string contains.","completion":"def count_words(string): words = string.split() return len(words)"},{"prompt":"Design an SQL query to find all the records where the salary is between 10000 and 20000 in the 'employees' table.","completion":"SELECT * FROM employees WHERE salary BETWEEN 10000 AND 20000;"},{"prompt":"Create a function in JavaScript to concatenate two strings without using the concat() method.","completion":"function concat_str(str1, str2) { let result = \\"\\"; for (let i = 0; i < str1.length; i++) { result += str1[i]; } for (let j = 0; j < str2.length; j++) { result += str2[j]; } return result; }"},{"prompt":"Write a SQL query to count the number of unique customers who purchased an item in a given month. Table name: \\"Order","completion":"SELECT COUNT(DISTINCT customer_id) FROM Orders WHERE MONTH(order_date) = <month_number>;"},{"prompt":"Create a MySQL schema to store a table of products.","completion":"CREATE TABLE products ( id int NOT NULL AUTO_INCREMENT, name VARCHAR(255) NOT NULL, description VARCHAR(255) NOT NULL, price DECIMAL(10, 2) NOT NULL, PRIMARY KEY (id) );"},{"prompt":"mplement a Java program to search the title of books in a library.","completion":"public class LibrarySearch { private ArrayList<String> titles; public LibrarySearch() { titles = new ArrayList<String>(); } public boolean searchTitle(String title) { for (int i = 0; i < titles.size(); i++) { String titleInList = titles.get(i); if (title.equals(titleInList)) { return true; } } return false; } }"},{"prompt":"Develop a script in JavaScript to validate an email address.","completion":"function isValidEmail(email) { const re = /^(([^<>()[].,;:s@\\"]+(.[^<>()[].,;:s@\\"]+)*)|(\\".+\\"))@(([[0-9]{1,3}.[0-9]{1,3}.[0-9]{1,3}.[0-9]{1,3}])|(([a-zA-Z-0-9]+.)+[a-zA-Z]{2,}))/; return re.test(String(email).toLowerCase()); }"},{"prompt":"Create a PHP script that can validate if a given string is a valid IP address.","completion":"function validateIP(ip) { return filter_var(ip, FILTER_VALIDATE_IP); }"},{"prompt":"Create a C# method that takes a string and counts the number of times a given character appears. \\"Mississippi\\", 'i'","completion":"public static int countCharacter(string text, char character) { int count = 0; foreach (char c in text) { if(c == character) { count++; } } return count; }"},{"prompt":"Create a schema for a collection in MongoDB to store product data. Collection name: products Schema should include: name, type (string), description (string), price (integer), availability (boolean)","completion":"const ProductSchema = new Schema({ name: { type: String }, type: { type: String }, description: { type: String }, price: { type: Number }, availability: { type: Boolean }, });"},{"prompt":"Write a SQL query to select all rows where the name contains \\"John\\". Table name: employees Table information: id, name, age","completion":"SELECT * FROM employees WHERE name LIKE '%John%'"},{"prompt":"Update a MongoDB document with the following information. Database name: products Collection name: items Document ID: 5e9697d50a5173c078b5306b Field to update: description Value: This item is now available in 3 size","completion":"db.items.updateOne( { _id: ObjectId(\\"5e9697d50a5173c078b5306b\\") }, { set: { description: \\"This item is now available in 3 sizes\\" } } )"},{"prompt":"Write a SQL query to select all rows where the age is greater than or equal to 30. Table name: employees Table information: id, name, age","completion":"SELECT * FROM employees WHERE age >= 30"},{"prompt":"Develop an algorithm to return all possible permutations of a given string. String: \\"abc","completion":"const permute = str => { let results = []; const permutations = (subStr, rest) => { if (!rest.length) { results.push(subStr); } else { for (let i = 0; i < rest.length; i++) { let newSubStr = subStr + rest[i]; let newRest = rest.substring(0, i) + rest.substring(i + 1); permutations(newSubStr, newRest); } } } permutations('', str); return results; }"},{"prompt":"Write a SQL query to join two tables ‘employees’ and ‘locations’ on the key ‘city’ and return only the employees of age 25-35 Table A (employees): id | name | city | age Table B (locations): city | regio","completion":"SELECT e.id, e.name, e.city, e.age FROM employees e INNER JOIN locations l ON e.city = l.city WHERE e.age BETWEEN 25 AND 35;"},{"prompt":"Write a Python script to remove all the values that are greater than 30 from the list list_of_num = [25, 12, 36, 118, 200, 30]","completion":"new_list = [num for num in list_of_num if num <= 30]"},{"prompt":"Complete the SQL query which find the name and age of all female customers Table A (Customers): name | sex | age","completion":"SELECT name, age FROM Customers WHERE sex = 'female';"},{"prompt":"Modify the CSS in the given HTML code to style the web page <html> <head> <title>Styled Page</title> </head> <body> <h1>Styled Page</h1> </body> </html>","completion":"<html> <head> <title>Styled Page</title> <style type=\\"text/css\\"> body { background-color: white; } h1 { font-family: 'Arial', sans-serif; font-size: 30px; color: black; text-align: center; } </style> </head> <body> <h1>Styled Page</h1> </body> </html>"},{"prompt":"Write a user defined function to print the sum of two numbers","completion":"def add_two_numbers(a, b): return a + b"},{"prompt":"Create a new method “listItems” which returns a list of strings","completion":"def listItems(): list_items = [\\"item1\\", \\"item2\\", \\"item3\\"] return list_items"},{"prompt":"Write a function to print the four elements in the given list in reverse order list = [\\"a\\", \\"b\\", \\"c\\", \\"d\\"]","completion":"def print_reverse_order(lst): for item in reversed(lst): print(item) print_reverse_order(list)"},{"prompt":"Write a code snippet that returns the root of a given binary tree. tree = 3 / 4 5 / 3 6 7","completion":"def root(tree): if not tree: return None return tree.val"},{"prompt":"Write a function in C to find the corresponding letter for a given prime number. int prime_no = 11;","completion":"char findLetterforPrime(int prime_no) { char character; switch (prime_no) { case 2: character = 'A'; break; case 3: character = 'B'; break; case 5: character = 'C'; break; case 7: character = 'D'; break; case 11: character = 'E'; break; default: printf(\\" prime number is not in list\\"); } return character; }"},{"prompt":"Edit the following for loop to add a comment before each iteration. for i in range(10): print(i)","completion":"for i in range(10): # loop iteration: i = print(i)"},{"prompt":"Write a code snippet in SQL to show the town fields in a table called \\"library.","completion":"SELECT town FROM library;"},{"prompt":"Write a code snippet in Java that sorts a given array in ascending order.","completion":"public static void sortAscending(int[] arr) { int n = arr.length; for (int i = 0; i < n-1; i++) for (int j = 0; j < n-i-1; j++) if (arr[j] > arr[j+1]) { int temp = arr[j]; arr[j] = arr[j+1]; arr[j+1] = temp; } }"},{"prompt":"Edit the following Python code to add error handling for invalid inputs. def area_triangle(base,height): p","completion":"def area_triangle(base,height): if base == 0 or height == 0: raise ValueError(\\"Base and height should not be zero.\\") else: return 0.5 * base * height"},{"prompt":"Create a C++ code to display the following pattern. x xxx xxxxx xxxxxxx","completion":"#include <iostream> using namespace std; // Function to demonstrate printing pattern void triangle(int n) { // Outer loop to handle number of rows // n in this case for (int i=0; i<n; i++) { // Inner loop to handle number of columns // values changing acc. to outer loop for (int j=0; j<=i; j++ ) { // Printing stars cout << \\"x\\"; } // Ending line after each row cout << \\"n\\"; } } // Driver Function int main() { int n = 4; triangle(n); return 0; }"},{"prompt":"Create a function that prints out the Pythagorean theorem in Python.","completion":"def pythagoras_theorem(): \\"\\"\\"Print the Pythagorean theorem in Python.\\"\\"\\" print(\\"The Pythagorean theorem states that the sum of the squares of the two sides of a right triangle is equal to the square of the hypotenuse.\\")"},{"prompt":"Create an array that contains the numbers from 0 to 10 in Python.","completion":"arr = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]"},{"prompt":"Create a new div element and add it to the DOM with id \\"main-container\\".","completion":"let myDiv = document.createElement('div'); myDiv.id = \\"main-container\\"; document.body.appendChild(myDiv);"},{"prompt":"Write a Java method to transform a String input into a String array with each element the length of 4. String input = \\"HelloWorld\\";","completion":"public static String[] stringToArray(String input) { String[] stringArray = new String[input.length()/4]; int count = 0; for (int i = 0; i < input.length(); i += 4) { stringArray[count] = input.substring(i, i+4); count++; } return stringArray; }"},{"prompt":"Write a JavaScript function to find the cube root of a number. let num = 8;","completion":"function cubeRoot(num) { return Math.pow(num, 1/3); }"},{"prompt":"Create a SQL query to get the number of records from the table \\"users\\" where the value of the \\"active\\" column is True.","completion":"SELECT COUNT(*) AS num_of_active FROM users WHERE active = true;"},{"prompt":"Create a jQuery function that animates an element's background color from red to green over 3 seconds.","completion":"(\\"#element\\").animate({ backgroundColor: \\"green\\" }, { duration: 3000, easing: \\"linear\\" });"},{"prompt":"Edit the following SQL statement to select all rows from the \\"users\\" table where the \\"country_id\\" is 2 and the \\"level\\" is greater than 5. SELECT * FROM users;","completion":"SELECT * FROM users WHERE country_id = 2 AND level > 5;"},{"prompt":"Create a CSS style to make all headings (h1, h2, h3, h4, h5, h6) bold and blue.","completion":"h1, h2, h3, h4, h5, h6{ font-weight: bold; color: blue; }"},{"prompt":"Write a function in Java that takes an input string and changes the case of each letter to its opposite (i.e. upper case to lower case and vice versa). String input = \\"Hello World\\";","completion":"public static String changeCase(String input) { StringBuilder outputString = new StringBuilder(); for (int i = 0; i < input.length(); i++) { char c = input.charAt(i); if (Character.isUpperCase(c)) { outputString.append(Character.toLowerCase(c)); } else { outputString.append(Character.toUpperCase(c)); } } return outputString.toString(); }"},{"prompt":"Create a function in Python that takes an input list of strings and returns the longest string in the list. list = [\\"cat\\", \\"dog\\", \\"elephant\\"]","completion":"def longest_string(list): longest_word = \\"\\" for word in list: if len(word) > len(longest_word): longest_word = word return longest_word"},{"prompt":"Categorize a given dataset into three classes [1, 2, 3, 4, 5]","completion":"Class 1: [1] Class 2: [2, 3] Class 3: [4, 5]"},{"prompt":"Submit a valid Ruby program to remove special characters from a given string Hello#@World!","completion":"def remove_special_chars(str) str = str.gsub(/[^a-zA-Z0-9s]/, '') return str end puts remove_special_chars(\\"Hello#@World!\\")"},{"prompt":"Edit the following class to make sure any variables created as part of the class cannot be modified by the program class Example: def __init__(self, x, y): self.x = x self.y = y","completion":"class Example: def __init__(self, x, y): self.__x = x self.__y = y @property def x(self): return self.__x @x.setter def x(self, val): raise AttributeError(\\"Cannot modify x\\") @property def y(self): return self.__y @y.setter def y(self, val): raise AttributeError(\\"Cannot modify y\\")"},{"prompt":"Given a function, create a program to identify whether the output is equal to 1, 0 or -1. def func(x): if x < 0: return -1 elif x == 0: return 0 else: return 1","completion":"def func_val(x): result = func(x) if result == -1: return -1 elif result == 0: return 0 else: return 1"},{"prompt":"Sort the following array in reversed order: [3, 2, 1, 5, 4, 6] [3, 2, 1, 5, 4, 6]","completion":"[6, 5, 4, 3, 2, 1]"},{"prompt":"Create a function in Python that takes as arguments two strings and returns a boolean if both strings are equal or not. string1 = \\"Hello\\" string2 = \\"World","completion":"def is_equal(str1, str2): if str1 == str2: return True else: return False"},{"prompt":"Explain the differences between Stacks and Queues in computer science.","completion":"Stacks are data structures that operate in a Last In First Out (LIFO) order, while Queues are data structures that operate in a First In First Out (FIFO) order. In a stack, items can only be added or removed from the top, while in a queue, items can be added at the front and removed from the rear. Additionally, stack elements have direct access to the top element, while queue elements are only able to access the front element."},{"prompt":"Create a program to replace a given string with new text. Old Text: \\"Hello World\\" New Text: \\"Hello Universe","completion":"public static String replaceText(String old, String newText) { return old.replace(old, newText); }"},{"prompt":"What are the benefits of using React for web development?","completion":"The benefits of using React for web development include increased efficiency, increased modularity, and easier maintenance due to its component-based architecture. React allows for quick loading times and scalability. React also allows developers to create reusable UI components. Finally, React’s large community makes debugging and finding resources for development easier."},{"prompt":"You need to generate a random four-digit number and return it as an integer.","completion":"import random def generateRandomNumber(): return random.randint(1000,9999)"},{"prompt":"Correct this function so that it returns a correct multiplication table. def multiplication_table(number): for row in range(1, number + 1): output = '' for column in range(1, number + 1): output = output + '%d*%d=%dt' % (row, column, row * row) print(output)","completion":"def multiplication_table(number): for row in range(1, number + 1): output = '' for column in range(1, number + 1): output = output + '%d*%d=%dt' % (row, column, row * column) print(output)"},{"prompt":"Use the given data to print out the average of the numbers. [1, 7, 8, 10]","completion":"def calculateAverage(nums): average = 0 for num in nums: average += num return average / len(nums) print(calculateAverage([1,7,8,10])) # Output: 6.5"},{"prompt":"You are given a string, output a new string with its vowels removed. \\"Hello World","completion":"def removeVowels(s): vowels = 'aeiouAEIOU' s_without_vowel = '' for c in s: if c not in vowels: s_without_vowel += c return s_without_vowel print(removeVowels(\\"Hello World\\")) # Output: Hll Wld"},{"prompt":"mplement a basic calculator that takes an equation and outputs the result. \\"3+3","completion":"def calculator(equation): result = eval(equation) return result print(calculator(\\"3+3\\")) # Output: 6"},{"prompt":"mplement a stack to store and retrieve items in last-in first-out order.","completion":"class Stack: def __init__(self): self.items = [] def push(self, item): self.items.append(item) def pop(self): return self.items.pop() def peek(self): return self.items[len(self.items)-1] def size(self): return len(self.items)"},{"prompt":"Construct a machine learning model in Python for the given dataset. The dataset contains information on the daily income of 500 students. You should be able to predict the income of a student based on the given characteristics.","completion":"import numpy as np import pandas as pd from sklearn.model_selection import train_test_split from sklearn.linear_model import LinearRegression # load dataset dataframe = pd.read_csv('student_income_data.csv') # split into input X and output y X = dataframe.iloc[:,:-1] y = dataframe.iloc[:,-1] # split data into training and testing sets X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.25) # create model model = LinearRegression() # train model model.fit(X_train,y_train) # test model predictions = model.predict(X_test)"},{"prompt":"Compare the performance of two different neural network architectures. Two convolutional neural networks (CNNs) with different depth of layers have been trained on the MNIST dataset.","completion":"# evaluate the performance on the test dataset from sklearn.metrics import accuracy_score # load the test dataset X_test, y_test = load_dataset() # evaluate each model y_pred_1 = model_1.predict(X_test) acc_1 = accuracy_score(y_test, y_pred_1) y_pred_2 = model_2.predict(X_test) acc_2 = accuracy_score(y_test, y_pred_2) # compare the performance if acc_1 > acc_2: print('Model 1 has better performance than Model 2.') elif acc_2 > acc_1: print('Model 2 has better performance than Model 1.') else: print('The performances of the two models are equal.')"},{"prompt":"Construct an algorithm in pseudocode to sort a given array of numbers. [3, 1, 4, 5, 7, 2]","completion":"sort(array A[]): for i = 1 to n-1 begin min = i for j = (i + 1) to n if A[j] < A[min] min = j swap the value at index min and index i end return A[]"},{"prompt":"Construct a SQL query to get the name and age of the youngest student","completion":"SELECT name, age FROM students ORDER BY age asc LIMIT 1;"},{"prompt":"Create a function in R that calculates the mean of a given dataset [4.6, 8.9, 5.4, 7.2]","completion":"mean <- function(data) { sum = 0 for (i in data) { sum = sum + i } mean = sum / length(data) return(mean) }"},{"prompt":"Compute the cross-entropy loss of a given classification problem Ground truth: [0, 0, 0, 1, 1] Predicted: [0, 0, 0, 0.6, 0.8]","completion":"-1.2885609570312778"},{"prompt":"Write a sample program that performs text classification","completion":"import pandas as pd import numpy as np from sklearn.feature_extraction.text import TfidfVectorizer from sklearn.linear_model import LogisticRegression # load dataset dataframe = pd.read_csv('text_classification_data.csv') # convert to vectors vectorizer = TfidfVectorizer() vectors = vectorizer.fit_transform(dataframe['text']) # split data into training and testing sets X_train, X_test, y_train, y_test = train_test_split(vectors, dataframe['label'], test_size = 0.25) # create model model = LogisticRegression() # train model model.fit(X_train,y_train) # test model predictions = model.predict(X_test)"},{"prompt":"Write a function in Python to calculate the compound interest given the principal amount, rate of interest and number of years. p = 1000 r = 0.10 n = 3","completion":"def calc_comp_int(principal, rate, num_years): return principal * (1 + rate) ** num_years - principal print(calc_comp_int(p, r, n))"},{"prompt":"Change the following string to lowercase using C++. \\"THIS STRING WILL BE LOWERCASED","completion":"#include <bits/stdc++.h> using namespace std; int main() { string s = \\"THIS STRING WILL BE LOWERCASED\\"; transform(s.begin(), s.end(), s.begin(), [](unsigned char c) { return std::tolower(c); }); cout << s; return 0; }"},{"prompt":"Suggest a more descriptive name for the following method. def get_data()","completion":"def retrieve_data_from_database():"},{"prompt":"Given a list of numbers and a search value, check if the value is present in the list and return a boolean value. nums = [2, 4, 6, 8, 10] value = 6","completion":"def search_list(nums, value): for num in nums: if num == value: return True return False nums = [2, 4, 6, 8, 10] value = 6 result = search_list(nums, value) print(result) # Output: True"},{"prompt":"Design a function to calculate the distance between two points in a 3-D space. p1 = (3, 2, 1) p2 = (5, 4, 6)","completion":"def get_distance(p1, p2): (x1, y1, z1) = p1 (x2, y2, z2) = p2 dist = ((x2-x1)**2 + (y2-y1)**2 + (z2-z1)**2)**0.5 return dist p1 = (3, 2, 1) p2 = (5, 4, 6) distance = get_distance(p1, p2) print(distance) # Output: 5.196152422706632"},{"prompt":"Create a class that can be used to generate random numbers between a given range.","completion":"class RandomNumberGenerator: def __init__(self, min_num, max_num): self.min_num = min_num self.max_num = max_num def get_random_number(self): return random.randint(self.min_num, self.max_num)"},{"prompt":"Write a type annotation for a function that takes an integer as an input and returns a boolean.","completion":"def func(num: int) -> bool: ..."},{"prompt":"Create a class for a Rectangle with attributes for its length and width, and methods to calculate its area, perimeter and diagonal.","completion":"class Rectangle: def __init__(self, length, width): self.length = length self.width = width def area(self): return self.length * self.width def perimeter(self): return (2*self.length) + (2*self.width) def diagonal(self): return (self.length**2 + self.width**2)**0.5"},{"prompt":"Compile a C program to check for memory leaks. #include <stdio.h> int main() { int* a = (int*)malloc(sizeof(int)); return 0; }","completion":"g++ -g -o program program.c -lm -lstdc++ && valgrind --leak-check=yes ./program"},{"prompt":"Create SQL code to query demographic data from a database. SELECT Name, Age, Gender, Location FROM User_table","completion":"SELECT Name, Age, Gender, Location FROM User_table WHERE Age > 18 AND Gender = 'Female'"},{"prompt":"Generate HTML code to display an interactive button.","completion":"<button onclick=\\"alert('Button was clicked!');\\">Click Me!</button>"},{"prompt":"Construct a Java class to execute a binary search. public class BinarySearch { }","completion":"public class BinarySearch { int binarySearch(int arr[], int l, int r, int x) { if (r >= l) { int mid = l + (r - l) / 2; if (arr[mid] == x) return mid; if (arr[mid] > x) return binarySearch(arr, l, mid - 1, x); return binarySearch(arr, mid + 1, r, x); } return -1; } }"},{"prompt":"Construct a Node program to merge two arrays.","completion":"const mergeArray = (arr1, arr2) => { return [...arr1, ...arr2]; };"},{"prompt":"Write an R code to identify DNA motifs of a given gene sequence. sequence <- c(\\"AAATACTAGCTGAGTTTGTACGTATGGGCC\\")","completion":"motifs <- findMotifs(sequence) print(motifs)"},{"prompt":"Create CSS code to design an expandable menu.","completion":".menu > ul { list-style: none; padding: 0; margin: 0; } .menu > ul > li { float: left; } .menu li { position: relative; } .menu > ul > li > ul { position: absolute; display: none; } .menu > ul > li:hover > ul { display: block; }"},{"prompt":"Generate a Perl script to check for palindromes.","completion":"sub check_palindrome { my (str) = @_; my reverse = reverse str; if(str eq reverse){ return 1; } else{ return 0; } }"},{"prompt":"Construct a C# class to output the prime numbers up to n.","completion":"class PrimeNumber { public static void Main() { Console.Write(\\"Enter a number: \\"); int n = int.Parse(Console.ReadLine()); for (int i = 2; i <= n; i++) { if (CheckPrime(i)) { Console.Write(i + \\" \\"); } } Console.WriteLine(); } public static bool CheckPrime(int numberToCheck) { int boundary = (int)Math.Floor(Math.Sqrt(numberToCheck)); if (numberToCheck == 1) return false; if (numberToCheck == 2) return true; for (int i = 2; i <= boundary; ++i) { if (numberToCheck % i == 0) return false; } return true; } }"},{"prompt":"Reorganize the following code in a more efficient way using Python. def get_student_avg(students): for student in students: sum = 0 for grade in student['grades']: sum += grade avg = sum / len(student['grades']) student['avg'] = avg","completion":"def get_student_avg(students): for student in students: student['avg'] = sum(student['grades']) / len(student['grades'])"},{"prompt":"Correct any errors in the following code. def get_student_avg (studentss): for stdent in studentss: sum = 0 for grade in stdent['grades']: sum += grade avg = sum // len studnet['grades'] stdent['avg']= avg","completion":"def get_student_avg (studentss): for student in studentss: sum = 0 for grade in student['grades']: sum += grade avg = sum // len(student['grades']) student['avg']= avg"},{"prompt":"Suggest a sorting algorithm to sort a list in ascending order. my_list = [3, 8, 5, 4, 1, 9, 7]","completion":"The best sorting algorithm to use for this task would be the Bubble Sort algorithm. In the Bubble Sort algorithm, the list is looped through and elements are compared to each other and swapped if they are not in the correct order. This process is repeated until the list is sorted."},{"prompt":"Suggest a linear search algorithm for the following task. Given a list of numbers, search for the number 6 in the list and return its position.","completion":"The best linear search algorithm to use for this task is the linear search algorithm. In the linear search algorithm, the list is looped through and each element is compared to the target. If the item is found, its position is returned."},{"prompt":"Sort the given list using the quicksort algorithm. my_list = [8, 5, 3, 9, 6, 1]","completion":"def quick_sort(arr): if len(arr) <= 1: return arr else: pivot = arr[0] left, right = [], [] # pivot for x in arr[1:]: if x > pivot: right.append(x) else: left.append(x) # concatenate return quick_sort(left) + [pivot] + quick_sort(right) quick_sort(my_list)"},{"prompt":"Write a Bash script to run multiple commands","completion":"#!/bin/bash # A bash script which will run all the commands given below # command 1 command 1 # command 2 command 2 # command 3 command 3 # command 4 command 4 etc..."},{"prompt":"Print the numbers in a Fibonacci series with a loop.","completion":"# Fibonacci Series using a loop # the first two numbers of the Fibonacci series is 0 and 1 a = 0 b = 1 print(a) print(b) for i in range(10): c = a + b a = b b = c print(c)"},{"prompt":"Create an HTML table","completion":"<table> <tr> <td>Name</td> <td>Age</td> <td>Hobby</td> </tr> <tr> <td>John</td> <td>28</td> <td>Travelling</td> </tr> <tr> <td>Amanda</td> <td>27</td> <td>Reading</td> </tr> </table>"},{"prompt":"mplement a function to solve a given equation. 4x + 2y = 32","completion":"def solve_equation(x, y): A = 4 B = 2 C = 32 y = (C - A*x)/B return y"},{"prompt":"Edit the given code to fix the bug def calculate_tax(price): tax_rate = 0.20 total = price + (price * tax_rate) return total","completion":"def calculate_tax(price): tax_rate = 0.20 total = price + (price * tax_rate) return round(total, 2)"},{"prompt":"Generate a 5-dimensional array using the numpy library","completion":"import numpy as np arr = np.zeros((5,5,5,5,5))"},{"prompt":"Add the following lines after the 2nd line in the given java program public class Calculator { public static void main(String args[]) { int a = 10; int b = 20; Add the following lines int c = a + b; System.out.println(\\"Sum : \\"+c);","completion":"public class Calculator { public static void main(String args[]) { int a = 10; int b = 20; int c = a + b; System.out.println(\\"Sum : \\"+c); } }"},{"prompt":"Generate an appropriate python code snippet to capitalize all elements of an array called A. A = ['welcome', 'to', 'my', 'website']","completion":"A = ['welcome', 'to', 'my', 'website'] A = [x.capitalize() for x in A] print(A)"},{"prompt":"Write a code snippet to count the occurrence of number 4 in an array called arr. arr = [1, 4, 2, 4, 5]","completion":"arr = [1, 4, 2, 4, 5] count = 0 for num in arr: if num == 4: count += 1 print(count)"},{"prompt":"Generate a Pandas code snippet to calculate the averages of the elements of each row in the given dataframe? dataframe = pd.DataFrame([[1, 2, 3], [4, 5, 6], [7, 8, 9]], columns=['a', 'b', 'c'])","completion":"import pandas as pd dataframe = pd.DataFrame([[1, 2, 3], [4, 5, 6], [7, 8, 9]], columns=['a', 'b', 'c']) dataframe['avg'] = dataframe.mean(axis=1) print(dataframe)"},{"prompt":"Edit the following code snippet to make it calculate the median instead of the average? x = [1,2 ,3, 4, 5]","completion":"x = [1,2 ,3, 4, 5] import statistics median = statistics.median(x) print(median)"},{"prompt":"Generate a code snippet to perform an element-wise multiplication of two NumPy arrays named A and B. A = [1,2,3] B = [4,5,6]","completion":"import numpy as np A = np.array([1,2,3]) B = np.array([4,5,6]) C = np.multiply(A, B) print(C)"},{"prompt":"Generate a code snippet to print out the top 3 highest numbers from an array A. A = [9, 4, 18, 24, 7, 22, 11]","completion":"A = [9, 4, 18, 24, 7, 22, 11] A.sort(reverse=True) top_3 = A[:3] print(top_3)"},{"prompt":"Subtract two matrices named A and B and store the result in matrix C? A = [[1, 2, 3], [4, 5, 6], [7, 8, 9]] B = [[10, 11, 12], [13, 14, 15], [16, 17, 18]]","completion":"import numpy as np A = np.array([[1, 2, 3], [4, 5, 6], [7, 8, 9]]) B = np.array([[10, 11, 12], [13, 14, 15], [16, 17, 18]]) C = A - B print(C)"},{"prompt":"Generate a code snippet to sort the students alphabetically by their last name in the following list? students = [('John', 'Doe'), ('Max', 'Smith'), ('Alice', 'Brown')]","completion":"students = [('John', 'Doe'), ('Max', 'Smith'), ('Alice', 'Brown')] students.sort(key= lambda x: x[1]) print(students)"},{"prompt":"Select the most suitable approach for compressing a given list of strings.","completion":"Using Huffman Coding."},{"prompt":"Write the SQL query to delete all tables from a given database. database: testdb","completion":"DROP DATABASE testdb;"},{"prompt":"Suggest the best way to implement an AI system for user authentication.","completion":"Using a combination of facial recognition and voice recognition."},{"prompt":"Suggest the most appropriate approach to train a neural network model with a large dataset.","completion":"Using mini-batch gradient descent."},{"prompt":"Suggest a way to edit the following text data using NLP techniques text = \\"This is an exmaple","completion":"Using NLP techniques, the text can be edited in various ways such as lemmatisation, stemming and tokenisation. For example, the text can be tokenized and lemmatized so that the words \\"example\\" and \\"exmaple\\" are both converted to the root word \\"example\\"."},{"prompt":"Write a Python program to exchange the values of two different variables. x = 10 y = 20","completion":"x, y = y, x"},{"prompt":"Select the best approach to process large amount of data in parallel.","completion":"Using MapReduce."},{"prompt":"dentify the most suitable language to create a web application.","completion":"JavaScript."},{"prompt":"Create a class in Java called Student that stores four pieces of data: name, id, major, and gpa.","completion":"class Student { // data members String name; int id; String major; double gpa; // constructors Student(String name, int id, String major, double gpa) { this.name = name; this.id = id; this.major = major; this.gpa = gpa; } // method 1 public String getName() { return this.name; } // method 2 public int getId() { return this.id; } // method 3 public String getMajor() { return this.major; } // method 4 public double getGPA() { return this.gpa; } // method 5 public void setName(String name) { this.name = name; } // method 6 public void setId(int id) { this.id = id; } // method 7 public void setMajor(String major) { this.major = major; } // method 8 public void setGPA(int gpa) { this.gpa = gpa; } }"},{"prompt":"Create an array in Python with 6 elements and print the last three elements.","completion":"my_array = [1, 2, 3, 4, 5, 6] #Print the last three elements print (my_array[-3:]) #Output:[4, 5, 6]"},{"prompt":"Generate an array in JavaScript with two elements of type boolean.","completion":"let booleanArray = [true, false];"},{"prompt":"Create a random matrix using NumPy where the elements have 2 decimal places.","completion":"import numpy as np # Create a 2×2 matrix random_matrix = np.random.rand(2,2) # Round to two decimal places np.around(random_matrix, decimals=2)"},{"prompt":"Modify the following SQL statement to select only the rows with prices greater than 100. SELECT * FROM products;","completion":"SELECT * FROM products WHERE price > 100;"},{"prompt":"Determine the fraction of numbers in this list that are multiples of 3: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10].","completion":"fraction = 3/10 = 0.3"},{"prompt":"Create a dictionary in Python mapping the following characters to numbers: A = 1, B = 2, C = 3","completion":"my_dict = { 'A': 1, 'B': 2, 'C': 3 }"},{"prompt":"Classify the following sentence as positive, negative, or neutral: \\"I am so happy to be here.","completion":"Positive"},{"prompt":"Build a function in Python that takes a string as the input and prints each letter of the string on a separate line.","completion":"def print_letters(string): for letter in string: print(letter)"},{"prompt":"Sort the following array in descending order using JavaScript:[\\"cat\\", \\"dog\\", \\"fish\\", \\"elephant\\"].","completion":"my_arr = [\\"cat\\", \\"dog\\", \\"fish\\", \\"elephant\\"]; my_arr.sort().reverse(); console.log(my_arr); //prints [\\"elephant\\", \\"fish\\", \\"dog\\", \\"cat\\"]"},{"prompt":"Modify the following C++ code to capitalize the uppercase letters in a given string. #include <iostream> #include <string> int main() { std::string str = \\"hello world\\"; std::cout << str; return 0; }","completion":"#include <iostream> #include <string> #include <algorithm> int main() { std::string str = \\"hello world\\"; //Convert to uppercase letters std::transform(str.begin(), str.end(), str.begin(), ::toupper); std::cout << str; return 0; }"},{"prompt":"w does the break statement work in a for loop?","completion":"The break statement is used to break out of a loop, including a for loop. When a break statement is encountered inside a loop, it causes the loop to stop executing and control to be transferred outside the loop. For example, in a for loop, if the break statement is encountered, the loop is terminated immediately, and the program control will be transferred outside the loop."},{"prompt":"Generate a timestamp based on the current date.","completion":"import time timestamp = int(time.time()) print(timestamp) # 1598059584"},{"prompt":"Write a Python program to find all numbers divisible by 5 but not a multiple of 7, between 1500 and 2700 (both included).","completion":"result = [] for i in range(1500, 2701): if i % 5 == 0 and i % 7 != 0: result.append(i) print(result) # [1505, 1540, 1575, 1610, 1645, 1680, 1715, 1750, 1785, 1820, 1855, 1890, 1925, 1960, 1995, 2030, 2065, 2100, 2135, 2170, 2205, 2240, 2275, 2310, 2345, 2380, 2415, 2450, 2485, 2520, 2555, 2590, 2625, 2660, 2695]"},{"prompt":"Debug the following PHP code which tries to connect to a remote host. host = \\"myserver.com\\"; user = \\"admin\\"; password = \\"123456\\"; conn = new mysql_connect(host,user,password); if(!conn) die(\\"Unable to connect!\\");","completion":"host = \\"myserver.com\\"; user = \\"admin\\"; password = \\"123456\\"; // Connecting, selecting database conn = mysql_connect(host, user, password) or die('Could not connect: ' . mysql_error());"},{"prompt":"Generate a Python dictionary that contains student information. Name: John; Age: 22; Grade: A;","completion":"{ \\"name\\": \\"John\\", \\"age\\": 22, \\"grade\\": \\"A\\" }"},{"prompt":"Design a SQL query to select the top 5 movies based on the number of 'likes'. Table Name: Movies Columns: Movie_ID, Movie_Name, Like","completion":"SELECT Movie_Name FROM Movies ORDER BY Likes LIMIT 5;"},{"prompt":"Classify the given sentence into either declarative or interrogative sentence. John is getting ready for the test.","completion":"Declarative sentence."},{"prompt":"Write a JavaScript code that gets the URL of a web page.","completion":"var url = window.location.href;"},{"prompt":"Edit the following C code so it runs correctly. #include <stdio.h> int main(){ int score = 80; printf(\\"Your final score is: %i; return 0; }","completion":"#include <stdio.h> int main(){ int score = 80; printf(\\"Your final score is: %i\\", score); return 0; }"},{"prompt":"Design a SQL query to find the names of the employees who have an age of 30 or more. Table Name: Employees Columns: Employee_ID, Last_Name, Age","completion":"SELECT Last_Name FROM Employees WHERE Age >= 30;"},{"prompt":"Generate XML code for the following. Student Name: John Student ID: 123456 Course: Computer Science","completion":"<studentName>John</studentName> <studentID>123456</studentID> <course>Computer Science</course>"},{"prompt":"Explain how expression-oriented programming works in Java.","completion":"Expression-oriented programming is a programming paradigm where all commands are based on expressions. In Java, expression-oriented programming is used with Java Lambda Expressions, where an expression is executed by passing the command inside parentheses and executing that expression in the context of the method. This approach enables the expression to be executed immediately, as opposed to the traditional approach of declaring a variable, calling a method, and assigning a value to it."},{"prompt":"Evaluate the given value for the expression \\"3 * 5 + 4 / 2\\".","completion":"17."},{"prompt":"Explain how to use the built-in bubble sort function for sorting a given list of numbers. [4, 9, 0, 3, 5, 7]","completion":"The built-in bubble sort function can be used to sort the given list of numbers. The algorithm starts from the beginning of the list and compares two adjacent elements. If the first number is larger than the second number, they are swapped. This process is repeated until the end of the list is reached. After one iteration, the largest element is placed at the end of the list. This process is then repeated for the remaining elements until the list is completely sorted. To use the Python built-in bubble sort function, simply call the bubble sort on the list, and it will return the sorted list."},{"prompt":"Convert a given list into a dictionary in Python [\\"apple\\", \\"banana\\", \\"cherry\\"]","completion":"dict = { \\"apple\\": 0, \\"banana\\": 1, \\"cherry\\": 2 }"},{"prompt":"Define a function to search for a specific element in an array [5, 10, 2, 4, 7]","completion":"def search(arr, e): for i in range(len(arr)): if (arr[i] == e): return i return -1"},{"prompt":"Explain the concept of an ASCII table","completion":"An ASCII table is a table that shows the correspondence between characters and symbols commonly used in computers or electronic devices. It consists of a set of codes that represent unique characters, such as letters, numbers, and symbols. Each code is represented by a number between 0 and 127 and is referred to by its decimal, octal, hexadecimal, or binary numbers. It is used to store, transmit, and display characters in different computer systems."},{"prompt":"Code a solution that prints out the string \\"Hello, [name]!\\" using string interpolation in JavaScript.","completion":"const name = \\"John Doe\\"; console.log(\`Hello, {name}!\`);"},{"prompt":"Rewrite the following JavaScript code to make it compatible with older browsers. let colors = [\\"red\\", \\"blue\\", \\"green\\"];","completion":"var colors = [\\"red\\", \\"blue\\", \\"green\\"];"},{"prompt":"Write a JavaScript function that takes an array of numbers and returns an array containing only the even numbers.","completion":"function get_even_numbers(nums) { return nums.filter(n => n % 2 == 0); }"},{"prompt":"Fill up the missing value in the given JSON array. [19, 10, 22, 25, ??, 4, 100]","completion":"[19, 10, 22, 25, 15, 4, 100]"},{"prompt":"What are the two basic components of a computer system?","completion":"The two basic components of a computer system are hardware and software."},{"prompt":"Write a JavaScript function to determine if a given string contains at least one upper case letter.","completion":"function hasUpperCase(str) { return str.split('').some(function(l) { return l.charCodeAt(0) >= 65 && l.charCodeAt(0) <= 90; }); }"},{"prompt":"Rewrite the following code using the try-catch statement if (num!=0) result = 1/num; else result = 0;","completion":"try { result = 1 / num; } catch (err) { result = 0; }"},{"prompt":"You are given a string s, output the longest substring with no repeating characters. s = \\"abcabcbb","completion":"def longest_substring(s): length = len(s) current_length = 1 last_occur= {s[0]:0 } max_length = 0 i = 0 while i < length: if(s[i] in last_occur): current_length = i - last_occur[s[i]] if(current_length > max_length): max_length = current_length last_occur[s[i]] = i else: last_occur[s[i]] = i current_length += 1 if(current_length > max_length): max_length = current_length i += 1 return max_length longest_substring(s) 3"},{"prompt":"Supply a CSS styling for the HTML structure in Task 2.","completion":"<style> body { background-color: #fafafa; font-family: sans-serif; } </style>"},{"prompt":"Calculate the distance between two points (x1, y1) and (x2, y2). x1 = 5, x2 = 8 y1 = 3, y2 = 12","completion":"def calculate_distance(x1, x2, y1, y2): return ((x2-x1)**2 + (y2-y1)**2)**0.5 calculate_distance(x1, x2, y1, y2) 7.615773105863909"},{"prompt":"You are given an array of integers and an integer k. Output one of the maximum sums of k consecutive elements in the array. array = [1, -3, 4, 5, 7, 8, -2, 9, -1] k=3","completion":"def max_sum_k_elements(array, k): max_sum = array[0] for i in range(len(array)-k+1): sum_temp = 0 for j in range(k): sum_temp += array[i+j] if sum_temp > max_sum: max_sum = sum_temp return max_sum max_sum_k_elements(array, k)"},{"prompt":"Fix the bug in the following Python script: def is_odd(x): if x % 2 == 1 return True is_odd(5)","completion":"def is_odd(x): if x % 2 == 1: return True else: return False is_odd(5)"},{"prompt":"Create a PHP class to represent a student with the following data fields: first name, last name, age, GPA.","completion":"class Student { public firstName; public lastName; public age; public GPA; public function __construct(firstName, lastName, age, GPA) { this->firstName = firstName; this->lastName = lastName; this->age = age; this->GPA = GPA; } }"},{"prompt":"Write a JavaScript function that calculates the area of a triangle based on the three sides provided.","completion":"function areaOfTriangle(a, b, c) { var s = (a+b+c)/2; return Math.sqrt(s*(s-a)*(s-b)*(s-c)); }"},{"prompt":"Using the following PHP array, output each name in its own bold tags. names = array(\\"John\\", \\"Sarah\\", \\"Paul\\");","completion":"<?php foreach(names as name){ echo \\"<b>\\".name.\\"</b><br>\\"; } ?>"},{"prompt":"Edit the following HTML code to allow Google Chrome to accurately render the page. <html> <head> <title>My Webpage</title> </head> <body> <table> <tr> <th>Column 1</th> <th>Coloumn 2</th> </tr> </body> </html>","completion":"<html> <head> <title>My Webpage</title> </head> <body> <table> <tr> <th>Column 1</th> <th>Column 2</th> </tr> </table> </body> </html>"},{"prompt":"Create a C program to print the numbers from 1 to 100, except for any number divisible by 3.","completion":"#include <stdio.h> int main() { for (int i = 1; i <= 100; i++) { if (i % 3 != 0) printf(\\"%dn\\", i); } return 0; }"},{"prompt":"Locate and erase all text nodes from the following XML string. <body> <div>Hello world!</div> <div>Good bye world!</div> </body>","completion":"def delete_text_nodes(xml_string): root = ET.fromstring(xml_string) # parse the XML string elems = root.findall(\\".//text()\\") # find all text nodes for e in elems: e.getparent().remove(e) # remove the text node return ET.tostring(root) # return the parsed XML string"},{"prompt":"Write a function to create a Nim game board with size n.","completion":"def create_game_board(n): # Create an empty list game_board = [] # Loop based on number of rows for i in range(n): # Create an empty row row = [] # Loop based on number of columns for j in range(n): # Add value 0 at each position row.append(0) # Add the row in empty list game_board.append(row) # Return the game board return game_board"},{"prompt":"Create a dictionary with the keys of the students' IDs and their corresponding grades as the values. student_ids = [1000, 1001, 1002, 1003] grades = [90, 80, 60, 50]","completion":"def create_grade_dict(student_ids, grades): # Create an empty dictionary grade_dict = {} # Loop based on length of student ids for i in range(len(student_ids)): # Add id as key and grade as value grade_dict[student_ids[i]] = grades[i] # Return the grade dictionary return grade_dict"},{"prompt":"the given snippet of code, insert a line of code to display the sum of two numbers. int a = 10; int b = 20;","completion":"int a = 10; int b = 20; System.out.println(\\"Sum of two numbers is \\" + (a + b));"},{"prompt":"Write a function in Python for sorting a given list of numbers. [29, 11, 46, 7, 248, 1724]","completion":"def sort_list(numbers): return sorted(numbers)"},{"prompt":"Create an HTML form for taking user input about his/her favorite ice-cream flavor.","completion":"<form action=\\"/submit-flavor\\" method=\\"post\\"> <label>Choose your favorite flavor:</label> <select name=\\"Flavor\\" required> <option value=\\"Vanilla\\">Vanilla</option> <option value=\\"Chocolate\\">Chocolate</option> <option value=\\"Strawberry\\">Strawberry</option> <option value=\\"Mint\\">Mint</option> <option value=\\"Coffee\\">Coffee</option> </select><br><br> <input type=\\"submit\\" value=\\"Submit\\"> </form>"},{"prompt":"Create a function in R for converting a string into uppercase.","completion":"upperCase <- function(string){ return(toupper(string)) }"},{"prompt":"Design a CSS style sheet for a given HTML table.","completion":"table { border: 1px solid black; border-collapse: collapse; } th, td { padding: 5px; border: 1px solid black; }"},{"prompt":"Write a SQL query to find the name and the average value of all the transactions for each customer.","completion":"SELECT customer.name, AVG(transaction.value) FROM customer INNER JOIN transaction ON customer.customer_id = transaction.customer_id GROUP BY customer.name"},{"prompt":"Generate a valid C++ code to implement a linked list with basic operations.","completion":"#include<iostream> using namespace std; class Node { public: int data; Node* next; }; class LinkedList { Node* head; public: LinkedList(){ head = NULL; } void append(int data) { Node* newNode = new Node; newNode->data = data; newNode->next = NULL; if (head == NULL) { head = newNode; } else { Node* temp = head; while (temp->next != NULL) { temp = temp->next; } temp->next = newNode; } } void deleteNodeByData(int data) { if (head == NULL) { return; } if (head->data == data) { Node *temp = head; head = head->next; delete temp; return; } Node *prev; Node *curr = head; while(curr != NULL && curr->data != data) { prev = curr; curr = curr->next; } prev->next = curr->next; delete curr; return; } void printList() { Node* temp = head; while (temp != NULL) { cout << temp->data << endl; temp = temp->next; } } };"},{"prompt":"Write a Bash shell script to print the unique elements in the given array. list=(1 2 3 1 4 2 5)","completion":"#!/bin/bash list=(1 2 3 1 4 2 5) unique_list=() for num in {list[@]}; do if [[ ! {unique_list[*]} =~ num ]]; then unique_list+=(num) fi done echo {unique_list[@]}"},{"prompt":"Generate a valid CSS rule to center align the text with the id \\"heading_text","completion":"#heading_text { text-align: center; }"},{"prompt":"Using the comment as a guide, edit the following CSS so that the text of the id 'heading_text' is green when an element of class 'selected' is active. .selected { border: 1px solid green; }","completion":".selected { border: 1px solid green; } #heading_text { color: green; } .selected:active #heading_text { color: green; }"},{"prompt":"Create a HTML form and assign 'onSubmit' handler to it.","completion":"<form onSubmit=\\"alert('Form submitted')\\"> <!-- Form Content --> <input type=\\"submit\\" value=\\"Submit\\"> </form>"},{"prompt":"Design an SQL query to select the first and last name of all users who are over the age of 25.","completion":"SELECT first_name, last_name FROM users WHERE age > 25"},{"prompt":"Sort the numbers in an ascending order in the given array. [4, 2, 9, 10, 5]","completion":"[2, 4, 5, 9, 10]"},{"prompt":"Design a recursive algorithm in Python to calculate the sum of all elements in the given array [1, 3, 7, 9, 11]","completion":"def recursive_sum(arr): if len(arr) == 1: return arr[0] else: return arr[0] + recursive_sum(arr[1:]) arr = [1, 3, 7, 9, 11] print(recursive_sum(arr))"},{"prompt":"Estimate the storage space of the given data type. Integer","completion":"4 bytes"},{"prompt":"Write a JSP code snippet to instantiate an array object","completion":"<% int [] arr = new int[3]; %>"},{"prompt":"Edit the given C++ code for reversing a given string. #include <iostream> using namespace std; int main() { string str = \\"Hello World!\\"; cout << str; return 0; }","completion":"#include <iostream> #include <algorithm> using namespace std; int main() { string str = \\"Hello World!\\"; reverse(str.begin(), str.end()); cout << str; return 0; }"},{"prompt":"Search and delete a specific record from the given SQL table. Table Name: products Record ID: 12","completion":"DELETE FROM products WHERE id = 12;"},{"prompt":"Compare the given two strings and return true if the strings match. String 1: hello String 2: hello","completion":"if (str1 == str2) return true; else return false;"},{"prompt":"Assign values to the given array of length 10 and print it using a Java program.","completion":"public class PrintArray { public static void main(String[] args) { int[] array = new int[10]; for (int i = 0; i < 10; i++) { array[i] = i; } for (int i = 0; i < 10; i++) { System.out.print(array[i] + \\" \\"); } } }"},{"prompt":"Output the list of all prime numbers in the range of 2 to 50.","completion":"[2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47]"},{"prompt":"Find the elements at even indexes in a given list. list = [1,3,4,7,10,21]","completion":"[list[i] for i in range(0,len(list),2)]"},{"prompt":"Using SQLite, create a table from the following schema. created_at DATETIME, user_id INTEGER, username VARCHAR(64)","completion":"CREATE TABLE table_name(created_at DATETIME, user_id INTEGER, username VARCHAR(64));"},{"prompt":"Construct a while loop to print out the numbers 5 to 15.","completion":"num = 5 while num <= 15: print(num) num += 1"},{"prompt":"Suggest a LINQ query to retrieve fields \\"name\\" and \\"date\\" from an array of objects. [ { \\"name\\":\\"John Doe\\", \\"date\\":\\"1/1/2020\\" }, { \\"name\\":\\"Jane Doe\\", \\"date\\":\\"1/2/2020\\" }, { \\"name\\":\\"John Smith\\", \\"date\\":\\"1/3/2020\\" } ]","completion":"var data = array.Select(x => new { x.name, x.date });"},{"prompt":"Write a loop to extract the first three characters from each string in the list. letters = [\\"abcde\\", \\"fghij\\", \\"klmno\\"]","completion":"extracted_letters = [] for letter in letters: extracted_letters.append(letter[0:3])"},{"prompt":"Create a mapping of keys and values from a given dictionary. dict = {\\"a\\":1, \\"b\\":2, \\"c\\":3}","completion":"mapping = {k:v for (k,v) in dict.items()}"},{"prompt":"Using JavaScript, suggest a program to update a key in a given object. object = {\\"name\\":\\"john\\"};","completion":"object[\\"name\\"] = \\"JAMES\\";"},{"prompt":"Write a method in Python to append a given list to another list. list_1 = [1,2,3] list_2 = [4,5,6]","completion":"list_1.extend(list_2)"},{"prompt":"Construct an IF-ELSE statement that test for a given condition and prints result based on that. to_test = 5","completion":"if to_test < 10: print(\\"Less than 10\\") else: print(\\"Greater than 10\\")"},{"prompt":"Suggest an algorithm to sum values of pairs in an array. arr = [2, 3, 5, 7]","completion":"def array_sum(arr): sum = 0 for i in range(0, len(arr)-1, 2): sum += arr[i] + arr[i+1] return sum"},{"prompt":"Update the given CSS class statement. .red_box { background-color: #AAFF00; margin: 10px; width: 20px; }","completion":".red_box { background-color: #AAFF00; margin: 10px; padding: 15px; width: 20px; border-radius: 10px; }"},{"prompt":"Get the output from the given code snippet on an array of integers. int[] numbers = {1,2,3,4,5,6,7,8,9}; int result = 0; for (int number : numbers) { result += number; }","completion":"45"},{"prompt":"Given a string of words, calculate the number of unique words. String str = \\"This is a test to see how many unique words are in this string\\";","completion":"13"},{"prompt":"Place the missing parenthesis in the given algorithm. for i = 1 to n if (A[i] == x) start = i; end = i + k – 1;","completion":"for (i = 1; i <= n; i++) if (A[i] == x) start = i; end = i + k - 1;"},{"prompt":"Read the code and figure out what will be the output of the program. int a = 15; int b = 10; int result = 0; if(a == b){ result = a + b; } else { result = a * b; }","completion":"150"},{"prompt":"Generate the output for this simple algorithm with the given input. Input: array = [5, 4, 1, 2, 6] Output: 8","completion":"The output of the algorithm is 8."},{"prompt":"Given an array of integers and an integer value, figure out whether the given value is present in the array or not. Array: [1, 2, 3, 4, 5, 6] Value: 7","completion":"False"},{"prompt":"Create a Python program that takes two strings as input and finds their longest common subsequence. x = “ABCBDAB” y = “BDCABA”","completion":"def longestSubsequence(x, y): m = len(x) n = len(y) L = [[None]*(n+1) for i in range(m+1)] for i in range(m + 1): for j in range(n + 1): if i == 0 or j == 0 : L[i][j] = 0 elif x[i-1] == y[j-1]: L[i][j] = L[i-1][j-1]+1 else: L[i][j] = max(L[i-1][j] , L[i][j-1]) index = L[m][n] lcs = [\\"\\"] * (index+1) lcs[index] = \\"0\\" i = m j = n while i > 0 and j > 0: if x[i-1] == y[j-1]: lcs[index-1] = x[i-1] i-=1 j-=1 index-=1 elif L[i-1][j] > L[i][j-1]: i-=1 else: j-=1 print(\\"Longest common subsequence of \\" + x + \\" and \\" + y + \\" is \\"\\" + \\"\\".join(lcs) + \\"\\"\\")"},{"prompt":"Create a HTML function that changes the color of a given element.","completion":"function changeColor(element, color){ element.style.backgroundColor = color; }"},{"prompt":"Create a Javascript class for a customer address book.","completion":"class AddressBook { constructor() { this.contacts = []; } add(name, email, phone, relation) { let contact = { name, email, phone, relation }; this.contacts.push(contact); } delete(name) { this.contacts = this.contacts.filter(contact => contact.name !== name); } list() { console.log(this.contacts); } }"},{"prompt":"Create a SQL query for finding all books written by a given author.","completion":"SELECT books.* FROM books JOIN authors ON books.author_id = authors.id WHERE authors.name = 'John Doe'"},{"prompt":"Write a PHP script to find the 5th element of an array. arr = array(14,32,25,19,14,89,130);","completion":"<?php arr = array(14,32,25,19,14,89,130); echo arr[4]; ?>"},{"prompt":"Write a Python function that accepts a list and returns the sum of the numbers present in the list. list = [1, 2, 3, 4, 5]","completion":"def list_sum(lst): result = 0 for num in lst: result += num return result"},{"prompt":"Using the HTML code below, add a link to an external web page. <h2>My First Web Page</h2> <p>This is my first web page.</p>","completion":"<h2>My First Web Page</h2> <p>This is my first web page. <a href=\\"url-to-some-site\\">Learn More</a>.</p>"},{"prompt":"Determine the accuracy of a model trained on a given dataset.","completion":"Accuracy of a model can be determined by computing its predictions against the actual values of the dataset, and then comparing the number of correct predictions with the total number of predictions. The accuracy of the model is then calculated as the proportion of correct predictions to the total number of predictions."},{"prompt":"Add an event listener to a given HTML element. <button type=\\"button\\" id=\\"clickMe\\">Click Me!</button>","completion":"document.getElementById(\\"clickMe\\").addEventListener(\\"click\\", function() { // Do something when the element is clicked });"},{"prompt":"w is memory managed in C++?","completion":"C++ memory management is done through the use of pointers. Pointers are variables which hold the address of a variable or an object. Memory for variables and objects is allocated dynamically at run-time through the use of the new keyword, and deallocated dynamically through the use of the delete keyword. The C++ runtime library also comes with functions such as malloc() and free() for allocating and deallocating memory."},{"prompt":"Create an endpoint in Express.js which prints out the request path when hit by a POST request.","completion":"app.post(\\"/\\", (req, res) => { console.log(\\"Request path: \\" + req.path); res.send(\\"\\"); });"},{"prompt":"Write a C# method for converting a string to its equivalent integer value.","completion":"public static int StringToInt(string str) { int result = 0; Int32.TryParse(str, out result); return result; }"},{"prompt":"Create a method in Java for encrypting a string using the Advanced Encryption Standard (AES).","completion":"public static String AESEncrypt(String toEncrypt) throws Exception { SecureRandom secureRandom = new SecureRandom(); byte[] keyBytes = new byte[16]; secureRandom.nextBytes(keyBytes); SecretKeySpec secretKeySpec = new SecretKeySpec(keyBytes,\\"AES\\"); Cipher cipher = Cipher.getInstance(\\"AES\\"); cipher.init(Cipher.ENCRYPT_MODE,secretKeySpec); byte[] encrypted = cipher.doFinal(toEncrypt.getBytes()); String encryptedString = Base64.encodeBase64String(encrypted); return encryptedString; }"},{"prompt":"Write a function in JavaScript to sort an array of objects based on a selected key. [{\\"name\\":\\"John\\",\\"age\\":25},{\\"name\\":\\"Bob\\",\\"age\\":30}]","completion":"function sortByKey(arr, key) { return arr.sort((a, b) => (a[key] > b[key]) ? 1 : -1); }"},{"prompt":"Convert a JSON object to corresponding HTML table format. { \\"name\\": \\"John\\", \\"age\\": 31, \\"city\\": \\"New York\\"}","completion":"<table> <tr> <td>Name</td> <td>John</td> </tr> <tr> <td>Age</td> <td>31</td> </tr> <tr> <td>City</td> <td>New York</td> </tr> </table>"},{"prompt":"Create a type-safe generic class in C# for storing objects of any data type.","completion":"public class GenericStorage<T> { public T Data {get; set;} }"},{"prompt":"Construct a MySQL query to select certain columns from the table \\"Books\\".","completion":"SELECT title, author FROM Books;"},{"prompt":"Create a React component for displaying a simple profile card with the properties of name and age.","completion":"const ProfileCard = (props) => { return ( <div> <h1>{props.name}</h1> <p>Age: {props.age}</p> </div> ); }"},{"prompt":"Write a stored procedure in SQL for inserting records into the table \\"Students\\".","completion":"CREATE PROCEDURE insert_students (IN name VARCHAR(100), IN age INT) BEGIN INSERT INTO students (name, age) VALUES (name, age); END"},{"prompt":"Create a C++ class for managing a generic dictionary, in which keys and values can be of any data type.","completion":"template <typename K, typename V> class Dictionary { private: std::map<K,V> m; public: const V& get(const K& key) const { return m[key]; } void set(const K& key, const V& value) { m[key] = value; } };"},{"prompt":"Write a SQL query to fetch records from the table Persons where the city is either Dallas or Chicago. Table name: Persons Fields: ID, Lastname, Firstname, City","completion":"SELECT ID, Lastname, Firstname, City FROM Persons WHERE City IN ('Dallas', 'Chicago');"},{"prompt":"Convert the following NFA (Non-Deterministic Finite Automaton) to DFA (Deterministic Finite Automaton). State S0, S1, S2 Transition Function: S0 - a -> S1 S0 - b -> S2 S1 - b -> S0 S1 - a -> S2 S2 - a -> S2 S2 - b -> S1 Start State S0, Final States S1 and S2","completion":"State Q0, Q1, Q2 Transition Function: Q0 - a -> Q1 Q0 - b -> Q2 Q1 - a -> Q2 Q1 - b -> Q0 Q2 - a -> Q2 Q2 - b -> Q1 Start State Q0, Final States Q0 and Q2"},{"prompt":"Create a basic React web page with two app components.","completion":"import React from \\"react\\"; const MainApp = () => ( <div> <h1>My React App</h1> <p>Welcome to my React App!</p> </div> ); const SecondaryApp = () => ( <div> <h2>Welcome to the second page</h2> <p>This is the second page of my App!</p> </div> ); ReactDOM.render(<MainApp />, document.getElementById('root')); ReactDOM.render(<SecondaryApp />, document.getElementById('root2'));"},{"prompt":"Design a Java program to display the numbers from 1 to 100 in a tabular format.","completion":"public class Table { public static void main(String[] args) { for (int i = 1 ; i <= 100 ; i++){ System.out.println(i); if (i % 10 == 0){ System.out.println(\\"\\"); } } } }"},{"prompt":"Design a basic HTML page with a header, footer and a body section.","completion":"<html> <head> <title>My HTML Page</title> </head> <body> <header> <h1>My Website</h1> </header> <main> This is the main content of the page. </main> <footer> Copyright 20"},{"prompt":"Write a function in Java that takes an array of integers and sorts it in ascending order.","completion":"public static void sortArray(int[] arr) { int n = arr.length; for (int i = 0; i < n-1; i++) { int min_idx = i; for (int j = i+1; j < n; j++) if (arr[j] < arr[min_idx]) min_idx = j; int temp = arr[min_idx]; arr[min_idx] = arr[i]; arr[i] = temp; } }"},{"prompt":"Define an interface in Java.","completion":"interface SampleInterface { // abstract method public void sampleMethod(); }"},{"prompt":"Find the number of days in a month given the year and month. Year: 2020 Month: April","completion":"Given the year 2020 and month April, the number of days in April is 30."},{"prompt":"Write a function in Java to split a string into an array of substrings.","completion":"public static String[] splitString(String s, String regex) { return s.split(regex); }"},{"prompt":"Create a SQL query to list all the employees of a given department in descending order of their salary. Table name: \\"Employees\\" Columns: \\"emp_name\\", \\"emp_dept\\", \\"salary","completion":"SELECT emp_name, emp_dept, salary FROM Employees WHERE emp_dept = <dept_name> ORDER BY salary DESC;"},{"prompt":"Create a C++ function to compute the area of a triangle with three given edges.","completion":"float triangle_area(float a, float b, float c) { float s = (a + b + c) / 2; return sqrt(s * (s - a) * (s - b) * (s - c)); }"},{"prompt":"Write a Java script to filter out repeat elements in an array. [1, 2, 3, 2, 4, 4, 1]","completion":"let arr = [1, 2, 3, 2, 4, 4, 1]; let unique = [...new Set(arr)]; console.log(unique); // [1, 2, 3, 4]"},{"prompt":"Modify the given Java Program to generate the Fibonacci Series till provided number of terms. int n = 10;","completion":"public class Fibonacci { static int fib(int n) { if (n <= 1) return n; return fib(n-1) + fib(n-2); } public static void main (String args[]) { int n = 10; System.out.println(fib(n)); } }"},{"prompt":"Write a JavaScript program to generate the following types of patterns of stars. * ** *** **** *****","completion":"for (var i = 0; i < 5; i++){ var row = \\"\\"; for (var j = 0; j <= i; j++){ row += \\"*\\"; } console.log(row); }"},{"prompt":"Create a C program that sorts an array in either ascending or descending order, depending on the user’s selection. [2, 1, 4, 3]","completion":"#include <stdio.h> // Function to swap two elements void swap(int* a, int* b) { int t = *a; *a = *b; *b = t; } // Bubble sort function void bubbleSort(int arr[], int n, int order) { int i, j; for (i = 0; i < n-1; i++) for (j = 0; j < n-i-1; j++) if (order == 0 && arr[j] > arr[j+1]) swap(&arr[j], &arr[j+1]); else if (order == 1 && arr[j] < arr[j+1]) swap(&arr[j], &arr[j+1]); } // Driver program int main() { int arr[] = {2, 1, 4, 3}; int n = sizeof(arr)/sizeof(arr[0]); int order; printf(\\"Enter 0 for ascending order, 1 for descending: n\\"); scanf(\\"%d\\", &order); bubbleSort(arr, n, order); printf(\\"Sorted array: n\\"); for (int i=0; i < n; i++) printf(\\"%d \\", arr[i]); return 0; }"},{"prompt":"Modify the given Ruby program to find the sum of all odd numbers between a given range 1, 10","completion":"def sum_odd_numbers(start, finish) total = 0 (start..finish).each do |number| total += number if number % 2 == 1 end total end p sum_odd_numbers(1, 10)"},{"prompt":"Generate a correct assembly language code to execution the following Add two numbers and store the result in memory address 2000","completion":"MOV R1, #3000 MOV R2, #3001 ADD R3, R1, R2 MOV 2000, R3"},{"prompt":"Write a HTML/CSS code to implement responsive design","completion":"<html> <head> <meta name=\\"viewport\\" content=\\"width=device-width, initial-scale=1.0\\"> <style> @media only screen and (max-width: 600px) { #wrap { max-width: 100%; } } </style> </head> <body> <div id=\\"wrap\\"> <!-- your content --> </div> </body> </html>"},{"prompt":"Modify the given Swift code to compute the product of two numbers and print the result a = 5 b = 8","completion":"var a = 5 var b = 8 var result = a * b print(\\"The product of a and b is: (result)\\")"},{"prompt":"Create a JavaScript function that checks if all elements of an array are equal or not. [1,2,3,1,2]","completion":"function checkEquality(arr) { return arr.every(val => val === arr[0]); } let arr = [1, 2, 3, 1, 2]; console.log(checkEquality(arr)); // false"},{"prompt":"Write a Ruby function to find the most frequently occurring elements in an array [3, 2, 1, 2, 4, 8, 7, 4]","completion":"def find_most_frequent(arr) hash = Hash.new(0) arr.each do |num| hash[num] += 1 end arr.max_by { |v| hash[v] } end arr = [3, 2, 1, 2, 4, 8, 7, 4] print find_most_frequent(arr) # Output is 4"},{"prompt":"Create an SQL query to get the second highest salary from a table named 'empployee'","completion":"SELECT MAX(salary) AS second_highest_salary FROM employee WHERE salary < (SELECT MAX(salary) FROM employee);"},{"prompt":"Write a class in Java with assigned variables and adequate getters and setters. ClassName: Student Variables: name (String), age (integer)","completion":"public class Student { private String name; private int age; // Getters & Setters public String getName() { return name; } public void setName(String name) { this.name = name; } public int getAge() { return age; } public void setAge(int age) { this.age = age; } }"},{"prompt":"Convert the following array of strings into a decimal number. [\\"3\\", \\"14\\", \\"5\\"]","completion":"Number(\\"3.145\\")"},{"prompt":"Write a SQL statement that joins three tables and returns the fields of interest. Table 1 (tbl_person): person_name, person_id Table 2 (tbl_course): course_id, course_name Table 3 (tbl_enroll): person_id, course_id Fields of Interest: person_name, course_name","completion":"SELECT tbl_person.person_name, tbl_course.course_name FROM tbl_person INNER JOIN tbl_enroll on tbl_person.person_id = tbl_enroll.person_id INNER JOIN tbl_course on tbl_enroll.course_id = tbl_course.course_id;"},{"prompt":"Construct an HTML form as a comment in the below code. <div> <!-- TODO: Add a form here --> </div>","completion":"<div> <!-- <form action=\\"submit.php\\" method=\\"post\\"> <label for=\\"name\\">Name:</label><br> <input type=\\"text\\" id=\\"name\\" name=\\"name\\"><br><br> <label for=\\"email\\">Email:</label><br> <input type=\\"text\\" id=\\"email\\" name=\\"email\\"><br><br> <input type=\\"submit\\" value=\\"Submit\\"> </form> --> </div>"},{"prompt":"Create a function in Python that executes the below pseudocode. Input: A list of integers For each integer: If the integer is even, add 1 to the list If the integer is odd, subtract 1 from the list Output: A new list of integer","completion":"def modify_list(int_list): for i in range(len(int_list)): if int_list[i] % 2 == 0: int_list[i] += 1 else: int_list[i] -= 1 return int_list"},{"prompt":"Construct an for loop in R for reading in a csv of an dataset. file_name = \\"mydata.csv","completion":"d <- read.csv(file_name) for (i in 1:nrow(d)) { # do something with each row of data }"},{"prompt":"Ask a natural language question with the intent \\"What is the population of India?\\".","completion":"What is the population of India?"},{"prompt":"Using regular expressions, separate the below string into three parts. \\"a=1,b=2,c=3","completion":"regex = \\"w=(d+)\\" a, b, c = re.findall(regex, \\"a=1,b=2,c=3\\")"},{"prompt":"Extract all characters from the following text and store them in a new string. Hello world!","completion":"characters = \\"Helloworld!\\""},{"prompt":"dentify all person names in the following text using python. John, Paul, and George went to the park.","completion":"import re text = \\"John, Paul, and George went to the park.\\" persons = re.findall(r\\"w+\\", text) print(persons) # [\\"John\\", \\"Paul\\", \\"and\\", \\"George\\"]"},{"prompt":"Rewrite the following Python function without using an elif statement. def find_type(x): if x == \\"a\\": print(\\"alpha\\") elif x == \\"b\\": print(\\"beta\\") elif x == \\"c\\": print(\\"gamma\\")","completion":"def find_type(x): type_map = {\\"a\\": \\"alpha\\", \\"b\\": \\"beta\\", \\"c\\": \\"gamma\\"} if x in type_map: print(type_map[x])"},{"prompt":"Arrange in order of increasing magnitude the elements in an integer array. arr = [4, 23, 1, 7, 10]","completion":"arr.sort(); // arr is now [1, 4, 7, 10, 23]"},{"prompt":"Reverse the characters in the following string: “Hello World”","completion":"\\"dlroW olleH\\""},{"prompt":"Create a Java program to read in an integer from the user and output the number doubled.","completion":"import java.util.Scanner; public class NumberDoubling { public static void main(String[] args) { Scanner scanner = new Scanner(System.in); System.out.print(\\"Enter an integer: \\"); int number = scanner.nextInt(); System.out.println(\\"The doubled number is: \\" + (number * 2)); } }"},{"prompt":"dentify the data type (int, string, list, etc.) of the following expression in Python \\"hello world","completion":"string"},{"prompt":"Create a function in HTML that checks to make sure the provided input is an integer","completion":"<html> <head> <script> function checkInteger(number) { if(typeof number == 'number') { if(Math.floor(number) == number) return true; } return false; } <\/script> </head>"},{"prompt":"Write a function in Ruby that takes in two parameters, a string and an alphabetically sorted list of words, and returns true if the string is an anagram of a word in the list","completion":"def is_anagram(string, words) words.each do |word| return true if word.split(\\"\\").sort == string.split(\\"\\").sort end return false end"},{"prompt":"Write Python code which changes a string to all lowercase characters. String: \\"This is a string in Uppercase!!!","completion":"text = \\"This is a string in Uppercase!!!\\" text = text.lower() print(text)"},{"prompt":"Write C++ code to implement a basic doubly linked list.","completion":"#include <iostream> struct Node { int data; Node* prev; Node* next; }; class DoublyLinkedList { private: Node* head; Node* tail; public: DoublyLinkedList() : head(nullptr), tail(nullptr) {} ~DoublyLinkedList(); void AddFront(int data); void AddBack(int data); void DeleteFront(); void DeleteBack(); void Display(); }; void DoublyLinkedList::AddFront(int data) { Node* newNode = new Node; newNode->data = data; newNode->prev = nullptr; if (head == nullptr) { newNode->next = nullptr; head = newNode; tail = newNode; } else { head->prev = newNode; newNode->next = head; head = newNode; } } void DoublyLinkedList::AddBack(int data) { Node* newNode = new Node; newNode->data = data; newNode->next = nullptr; if (tail == nullptr) { newNode->prev = nullptr; head = newNode; tail = newNode; } else { tail->next = newNode; newNode->prev = tail; tail = newNode; } } void DoublyLinkedList::DeleteFront() { if (head == nullptr) { return; } else if (head->next == nullptr) { delete head; head = nullptr; tail = nullptr; return; } else { Node* tmp = head; head = head->next; delete tmp; head->prev = nullptr; } } void DoublyLinkedList::DeleteBack() { if (tail == nullptr) { return; } else if (tail->prev == nullptr) { delete tail; head = nullptr; tail = nullptr; return; } else { Node* tmp = tail; tail = tail->prev; delete tmp; tail->next = nullptr; } } void DoublyLinkedList::Display() { Node* tmp = head; while (tmp != nullptr) { std::cout << tmp->data << \\" \\"; tmp = tmp->next; } } DoublyLinkedList::~DoublyLinkedList() { Node* tmp = head; while (tmp != nullptr) { Node* next = tmp->next; delete tmp; tmp = next; } }"},{"prompt":"Write a C# class which implements two-dimensional array searching using binary search algorithms.","completion":"public class BinarySearch2D { public void Search(int[,] matrix, int target) { if (matrix == null || matrix.GetLength(0) == 0 || matrix.GetLength(1) == 0) return; int rows = matrix.GetLength(0); int columns = matrix.GetLength(1); int row = 0; int column = columns - 1; while (row < rows && column >= 0) { if (matrix[row, column] == target) { Console.WriteLine(\\"Target found at row: {row} and column: {column}\\"); return; } else if (matrix[row, column] > target) { column--; } else { row++; } } } }"},{"prompt":"Write a method in C that prints out all the permutations of a given string. String: ABC","completion":"#include<stdio.h> #include<string.h> /* Function to swap values at two pointers */ void swap(char *x, char *y) { char temp; temp = *x; *x = *y; *y = temp; } /* Function to print permutations of string This function takes three parameters: 1. String 2. Starting index of the string 3. Ending index of the string. */ void permute(char *a, int l, int r) { int i; if (l == r) printf(\\"%sn\\", a); else { for (i = l; i <= r; i++) { swap((a+l), (a+i)); permute(a, l+1, r); swap((a+l), (a+i)); //backtrack } } } /* Driver program to test above functions */ int main() { char str[] = \\"ABC\\"; int n = strlen(str); permute(str, 0, n-1); return 0; }"},{"prompt":"Write a MySQL query to calculate the average temperature for each user, given a table of log data.","completion":"SELECT user_id, AVG(temperature) FROM logs GROUP BY user_id;"},{"prompt":"Write an SQL query to find the top 5 users with the highest temperature reading.","completion":"SELECT TOP 5 user_id, MAX(temperature) FROM logs GROUP BY user_id ORDER BY MAX(temperature) DESC;"},{"prompt":"Given an array of integers, write a function that returns the index of the smallest number in the array. array = [3, 1, 9, 6, 17]","completion":"def findSmallest(arr): smallest_index = 0 for i in range(1, len(arr)): if arr[i] < arr[smallest_index]: smallest_index = i return smallest_index index_of_smallest = findSmallest(array) print(index_of_smallest) #prints 1"},{"prompt":"Replace the placeholder in the given HTML document with the corresponding table. <html> <body> <!-- replace placeholder with table --> </body> </html> <table style=\\"width:100%\\"> <tr> <th>Firstname</th> <th>Lastname</th> <th>Age</th> </tr> <tr> <td>Jill</td> <td>Smith</td> <td>50</td> </tr> <tr> <td>Eve</td> <td>Jackson</td> <td>94</td> </tr> </table>","completion":"<html> <body> <table style=\\"width:100%\\"> <tr> <th>Firstname</th> <th>Lastname</th> <th>Age</th> </tr> <tr> <td>Jill</td> <td>Smith</td> <td>50</td> </tr> <tr> <td>Eve</td> <td>Jackson</td> <td>94</td> </tr> </table> </body> </html>"},{"prompt":"Generate a random string 10 characters in length using the given Python code. import random","completion":"import random def generate_random_string(length): \\"\\"\\"Generate a random string with given length using a set of lowercase and uppercase letters, numbers, and punctuation characters.\\"\\"\\" chars = \\"abcdefghijklmnopqrstuvwxyz ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789!@#%^&*()[]{}|;:'\\"\\",./<>?\\" result = \\"\\" for i in range(length): result += random.choice(chars) return result random_string = generate_random_string(10) print(random_string) #eg. 7O?1Y%%&_K"},{"prompt":"Concatenate the strings in the given list using Java. list = [\\"hello\\", \\"world\\", \\"!\\"]","completion":"StringBuilder sb = new StringBuilder(); for (String str : list) { sb.append(str); } String output = sb.toString(); System.out.println(output); // prints \\"hello world!\\""},{"prompt":"Given a JSON string, write a function in JavaScript to extract the value for the key \\"name\\". jsonString = {\\"name\\":\\"John\\", \\"age\\":30, \\"city\\":\\"New York\\"}","completion":"function getValueByKey(jsonString, key) { let jsonObj = JSON.parse(jsonString); return jsonObj[key]; } nameValue = getValueByKey(jsonString, \\"name\\"); console.log(nameValue) //prints \\"John\\""},{"prompt":"Create a variable in JavaScript for storing the result of the following expression. a + 5*b","completion":"let result = a + 5*b;"},{"prompt":"Search for the string \\"tutorials\\" in the given text and replace it with the word \\"lessons\\". text = \\"This site provides many Python tutorial","completion":"text = text.replace(\\"tutorials\\", \\"lessons\\"); console.log(text); // prints \\"This site provides many Python lessons\\""},{"prompt":"Calculate the sum of the numbers in the given array using the Java 8 Stream API. nums = [2, 4, 6, 10]","completion":"int sum = Arrays.stream(nums).sum(); System.out.println(sum); // prints 22"},{"prompt":"Modify the given code so it prints a prime number table. table_size = 10","completion":"# Include the necessary library from prime_generator import get_prime # Get a list of prime numbers primes = get_prime(table_size) # Print the prime number table print(\\" Prime Number Table\\") print(\\" --------------------\\") for i in range(table_size): print(f\\"{primes[i]:>4} {(i+1)*primes[i]:>4}\\")"},{"prompt":"Given two integers, implement a function in C to swap their values. int a = 3 int b = 5","completion":"void swap(int *a, int *b){ int temp = *a; *a = *b; *b = temp; } swap(&a, &b);"},{"prompt":"Create a SQL query to get the total count of the employees in the team that have the job title of \\"software engineer\\". Table: Employees Columns: id (int), name (string), job_title (string), team (string)","completion":"SELECT COUNT(*) AS total_count FROM Employees WHERE job_title=\\"software engineer\\""},{"prompt":"Generate the code to append the item \\"banana\\" to the end of the list called fruits. fruits = ['apple', 'orange', 'grapes']","completion":"fruits.append('banana')"},{"prompt":"mplement a program in Java that reverses a string input given by the user.","completion":"import java.util.Scanner; public class ReverseString { public static void main(String[] args) { Scanner scanner = new Scanner(System.in); String inputString = scanner.nextLine(); String reversedString = \\"\\"; for(int i = inputString.length() - 1; i >= 0; i-- ) { reversedString = reversedString + inputString.charAt(i); } System.out.println(reversedString); } }"},{"prompt":"Parse a given HTML page to extract all <h1> tags. <html> <head> <title>Page Title</title> </head> <body> <h1>This is a heading 1</h1> <h2>This is a heading 2</h2> <h1>This is another heading 1</h1> </body> </html>","completion":"from bs4 import BeautifulSoup html_doc = \\"\\"\\" <html> <head> <title>Page Title</title> </head> <body> <h1>This is a heading 1</h1> <h2>This is a heading 2</h2> <h1>This is another heading 1</h1> </body> </html> \\"\\"\\" soup = BeautifulSoup(html_doc, 'html.parser') h1_tags = soup.find_all('h1') for tag in h1_tags: print(tag)"},{"prompt":"Create an SQL query to get the names and ages of all employees that are under 25 and have a job title of \\"Software Engineer\\". Table: Employees Columns: id (int), name (string), age (int), job_title (string)","completion":"SELECT name, age FROM Employees WHERE age<25 AND job_title=\\"Software Engineer\\""},{"prompt":"Code a function in JavaScript to find the area of a triangle given the lengths of its three sides.","completion":"function calculateArea(a, b, c) { let s = (a + b + c) / 2; return Math.sqrt(s * (s - a) * (s - b) * (s - c)); }"},{"prompt":"Edit the given SQL query to return the number of employees from each team. SELECT * FROM Employee","completion":"SELECT team, COUNT(*) AS total_count FROM Employees GROUP BY team"},{"prompt":"Generate Python code to find the compound interest for a given principal amount, rate, and time period.","completion":"# Python program to find compound interest def compound_interest(p,r,t): # p is the principal amount # r is the rate # t is the time period # Calculating compound interest CI = p * (pow((1 + r / 100), t)) print(\\"Compound interest is\\", CI) p=1000 r=10 t=2 compound_interest(p,r,t)"},{"prompt":"Design an algorithm to detect whether two given strings are permutations of each other.","completion":"Algorithm: // Take two strings, str1 and str2 // Step 1: // Start // Step 2: // Run a loop over the length of the strings // Step 3: // For each character in str1, check if it also exists in str2. If it does, continue to next character. // Step 4: // If a character does not have a corresponding character in the other string, return False. // Step 5: // If all the characters are found, return True. // Step 6: // Stop"},{"prompt":"Explain the difference between .push(), .pop(), .shift() and .unshift() methods in JavaScript arrays.","completion":"The .push() method adds an element to the end of an existing array. It takes a single argument, the element to be added, and returns the new length of the array. The .pop() method removes an element from the end of an existing array. It does not take any arguments and returns the element that was removed. The .shift() method removes an element from the beginning of an existing array. It does not take any arguments, and returns the element that was removed. The .unshift() method adds an element to the beginning of an existing array. It takes a single argument, the element to be added, and returns the new length of the array."},{"prompt":"Write a JavaScript program to randomly select items from an array. const fruits = ['apple', 'banana', 'mango', 'cherry'];","completion":"function getRandomItem(arr) { const index = Math.floor(Math.random() * arr.length); return arr[index]; } const randomItem = getRandomItem(fruits); console.log(randomItem);"},{"prompt":"Explain the differences between a while loop and a for loop in JavaScript.","completion":"The major difference between a while loop and a for loop is that a while loop checks the condition before the block of code is executed, while a for loop checks the condition before each iteration of the loop. A while loop is used when the number of iterations is not known, while the number of iterations in a for loop is known. In a while loop, the condition must be true in order to execute the loop body, while in a for loop, the loop body is always executed at least once, regardless of whether the condition is true or false. Another difference is that a for loop allows you to include an increment section where you can increment or decrement the loop counter."},{"prompt":"Determine how many characters are in a given string. my_string = \\"Hello, world!","completion":"length = len(my_string) print(length) # 13"},{"prompt":"Create a JavaScript array from a given Object. my_obj = {\\"a\\": 1, \\"b\\": 2, \\"c\\": 3}","completion":"my_arr = [1, 2, 3]"},{"prompt":"Write a query to retrieve the rows from a given table where the value of the \\"name\\" column is not null. my_table { \\"id\\": Integer, \\"name\\": String }","completion":"SELECT * FROM my_table WHERE name IS NOT NULL;"},{"prompt":"Create a basic React component.","completion":"import React from 'react'; const MyComponent = () => { return ( <div> <p>Hello, world!</p> </div> ); }; export default MyComponent;"},{"prompt":"Convert the elements of a given array of strings to integers. arr = [\\"1\\", \\"2\\", \\"3\\", \\"4\\", \\"5\\"]","completion":"arr = list(map(int,arr))"},{"prompt":"Write a basic HTML page with a div and an unordered list.","completion":"<!DOCTYPE html> <html> <head> <title>Basic HTML Page</title> </head> <body> <div> <ul> <li>list item 1</li> <li>list item 2</li> <li>list item 3</li> </ul> </div> </body> </html>"},{"prompt":"Parse a given XML document and create a JavaScript object. <?xml version=\\"1.0\\"?> <catalog> <book id=\\"bk101\\"> <author>Kerridge, Alan</author> <title>The Kitchen Diaries</title> <price>29.99</price> </book> <book id=\\"bk102\\"> <author>Zinsser, William</author> <title>On Writing Well</title> <price>19.95</price> </book> </catalog>","completion":"const parser = new DOMParser(); const xmlDoc = parser.parseFromString(text, \\"text/xml\\"); const books = xmlDoc.querySelectorAll('book'); const result = {}; books.forEach(book => { const id = book.getAttribute('id'); result[id] = { author: book.querySelector('author').textContent, title: book.querySelector('title').textContent, price: book.querySelector('price').textContent } }); console.log(result); // { // bk101: {author: \\"Kerridge, Alan\\", title: \\"The Kitchen Diaries\\", price: \\"29.99\\"}, // bk102: {author: \\"Zinsser, William\\", title: \\"On Writing Well\\", price: \\"19.95\\"} // }"},{"prompt":"Build an array of objects from a given array of numbers. arr = [1, 2, 3, 4, 5]","completion":"arr = [ { num: 1 }, { num: 2 }, { num: 3 }, { num: 4 }, { num: 5 } ]"},{"prompt":"Generate a simple Flask route to handle a GET request.","completion":"from flask import Flask app = Flask(__name__) @app.route(\\"/myroute\\", methods=[\\"GET\\"]) def myfunc(): # write code here if __name__ == '__main__': app.run()"},{"prompt":"Calculate the difference between two given dates in terms of days. date1 = \\"2020-5-15\\" date2 = \\"2020-6-20","completion":"from datetime import datetime date1 = datetime.strptime(date1, \\"%Y-%m-%d\\") date2 = datetime.strptime(date2, \\"%Y-%m-%d\\") difference = date2 - date1 print(difference.days) # 36"},{"prompt":"Parse a JSON string into an object in JavaScript. {\\"name\\": \\"John Doe\\", \\"age\\": 30}","completion":"var data = JSON.parse('{\\"name\\": \\"John Doe\\", \\"age\\": 30}'); var name = data.name; var age = data.age;"},{"prompt":"Create a list of 10 strings in Python and print each string in a separate line.","completion":"mylist = ['string1', 'string2', 'string3', 'string4', 'string5', 'string6', 'string7', 'string8', 'string9', 'string10'] for item in mylist: print(item)"},{"prompt":"Create an array of 10 random numbers between 1 and 100 in JavaScript and print each number in the console.","completion":"var arr = []; for (i = 0; i < 10; i++) { arr.push(Math.floor(Math.random() * 100) + 1); console.log(arr[i]); }"},{"prompt":"Create a class in Python with one method called talk that prints a string when invoked.","completion":"class MyClass: def talk(self): print(\\"Hello, world!\\")"},{"prompt":"Create an array of objects in JavaScript, each object should have two properties, a \\"name\\" and \\"age\\".","completion":"var arr = [ {name: 'John', age: 25}, {name: 'Alice', age: 28}, {name: 'Bob', age: 30}, {name: 'David', age: 32}, ]"},{"prompt":"Construct an SQL query to find the average temperature for each month in the year.","completion":"SELECT MONTH(date) as 'Month', AVG(temperature) as 'Average Temperature' FROM temperatures GROUP BY MONTH(date);"},{"prompt":"Construct an SQL query to get the names and salary of the employees who earn more than a given salary. salary: 10000","completion":"SELECT name, salary FROM employees WHERE salary > 10000;"},{"prompt":"Generate a JavaScript array containing the first ten Fibonacci numbers.","completion":"let fib_nums = [1, 1] for (let i=2; i < 10; i++) { fib_nums[i] = fib_nums[i - 1] + fib_nums[i - 2] }"},{"prompt":"Construct an SQL query to delete all the rows from a table where the value of a column is less than a given value. column_name: age value: 18","completion":"DELETE FROM table_name WHERE age < 18;"},{"prompt":"Write an SQL query to return all the distinct values of a given column from a table. column_name: gender","completion":"SELECT DISTINCT gender FROM table_name;"},{"prompt":"Construct a query to find all movies released since a given year. year: 2000","completion":"SELECT * FROM movies WHERE year > 2000;"},{"prompt":"Construct an SQL query to select all the unique values of one column from a table that appear more than twice. column_name: 'gender'","completion":"SELECT gender FROM table_name GROUP BY gender HAVING COUNT(*) > 2;"},{"prompt":"Suggest changes to the following Java code so that it sorts an array of strings by length. String[] data = {\\"Hello\\",\\"Hi\\",\\"Bye\\"}; Arrays.sort(data);","completion":"String[] data = {\\"Hello\\",\\"Hi\\",\\"Bye\\"}; Comparator<String> comparator = Comparator.comparingInt(String::length); Arrays.sort(data, comparator);"},{"prompt":"Write a function to extract the elements from a given list and add them to a new list. given_list = [0, 2, 4, 6, 8]","completion":"def extract_and_add_elements(given_list): new_list = [] for x in given_list: new_list.append(x) return new_list"},{"prompt":"Suggest a suitable data structure to hold a series of student records.","completion":"A dictionary would be the best data structure to hold student records, since it allows easy mapping of student identifiers (e.g. a student's ID number or username) to associated data about that student, such as their name, age, and academic results."},{"prompt":"Construct an SQL query to find the number of records where the value in a certain column is greater than a specified value.","completion":"SELECT COUNT(*) FROM TABLE_NAME WHERE COLUMN_NAME > VALUE;"},{"prompt":"Write a SQL query for selecting all the people who were born after January 1st, 1960.","completion":"SELECT * FROM People WHERE BirthDate > '1960-01-01';"},{"prompt":"Write a Python code to group the following numbers according to their last digit [1, 9, 5, 4, 6, 7, 8, 11]. [1, 9, 5, 4, 6, 7, 8, 11]","completion":"group_by_last_digit = { 0: [], 1: [1], 2: [], 3: [], 4: [4], 5: [5], 6: [6], 7: [7], 8: [8], 9: [9], 11: [11] }"},{"prompt":"Write a CSS code to style a table such that each row is a different color.","completion":"table tr:nth-child(odd) { background-color: #f0f0f0; } table tr:nth-child(even) { background-color: #cccccc; }"},{"prompt":"Write an Objective-C code to create a loop that iterates 10 times, printing out the iteration number each time.","completion":"for(int i = 1; i <= 10; i++) { NSLog(@\\"Current Iteration: %d\\", i); }"},{"prompt":"Write a Java code to sort the following array in ascending order [3, 6, 2, 8, 1, 9]. [3, 6, 2, 8, 1, 9]","completion":"public class SortList { public static void sort (int[] array) { int temp; for (int i = 0; i < array.length; i++) { for (int j = 0; j < array.length; j++) { if (array[j] > array[i]) { temp = array[i]; array[i] = array[j]; array[j] = temp; } } } } public static void main(String args[]) { int[] array = {3, 6, 2, 8, 1, 9}; sort(array); System.out.print(\\"Sorted list: n\\"); for (int i = 0; i < array.length; i++) System.out.print(array[i] + \\" \\"); } }"},{"prompt":"Write a SQL query to update all the records in the table with new values from another table.","completion":"UPDATE Table1 SET Table1.Col1 = Table2.Col1, Table1.Col2 = Table2.Col2, Table1.Col3 = Table2.Col3 FROM Table1 INNER JOIN Table2 ON Table1.ID = Table2.ID;"},{"prompt":"Write a PHP code to validate a date in the format MM/DD/YYYY.","completion":"<?php function validateDate(date) { d = DateTime::createFromFormat('m/d/Y', date); return d && d->format('m/d/Y') === date; }"},{"prompt":"Create a SQL query for selecting the top 2 records in a table based on a given rating.","completion":"SELECT * FROM Table ORDER BY Rating DESC LIMIT 2;"},{"prompt":"Create a Python class for a user object that includes a name and email field.","completion":"class User: def __init__(self, name, email): self.name = name self.email = email"},{"prompt":"Using the provided HTML structure and jQuery code, change the background color to green when the button is clicked. <div> <h1>Hello World!</h1> <button>Click me!</button> </div> <script> (document).ready(function(){ (\\"button\\").click(function(){ //TODO: Add code here }); }); <\/script>","completion":"<div> <h1>Hello World!</h1> <button>Click me!</button> </div> <script> (document).ready(function(){ (\\"button\\").click(function(){ (\\"div\\").css(\\"background-color\\", \\"green\\"); }); }); <\/script>"},{"prompt":"Create a Flask endpoint that displays a \\"Hello World!\\" message.","completion":"@app.route(\\"/\\", methods=['GET']) def hello_world(): return \\"Hello World!\\""},{"prompt":"Create a MySQL query to list the authors and the number of books they wrote.","completion":"SELECT authors.name, COUNT(book.id) FROM authors INNER JOIN books ON authors.id = books.author_id GROUP BY authors.name;"},{"prompt":"Create a React component that renders a text input field.","completion":"class TextInput extends React.Component { render() { return ( <input type=\\"text\\" /> ); } }"},{"prompt":"Create a Mongoose schema for a blog post with the following fields: title (String), body (String), and isPublished (Boolean).","completion":"const blogPostSchema = new mongoose.Schema({ title: { type: String, required: true }, body: { type: String, required: true }, isPublished: { type: Boolean, default: false} });"},{"prompt":"Create a CSS style to make all paragraphs with a bottom margin of 10px.","completion":"p { margin-bottom: 10px; }"},{"prompt":"w would you loop through the elements in an array in JavaScript?","completion":"You can loop through elements in an array in JavaScript by using a \`for loop\`: for (let i = 0; i < myArray.length; i++) { const element = myArray[i]; // Do something with the element }"},{"prompt":"Create a Java class to store a student's name, ID, and GPA.","completion":"public class Student { private String name; private int id; private Double gpa; public Student(String name, int id, Double gpa) { this.name = name; this.id = id; this.gpa = gpa; } public String getName() { return name; } public int getId() { return id; } public Double getGPA() { return gpa; } }"},{"prompt":"Produce an R code snippet to randomly sample 10 elements from vector x.","completion":"sample(x, size = 10, replace = FALSE)"},{"prompt":"Rewrite the following Python code to a Bash program. v = [1, 2, 3, 4, 5] for i in v: print(i)","completion":"v=(1 2 3 4 5) for i in {v[@]}; do echo i done"},{"prompt":"Suggest a PHP code snippet which calculates the sum of two numbers.","completion":"a = 1; b = 2; sum = a + b; echo sum; // Outputs: 3"},{"prompt":"Create an HTML/CSS web page from the following text content. My favorite food is sushi.","completion":"<html> <head> <title>Sushi</title> <style> // Styling for the page p { font-family: Arial; font-size: 18px; } </style> </head> <body> <p>My favorite food is sushi.</p> </body> </html>"},{"prompt":"Summarize the following article in one sentence. The article is about the rise of artificial intelligence, and how it is impacting the job market and our lives in general.","completion":"Artificial intelligence is rapidly transforming the job market and our lives as a whole."},{"prompt":"Using recursion, write a Python program to find the factorial of a given number. Number: 5","completion":"def factorial(num): if num == 1: return 1 else: return num * factorial(num-1) ans = factorial(5) print(ans)"},{"prompt":"Using the given regular expression, find all the email addresses in the text provided. Regular Expression: /S+@S+.S+/ Text: Please contact support@example.com for assistance.","completion":"support@example.com"},{"prompt":"Create a Python dictionary with customer details provided. Name: John Age: 25 Gender: Male Occupation: Chef","completion":"customer = { 'name': 'John', 'age': 25, 'gender': 'Male', 'occupation': 'Chef' }"},{"prompt":"Compare the two strings using the given regular expression. Regular Expression: /^[a-z]+/ Strings: string1 and string2","completion":"import re regex = re.compile(r\\"^[a-z]+\\") string1 = \\"string1\\" string2 = \\"string2\\" if regex.match(string1) and regex.match(string2): if string1 == string2: print(\\"The strings are equal\\") else: print(\\"The strings are not equal\\")"},{"prompt":"With the provided data, find the correlation coefficient between the two variables. x: [4, 5, 7, 8] y: [6, 7, 8, 10]","completion":"x = [4, 5, 7, 8] y = [6, 7, 8, 10] def find_correlation_coefficient(x, y): n = len(x) # Calculate the sums sum_x = sum(x) sum_y = sum(y) # Calculate the sum of the squares squared_sum_x = sum([pow(x[i], 2) for i in range(n)]) squared_sum_y = sum([pow(y[i], 2) for i in range(n)]) # Calculate the sum of the products product_sum = sum([x[i]*y[i] for i in range(n)]) # Calculate the correlation coefficient num = product_sum - (sum_x * sum_y/n) den = ((squared_sum_x - (pow(sum_x,2) / n)) * (squared_sum_y - (pow(sum_y,2) / n))) ** 0.5 r = num/den return r print(\\" The correlation coefficient is: \\" + str(find_correlation_coefficient(x, y))) # 0.9"},{"prompt":"Parse the given string and return a list of words. string = \\"this is a test string","completion":"def parse_string(string): words = string.split() return words"},{"prompt":"Generate a random 6-digit integer.","completion":"import random random_int = str(random.randint(100000, 999999))"},{"prompt":"Create a program to calculate the mean of the following list. myList = [4, 8, 10, 15]","completion":"def mean(myList): sum = 0 for num in myList: sum += num average = round(sum/len(myList), 2) return average mean_result = mean(myList)"},{"prompt":"Return the number of elements in a dictionary. myDict = {'a':1, 'b':2, 'c':3}","completion":"def count_dict_elements(myDict): count = 0 for key in myDict: count += 1 return count element_nums = count_dict_elements(myDict)"},{"prompt":"Given two strings, s1 and s2, write a program to return the longest common substring between them. s1 = 'abcdef' s2 = 'fghijk'","completion":"def longest_common_substring(s1, s2): m = [[0] * (1 + len(s2)) for i in range(1 + len(s1))] longest, x_longest = 0, 0 for x in range(1, 1 + len(s1)): for y in range(1, 1 + len(s2)): if s1[x - 1] == s2[y - 1]: m[x][y] = m[x - 1][y - 1] + 1 if m[x][y] > longest: longest = m[x][y] x_longest = x else: m[x][y] = 0 return s1[x_longest - longest: x_longest] longest_substring = longest_common_substring(s1, s2)"},{"prompt":"Given a linked list, write a program to delete a given node. 1 -> 2 -> 3 -> 4 -> 5 -> NULL Node = 3","completion":"class Node: def __init__(self, data): self.data = data self.next = None def delete_node(head, node): prev = None curr = head while(curr is not None and curr.data != node): prev = curr curr = curr.next prev.next = curr.next"},{"prompt":"Edit the code to create a program to print all the leap years between 1900 and 2000. for year in range(1900, 2001): # TODO","completion":"for year in range(1900, 2001): if year % 4 == 0 and year % 100 != 0 or year % 400 == 0: print(year)"},{"prompt":"Name two methods of sorting a list in Python.","completion":"The two methods of sorting a list in Python are the sorted() function and the .sort() method."},{"prompt":"What is the difference between higher order functions and first class functions?","completion":"Higher order functions are functions that can take other functions as arguments or return other functions as output. First class functions are functions that can be passed as arguments to other functions, returned from other functions, assigned to variables, or used in any other way that a value can be used."},{"prompt":"Name four primitive types in Java.","completion":"The four primitive types in Java are boolean, char, float, and int."},{"prompt":"Explain what the expression \\"variadic functions\\" means.","completion":"A variadic function is a function that can accept a variable number of arguments. It is a type of function in which the number of arguments that is passed to the function can vary, thus giving it more versatility than a function with a fixed number of arguments."},{"prompt":"Construct a function with two parameters to return the sum of the squares of the parameters.","completion":"def sum_squares(x, y): return x*x + y*y"},{"prompt":"What is the meaning of the acronym JSON?","completion":"The acronym JSON stands for JavaScript Object Notation. It is a text-based format for data interchange, which makes it easy for machines to parse and generate."},{"prompt":"Write a query to select all rows from a table with the name \\"products\\" and the column \\"price\\" where the price is greater than 10.","completion":"SELECT * FROM products WHERE price > 10;"},{"prompt":"mplement a JavaScript function that takes two strings as parameters and replaces all occurrences of the first string with the second. \\"test\\", \\"D","completion":"function replaceString(str1, str2) { return str1.split(' ').map(word => (word === str2) ? str1 : word).join(' '); }"},{"prompt":"Given a string of text, write a python script to remove all non-alphanumeric characters.","completion":"def remove_non_alphanumeric_chars(input_string): return ''.join(c for c in input_string if c.isalnum())"},{"prompt":"Modify the following C program so that it can print the result in reverse order. #include <stdio.h> int main() { int arr[] = {1, 2, 3, 4, 5}; int i, size; size = sizeof(arr) / sizeof(arr[0]); for (i=0; i < size; i++) { printf(\\"%d \\", arr[i]); } return 0; }","completion":"#include <stdio.h> int main() { int arr[] = {1, 2, 3, 4, 5}; int size, i; size = sizeof(arr) / sizeof(arr[0]); for (i = size - 1; i >= 0; i--) { printf(\\"%d \\", arr[i]); } return 0; }"},{"prompt":"Modify the following JavaScript code to alert \\"Thanks for visiting!\\" when the page is loaded.","completion":"window.onload = function() { alert(\\"Thanks for visiting!\\"); }"},{"prompt":"Use the given array to find distinct values. arr = [1, 2, 3, 3, 4, 5]","completion":"def find_distinct(arr): distinct_list = [] for num in arr: if num not in distinct_list: distinct_list.append(num) return distinct_list arr = [1, 2, 3, 3, 4, 5] print(find_distinct(arr)) # Output: [1, 2, 3, 4, 5]"},{"prompt":"Replace the character ‘_’ with the underscore symbol in a string. sample_string = \\"this__is_a_sample_string","completion":"def replace_underscore_char(sample_string): return sample_string.replace('_', '_') sample_string = \\"this__is_a_sample_string\\" print(replace_underscore_char(sample_string)) # Output: this__is_a_sample_string"},{"prompt":"Write an expression to select the first element from a list. list = [1, 2, 3, 4]","completion":"list[0] or list[-4]"},{"prompt":"Create a tuple of strings.","completion":"my_tuple = (\\"Apple\\", \\"Banana\\", \\"Orange\\")"},{"prompt":"Extract the last four characters from a text string. text = \\"This is a sample tex","completion":"text[-4:] # Output: \\"text\\""},{"prompt":"Create a dictionary with two given lists. list1 = [\\"John\\", \\"Adam\\"] list2 = [25, 30]","completion":"def create_dict(list1, list2): dictionary = dict(zip(list1, list2)) return dictionary list1 = [\\"John\\", \\"Adam\\"] list2 = [25, 30] print(create_dict(list1, list2)) # Output: {'John': 25, 'Adam': 30}"},{"prompt":"You have been given a list of user details (Names, Addresses etc). Write a code to filter out the users whose age is more than 21. user_details = [ {'name': 'John Doe', 'age': 34, 'address': '123 Main Street'}, {'name': 'Jane Doe', 'age': 18, 'address': '456 Wallaby Way'}, {'name': 'Bob Smith', 'age': 21, 'address': '789 Ocean View'}, ]","completion":"def filter_users(user_details): users_over_21 = [] for user in user_details: if user['age'] > 21: users_over_21.append(user) return users_over_21 if __name__ == \\"__main__\\": print(\\"Users over 21:\\", filter_users(user_details))"},{"prompt":"Write a code to generate fibonacci series for first n numbers.","completion":"def generate_fibonacci(n): fibonacci = [0, 1] for i in range(2, n): fibonacci.append(fibonacci[i - 1] + fibonacci[i - 2]) return fibonacci[:n] if __name__ == \\"__main__\\": print(generate_fibonacci(n))"},{"prompt":"You have been given a list containing both words and numbers. You need to write a code to generate a new list containing only words in the original list and to calculate the average length of the words. mixed_list = ['cat', 1, 'dog', 2, 'rabbit', 3]","completion":"def get_words(mixed_list): words = [] for item in mixed_list: if type(item) == str: words.append(item) return words def get_average_word_length(words): total_length = 0 for word in words: total_length += len(word) return total_length/len(words) if __name__ == \\"__main__\\": words = get_words(mixed_list) print(\\"Words in original list:\\", words) print(\\"Average length of the words:\\", get_average_word_length(words))"},{"prompt":"You have been given a list of numbers. Write a code to generate a new list of numbers containing only the even numbers from the original list. numbers = [2, 3, 5, 6, 8, 9, 10]","completion":"def get_even_numbers(numbers): even_numbers = [] for num in numbers: if num % 2 == 0: even_numbers.append(num) return even_numbers if __name__ == \\"__main__\\": print(\\"Even numbers from original list:\\", get_even_numbers(numbers))"},{"prompt":"You have been given a list of strings. Write a code to generate a new list containing only the strings with length less than 6 characters. strings = ['Ready', 'Set', 'Go', 'Hello', 'Pizza', 'Book']","completion":"def get_shorter_strings(strings): shorter_strings = [] for string in strings: if len(string) < 6: shorter_strings.append(string) return shorter_strings if __name__ == \\"__main__\\": print(\\"strings with length less than 6:\\", get_shorter_strings(strings))"},{"prompt":"Write a code to count the occurrences of a particular element in a given list. list1 = [1, 2, 3, 3, 3, 4, 5] element = 3","completion":"def count_occurrences(list1, element): count = 0 for elem in list1: if elem == element: count += 1 return count if __name__ == \\"__main__\\": print(\\"Number of occurrences of\\", element, \\"in the list:\\", count_occurrences(list1, element))"},{"prompt":"Create a compiler in C++ to compile a given source code.","completion":"#include <iostream> #include <string> std::string source_code; // source code to be compiled int main() { // compile the source code // check the errors // return 0 if the compilation is successful return 0; }"},{"prompt":"Assign a value to each of the variables, x = ? and y = ?, such that x + y = 7.","completion":"int x = 3; int y = 4; // x + y = 7"},{"prompt":"Modify the code snippet below to insert the element 'z' into the end of an array. arr = ['a', 'b', 'c', 'd', 'e']","completion":"arr = ['a', 'b', 'c', 'd', 'e'] arr.append('z') print(arr)"},{"prompt":"Create a function to convert a given integer to a string in Python.","completion":"def intToStr(n): return str(n) # Driver Program intNum = 55 # Print the output print(intToStr(intNum))"},{"prompt":"Write a regular expression to match the string \\"123 Main Street\\".","completion":"regex = r\\"^d{3}s[A-Za-z]+s[A-Za-z]+\\""},{"prompt":"Write a Python program to identify whether or not a given number is prime.","completion":"def is_prime(n): for i in range(2, n): if n % i == 0: return False return True"},{"prompt":"Create an HTML document to display the following text: Welcome to our website!","completion":"<html> <head> <title>Welcome to our Website!</title> </head> <body> <h1>Welcome to our Website!</h1> </body> </html>"},{"prompt":"Create a JavaScript object which contains a key-value pair representing \\"name\\" and \\"lucy\\".","completion":"let lucy = { name: \\"Lucy\\" };"},{"prompt":"What does the SELECT statement in SQL do?","completion":"The SELECT statement is used to retrieve data from one or more tables in a database. It is typically used in a query, where it specifies which columns and rows of data should be returned. The statement can also be used to perform calculations on data in the database and to group data together."},{"prompt":"Write a piece of code that implements a 3-way merge sort in Java.","completion":"class Mergesort { void merge(int arr[], int l, int m, int r) { int n1 = m - l + 1; int n2 = r - m; int L[] = new int[n1]; int R[] = new int[n2]; for (int i = 0; i < n1; ++i) L[i] = arr[l + i]; for (int j = 0; j < n2; ++j) R[j] = arr[m + 1 + j]; int i = 0, j = 0; int k = l; while (i < n1 && j < n2) { if (L[i] <= R[j]) { arr[k] = L[i]; i++; } else { arr[k] = R[j]; j++; } k++; } while (i < n1) { arr[k] = L[i]; i++; k++; } while (j < n2) { arr[k] = R[j]; j++; k++; } } void sort(int arr[], int l, int r) { if (l < r) { int m = (l + r) / 2; sort(arr, l, m); sort(arr, m + 1, r); merge(arr, l, m, r); } } }"},{"prompt":"Create a PHP function to trim a string and remove all leading and trailing whitespace. string = \\" Hello World \\";","completion":"function trimString(string) { return preg_replace('/^s+|s+/', '', string); } //calling the function trimString(string); //Returns \\"Hello World\\""},{"prompt":"Write some code in JavaScript to generate an array with 3 positive random integers.","completion":"function getRandomIntegers(size) { return [...Array(size)].map( () => Math.floor(Math.random() * Math.floor(20)) ).filter(randomNumber => randomNumber > 0); } getRandomIntegers(3); //Returns an array with 3 random positive integers"},{"prompt":"Create a function in C to edit a string. The function should correct all occurrences of two or more consecutive spacets with a single space. char str[] = \\"Hi everyone","completion":"void trimSpace(char *str) { int i = 0, j = 0; while (str[i]) { if (str[i] != ' ') str[j++] = str[i]; else if (str[i-1] != ' ') str[j++] = str[i]; i++; } str[j] = '0'; } trimSpace(str); // str will become \\"Hi everyone \\""},{"prompt":"Write a code to detect all possible anagrams of a given word in Python. word = \\"c","completion":"def all_anagrams(word): if len(word) ==0: return [word] else: temp = [] for anagram in all_anagrams(word[1:]): for i in range(len(word)): temp.append(anagram[:i] + word[0:1] + anagram[i:]) return temp all_anagrams(word) // Returns ['act', 'atc', 'cat', 'cta', 'tac', 'tca']"},{"prompt":"Create a code to find the largest number from a list of given numbers in HTML.","completion":"<script> function findLargestNumber(list) { let largestNumber = list[0]; for (let i = 1; i < list.length; i++){ if (list[i] > largestNumber) { largestNumber = list[i]; } } return largestNumber; } <\/script>"},{"prompt":"Edit a piece of code to fix a syntax error. def loopList(list) for i in range(5) sum += list i return sum","completion":"def loopList(list): sum = 0 for i in range(5): sum += list[i] return sum"},{"prompt":"You need to sort an array of numbers in ascending order using JavaScript. arr = [7, 4, 1, 10, 2]","completion":"function sortArray(arr) { return arr.sort((a,b) => a - b); } sortArray(arr); //Returns [1, 2, 4, 7, 10]"},{"prompt":"Debug the following for loop for computing the sum of numbers from 0 to 10. for num in range(0:11) sum = sum + num","completion":"sum = 0 for num in range(0, 11): sum = sum + num"},{"prompt":"Write a bash command to view the amount of free disk space on your computer.","completion":"df -h"},{"prompt":"What is a bot?","completion":"A bot is a software application that automates simple tasks such as sending messages, responding to questions, or performing other tasks. It is often used to create interactive experiences with users, such as chatbots or virtual assistants. It can also be used to automate online activities such as web browsing and data entry."},{"prompt":"w can you use a HTML Id attribute?","completion":"The HTML id attribute is used to assign an identifier to an element. This identifier can then be used to reference the element in a style sheet or in JavaScript code. It is also used to link a document fragment to an element, such as a table of contents item to the corresponding section."},{"prompt":"Given a 2-dimensional array, print the elements across each row. arr = [[1, 2, 3], [4, 5, 6], [7, 8, 9]]","completion":"for row in arr: for col in row: print(col, end=\\" \\") print(\\"\\") # Output 1 2 3 4 5 6 7 8 9"},{"prompt":"Evaluate the following expression: 2x + 3y - 7z. x = 5, y = -1, z = 8","completion":"2 * 5 + 3 * -1 - 7 * 8 = -31"},{"prompt":"Write a code snippet to take in 2 integers and generate the minimum of the 2 numbers int x = 5 int y = 9","completion":"min = min(x, y) print(min) # Output: 5"},{"prompt":"Output the string \\"Programming is Fun\\" when you run the code?","completion":"print('Programming is Fun')"},{"prompt":"Read an array of numbers and output an array with all the even numbers array = [2, 3, 4, 5, 6, 7, 8]","completion":"even_array = [i for i in array if i % 2 == 0] print(even_array) # Output: [2, 4, 6, 8]"},{"prompt":"Write code that validates a given number is within a given range num = 5 min = 0 max = 10","completion":"def in_range(num, min, max): if num in range(min, max): print(f'{num} is in range') else: print(f'{num} is not in range') in_range(num, min, max) # Output: 5 is in range"},{"prompt":"Print a multiplication table of a given number num = 5","completion":"for i in range(1,11): print(f'{num} x {i} = {num * i}')"},{"prompt":"Transform the given code from C++ to Java. int main() { std::vector<int> numbers {1, 2, 3, 4, 5}; for (const auto& number: numbers) { std::cout << number << std::endl; } return 0; }","completion":"public class Main { public static void main(String[] args) { int[] numbers = {1, 2, 3, 4, 5}; for (int number : numbers) { System.out.println(number); } } }"},{"prompt":"When given a list of words, output the longest word. ['cat', 'elephant', 'apple', 'banana']","completion":"elephant"},{"prompt":"Given a list of words and numbers, create a program to print out the unique words and unique numbers. ['cat', 'elephant', 'dog', '15', '20', 'elephant', '8']","completion":"Words: ['cat', 'dog', 'elephant'] Numbers: [15, 20, 8]"},{"prompt":"Using a given array of numbers, create a function to display the frequency of each number.","completion":"def frequency(array): count = {} # Count the number of occurances for element in array: if element not in count: count[element] = 1 else: count[element] += 1 # Display the count for element in count: print(\\"Number {} occurs {} times\\".format(element, count[element]))"},{"prompt":"Create a for loop in Python that iterates over every element in a list named 'nums'. nums = [1, 4, 6, 8, 10]","completion":"for num in nums: # Do something with num"},{"prompt":"mplement a function 'convert_to_upper()' in JavaScript that converts a given string to uppercase. string = \\"Hello, World!","completion":"function convert_to_upper(string) { return string.toUpperCase(); }"},{"prompt":"Compare and contrast Java and Python for developing applications.","completion":"Java and Python are both popular programming languages used for developing applications. Java is a statically typed language and requires extra effort in the form of type checking during compilation, while Python is a dynamically typed language and no type checking is required. Java is more suitable for large-scale enterprise software development and is known for its performance and scalability, whereas Python is generally easier to work with and better suited for smaller projects and prototyping. Java is also more verbose than Python, requiring more lines of code to accomplish the same task. On the other hand, Python has a large library of additional modules and provides simpler syntax and more intuitive programming style."},{"prompt":"Trace through the following code and explain what it does. arr = [1, 4, 6, 7] for i in range(len(arr)): if arr[i] == 6: arr[i] = 8","completion":"The code loops through the elements of the list 'arr' and checks if each element is equal to 6. If it is, it replaces the element with 8. So after the loop, the list 'arr' would be changed to [1, 4, 8, 7]."},{"prompt":"w would you create a function in JavaScript that takes a string as an argument and counts the number of occurrences of a given character?","completion":"function countOccurrences(str, char) { let count = 0; for(let i=0; i < str.length; i++) { if(str[i] == char) count++; } return count; }"},{"prompt":"Write a function in Java that takes a string as an argument and returns the length of the longest word in the string.","completion":"public static int findLongestWordLength(String str) { String[] words = str.split(\\" \\"); int maxLength = 0; for (String word : words) maxLength = Math.max(maxLength, word.length()); return maxLength; }"},{"prompt":"Create a function in JavaScript that takes an array and returns a new array containing the elements in reverse order.","completion":"function reverseArray(arr) { let newArr = []; for (let i = arr.length - 1; i >= 0; i--) { newArr.push(arr[i]); } return newArr; }"},{"prompt":"Write a Python program to find the longest substring in a given string which has no repeating characters.","completion":"def longest_substring_without_repeating_characters(str): start, max_len = 0, 0 used_char = {} for i, char in enumerate(str): if char in used_char and start <= used_char[char]: start = used_char[char] + 1 else: max_len = max(max_len, i - start + 1) used_char[char] = i return max_len"},{"prompt":"Print out the 3rd element in the list. list_to_print = ['foo', 'bar', 'baz']","completion":"baz"},{"prompt":"Perform the following calculation without using the multiplication operator. 2*3","completion":"2 + 2 + 2"},{"prompt":"Replace all 'e' characters with asterisks in the following sentence. The elephant is walking","completion":"Th* appl*phant is walking"},{"prompt":"Write a function to detect if the given integer is even or odd. number = 3","completion":"def is_even(number): if number % 2 == 0: return True else: return False"},{"prompt":"Compute the value of the expression given below. (2^3) + 5","completion":"21"},{"prompt":"Find all local maxima in the given list. list_vals = [1, 2, 3, 4, 5, 2, 1]","completion":"[3, 4, 5]"},{"prompt":"Write a regular expression that matches any string containing a digit.","completion":"d+"},{"prompt":"Write a class and its constructor in Python for a vehicle object that has the fields 'type', 'make', 'model' and 'color'. Car, Toyota, Camry, Red","completion":"class Vehicle: def __init__(self, vehicle_type, make, model, color): self.type = vehicle_type self.make = make self.model = model self.color = color car = Vehicle(\\"Car\\", \\"Toyota\\", \\"Camry\\", \\"Red\\")"},{"prompt":"Create a script to find the longest palindrome in a given sentence. This is a level sentence.","completion":"function findLongestPalindrome(str) { let longestPalindrome = ''; for (let i = 0; i < str.length; i++) { for (let j = i + 1; j < str.length + 1; j++) { let currentSubstr = str.substring(i, j); if (currentSubstr === currentSubstr.split(\\"\\").reverse().join(\\"\\") && currentSubstr.length > longestPalindrome.length) { longestPalindrome = currentSubstr; } } } return longestPalindrome; } console.log(findLongestPalindrome(\\"This is a level sentence.\\")); // Outputs: \\"level\\""},{"prompt":"Write an algorithm in JavaScript for finding the maximum number in a given array. [5, 10, 8, 3, 13]","completion":"function maxFromArray(arr) { let maxNum = arr[0]; for (let i = 1; i < arr.length; i++) { if (arr[i] > maxNum) { maxNum = arr[i]; } } return maxNum; } console.log(maxFromArray([5, 10, 8, 3, 13])); // Outputs: 13"},{"prompt":"Create a basic HTML form with two text inputs, one for email and one for a password.","completion":"<form> <input type=\\"email\\" name=\\"email\\" placeholder=\\"Email\\" /> <input type=\\"password\\" name=\\"password\\" placeholder=\\"Password\\" /> <input type=\\"submit\\" value=\\"Submit\\" /> </form>"},{"prompt":"PHP, write code to print out the following string: \\"Today is [day]\\". date('l')","completion":"echo \\"Today is \\" . date('l');"},{"prompt":"Design a CSS structure to give an element a red background with rounded corners.","completion":"element { background-color: #ff0000; border-radius: 10px; }"},{"prompt":"Write a condition in an if-statement that checks whether a number is within a range of 5 to 10. number = 7","completion":"if (number > 5 && number < 10) { // do something }"},{"prompt":"Write a C++ program to take two numbers from the user and display the sum.","completion":"#include <iostream> using namespace std; // main function - // where the execution of program begins int main() { // demanding two numbers to the user int a, b, c; cout << \\"Enter two numbers: \\"; cin >> a >> b; c = a + b; cout << \\"Sum is: \\" << c; return 0; }"},{"prompt":"Design a data structure to store a list of names of the student with their respective grades in a class. Student names and grades [ ['John', 90], ['Tom', 80], ['Jill', 95], ['Stacy', 75] ]","completion":"class StudentGrades: def __init__(self, names, grades): self.names = names self.grades = grades def add_entry(self, name, grade): self.names.append(name) self.grades.append(grade) def get_grade(self, name): for i in range(len(self.names)): if self.names[i] == name: return self.grades[i]"},{"prompt":"Compose a code to find the mean and median of a given list [1, 6, 4, 9, 5, 8, 2]","completion":"def get_mean_median(nums): num_count = len(nums) num_sum = 0.0 for num in nums: num_sum += num mean = num_sum / num_count nums.sort() if num_count % 2 == 0: median1 = nums[num_count//2] median2 = nums[num_count//2 - 1] median = (median1 + median2)/2 else: median = nums[num_count//2] return mean, median"},{"prompt":"Design a code to arrange an array of numbers such that all odd numbers come before even numbers. [2, 8, 3, 4, 9]","completion":"def rearrange_arr(arr): odd_list, even_list = [], [] for num in arr: if num & 1: odd_list.append(num) else: even_list.append(num) return odd_list + even_list"},{"prompt":"Construct a code to remove all numbers greater than specified value from a given list. [1, 6, 4, 9, 5, 8, 2], 7","completion":"def remove_greater(arr, value): new_arr = [] for num in arr: if num <= value: new_arr.append(num) return new_arr"},{"prompt":"Design a code to divide two integers without using division operator. 38, 4","completion":"def divide_without_operator(x, y): if x == 0: return 0 sign = 1 if x * y < 0: sign = -1 x = abs(x) y = abs(y) result = 0 while (x >= y): temp = y i = 1 while (x >= temp): x -= temp result += i i <<= 1 temp <<= 1 return result * sign"},{"prompt":"Build a code to print out all permutations of the characters in a given string. \\"ABC","completion":"def permute(s): if len(s) == 0: return [''] prev_permutation_list = permute(s[1:len(s)]) next_list = [] for p in prev_permutation_list: for j in range(len(p) + 1): next_list.append(p[0:j] + s[0] + p[j:len(p)]) return next_list"},{"prompt":"Create an HTML element, a div with an ID of \\"content\\".","completion":"<div id=\\"content\\"></div>"},{"prompt":"Generate a random string of 10 characters that contains only lowercase letters.","completion":"hcuqwhvqme"},{"prompt":"Given an array of integers, return the sum of the elements. [1, 2, 3, 4]","completion":"10"},{"prompt":"Update the HTML div with an ID of \\"content\\" so that its background color is blue.","completion":"<div id=\\"content\\" style=\\"background-color:blue;\\"></div>"},{"prompt":"Given a string of text, print the count of all the words.","completion":"def word_count(string): count = 0 for word in string.split(): count += 1 return count"},{"prompt":"Create a JavaScript object that holds properties and methods for a Vehicle.","completion":"let Vehicle = { make: '', model: '', year: 0, getFullDetails: function() { return this.make + \\" \\" + this.model + \\" \\" + this.year; } }"},{"prompt":"Rearrange the following code segments to sort an array of integers in descending order. array = [3, 5, 7, 1, 2]; A. for(let i=1; i<array.length; i++) B. for(let j=i+1; j<array.length; j++) C. if(array[i] < array[j]) D. [array[i], array[j]] = [array[j], array[i]];","completion":"for(let i=0; i<array.length; i++) { for(let j=i+1; j<array.length; j++) { if(array[i] < array[j]) { [array[i], array[j]] = [array[j], array[i]]; } } }"},{"prompt":"Store this JSON data into a database of your choice. [ { \\"name\\": \\"Bob\\", \\"age\\": 30, \\"city\\": \\"New York\\" }, { \\"name\\": \\"Alice\\", \\"age\\": 25, \\"city\\": \\"San Francisco\\" } ]","completion":"Using MongoDB: const MongoClient = require('mongodb').MongoClient; const users = [ { \\"name\\": \\"Bob\\", \\"age\\": 30, \\"city\\": \\"New York\\" }, { \\"name\\": \\"Alice\\", \\"age\\": 25, \\"city\\": \\"San Francisco\\" } ]; const url = 'mongodb://localhost:27017'; const dbName = 'myDatabase'; MongoClient.connect(url, {useNewUrlParser: true}, (err, client) => { if(err){ console.log(\\"Error connecting to database \\" + err); return; } else { console.log(\\"Successfully connected to database\\"); const db = client.db(dbName); const collection = db.collection('users'); collection.insertMany(users, (err, result) => { if(err){ console.log(\\"Error inserting users: \\" + err); } else { console.log(\\"Successfully inserted users into database\\"); } }); } });"},{"prompt":"Write a loop in SQL for selecting all customer names that are not 'Bob'.","completion":"SELECT name FROM customers WHERE name != 'Bob';"},{"prompt":"Write an algorithm to find the longest sub string without repeating characters. string = 'abcabcbb'","completion":"def length_longest_substring(string): start = 0 max_length = 0 seen = {} for end in range(len(string)): # Check if the character has been previously seen. if string[end] in seen: # Move the starting point of the substring to the index after the last seen character of this character. start = max(start, seen[string[end]] + 1) # Update the index value of the last seen character. seen[string[end]] = end # Calculate the length of the current substring. max_length = max(max_length, end - start + 1) # Return the maximum length of the substring. return max_length"},{"prompt":"Summarize the text into a few sentences. The United Nations (UN) is an intergovernmental organization that aims to maintain international peace and security, develop friendly relations among nations, achieve international co-operation and be a centre for harmonizing the actions of nations. It is the largest, most familiar, most internationally represented and most powerful intergovernmental organization in the world.","completion":"The United Nations is a global intergovernmental organization that works to maintain peace and security, foster friendly relations between nations, and promote international cooperation. It is the world's largest and most internationally represented organization, and is capable of powerful action to promote global harmony."},{"prompt":"Create an array containing 5 records of emplyee data, including name, age and city.","completion":"let employeeData = [ { \\"name\\": \\"John\\", \\"age\\": 24, \\"city\\": \\"New York\\" }, { \\"name\\": \\"Jane\\", \\"age\\": 28, \\"city\\": \\"London\\" }, { \\"name\\": \\"Bob\\", \\"age\\": 32, \\"city\\": \\"Los Angeles\\" }, { \\"name\\": \\"Alice\\", \\"age\\": 25, \\"city\\": \\"San Francisco\\" }, { \\"name\\": \\"Greg\\", \\"age\\": 30, \\"city\\": \\"Paris\\" } ]"},{"prompt":"Write code in Java to calculate the median from an array of integers. arr = [7, 22, 21, 19, 17, 24]","completion":"public double getMedian(int[] arr) { Arrays.sort(arr); int len = arr.length; double median = 0; if (len % 2 == 0) { int a = arr[len / 2]; int b = arr[(len / 2) - 1]; median = (a + b) / 2.0; } else { median = arr[len / 2]; } return median; }"},{"prompt":"Generate a random probability distribution with mean 0 and standard deviation 1 in Python.","completion":"import numpy as np dist = np.random.normal(0, 1, 1000) # mean, standard deviation, samples"},{"prompt":"Provide an example of a query to find all users whose age is 16 or over.","completion":"SELECT * FROM Users WHERE age >= 16;"},{"prompt":"Create a second level navigation menu using HTML and CSS.","completion":"<nav> <ul> <li>Home</li> <li>About Us <ul> <li>Our History</li> <li>Mission Statement</li> <li>FAQ</li> </ul> </li> <li>Products</li> <li>Services</li> <li>Contact Us</li> </ul> </nav>"},{"prompt":"Write a SQL query for retrieving the address of the latest customer in the database.","completion":"SELECT address FROM customers ORDER BY created_at DESC LIMIT 1;"},{"prompt":"Compile a C++ program, called \\"my_program\\", with the following code. #include <iostream> int main() { std::cout << \\"Hello World!\\"; return 0; }","completion":"g++ -o my_program my_program.cpp"},{"prompt":"Create a function in R which returns the number of rows in a dataframe.","completion":"number_of_rows <- function(dataframe) { return (nrow(dataframe)) }"},{"prompt":"Filter a given list of numbers in Python to find all the even numbers. list1 = [3, 4, 5, 6, 7, 8, 9]","completion":"list2 = [number for number in list1 if number % 2 == 0] print(list2) #[4, 6, 8]"},{"prompt":"Sort a given list of strings in ascending order by length in Python. list1 = [\\"cat\\", \\"apple\\", \\"dog\\", \\"banana\\"]","completion":"list2 = sorted(list1, key=len) print(list2) #['cat', 'dog', 'apple', 'banana']"},{"prompt":"Create a function in R to get the last seven characters of a string.","completion":"substr_last7 <- function(string) { return (substr(string, nchar(string)-6, nchar(string))) }"},{"prompt":"Fill in the blank to generate a SHA-256 hash in JavaScript:","completion":"const crypto = require('crypto'); const hash = crypto.createHash('sha256');"},{"prompt":"Create an array and insert a new record at the beginning of the array in JavaScript.","completion":"let array = [1, 2, 3]; array.unshift(4); // Output: [4, 1, 2, 3]"},{"prompt":"Write a Java method to find the index of a given string in an array of strings.","completion":"public int findIndexOfString(String[] array, String s) { for (int i=0; i<array.length; i++) { if(array[i].equals(s)) return i; } return -1; }"},{"prompt":"Create a class in Java and define two float variables and two float methods.","completion":"public class FloatExample { float var1, var2; public void setVar1(float a) { var1 = a; } public float getVar1() { return var1; } public void setVar2(float b) { var2 = b; } public float getVar2() { return var2; } }"},{"prompt":"Write a C program to print the numbers from 1 to 100, with the following conditions: if the number is divisible by 2, print \\"fizz\\" if the number is divisible by 3, print \\"buzz\\" if the number is divisible by both 2 and 3, print \\"fizzbuzz","completion":"#include <stdio.h> int main(void) { int i; for (i=1; i<=100; i++) { // number divisible by 3 and 5 both if (i % 3 == 0 && i % 5 == 0) printf(\\"fizzbuzzn\\"); // number divisible by 3 only else if (i % 3 == 0) printf(\\"fizzn\\"); // number divisible by 5 only else if (i % 5 == 0) printf(\\"buzzn\\"); // number indivisible by both 3 and 5 else printf(\\"%dn\\", i); } return 0; }"},{"prompt":"Write a function in SQL to get the average salary of all engineers whose designation is \\"Senior Software Engineer\\".","completion":"SELECT AVG(salary) FROM engineers WHERE designation = 'Senior Software Engineer';"},{"prompt":"Write a function to decode a string encoded using Base64. encoded_s = \\"TG9yZW0gaXBzdW0gZG9sb3Igc2l0IGFtZXQsIGNvbnNlY3RldHVyIGFkaXBpc2ljaW5nIGVsaXQsIHNlZCBkbyBlaXVzbW9kIHRlbXBvciBpbmNpZGlkdW50IHV0IGxhYm9yZSBldCBkb2xvcmUgdGluY2lkdXJlIGV4c2VlIGRlc2VydW50IG1vbGxpdCBhbmltIGlwc3VtIHRlbXBvcmUgYSBjb25zZXF1YXQgcXVpcyBkb2xvcmVtIG5pc2ku","completion":"import base64 def decode_base64(encoded_s): decoded_s = base64.b64decode(encoded_s).decode('utf-8') return decoded_s"},{"prompt":"Write a function to classify a text as positive or negative. text = \\"This is an amazing product.","completion":"def classify_text(text): score = 0 words = text.split(\\" \\") for word in words: if word in positive_words: score += 1 elif word in negative_words: score -= 1 if score > 0: return \\"positive\\" elif score == 0: return \\"neutral\\" else: return \\"negative\\""},{"prompt":"mplement a basic calculator using JavaScript.","completion":"function calculate(inputString) { let result = 0; inputString.split(/+|-|*|//).forEach(function(value) { result += parseFloat(value); }); return result; }"},{"prompt":"Clone a given array. arr = [1,2,3,4,5]","completion":"def clone(arr): new_arr = arr.copy() return new_arr"},{"prompt":"Create a function to print a table using a given dictionary. example_dict = { 'Name': ['John', 'Stella', 'Daniel'], 'Age': [20, 23, 19] }","completion":"def print_table(dictionary): \\"\\"\\"Prints a table from a dictionary of lists.\\"\\"\\" # retrieve the lists names = dictionary['Name'] ages = dictionary['Age'] # print the table print('tNametAge') print('-' * 20) for i, name in enumerate(names): age = ages[i] print(f't{name}t{age}')"},{"prompt":"Write JavaScript code to Print the message after 5 seconds","completion":"setTimeout(function(){ console.log('Printing message after 5 seconds'); }, 5000);"},{"prompt":"Use the following array to generate an HTML table. array = [{'Name': 'John', 'Age': 20}, {'Name': 'Stella', 'Age': 23}, {'Name': 'Daniel', 'Age': 19}]","completion":"table = \\"<table>\\"; for(i=0; i < array.length; i++ ) { table += \\"<tr>\\"; table += \\"<td>\\"+ array[i].Name +\\"</td>\\"; table += \\"<td>\\"+array[i].Age+\\"</td>\\"; table += \\"</tr>\\"; } table += \\"</table>\\"; console.log(table);"},{"prompt":"Provide a function to read a single line of user input in Python.","completion":"def read_input(): \\"\\"\\"Reads a single line of user input.\\"\\"\\" return input()"},{"prompt":"Retrieve the value of an item in a given array. arr = [1, 2, 3, 4, 5]","completion":"def get_item_val(arr, idx): \\"\\"\\"Retrieves the value of an item from the given array at a given index.\\"\\"\\" if idx < 0 or idx > len(arr): return None return arr[idx]"},{"prompt":"Generate an array with all the numbers from 1 to 100","completion":"nums = [i for i in range(1,101)]"},{"prompt":"Perform sentiment analysis on this text. It was a wonderful experience staying at the hotel","completion":"The sentiment of the text is positive."},{"prompt":"Define a function called find_sum that takes a list of numbers and adds them all together.","completion":"def find_sum(seq): s = 0 # iterate over the sequence for i in seq: s += i return s"},{"prompt":"Using Java, create a class constructor for a 3D vector.","completion":"class Vector3D { double x; double y; double z; Vector3D(double x, double y, double z) { this.x = x; this.y = y; this.z = z; } }"},{"prompt":"Write an SQL query to retrieve the top 3 scores in a table that contains scores for all players.","completion":"SELECT TOP 3 * FROM scores ORDER BY score DESC;"},{"prompt":"Create a program in JavaScript that takes in a positive integer and returns the sum of its digits. 824","completion":"function sumDigits(num) { let str = num.toString(); let result = 0; for (let char of str) { result += Number(char); } return result; }"},{"prompt":"Using Java, make a program that finds out the smallest common denominator between two numbers. 12 and 18","completion":"public static int getSmallestCommonDenominator(int a, int b){ int gcd = 1; int smallNumber = Math.min(a, b); for(int i = 1; i <= smallNumber; i++) { if(a % i == 0 && b % i == 0) gcd = i; } int lcm = (a*b)/gcd; return lcm; }"},{"prompt":"Use Python to write a code that displays a multiplication table of a given number. 8","completion":"def multTable(n): for i in range(1, 11): print(\\"{} x {} = {}\\".format(n, i, n*i))"},{"prompt":"Create a function in JavaScript to replace all instances of a specified word in a string with \\"peanut butter\\". String: \\"This is an example of the word example.\\" Word to replace: \\"example","completion":"function replaceWord (str, wordToReplace) { return str.replace(wordToReplace, \\"peanut butter\\"); }"},{"prompt":"Using JavaScript, make a function to calculate the area of a circle with a given radius. 4","completion":"function areaOfCircle (radius) { return Math.PI * radius * radius; }"},{"prompt":"Suggest a way to debug these lines of code. // code int i = 0; while (i<10) { i++; System.out.println(\\"Something is wrong!\\"); }","completion":"One way to debug these lines of code is to add print statements before and after the loop to print the value of \\"i\\" both before and after the loop. Then, inside the loop, you can print out the value of \\"i\\" just before the \`\`println\`\` statement and you can also print out the value of \`\`i\`\` after the loop is exited. This will help you see which iteration is causing the issues."},{"prompt":"Create a python function that will convert a string to all uppercase.","completion":"def toUpperCase(str): return str.upper()"},{"prompt":"Suggest a SQL query to find the percentage of the total mark of a student. student_id: 987 student_marks: 40 total_marks: 50","completion":"SELECT student_id, student_marks, total_marks, (student_marks/total_marks)*100 AS Percentage FROM table WHERE student_id = 987;"},{"prompt":"Suggest a way to find the number of occurrences of a time value in a given array. array = [10:00, 11:30, 10:00, 8:30, 10:00]","completion":"We can use the reduce method to count the number of occurrences of a certain time value in the array. var array = [10:00, 11:30, 10:00, 8:30, 10:00]; var desiredTime = '10:00'; var count = array.reduce((n, val) => { return n + (val === desiredTime); }, 0); console.log(count); // output: 3"},{"prompt":"Evaluate the following JSON data using a Javascript function. var data = { \\"name\\": \\"John Doe\\", \\"age\\": 28, \\"hobbies\\": [\\"tennis\\", \\"football\\", \\"golf\\"] }","completion":"function evaluateData(data) { console.log(\`Name: {data.name}\`); console.log(\`Age: {data.age}\`); console.log(\`Hobbies: {data.hobbies.join(', ')}\`); } evaluateData(data); // Output: // Name: John Doe // Age: 28 // Hobbies: tennis, football, golf"},{"prompt":"Construct a function that can generate a unique identifier.","completion":"function generateId() { return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) { var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8); return v.toString(16); }); }"},{"prompt":"Create a database table called 'Employees' with fields such as employee_id, name, age, email, etc.","completion":"CREATE TABLE Employees ( employee_id INT NOT NULL AUTO_INCREMENT, name VARCHAR(255) NOT NULL, age INT NOT NULL, email VARCHAR(255) NOT NULL, PRIMARY KEY (employee_id) );"},{"prompt":"Create an array of random integers between 1 to 10 using the function **np.random.randint**.","completion":"# Create array of random integers between 1 to 10 import numpy as np random_integers = np.random.randint(low=1, high=10, size=10)"},{"prompt":"Create an object-oriented program in Java which can display the current date and time.","completion":"import java.util.Date; public class DateTime { public static void main(String args[]) { Date date = new Date(); System.out.println(\\"Current date and time is: \\" + date); } }"},{"prompt":"Write a function in Python which can generate a random string consisting of lowercase letters, numbers and symbols.","completion":"import string import random def random_string(stringLength=10): lettersAndDigits = string.ascii_letters + string.digits + string.punctuation return ''.join(random.choice(lettersAndDigits) for i in range(stringLength))"},{"prompt":"Create a function in JavaScript for validating a given a string for all required special characters. ExampleString: \\"This string should contain at least 1 digit, one special character and one capital letter.","completion":"function checkRegex(string) { if (/[A-Z]/.test(string) && /[!@#%^&*]/.test(string) && /[0-9]/.test(string)) { return true; } else { return false; } }"},{"prompt":"Write a CSS code to center align the given text.","completion":"p { text-align: center; }"},{"prompt":"Generate XML tags for the given list of strings. list = [\\"string1\\",\\"string2\\",\\"string3\\"]","completion":"<?xml version=\\"1.0\\" encoding=\\"UTF-8\\"?> <root> <string1></string1> <string2></string2> <string3></string3> </root>"},{"prompt":"Create two classes in Python which inherits from a parent class called **Shape**.","completion":"class Shape(object): pass class Square(Shape): def __init__(self, side): self.side = side class Circle(Shape): def __init__(self, radius): self.radius = radius"},{"prompt":"Create a function in Python for sending an email using the SMTP protocol.","completion":"import smtplib def send_email(sender, recipient, message): smtp_server = smtplib.SMTP(\\"smtp.example.com\\") smtp_server.sendmail(sender, recipient, message) smtp_server.quit()"},{"prompt":"Create a function in JavaScript which can receive and store user inputs.","completion":"function storeInput() { let inputs = []; inputs.push(prompt(\\"Please input your name: \\")); inputs.push(prompt(\\"Please input your age: \\")); inputs.push(prompt(\\"Please input your email address: \\")); return inputs; }"},{"prompt":"Create a database table to store student information such as id, name, gender etc.","completion":"CREATE TABLE Students ( id INT NOT NULL AUTO_INCREMENT, name VARCHAR(255) NOT NULL, gender CHAR(1) NOT NULL, address VARCHAR(255), PRIMARY KEY (id) );"},{"prompt":"Find the number at the given index in an array. array = [1,2,3,4,5], index = 3","completion":"def find_number(arr, index): return arr[index]"},{"prompt":"Write a JavaScript program to find the sum of two numbers using a recursive function.","completion":"// create a recursive function to find the sum of two numbers function addNums(num1, num2) { // base case if (num2 == 0) { return num1; } // recursive case else { return addNums(++num1, --num2); } }"},{"prompt":"Given the data structure below, write a function to print out all the elements in the array. const arr = [1, 2, 3, 4, 5];","completion":"function printArray(arr){ for (let i = 0; i < arr.length; i++){ console.log(arr[i]); } } printArray(arr);"},{"prompt":"mplement a function that check if a number is prime.","completion":"function isPrime(num) { for (let i = 2; i < num; i++) { if (num % i === 0) { return false; } } return num > 1; }"},{"prompt":"Write CSS to give the title of a heading a font-size of 20px and a font-weight of 800.","completion":"h1 { font-size: 20px; font-weight: 800; }"},{"prompt":"Explain the function of a variable in programming.","completion":"In programming, a variable is a named storage location that can hold a value. Variables are used to store values that can be manipulated or referenced in a program. Variables can be used to hold numbers, text, or other types of data. They can also be used to store values or objects that are accessed or changed by a program. This allows a program to be dynamic and adaptable to ever-changing inputs and data."},{"prompt":"Create an object in JavaScript and give it two properties and two methods.","completion":"const myObject = { prop1: \\"value1\\", prop2: \\"value2\\", method1 : function(){ // do something }, method2: function(){ // do something else } }"},{"prompt":"Write HTML code that creates a table.","completion":"<table> <tr> <th>Column 1</th> <th>Column 2</th> <th>Column 3</th> </tr> <tr> <td>Cell 1</td> <td>Cell 2</td> <td>Cell 3</td> </tr> <tr> <td>Cell 4</td> <td>Cell 5</td> <td>Cell 6</td> </tr> </table>"},{"prompt":"Create a JavaScript class that has three properties.","completion":"class MyClass { constructor(prop1, prop2, prop3) { this.prop1 = prop1; this.prop2 = prop2; this.prop3 = prop3; } }"},{"prompt":"Create an if-elseif-else statement in JavaScript","completion":"if (condition1) { // code to execute if condition1 is true } else if (condition2) { // code to execute if condition2 is true } else { // code to execute if both condition1 and condition2 are false }"},{"prompt":"Write a function to calculate the power of two number (base^exp).","completion":"function power(base, exp) { if (exp == 0) return 1; return base * power(base, exp-1) } power(5, 3);"},{"prompt":"mplement the update function in Java for a queue data structure.","completion":"public void update(int index, Object newElement) { if(index < 0 || index >= size()) { throw new NoSuchElementException(); } Node node = head; for(int i = 0; i < index; i++) { node = node.next; } node.element = newElement; }"},{"prompt":"Name and describe a feature of the JavaScript Date object.","completion":"One feature of the JavaScript Date object is the Get Full Year method, which returns the 4 digit year for the provided date. It allows you to retrieve the year from a date object without any ambiguity due to different calendar conventions. It can also be used when dealing with years outside of the Gregorian calendar."},{"prompt":"Create a Java function to take two integers as parameters and return their sum as a double.","completion":"public static double sumIntegers(int a, int b){ return (double) (a + b); }"},{"prompt":"Create a JSON object to represent an address.","completion":"{ \\"houseNumber\\": \\"20\\", \\"streetName\\": \\"Main Street\\", \\"city\\": \\"Anytown\\", \\"state\\": \\"AL\\", \\"zip\\": \\"12345\\" }"},{"prompt":"Construct and execute a SQL query to select fields from the following table Table: student Fields: firstname, lastname, email","completion":"SELECT firstname, lastname, email FROM student;"},{"prompt":"Generate an HTML page to display text The text to be displayed: \\"Hello World","completion":"<html> <head> <title>Hello World</title> </head> <body> <h1>Hello World</h1> </body> </html>"},{"prompt":"dentify and implement a sorting algorithm for the following array int[] array = {23, 10, 4, 15, 66, 28, 11};","completion":"int[] array = {23, 10, 4, 15, 66, 28, 11}; // Insertion sort for (int i = 1; i < array.length; i++) { int key = array[i]; int j = i-1; while (j >= 0 && array[j] > key) { array[j + 1] = array[j]; j = j - 1; } array[j + 1] = key; } System.out.println(\\"Sorted array: \\"); for (int i = 0; i < array.length; i++) { System.out.print(array[i] + \\" \\"); }"},{"prompt":"Loop through an array using JavaScript const array = [2, 3, 5, 7, 11];","completion":"const array = [2, 3, 5, 7, 11]; for (let i = 0; i < array.length; i++) { console.log(array[i]); }"},{"prompt":"Construct a JavaScript object with the following properties gender: female name: Jane age: 22","completion":"let person = { gender: 'female', name: 'Jane', age: 22 };"},{"prompt":"erpret the following code written in Bash list=(a b c d e) echo list echo {list[2]}","completion":"list=(a b c d e) echo list This line prints the elements of the array which is \\"a b c d e\\". echo {list[2]} This line prints the element at index 2 from the array, which is \\"c\\"."},{"prompt":"Given a string, change the spaces between words to underscores String: \\"This is a string","completion":"String str = \\"This is a string\\"; String newStr = str.replaceAll(\\"s\\", \\"_\\"); System.out.println(newStr); // This_is_a_string"},{"prompt":"Create a function in Python to identify if the inputted number is odd or even.","completion":"def is_odd_or_even(num): return \\"even\\" if num % 2 == 0 else \\"odd\\""},{"prompt":"Create a JavaScript function to convert a given temperature in celsius to its equivalent in fahrenheit.","completion":"function celsiusToFahrenheit(celsius) { let fahrenheit = (celsius * 9/5) + 32; return fahrenheit; }"},{"prompt":"Using an array, write a Python script that prints the sum of the numbers from 0 to 10.","completion":"arr = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10] sum = 0 # Iterate to find the sum for i in range (0, len(arr)): sum = sum + arr[i] # Print the sum print(sum)"},{"prompt":"Create a JavaScript function that takes two integers, n and m as input and returns true if n is larger than m, and false otherwise.","completion":"function isNGreaterThanM(n, m) { return n > m ? true : false; }"},{"prompt":"Given an array of integers and a target value, write a Java program to determine whether this array contains two elements with the given target sum. arr = [2, 4, 6, 8, 10], target = 8","completion":"boolean containsTargetSum(int[] arr, int target){ for (int i = 0; i < arr.length; i++){ for (int j = 1; j < arr.length; j++){ if (arr[i] + arr[j] == target) return true; } } return false; }"},{"prompt":"Create a C++ Program to reverse the words of a string.","completion":"#include <iostream> #include <string> // function to reverse the words of a string std::string reverseWords(std::string str) { std::string revString = \\"\\"; int length = str.length(); // Traverse given string from end for (int i = length - 1; i >= 0; i--) { // if (str[i] == ' ') // continue; // Store next word std::string temp = \\"\\"; while (i >= 0 && str[i] != ' ') { temp = temp + str[i]; i--; } // Append next word to result revString = revString + temp + \\" \\"; } return revString; }"},{"prompt":"Create an HTML and CSS layout to display a list of books with their author, title and description. Book 1: Author - John, Title - The Catcher in the Rye, Description - “The Catcher in the Rye is a 1951 novel by J. D. Salinger.” Book 2: Author - Jane, Title - Sense and Sensibility, Description - “Sense and Sensibility is a novel by Jane Austen, published in 1811.”","completion":"<html> <head> <style> .book-container{ display: flex; flex-wrap: wrap; } .book{ width: 300px; padding: 10px; border: 1px solid #ccc; margin: 10px; box-sizing : border-box; } .author { font-weight: bold; } .title { font-style: italic; } .description { font-size: 12px; } </style> </head> <body> <div class=\\"book-container\\"> <div class=\\"book\\"> <p class=\\"author\\">Author: John</p> <p class=\\"title\\">Title: The Catcher in the Rye</p> <p class=\\"description\\">Description: “The Catcher in the Rye is a 1951 novel by J. D. Salinger.”</p> </div> <div class=\\"book\\"> <p class=\\"author\\">Author: Jane</p> <p class=\\"title\\">Title: Sense and Sensibility</p> <p class=\\"description\\">Description: “Sense and Sensibility is a novel by Jane Austen, published in 1811.”</p> </div> </div> </body> </html>"},{"prompt":"Convert the following array of integers to a string: [1, 2, 3, 4, 5] [1, 2, 3, 4, 5]","completion":"\\"1 2 3 4 5\\""},{"prompt":"Write a CSS rule to set font-size of an element to 20px","completion":"CSS Rule: { font-size: 20px; }"},{"prompt":"w can you ensure that a button element with the ID of \\"submit-btn\\" is not clickable?","completion":"You can ensure that a button element with the ID of \\"submit-btn\\" is not clickable by adding this code to the CSS file: #submit-btn{ pointer-events: none; }"},{"prompt":"Create a list comprehension in Python to generate odd numbers between 1 and 10","completion":"odd_numbers = [x for x in range(1, 11) if x % 2 != 0]"},{"prompt":"Change the following code to create a new string without spaces. string = \\"Hello World","completion":"string = string.replace(' ', '') # new string is \\"HelloWorld\\""},{"prompt":"Make a valid http request call with the following parameters url = 'www.example.com' Method = 'GET' Header = 'Content-Type:application/json'","completion":"import requests url = 'www.example.com' headers = {'Content-Type':'application/json'} r = requests.get(url, headers=headers)"},{"prompt":"w many lines of code does the following function contain? def f(x): s = 0 for j in range(1,x+1): for k in range(1,x+2): if j % k == 0: s = s + 1 return","completion":"This function contains 8 lines of code."},{"prompt":"Generate a list of 10 items from the given array. myArray = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]","completion":"[1, 2, 3, 4, 5, 6, 7, 8, 9, 10]"},{"prompt":"Create an efficient algorithm that finds the intersection between two sorted arrays. arr1 = [1, 2, 6, 8, 9] arr2 = [2, 3, 5, 6, 7]","completion":"def intersection(arr1, arr2): result = [] i = 0 j = 0 while i < len(arr1) and j < len(arr2): if arr1[i] < arr2[j]: i += 1 elif arr2[j] < arr1[i]: j += 1 else: result.append(arr2[j]) j += 1 i += 1 return result"},{"prompt":"Write a Dockerfile for an Nginx server.","completion":"FROM nginx:alpine COPY www/ /usr/share/nginx/html/ EXPOSE 80 CMD [\\"nginx\\", \\"-g\\", \\"daemon off;\\"]"},{"prompt":"Write a code to extract data from a PDF document.","completion":"# install the required package pip install pdfminer.six # importing all the required modules from pdfminer.pdfparser import PDFParser from pdfminer.pdfdocument import PDFDocument # open the pdf file fp = open('sample_form.pdf', 'rb') # create parser object parser = PDFParser(fp) # create pdf document object doc = PDFDocument(parser) # get the text data from pdf file data = doc.get_data() # print the text extracted print(data)"},{"prompt":"Create a MySQL query to select all the employees who have 100 or more sales.","completion":"SELECT * FROM Employees WHERE Sales >= 100;"},{"prompt":"Write a SQL query to find out all the cities that have the most expensive houses.","completion":"SELECT City FROM Houses ORDER BY Price DESC LIMIT 10;"},{"prompt":"Create a program to search for a word in a document. document = \\"This is a sample document with some words.\\" word = \\"word","completion":"def search(document, word): if word in document: print(\\"The word '{}' was found in the document\\".format(word)) else: print(\\"The word '{}' was not found in the document\\".format(word)) search(document, word) # output = \\"The word 'words' was found in the document.\\""},{"prompt":"Create a dictionary of 10 words and their meanings.","completion":"words_dict = { 'Piano': 'A musical instrument with keys and strings', 'Cello': 'A string instrument played with a bow', 'Drums': 'A percussion instrument', 'Guitar': 'A plucked stringed instrument', 'Harp': 'A stringed instrument played with the hands', 'Trumpet': 'A brass instrument', 'Violin': 'A bowed string instrument', 'Oboe': 'A double-reed wind instrument', 'Clarinet': 'A single-reed wind instrument', 'Flute': 'A wind instrument with a metal or wooden tube' }"},{"prompt":"Construct a query to find the 2nd highest salary from an employee table.","completion":"SELECT MAX(salary) FROM (SELECT DISTINCT(salary) FROM employee ORDER BY salary DESC LIMIT 2)"},{"prompt":"Parse a string containing the date in the format: \\"YYYY-MM-DD date = \\"2021-10-15","completion":"def parse_date(date): year, month, day = date.split('-') return (year, month, day) date_tuple = parse_date(date) print(date_tuple) # output = ('2021', '10', '15')"},{"prompt":"Create an initialization script for a database.","completion":"#!/usr/bin/env python import sqlite3 db_name = 'example.db' # connect to the database db_connection = sqlite3.connect(db_name) # create tables db_connection.execute(''' CREATE TABLE IF NOT EXISTS users ( id INTEGER PRIMARY KEY, name TEXT NOT NULL, password TEXT NOT NULL) ''') db_connection.execute(''' CREATE TABLE IF NOT EXISTS items ( id INTEGER PRIMARY KEY, name TEXT NOT NULL, price INTEGER NOT NULL, description TEXT NOT NULL) ''') # commit the changes db_connection.commit()"},{"prompt":"Create a program to generate random passwords of 8 characters consisting of letters, numbers and special characters.","completion":"import random import string def generate_password(length): letters_and_digits = string.ascii_letters + string.digits special_characters = '!@#%^&*()' chars = letters_and_digits + special_characters return ''.join(random.choice(chars) for i in range(length)) print(generate_password(8)) # output = xT@lo6Sw"},{"prompt":"Build a function in PHP that converts a string into ASCII code","completion":"function stringToASCII(str){ result = ''; for(i=0; i<strlen(str); i++){ result .= ord(str[i]) .\\" \\"; } return result; }"},{"prompt":"Edit the following code to return a Promise in the getMessage() function function getMessage() { const fullName = getName(); // TODO: return a Promise }","completion":"function getMessage() { const fullName = getName(); // return a Promise return new Promise ((resolve, reject) => { resolve(fullName); }); }"},{"prompt":"Java, what does the \\"public\\" modifier mean for a class?","completion":"The public modifier for a class in Java means that the class is visible to all other classes, regardless of package. This means that any class can create an instance of the class, call its methods, and access its fields, as long as they have the proper access permissions."},{"prompt":"Given the following HTML: <div id=\\"Container\\"> <p>Hello World</p> <!-- TODO: Add an image here --> </div>","completion":"<div id=\\"Container\\"> <p>Hello World</p> <img src=\\"your_image.jpg\\" alt=\\"your_image\\" /> </div>"},{"prompt":"Construct a method in Java to calculate the average of an array of numbers","completion":"public static double calculateAverage(int[] numbers) { double total = 0; for (int num : numbers) { total += num; } return total / numbers.length; }"},{"prompt":"JavaScript, what is the difference between var and let?","completion":"The main difference between the \\"var\\" and \\"let\\" keywords in JavaScript is their scope. Variables declared with the \\"var\\" keyword have a function scope and are available throughout the entire function, while variables declared with \\"let\\" have a block scope and are available only in the block in which they are declared."},{"prompt":"We want to display a random number between 1 and 10 using Python. Write a program for that.","completion":"import random randomNumber = random.randint(1, 10) print(randomNumber)"},{"prompt":"Develop a C++ program to find the volume of a cylinder given its radius and height. Radius: 12 Height: 20","completion":"#include <iostream> #include <math.h> using namespace std; int main() { float radius, height, volume; cout << \\"Enter the radius of the cylinder in cm: \\"; cin >> radius; cout << \\"Enter the height of the cylinder in cm: \\"; cin >> height; volume = 3.14159 * pow(radius, 2) * height; cout << \\"The volume of the cylinder is: \\" << volume << \\" cm^3\\" << endl; return 0; }"},{"prompt":"Compose a SQL query to display the highest minimum salary of the employees in each department.","completion":"SELECT DepartmentID, MAX(MinSalary) FROM Employee GROUP BY DepartmentID;"},{"prompt":"Construct a multi-threaded application in Python to read and calculate the sum of a list of numbers. List of numbers:[25, 10, 5, 20]","completion":"import threading # function to read the numbers def read_sum(list_of_numbers): total = 0 for number in list_of_numbers: total += number print(\\"Sum of the list of numbers is: {}\\".format(total)) # Driver code list_of_numbers = [25, 10, 5, 20] start = 0 end = len(list_of_numbers) # creating thread t1 = threading.Thread(target=read_sum, args=(list_of_numbers[start:end],)) # starting thread 1 t1.start() # wait until thread 1 is completely executed t1.join() # both threads completely executed print(\\"Done!\\")"},{"prompt":"Develop a web service to convert a temperature value from Fahrenheit to Celsius. Temperature in Fahrenheit: 98","completion":"#!/bin/bash import web urls = ( '/convert', 'ConvertFahrenheitToCelcius' ) app = web.application(urls, globals()) class ConvertFahrenheitToCelcius: def GET(self): web.header('Content-Type', 'text/plain; charset=utf-8') tempFahrenheit = web.input().t tempCelcius = (tempFahrenheit - 32) * (5/9) return str(tempCelcius) if __name__ == \\"__main__\\": app.run()"},{"prompt":"Create a table in MySQL that stores employee details.","completion":"CREATE TABLE EmployeeRecord ( EmployeeID INT NOT NULL AUTO_INCREMENT, Name VARCHAR(255) NOT NULL, Age INT NOT NULL, Address VARCHAR(255) NOT NULL, Primary Key (EmployeeID) );"},{"prompt":"Create a C++ function to generate a binary tree with a breadth-first search algorithm. Nodes: 5, 4, 8, 11, 13, 4, 7, 2, 5, 1","completion":"Node *generateBFSBinaryTree(vector<int> input_nodes) { Node *root = new Node{input_nodes[0]}; queue<Node *> que; que.push(root); for (int i = 1; i < input_nodes.size(); ++i) { Node *node = new Node{input_nodes[i]}; Node *par = que.front(); que.pop(); if (!par->left) { par->left = node; } else { par->right = node; } que.push(node); } return root; }"},{"prompt":"Create a UI Automation test that validates the text field is populated with the value \\"Hello World!\\".","completion":"describe('Populated Text Field Test', () => { it('Should validate the text field has the value of \\"Hello World!\\"', () => { const value = textField.getAttribute('value'); expect(value).toEqual('Hello World!'); }); });"},{"prompt":"Edit the following HTML code to display a border around the element with the ID 'test-element'. <div id=\\"test-element\\">Hello World</div>","completion":"<div id=\\"test-element\\" style=\\"border:1px solid #000\\">Hello World</div>"},{"prompt":"Write a SQL query to calculate the average age of customers who have purchased items from a store.","completion":"SELECT AVG(age) FROM customers WHERE customers.purchases IS NOT NULL;"},{"prompt":"Write an SQL query to select the employees who have worked for more than 5 years.","completion":"SELECT * FROM employees WHERE years_of_experience > 5;"},{"prompt":"Write a JavaScript code snippet to filter an array to retain only the strings in the array that start with \\"A\\". Array: [\\"Apple\\", \\"Banana\\", \\"Orange\\", \\"Apple Pie\\"]","completion":"const result = array.filter(s => s.startsWith('A'));"},{"prompt":"Design an algorithm in Python to detect palindrome strings.","completion":"def is_palindrome(s): rev = ''.join(reversed(s)) if (s == rev): return True return False"},{"prompt":"Code a function that prints out the characters of a string one by one. str = \\"Hello World!","completion":"function printCharByChar(str) { for (let i=0; i<str.length; i++) { console.log(str.charAt(i)); } } printCharByChar(str);"},{"prompt":"Your job is to generate random numbers within a given range. min = 20, max = 40","completion":"function getRandomNumber(min, max){ return Math.floor(Math.random() * (max - min + 1)) + min; } console.log(getRandomNumber(min, max));"},{"prompt":"You are expected to calculate the average of the elements in an array. arr: [4, 7, 13, 33]","completion":"function calculateAverage(arr){ let sum = 0; for(let i=0; i<arr.length;i++){ sum+=arr[i]; } return sum/arr.length; } console.log(calculateAverage(arr));"},{"prompt":"Find the greatest number from an array. arr = [41, 77, 56, 99]","completion":"function greatestNumber(arr) { return Math.max(...arr); } console.log(greatestNumber(arr));"},{"prompt":"Code a function to compute the difference between two dates. date1 = \\"02/26/2019\\"; date2 = \\"10/25/2020\\";","completion":"function dateDifference(date1, date2){ let date1Moment = moment(date1, \\"MM/DD/YYYY\\"); let date2Moment = moment(date2, \\"MM/DD/YYYY\\"); let diffInDays = date2Moment.diff(date1Moment, 'days'); return diffInDays; } console.log(dateDifference(date1, date2));"},{"prompt":"Deploy a Keras model to Google App Engine.","completion":"1. Create a Google Cloud Platform project and enable the App Engine API. 2. Create an app for your project on App Engine. 3. Install the Google Cloud SDK and authentication into your machine. 4. Initialize your project and configure the App Engine. 5. Follow the instructions to deploy the model with Google Cloud Endpoints. 6. Copy the URL from the Cloud Endpoint and use it to access the model from the App Engine."},{"prompt":"Create an SQL query to select only the rows from a table where the second column is not empty.","completion":"SELECT * FROM TABLE_NAME WHERE COL2 <> '';"},{"prompt":"Formulate a plan to automate a login process.","completion":"1. Identify the website that requires the login process. 2. Connect to the website using the appropriate library/API. 3. Get the username and password credentials from a secure database (or a file). 4. Use the credentials to create a login request. 5. Capture the response and analyze the outcome. 6. Extract any key elements of the response that are required to perform other activities (if required). 7. Log details from the login request in the database (or a file). 8. Handle any error cases appropriately."},{"prompt":"Create a class for a basketball team.","completion":"class BasketballTeam: def __init__(self, name, players): self.name = name self.players = players def get_name(self): return self.name def get_players(self): return self.players def add_player(self, player): self.players.append(player) return self.players"},{"prompt":"Write a regular expression pattern to find all the words which begin with a digit.","completion":"pattern = r'b[0-9]w+'"},{"prompt":"Parse a JSON string. {\\"name\\":\\"John\\", \\"age\\":30}","completion":"import json json_data = '{\\"name\\":\\"John\\", \\"age\\":30}' data = json.loads(json_data) name = data[\\"name\\"] age = data[\\"age\\"] print(f\\"Name: {name}, Age: {age}\\")"},{"prompt":"mplement a queue data structure.","completion":"class Queue: def __init__(self): self.data = [] def is_empty(self): return not self.data def enqueue(self, element): self.data.append(element) def dequeue(self): return self.data.pop(0) def peek(self): if not self.is_empty(): return self.data[0]"},{"prompt":"Run a sentiment analysis of the following sentence using Python. The food was really good but the service was terrible.","completion":"\\"\\"\\" Run a sentiment analysis of the sentence using Python \\"\\"\\" import nltk from textblob import TextBlob text = 'The food was really good but the service was terrible.' blob = TextBlob(text) for sentence in blob.sentences: print(sentence.sentiment) # Output Sentiment(polarity=0.05, subjectivity=0.6)"},{"prompt":"Create a MySQL query to retrieve the oldest record in a table called orders.","completion":"SELECT * FROM orders ORDER BY created_at ASC LIMIT 1;"},{"prompt":"Write a code in Java to convert any string to camel case format. String = \\"this_is_a_string","completion":"\\"\\"\\" Write a code to convert any string to camel case format in Java \\"\\"\\" public class CamelCaseFormat { public static String toCamelCase(String s){ String[] parts = s.split(\\"_\\"); String camelCaseString = \\"\\"; for (String part : parts){ camelCaseString = camelCaseString + toProperCase(part); } return camelCaseString; } static String toProperCase(String s) { return s.substring(0, 1).toUpperCase() + s.substring(1).toLowerCase(); } public static void main(String[] args) { String s = \\"this_is_a_string\\"; System.out.println(toCamelCase(s)); } }"},{"prompt":"Which data structure is most suitable for storing a large list of numbers?","completion":"Heap or binary tree. A heap or binary tree data structure are most suitable for storing a large list of numbers as it provides O(log n) time complexity for insertion, search and deletion."},{"prompt":"Explain the concept of the depth-first search algorithm and provide an example.","completion":"Depth-first search (DFS) is an algorithm used to traverse a tree or graph data structure. It starts at the root of the tree, explores as far as possible down a given branch and then backtracks along the same path before exploring a new branch. For example, consider a BST (Binary Search Tree) where we want to traverse all the elements, the algorithm starts at the root node, then traverses all the elements in the left subtree before traversing all the elements in the right subtree."},{"prompt":"Create a SQL query to retrieve the name, address and contact number of the customers with the highest spending record.","completion":"SELECT name, address, contact_number FROM customers ORDER BY spending DESC LIMIT 1;"},{"prompt":"Explain the concept of fuzzy logic and provide an example.","completion":"Fuzzy logic is a form of artificial intelligence that deals with reasoning that is approximate rather than exact. It is based on the concept of fuzzy sets, which allow for degrees of truth instead of just true and false. For example, \\"It's hot\\" is a fuzzy statement because there is no definite temperature that it could refer to. Different people might have different definitions of hot. By using fuzzy logic, it is possible to create a temperature threshold to determine when an environment is hot, cold or moderate."},{"prompt":"Given a data set, calculate the average using Python. [1, 2, 3, 4, 5]","completion":"nums = [1,2,3,4,5] sum = 0 for num in nums: sum +=num average =sum / len(nums) print(average) // output is 3.0"},{"prompt":"Format the following SQL query using indentation. SELECT * FROM employee WHERE name = 'John'","completion":"SELECT * FROM employee WHERE name = 'John'"},{"prompt":"Using Python, create a program that prints out the numbers 0 to 100.","completion":"for i in range(101): print(i)"},{"prompt":"Create a query in PostgreSQL to display all the records in a given table. Table name: 'employee'","completion":"SELECT * FROM employee"},{"prompt":"Write a basic CSS structure to style a div element with the background colour of 'red'.","completion":"div { background-color: red; }"},{"prompt":"Write a SQL query to find all the names of people born before 1990.","completion":"SELECT name FROM people WHERE year_of_birth <1990;"},{"prompt":"Create a HTML & CSS website template featuring a header with a website logo.","completion":"<html> <head> <title>My Website</title> </head> <body> <header> <div class = \\"logo\\"> <img src = \\"logo.png\\" alt = \\"Website Logo\\" /> </div> </header> <!-- other code--> </body> </html> /* CSS Code */ header { background-color: #ccc; padding: 30px 0; } .logo { text-align: center; } /* Other Styles */"},{"prompt":"w many islands of Scotland are there?","completion":"There are over 700 islands in Scotland, with approximately 150 of them being inhabited."},{"prompt":"Develop an API that returns a list of students and their ages.","completion":"import flask app = flask.Flask(__name__) students = { 'John': 20, 'Jane': 19, 'Bob': 22 } @app.route(\\"/get_student_ages\\", methods = [\\"GET\\"]) def get_student_ages(): return flask.jsonify(students) if __name__ == \\"__main__\\": app.run()"},{"prompt":"Create a data structure to store employee information.","completion":"class Employee: def __init__(self, name, age, salary): self.name = name self.age = age self.salary = salary employee_list = []"},{"prompt":"Write a MySQL query to find all the customers who have placed an order in the last 30 days.","completion":"SELECT * FROM customers WHERE EXISTS (SELECT * FROM orders WHERE customers.CustomerID = orders.CustomerID AND orders.OrderDate > NOW() - INTERVAL 30 DAY)"},{"prompt":"dentify which of these strings is a valid email address? name@example.com,lily.flower@example.net,www@example.org","completion":"name@example.com is a valid email address."},{"prompt":"Choose the correct output of the following program. x = 3 y = 4 z = 5 if x < y and y < z: print(x + y + z)","completion":"12"},{"prompt":"Create a program to detect a negative number in an array of numbers. numbers = [10, -5, 4, 20]","completion":"def detect_negative_number(numbers): flag = False for num in numbers: if num < 0: flag = True break return flag"},{"prompt":"Write a method in Swift to capitalize the first letter of a given sentence. sentence = \\"hello world","completion":"func capitalizeFirstLetter(sentence: String) ->String { return sentence.prefix(1).uppercased() + sentence.dropFirst() }"},{"prompt":"Search for Usernames starting with “John” in the database.","completion":"SELECT * FROM users WHERE username LIKE 'John%';"},{"prompt":"Generate permutations of the given array of numbers. numbers = [1, 2, 3]","completion":"def permutations(arr): # base case: if len(arr) == 0: return [] # base case: if len(arr) == 1: return [arr] # find all permutations for arr of size n-1 smaller_permutations = permutations(arr[1:]) # find permutations for element at the index 0 current_element = arr[0] permutations_for_current_element = [] # iterate smaller permutations for per in smaller_permutations: # create new permutation for i in range(len(per)+1): # copy original values new_permutation = per[:] # insert current element new_permutation.insert(i, current_element) permutations_for_current_element.append(new_permutation) return permutations_for_current_element"},{"prompt":"Write a function to calculate the triangular number of a given number n.","completion":"def getTriangularNumber(n): return int(n * (n + 1) / 2)"},{"prompt":"Design algorithm for the below use case Given two arrays A and B of the same length, determine whether there is a pair of indices (i, j) such that A[i] == B[j].","completion":"def check_if_pair_exists(arr_a, arr_b): for i in range(len(arr_a)): for j in range(len(arr_b)): if arr_a[i] == arr_b[j]: return True return False"},{"prompt":"Write the pseudo-code algorithm that implements the following polynomial equation 3x^3 + 4x - 2","completion":"def polynomial_eqn(x): y = 3 * x**3 + 4 * x - 2 return y"},{"prompt":"Design the algorithm to perform a depth-first search on given binary tree","completion":"def DFS(root): s = Stack() s.push(root) while (s.size() > 0): node = s.pop() # Do something with the node if (node.left != NULL): s.push(node.left) if (node.right != NULL): s.push(node.right)"},{"prompt":"Write the code to calculate a factorial recursively","completion":"def factorial(n): if n == 0: return 1 else: return n * factorial(n - 1)"},{"prompt":"Create a sorting algorithm for an array that only needs 1 iteration","completion":"def one_iteration_sort(arr): for i in range(len(arr)): min_index = i for j in range(i, len(arr)): if arr[j] < arr[min_index]: min_index = j arr[i], arr[min_index] = arr[min_index], arr[i]"},{"prompt":"Create a program to detect a loop in a linked list","completion":"def detect_loop(head): slow_p = head fast_p = head while(slow_p and fast_p and fast_p.next): slow_p = slow_p.next fast_p = fast_p.next.next if slow_p == fast_p: return 1 return 0"},{"prompt":"Design an algorithm to add two given binary numbers","completion":"def add_binary(b1, b2): # initalize result result = \\"\\" carry = 0 # iterate over the bits for i in range(max(len(b1), len(b2))): a = int(b1[-i-1]) if i < len(b1) else 0 b = int(b2[-i-1]) if i < len(b2) else 0 #calculate sum sum = carry ^ a ^ b result = str(sum) + result # calculate the carry carry = (carry&a) | (carry&b) | (a&b) #append the carry to the result if carry: result = '1' + result return result"},{"prompt":"Explain what data encapsulation is.","completion":"Data encapsulation is a software programming concept that allows the internal representation of an object to be hidden from the outside world. It is used to protect the data from being modified by parts of the program that should not have access to the data. It is also used to provide a way to extend the functionality of an object without editing the object code itself."},{"prompt":"Write a SQL query to retrieve data from two tables with similar columns. Table1 | id | name | address | |----|------|---------| | 1 | John | NYC | | 2 | Mary | LA | Table2 | id | name | address | |----|------|---------| | 3 | Mark | Chicago| | 4 | Tom | Miami |","completion":"SELECT * from Table1, Table2 WHERE Table1.id = Table2.id;"},{"prompt":"Create a new C++ class with a constructor and destructor.","completion":"class Example { public: Example(); ~Example(); }; Example::Example() {} Example::~Example() {}"},{"prompt":"Classify the given sentence using the Bag-of-Words approach. Sentence: She felt so excited that her application got approval.","completion":"She - Noun Felt - Verb So - Adverb Excited - Adjective That - Conjunction Her - Determiner Application - Noun Got - Verb Approval - Noun"},{"prompt":"What is the difference between procedural and object-oriented programming?","completion":"The main difference between procedural and object-oriented programming is that object-oriented programming focuses on the objects and how they interact with each other, while procedural programming focuses on executing a sequence of steps. In object-oriented programming, data and functions are encapsulated into objects that can interact with each other, while procedural programming relies on the execution of a sequence of instructions. In addition, object-oriented programming encourages code reusability, while procedural programming does not."},{"prompt":"Given a string, write a code that counts the number of alphabets in it. input_string = \\"Hello World!","completion":"input_string = \\"Hello World!\\" # Count the number of alphabets num_alphabets = sum(c.isalpha() for c in input_string) print(\\"Number of alphabets in the string:\\", num_alphabets)"},{"prompt":"Debug the following code for finding the median of three numbers. def find_median(a, b, c): if a > b: if b > c: return b elif a > c: return c else: return a elif b > c: return b elif a > c: return a else: return c","completion":"def find_median(a, b, c): # Calculate the maximum of the three numbers max_num = max(a, b, c) # Calculate the minimum of the three numbers min_num = min(a, b, c) # Calculate the median value as the sum of the three numbers minus the maximum and minimum median = a + b + c - max_num - min_num return median median_value = find_median(2, 3, 5) print(median_value) # 3"},{"prompt":"Create a class with two methods \\"get_sum\\" and \\"get_product\\" for calculating the sum and product of two numbers respectively.","completion":"class Calculator: \\"\\"\\"Class for calculating the sum and product of two numbers.\\"\\"\\" # Method for calculating sum of two numbers def get_sum(self, num1, num2): return num1 + num2 # Method for calculating product of two numbers def get_product(self, num1, num2): return num1 * num2 # Create an instance of the class calc = Calculator() # Calculate the sum sum_value = calc.get_sum(3, 4) print(\\"Sum:\\", sum_value) # 7 # Calculate the product product_value = calc.get_product(3, 4) print(\\"Product:\\", product_value) # 12"},{"prompt":"Use regular expression to remove special characters from any given string. my_string = 'Hi There! Welcome.@'","completion":"import re # The given string my_string = 'Hi There! Welcome.@' # Remove special characters using regular expressions clean_string = re.sub('[^a-zA-Z0-9s]', '', my_string) print(clean_string) # Hi There Welcome"},{"prompt":"Create an array of 10 random integers between 1 to 50 and print them.","completion":"# Create an array of 10 random integers import random array = [] for i in range(10): array.append(random.randint(1, 50)) print(array) # [33, 22, 34, 18, 28, 22, 17, 11, 26, 45]"},{"prompt":"Given a string, return the length of the longest run of characters. string = \\"aaaabbccdd","completion":"4"},{"prompt":"Create a GUI application in C# that displays a welcome message when the program is launched.","completion":"using System.Windows.Forms; public static class Program { static void Main() { Application.EnableVisualStyles(); Application.Run(new Form1()); } } public class Form1 : Form { public Form1() { MessageBox.Show(\\"Welcome!\\"); } }"},{"prompt":"Change the following code to a yield statement so that it can be used as a generator. def fibonacci(): a, b = 0, 1 while True: yield a a, b = b, a + b","completion":"def fibonacci(): a, b = 0, 1 while True: a, b = b, a + b yield a"},{"prompt":"Write a CSS rule that changes the color of all the links in a webpage to blue.","completion":"a { color: blue; }"},{"prompt":"Given a string of length N, create an HTML table with N rows and 4 columns. string = \\"Hello World","completion":"<table> <tr> <td>H</td> <td>e</td> <td>l</td> <td>l</td> </tr> <tr> <td>o</td> <td>&nbsp;</td> <td>W</td> <td>o</td> </tr> <tr> <td>r</td> <td>l</td> <td>d</td> <td>&nbsp;</td> </tr> </table>"},{"prompt":"Create a function in JavaScript that takes a string as an argument and returns the number of times that string is repeated in the input string. string = \\"HelloHello","completion":"function countString(str) { let count = 0; for (let i = 0; i < str.length; i++) { if (str.substring(i, i + 5) == \\"Hello\\") { count++; } } return count; }"},{"prompt":"Write a Python statement to print out the common items between two lists. list1 = [1, 2, 3, 4] list2 = [2, 4, 6 , 8]","completion":"for i in list1: if i in list2: print(i)"},{"prompt":"Alter the following JSON object such that the date format of \\"date\\" field changes from \\"dd-mm-yyyy\\" to \\"dd/mm/yyyy\\". { \\"name\\": \\"John\\", \\"date\\": \\"22-02-2020\\" }","completion":"{ \\"name\\": \\"John\\", \\"date\\": \\"22/02/2020\\" }"},{"prompt":"Using the comments as a guide, implement a function that takes as input a list of integers and returns the maximum value. nums = [2, 8, 9, 10]","completion":"def find_max(nums): # initialise the max to the first element of the list max = nums[0] # loop over the list for i in range(1, len(nums)): # if the current element is greater than the max, # update the max if nums[i] > max: max = nums[i] # return the maximum value return max"},{"prompt":"Create a function that takes in an array of strings and a search term and returns an array of indices of strings that match the search term. array = [\\"I love dogs\\",\\"I hate cats\\",\\"Dogs are the best\\"] search_term = \\"dog","completion":"def search_indices(array, search_term): # initialise an empty list indices_list = [] # loop over the array for index, s in enumerate(array): # if the search term is in the string if search_term in s.lower(): # append the index to the list indices_list.append(index) # return the list of indices return indices_list"},{"prompt":"Create a function to insert a given character at every odd index in a given string. string = \\"Hello\\" character = 'z'","completion":"def insert_character(string, character): # initialise a new string new_string = \\"\\" # loop over the string for i in range(len(string)): # if the index is odd if i % 2 != 0: # add the character new_string += character # add the current character new_string += string[i] # return the new string return new_string"},{"prompt":"mplement a function that takes in a number n and deletes all the even numbers in an array of integers first n numbers. arr = [2, 3, 4, 5, 6, 7] n = 6","completion":"def delete_even(arr, n): # initialise a list odd_list =[] # loop over the array for i in range(n): # if the number is odd if arr[i] % 2 != 0: # add it to the list odd_list.append(arr[i]) # return the list of odd numbers return odd_list"},{"prompt":"Update the following JavaScript code so that it alerts a given string. let myStr = 'My string'","completion":"let myStr = 'My string'; alert(myStr);"},{"prompt":"Write a JavaScript function that takes two numbers and returns the sum of all numbers in between the two.","completion":"function sumNumbers(x, y) { let sum = 0 for(let i = x; i <= y; i++) { sum += i } return sum }"},{"prompt":"Create an SQL query that returns rows where the column \\"Field\\" is \\"Value\\". Field = 'Name' Value = 'John'","completion":"SELECT * FROM table WHERE Field = 'Name' AND Value = 'John';"},{"prompt":"Create a MongoDB query that returns all documents that contain the string \\"query\\".","completion":"db.collection.find({ text: { search: \\"query\\" } })"},{"prompt":"Write an HTML page that displays one heading and two paragraphs.","completion":"<!DOCTYPE html> <html> <head> <title>Page Title</title> </head> <body> <h1>Heading</h1> <p>Paragraph 1</p> <p>Paragraph 2</p> </body> </html>"},{"prompt":"Write an R program to print out the numbers from 0-50, in steps of 4.","completion":"x <- seq(from = 0, to = 50, by = 4) print(x)"},{"prompt":"Create an HTML page that includes three buttons with labels \\"A\\", \\"B\\" and \\"C\\".","completion":"<!DOCTYPE html> <html> <head> <title>Page Title</title> </head> <body> <button>A</button> <button>B</button> <button>C</button> </body> </html>"},{"prompt":"Write an R program to generate 5 random numbers between 0 and 1.","completion":"set.seed(1234) runif(5, min = 0, max = 1)"},{"prompt":"Create a valid regular expression that matches a valid U.S. phone number?","completion":"^d{10}|(^d{3}-d{3}-d{4})|(^(d{3}) d{3}-d{4})"},{"prompt":"Write a function that calculates the Fibonacci numbers to the nth number","completion":"def Fibonacci(n): if n<0: print(\\"Incorrect input\\") elif n==1: return 0 elif n==2: return 1 else: return Fibonacci(n-1)+Fibonacci(n-2)"},{"prompt":"Create a JavaScript object to fulfill the following purpose Create a calculator that can add, subtract, multiply and divide two numbers.","completion":"const Calculator = { add: function(a, b) { return a + b; }, subtract: function(a, b) { return a - b; }, multiply: function(a, b) { return a * b; }, divide: function(a, b) { return a / b; }, };"},{"prompt":"Write a code to identify the longest palindrome in a given string String: kayakracecar","completion":"def get_longest_palindrome(s): longest_palindrome = '' s_length = len(s) for i in range(s_length): for j in range(i, s_length): substring = s[i:j + 1] if len(substring) > len(longest_palindrome) and substring == substring[::-1]: longest_palindrome = substring return longest_palindrome # Verify it works print(get_longest_palindrome('kayakracecar'))"},{"prompt":"Create a CSS rule to rotate a text 45 degrees","completion":"transform: rotate(45deg);"},{"prompt":"Write a code to extract the length of the longest sentence in a given text Text: The quick brown fox jumps over the lazy dog. The quick fox jumped over the lazy dog.","completion":"def get_longest_sentence(text): sentences = text.split('. ') longest_sent_len = 0 longest_sent = '' for sentence in sentences: if len(sentence) > longest_sent_len: longest_sent_len = len(sentence) longest_sent = sentence return longest_sent_len # Verify it works text = 'The quick brown fox jumps over the lazy dog. The quick fox jumped over the lazy dog.' print(get_longest_sentence(text))"},{"prompt":"Create an HTML web page that contains two text fields and two buttons","completion":"<!DOCTYPE html> <html> <head> <title>Two Text Fields and Two Buttons</title> </head> <body> <form action=\\"\\"> <input type=\\"text\\" placeholder=\\"Input 1\\" /> <input type=\\"text\\" placeholder=\\"Input 2\\" /> <button type=\\"submit\\">Button 1</button> <button type=\\"reset\\">Button 2</button> </form> </body> </html>"},{"prompt":"Create a function that returns the sum of the Fibonacci sequence to the nth number","completion":"def FibonacciSum(n): fib1 = 0 fib2 = 1 if n < 0: return \\"Incorrect input\\" elif n == 0: return 0 elif n == 1: return 0 else: sum = 0 for i in range(2,n+1): fib_n = fib1 + fib2 fib1 = fib2 fib2 = fib_n sum = sum + fib_n return sum"},{"prompt":"Use recursion to construct a list of the first 10 powers of two (1, 2, 4, 8, ...).","completion":"[1, 2, 4, 8, 16, 32, 64, 128, 256, 512]"},{"prompt":"Using the given sentence, design a regular expression which will match the given word. Word: apple Sentence: I bought an apple from the store.","completion":"regex: bappleb"},{"prompt":"Find the 4th element in the given expression. list x=[1,3,5,7,9,8]","completion":"Element: 7"},{"prompt":"Use the given HTML markup to generate a web page with a headline, body and paragraphs. <h1>My web page</h1>","completion":"<html> <head> <title>My web page</title> </head> <body> <h1>My web page</h1> <p>This is my web page.</p> <p>It contains some information about me.</p> </body> </html>"},{"prompt":"Sort the given array of strings by their length. Array: ['hello', 'hi', 'howdy']","completion":"Sorted Array: ['hi', 'hello', 'howdy']"},{"prompt":"vert the given dictionary. Dictionary: {'a': 1, 'b': 2, 'c':3}","completion":"Inverted dictionary: {1: 'a', 2: 'b', 3: 'c'}"},{"prompt":"Extract the username and domain name from the given email address. Email address: johnsmith@example.com","completion":"Username: johnsmith Domain name: example.com"},{"prompt":"Construct a class that takes a string and capitalizes the first letter.","completion":"class CapitalizedWord: def __init__(self, word): self.word = word def get_capitalized_word(self): return self.word[0].upper() + self.word[1:]"},{"prompt":"Design a class named Circle that can store information about a circle and perform calculations on it.","completion":"class Circle: def __init__(self, radius): self.radius = radius def calculate_area(self): return 3.14 * self.radius * self.radius def calculate_circumference(self): return 2 * 3.14 * self.radius"},{"prompt":"Create a function that takes two arguments, a list of strings and a string and returns the number of times the passed in string appears in the list. words = ['hello', 'hi', 'world', 'foo', 'bar', 'hello'] given_string = 'hello'","completion":"def find_words(words, given_string): count = 0 for word in words: if word == given_string: count += 1 return count if __name__ == '__main__': words = ['hello', 'hi', 'world', 'foo', 'bar', 'hello'] given_string = 'hello' print(find_words(words, given_string))"},{"prompt":"Write a code that takes in two strings that are anagrams of each other and determines whether they are anagrams. str1 = 'martha' str2 = 'hartma'","completion":"def is_anagram(str1, str2): if (sorted(str1)== sorted(str2)): return True else: return False if __name__ == '__main__': str1 = 'martha' str2 = 'hartma' print(is_anagram(str1, str2))"},{"prompt":"Create a program which takes two strings and checks if they are anagrams of one another. Input string 1: eats Input string 2: se","completion":"def is_anagram(str1, str2): if (sorted(str1)== sorted(str2)): return True else: return False if __name__ == '__main__': str1 = input(\\"Input string 1: \\") str2 = input(\\"Input string 2: \\") print(is_anagram(str1, str2))"},{"prompt":"Using jQuery, write a snippet to add a click event handler to a given HTML element. #html element <div class=\\"my-button\\">Click Me!</div>","completion":"('.my-button').click(function(){ // Code here });"},{"prompt":"Write a JavaScript program to create an array with the first element as the maximum and all other elements as the minimum value of the previous element. let arr = [5, 4, 3, 2, 1];","completion":"let result = []; let max = arr[0]; result.push(max); for (let i = 1; i < arr.length; i++) { let min = Math.min(max, arr[i]); result.push(min); max = min; } console.log(result); # Output: [5, 4, 3, 2, 1]"},{"prompt":"Write a JavaScript program to generate a random aluminum hexadecimal color code.","completion":"let color = \\"#\\"; let characters = '0123456789ABCDEF'; for (let i = 0; i < 6; i++) color += characters[Math.floor(Math.random() * 16)]; console.log(color); # Output: #6f435a"},{"prompt":"Using Java, write a function to find the count of all odd numbers between a given range. int start = 1; int end = 10;","completion":"public static int countOddNumbers(int start, int end) { int count = 0; for (int i = start; i <= end; i++) if (i % 2 != 0) count++; return count; } System.out.println(countOddNumbers(start, end)); # Output: 5"},{"prompt":"Create an HTML page that displays the following text in the body: \\"Hello World!\\".","completion":"<html> <head> </head> <body> Hello World! </body> </html>"},{"prompt":"Using CSS, write a code to set the font size of all the HTML elements on the page to 14px","completion":"* { font-size: 14px; }"},{"prompt":"Write a SQL query to find the names of the people who have a salary greater than the average salary. Table name: Employees Columns: id, name, salary","completion":"SELECT name FROM Employees WHERE salary > (SELECT AVG(salary) FROM Employees);"},{"prompt":"Create a Python function that takes a string and prints out its reverse. string = \\"Hello world!","completion":"def reverseString(string): return string[::-1] print(reverseString(string)) # Output: !dlrow olleH"},{"prompt":"Write a Flask route to store the inputted data in the database. url: '/store_data' data: { first_name: 'John', last_name: 'Doe' }","completion":"@app.route('/store_data', methods=['POST']) def store_data(): data = request.get_json() first_name = data['first_name'] last_name = data['last_name'] db.execute(\\"INSERT INTO users (first_name, last_name) VALUES (%s, %s)\\", (first_name, last_name)) db.commit() return jsonify(message=\\"Data stored successfully.\\")"},{"prompt":"Create an array of objects in JavaScript for the following data: id, first name, last name, age.","completion":"const array = [ { id: 1, firstName: 'John', lastName: 'Doe', age: 20 }, { id: 2, firstName: 'Jane', lastName: 'Smith', age: 21 }, { id: 3, firstName: 'Mike', lastName: 'Williams', age: 22 } ];"},{"prompt":"Write a MySQL query to fetch all the employees with the salary greater than 40,000.","completion":"SELECT * FROM employees WHERE salary > 40000;"},{"prompt":"Create an iOS table view to display the list of items.","completion":"class TableViewController: UITableViewController { override func viewDidLoad() { super.viewDidLoad() tableView.dataSource = self } override func numberOfSections(in tableView: UITableView) -> Int { // Number of sections your table view has return 1 } override func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int { // Number of rows the table view should have return items.count } override func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell { let cell = tableView.dequeueReusableCell(withIdentifier: \\"Cell\\", for: indexPath) cell.textLabel?.text = items[indexPath.row] return cell } var items = [\\"Item 1\\", \\"Item 2\\", \\"Item 3\\", \\"Item 4\\", \\"Item 5\\"] }"},{"prompt":"Generate an HTML table with 3 columns for Name, Email and Phone Number.","completion":"<table> <tr> <th>Name</th> <th>Email</th> <th>Phone Number</th> </tr> <tr> <td>John Doe</td> <td>john@example.com</td> <td>123-456-7890</td> </tr> </table>"},{"prompt":"Create a Ruby method for calculating the mean of the given array of numbers.","completion":"def calculate_mean(numbers) sum = 0 numbers.each { |number| sum += number } return (sum.to_f / numbers.length) end"},{"prompt":"Create a python dictionary of two elements 'name' and 'age' with the corresponding values John and 25.","completion":"my_dict = {'name': 'John', 'age': 25}"},{"prompt":"mplement a recursive function to calculate the factorial of a number, given by the user as an argument.","completion":"def calculate_factorial(num): if num == 0 or num == 1: return 1 else: return num * calculate_factorial(num-1)"},{"prompt":"Edit the following code to use a dictionary instead of a list. list = [1, 3, 5] total = 0 for num in list: total += num","completion":"dict = {1:1, 3:3, 5:5} total = 0 for num in dict.values(): total += num"},{"prompt":"Create a code to display all unique pairs from the following list. [1,2,3,4,5,6]","completion":"pairs = [] for i in range(len(list)): for j in range(i+1, len(list)): pairs.append((list[i], list[j])) print(pairs)"},{"prompt":"Write code to create a list of length 10 with random integers.","completion":"import random myList = [] for i in range(10): myList.append(random.randint(0,10)) print(myList)"},{"prompt":"Generate a sequence of strings according to the following pattern:","completion":"my_list = [] for i in range(1, 10): my_list.append(str(i) + \\"abc\\") print(my_list)"},{"prompt":"Write a SQL query to group the data based on 'category' and counting the number of entries in each category.","completion":"SELECT category, COUNT(*) FROM table_name GROUP BY category;"},{"prompt":"Format the following list in descending order of number of characters in each string. list = ['Hello', 'World', 'Technology']","completion":"def sort_list(list): for i in range(len(list)): for j in range(0, len(list)-i-1): if len(list[j]) < len(list[j+1]): list[j], list[j+1] = list[j+1], list[j] return list sort_list([\\"Hello\\", \\"World\\", \\"Technology\\"])"},{"prompt":"Generate a dictionary with the following entries [('a',1),('b',2)]","completion":"my_dict = dict([('a', 1), ('b', 2)]) print(my_dict)"},{"prompt":"Create a C++ class called 'Student' with the following fields: id, name, age, and gender.","completion":"class Student { private: int id; string name; int age; string gender; public: int getId() const; void setId(int id); string getName() const; void setName(string name); int getAge() const; void setAge(int age); string getGender() const; void setGender(string gender); };"},{"prompt":"Write a regular expression which can validate a given email address.","completion":"^[a-z0-9_.]+@[a-z0-9_.]+[.]+[a-z]+"},{"prompt":"Create a PostgreSQL query to find all employees with a salary greater than or equal to 40,000.","completion":"SELECT * FROM employees WHERE salary >= 40,000;"},{"prompt":"What is the maximum value an int type can hold?","completion":"The maximum value an int type can hold is 2147483647."},{"prompt":"Take a sentence and tokenize it into separate words. The quick brown fox jumps over the lazy dog.","completion":"['The', 'quick', 'brown', 'fox', 'jumps', 'over', 'the', 'lazy', 'dog.']"},{"prompt":"Calculate the result of 3 * 5 + 7.","completion":"22"},{"prompt":"Write a function that outputs the exact same output as its input.","completion":"def same_output(input): return input"},{"prompt":"Use a dictionary to store the names of 5 people and their contact numbers. Alice - 0123456789, Bob - 0987654321, Cara - 0345567890, Dave - 0412356789, Ed - 0999888777","completion":"dict = { 'Alice':'0123456789', 'Bob' : '0987654321', 'Cara' : '0345567890', 'Dave' : '0412356789', 'Ed' : '0999888777' }"},{"prompt":"Write a function to multiply an array of 3 numbers by their sum. [4, 5, 6]","completion":"def multiply_array(arr): sum_of_arr = sum(arr) for i in range(len(arr)): arr[i] = arr[i] * sum_of_arr return arr"},{"prompt":"w many distinct prime numbers are there less than 100?","completion":"There are 25 distinct prime numbers less than 100."},{"prompt":"w would you convert an integer to a float in Python?","completion":"You can convert an integer to a float in Python using the float() function. For example, float(4) would return 4.0."},{"prompt":"Design a class to represent a car with member variables for the make, model, and year.","completion":"class Car: def __init__(self, make, model, year): self.make = make self.model = model self.year = year"},{"prompt":"Take two strings and concatenate them. \\"Hello \\" and \\"World","completion":"\\"Hello World\\""},{"prompt":"Create a while loop that runs while a number is less than or equal to 10.","completion":"number = 0 while number <= 10: print(number) number += 1"},{"prompt":"Find and list all the prime numbers between 0-100","completion":"2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97."},{"prompt":"Assuming all operations in the code are O(1), find the Big O complexity of the code. for (int i = 0; i < n; i++) for (int j = 0; j < i ; j++) sum += a[i] + b[j];","completion":"O(n^2)."},{"prompt":"Create and run a Python script that prints \\"Hello, World!","completion":"# A simple python script print(\\"Hello, World!\\")"},{"prompt":"Using Regular Expressions, search for all 3-digit occurrences in the given text. text = \\"The ship had a 590 foot cargo hold, filled with 204 tons of goods.","completion":"590 and 204."},{"prompt":"Apply the given CSS style to the HTML element. <div>Hello World</div> css: font-weight: bold;","completion":"<div style=\\"font-weight: bold;\\">Hello World</div>"},{"prompt":"Write a SQL query to display the names of all customers and their orders.","completion":"SELECT customer.name, orders.order_name FROM customer INNER JOIN orders ON customer.id = orders.customer_id;"},{"prompt":"Generate a unique 8-digit number using the Python Random module","completion":"import random random.seed(32) unique_id = random.randint(100000000, 999999999) print(\\"unique 8-digit number:\\", unique_id)"},{"prompt":"Find all instances of the given symbol in the text. text = \\"The company has a 1 billion budget\\" symbol = \\"","completion":"The symbol \\"\\" occurs 1 time in the given text."},{"prompt":"Using the provided data, generate a heatmap that contains the temperature readings for each hour. data = [[7,15,22], [2,7,23], [9,12,25]]","completion":"from matplotlib.pyplot import imshow from matplotlib import pyplot as plt from numpy import array # Convert data to numpy array data_array = array(data) # Plot heatmap fig, ax = plt.subplots() im = ax.imshow(data_array) fig.colorbar(im) plt.show()"},{"prompt":"Find the sum of all odd numbers between 1-100.","completion":"The sum of all odd numbers between 1-100 is 2500."},{"prompt":"Update the given array to replace all the zeroes with ones. my_array = [1, 0, 2, 0, 3, 0]","completion":"my_array = [1, 1, 2, 1, 3, 1]"},{"prompt":"Find the output of the following code when input is 3. def get_result(n): fib = [0, 1] for i in range(2, n): fib.append(fib[i-2] + fib[i-1]) return fib","completion":"The output of the code when input is 3 is [0, 1, 1]."},{"prompt":"Write a regular expression that accepts a string with one or more spaces.","completion":"^S(.*S)?"},{"prompt":"Using the given array, create a function to find the index of the second \\"a\\" in the array. let arr = [1, 'a', 2, 'b', 3, 'a'];","completion":"function findSecondA(arr){ let count=0; let index; for(let i=0; i<arr.length; i++){ if(arr[i] == 'a'){ count++; } if(count == 2){ index = i; break; } } return index; }"},{"prompt":"Write a Python code snippet for printing the items in a given set. my_set = {1, 3, 5, 7, 9}","completion":"for item in my_set: print(item)"},{"prompt":"Create a list of numbers from 1 to 10 using list comprehension.","completion":"my_list = [number for number in range(1, 11)]"},{"prompt":"Analyze the output of the following shell command.","completion":"The shell command 'ls -l' will list all the files in the current working directory in long form. This means the output will include the file permissions, owner, group, size, modified date, and the name of the file."},{"prompt":"w to open a new terminal window in Linux?","completion":"In Linux, you can open a new terminal window using the command line by using the \\"xterm\\" command or using the shortcut \\"Ctrl + Alt + T\\"."},{"prompt":"Request a list of all the devices connected to a network using the command line in Windows.","completion":"In Windows, in the command line enter arp -a to get a list of all the devices and their respective IPs connected to the network."},{"prompt":"What is the difference between an unsigned int and a signed int in C language?","completion":"Signed integers in C language can store both negative and positive values (from -2^31 to 2 ^31 - 1). Unsigned integers in C language can only store positive values (from 0 to 2^32 - 1). This means that a signed int is half the size of an unsigned int. It also means that a signed int ranges from -2^31 to 2^31 - 1 while an unsigned int can range from 0 to 2^32 - 1."},{"prompt":"w do you run a Python script from the command line?","completion":"In order to run a python script from the command line, the \\"@python\\" command and the path to the file should be used. For example, to execute the \\"input.py\\" file, the command would be \\"@python C:Pathinput.py\\"."},{"prompt":"Write code to remove the first item from a list of integers in Python. numbers = [2, 3, 4, 5]","completion":"numbers.pop(0)"},{"prompt":"Generate a valid HTML document.","completion":"<html> <head> <title>My HTML Document</title> </head> <body> <h1>My website</h1> <div> <p>This is my website content.</p> </div> </body> </html>"},{"prompt":"w do you calculate the hamming distance between two strings? str1 = \\"abc\\" str2 = \\"abd","completion":"def hamming_distance(str1, str2): # length of the strings must be equal if len(str1) != len(str2): return -1 distance = 0 for i in range(len(str1)): if str1[i] != str2[i]: distance += 1 return distance"},{"prompt":"Change all the values in a list to lowercase. mylist = ['Dog', 'Cat', 'Rabbit']","completion":"mylist = [x.lower() for x in mylist] print(mylist)"},{"prompt":"w would you find the union of two sets? set1 = {1,2,3,4} set2 = {3,4,5,6}","completion":"set3 = set1.union(set2) print(set3)"},{"prompt":"Develop a code to generate a random port number in the range of 1 to 65535.","completion":"import random def get_random_port(): return random.randint(1, 65535) random_port = get_random_port() print(random_port)"},{"prompt":"Program a function to get the next element of a list. mylist = [1,3,5,7]","completion":"def get_next(mylist): for i in range(len(mylist)-1): return mylist[i+1] print(get_next(mylist))"},{"prompt":"Write a function that takes in two strings(s1, s2) and returns a string. The output should be \\"s1s2\\".","completion":"def join_strings(s1, s2): return s1 + s2"},{"prompt":"Write a SQL query to find out how many employees work in a department with a certain id.","completion":"SELECT COUNT(*) FROM employees WHERE department_id = <id>;"},{"prompt":"Debug the following piece of code so that the program functions properly. def sub_array(array, num): for i in range(len(array) - 1, 0, -1): if array[i] == num: del array[i]","completion":"def sub_array(array, num): for i in range(len(array) - 1, 0, -1): if array[i] == num: del array[i] else: break"},{"prompt":"Create an algorithm to find out the longest common sub-sequence between two string inputs. \\"AGGTAB\\" \\"GXTXAYB","completion":"def LCSubStr(Str1, Str2): n = len(Str1) m = len(Str2) LCSuff = [0] * (n + 1) LCSuff = [[0 for k in range(m + 1)] for l in range(n + 1)] result = 0 for i in range(n): for j in range(m): if (Str1[i] == Str2[j]): LCSuff[i + 1][j + 1] =LCSuff[i][j] + 1 if (LCSuff[i + 1][j + 1] > result): result = LCSuff[i + 1][j + 1] return result"},{"prompt":"Create a function to return the subset of an array which has the lengths of its elements smaller than the given threshold. [1, 5, 2, 8], threshold = 5","completion":"def filter_length(arr, th): subset = [] for el in arr: if len(el) <= th: subset.append(el) return subset"},{"prompt":"Write an Objective-C code snippet to print the phrase \\"Hello World!\\" to the terminal/console.","completion":"NSLog(@\\"Hello World!\\");"},{"prompt":"Write a Java code snippet to print out the value of the variable \\"num\\" to the console. int num = 10;","completion":"System.out.println(num);"},{"prompt":"Create a Java method that takes a string and returns the same string with all vowels replaced by asterisks (ie. \\"Hello\\" should return \\"H*ll*\\"). String s = \\"Hello\\";","completion":"public String replaceVowels(String s) { String result = \\"\\"; for (int i = 0; i < s.length(); i++) { char ch = s.charAt(i); if (ch == 'a' || ch == 'e' || ch == 'i' || ch == 'o' || ch == 'u') { result += \\"*\\"; } else { result += ch; } } return result; }"},{"prompt":"Create a test harness in C++ to verify the correctness of the following function // A function to calculate the nth Fibonacci number // Input: nth Fibonacci number // Output: nth Fibonacci number int calcFib(int n) { if (n<=1) return n; return calcFib(n-1) + calcFib(n-2); }","completion":"#include <iostream> // Function to calculate the // nth Fibonacci number int calcFib(int n) { if (n <= 1) return n; return calcFib(n - 1) + calcFib(n - 2); } // Test Harness to verify the correctness // of the calcFib implementation int main() { // Input value to calculate const int n = 10; // Expected Output value const int expected_output = 55; // Calculate nth fibonacci number int output = calcFib(n); // Verify correctness if (output == expected_output) std::cout << \\"Test Passed\\" << std::endl; else std::cout << \\"Test Failed\\" << std::endl; return 0; }"},{"prompt":"Write a JavaScript program to rotate an array by a given number let arr = [1, 2, 3, 4, 5]; let n = 2;","completion":"function rotateArray(arr, n) { while (n > 0) { let temp = arr[arr.length-1]; for (let i = arr.length-2; i >= 0; i--) { arr[i+1] = arr[i]; } arr[0] = temp; n--; } return arr; }"},{"prompt":"Create a function in Python to generate n permutations of a given array. arr = [1, 2, 3] n = 6","completion":"import itertools # Function to generate # n permutations of the given array def permutation(arr, n): # Get all permutations permList = list(itertools.permutations(arr, n)) # Converting each tuple in the # list of tuples to list res = [list(ele) for ele in permList] # Returning the list of lists return res"},{"prompt":"Write an SQL query to find the minimum salary among all employees","completion":"SELECT MIN(salary) FROM employees;"},{"prompt":"Create a CSS class to display an element as a block-level element.","completion":".block-level { display: block; }"},{"prompt":"Create a python class \\"Car\\" with fields \\"make\\" and \\"model\\".","completion":"class Car: def __init__(self, make, model): self.make = make self.model = model"},{"prompt":"Create an array of three strings: \\"red\\", \\"blue\\", and \\"green\\".","completion":"const colors = [\\"red\\", \\"blue\\", \\"green\\"];"},{"prompt":"Generate a Python code that flattens a two-dimensional array. [[1, 2], [3, 4]]","completion":"def flatten_2d_array(arr): flat_arr = [] for subarr in arr: flat_arr += subarr return flat_arr # Driver code input_list = [[1, 2], [3, 4]] print(flatten_2d_array(input_list))"},{"prompt":"Write a C program which reads numbers until 0 is entered and prints the largest number","completion":"#include <stdio.h> int main() { // Declare vars int n, largest; // Read input scanf(\\"%d\\", &n); // Initialize largest largest = n; // Iterate over other elements while (n > 0) { scanf(\\"%d\\", &n); // Update largest if (n > largest){ largest = n; } } // Print largest printf(\\"%d\\", largest); return 0; }"},{"prompt":"Create a function that concatenates two strings and prints them out. a = \\"Hello \\" b = \\"world!","completion":"def concat_strings(a, b): print(a + b) concat_strings(\\"Hello \\", \\"world!\\")"},{"prompt":"Write a for loop in Java that prints out the even numbers between 0 and 10.","completion":"for(int i = 0; i <= 10; i++){ if(i % 2 == 0){ System.out.println(i); } }"},{"prompt":"mplement a function in Python that takes a list of strings as parameter and prints out the longest string. strings = [\\"Hello\\", \\"world\\", \\"Welcome\\",\\"to\\", \\"my\\", \\"programming\\", \\"challenge\\"]","completion":"def print_longest_string(strings): longest_string = \\"\\" for string in strings: if len(string) > len(longest_string): longest_string = string print(longest_string) print_longest_string(strings)"},{"prompt":"Create a function that performs a bubble sort of an array in JavaScript. arr = [4, 7, 1, 3, 6, 9, 8, 10, 2, 5]","completion":"function bubbleSort(arr) { let swapped; do { swapped = false; for (let i=0; i < arr.length; i++) { if (arr[i] && arr[i + 1] && arr[i] > arr[i + 1]) { let temp = arr[i]; arr[i] = arr[i + 1]; arr[i + 1] = temp; swapped = true; } } } while (swapped); return arr; } bubbleSort(arr);"},{"prompt":"Write a function in Java that takes an integer and returns an array of all the prime numbers from 2 up to the number. number = 10","completion":"public static int[] getAllPrimeNumbers(int number){ int[] primeNumbers = new int[number]; int index = 0; for (int i = 2; i <= number; i++){ if(isPrime(i)){ primeNumbers[index] = i; index++; } } return primeNumbers; } public static boolean isPrime(int number){ for(int i=2; i<number; i++){ if(number%i == 0){ return false; } } return true; }"},{"prompt":"Optimize the runtime of this SQL query. SELECT * FROM customers WHERE age > 30 AND city == \\"New York","completion":"SELECT * FROM customers WHERE city = \\"New York\\" AND age > 30 ORDER BY age ASC;"},{"prompt":"Find the lowest common ancestor in a binary tree in C++.","completion":"Node* findLCA(Node* root, Node* n1, Node* n2){ if (root == NULL) return NULL; if (root == n1 || root == n2) return root; Node *left_lca = findLCA(root->left, n1, n2); Node *right_lca = findLCA(root->right, n1, n2); if (left_lca && right_lca) return root; return (left_lca != NULL)? left_lca: right_lca; }"},{"prompt":"w do you compare two strings in Java?","completion":"In Java, two strings can be compared using the equals() or compareTo() methods. The equals() method returns true if the two strings have the same length and contain the same characters in the same order. The compareTo() method returns 0 if the two strings have the same length and contain the same characters in the same order. Otherwise, it returns a positive or negative number indicating which string is \\"larger\\"."},{"prompt":"Using the input, write a function that prints out the Nth Fibonacci number.","completion":"def Fibonacci(n): if n < 0: print(\\"Incorrect input\\") # First Fibonacci number is 0 elif n == 0: return 0 # Second Fibonacci number is 1 elif n == 1: return 1 else: return Fibonacci(n-1)+Fibonacci(n-2)"},{"prompt":"Given a Python function, edit the function such that it correctly prints the second highest value of the list. def getSecondMax(a): print(max(a))","completion":"def getSecondMax(a): s = sorted(a)[-2] print(s)"},{"prompt":"Generate a valid regular expression to catch URLs in strings.","completion":"r\\"(https?://(?:www.|(?!www))[a-zA-Z0-9][a-zA-Z0-9-]+[a-zA-Z0-9].[^s]{2,}|www.[a-zA-Z0-9][a-zA-Z0-9-]+[a-zA-Z0-9].[^s]{2,}|https?://(?:www.|(?!www))[a-zA-Z0-9]+.[^s]{2,}|www.[a-zA-Z0-9]+.[^s]{2,})\\""},{"prompt":"Create a Python script to output the sum of the elements in a given 2-D array. X = [[11, 18], [20, 1], [12, 16]]","completion":"def sum_elements(X): sums = 0 for i in range(len(X)): for j in range(len(X[i])): sums+=X[i][j] return sums print(sum_elements(X))"},{"prompt":"Modify the input so that the following Python program returns 'Yes' num = 10 if num > 5: print('No')","completion":"num = 10 if num > 5: print('Yes')"},{"prompt":"Given the input list of size N, write a code to print out the sum of the first N-1 elements. X = [10, 20, 30, 40, 50]","completion":"def sum_firstN_minusOne(X): total = 0 for i in range(len(X)-1): total += X[i] return total print(sum_firstN_minusOne(X))"},{"prompt":"Output a list of each element in the input increase twice. [1,10,20]","completion":"def double_each(lst): return [x*2 for x in lst] print(double_each([1,10,20]))"},{"prompt":"Formulate a suitable machine learning model to perform topic clustering.","completion":"A suitable machine learning model to perform topic clustering would be a clustering algorithm such as k-means, or a hierarchical clustering algorithm. These algorithms use the similarity or distance between each datapoint in order to group them into meaningful clusters."},{"prompt":"Design a C++ program to read and display a matrix.","completion":"#include <iostream> using namespace std; int main(){ int r, c, e; cout << \\"Input number of rows : \\"; cin >> r; cout << \\"Input number of columns : \\"; cin >> c; int M[r][c]; // Take input of elements for(int i = 0; i < r; ++i){ cout << \\"Enter elements of row \\"<< i+1; for(int j = 0; j < c; ++j){ cin >> e; M[i][j] = e; } } // Display cout << \\"Elements of matrixn\\"; for(int i = 0; i < r; ++i){ for(int j = 0; j < c; ++j){ cout << M[i][j] << \\" \\"; } cout << endl; } return 0; }"},{"prompt":"Write a code to print out the list of the numbers from 0 to 10 in descending order.","completion":"for n in range(10, -1, -1): print(n)"},{"prompt":"Edit the following Python class 'Foo' to accept a list of numbers upon instantiation. class Foo(): def __init__(self): self.lst = []","completion":"class Foo(): def __init__(self, lst): self.lst = lst"},{"prompt":"Generate a code to perform a Merge Sort on an unsorted array of numbers.","completion":"def mergeSort(arr): if len(arr) >1: mid = len(arr)//2 L = arr[:mid] R = arr[mid:] mergeSort(L) mergeSort(R) i = j = k = 0 while i < len(L) and j < len(R): if L[i] < R[j]: arr[k] = L[i] i+=1 else: arr[k] = R[j] j+=1 k+=1 while i < len(L): arr[k] = L[i] i+=1 k+=1 while j < len(R): arr[k] = R[j] j+=1 k+=1"},{"prompt":"Create a function to find the number of elements in the list which have a value larger than the given number 'k'. [10, 15, 20, 25], k = 15","completion":"def count_larger(lst, k): count = 0 for i in lst: if i > k: count += 1 return count print(count_larger([10, 15, 20, 25], 15))"},{"prompt":"Write a code to print out the union of two sets using Python.","completion":"def find_union(A, B): return list(set(A).union(set(B))) A = [1, 2, 3, 4] B = [4, 5, 6, 7] print(find_union(A, B))"},{"prompt":"Write a function that takes in a string and a character and returns the first index at which the character appears. str = 'Hello World' char = 'o'","completion":"def firstIndex(str, char): index = -1 for i in range(len(str)): if (str[i] == char): index = i break return index result = firstIndex(str, char) print(result) # prints 4"},{"prompt":"Write a function to create a retail price tag given a cost, taxes and discounts. cost = 5 tax = 0.08 discount = 0.2","completion":"def price_tag(cost, tax, discount): tax_amount = cost * tax discounted_price = cost + tax_amount - (discount * cost) return \\"Retail Price: \\" + str(round(discounted_price, 2)) price_tag(cost, tax, discount) # returns \\"Retail Price: 7.20\\""},{"prompt":"Write an HTML code snippet for creating a search box.","completion":"<form action=\\"/search\\" method=\\"get\\"> <input name=\\"s\\" type=\\"text\\" placeholder=\\"Search...\\"> <input type=\\"submit\\" value=\\"Search\\"> </form>"},{"prompt":"Write a SQL query to find the name and occupation of all people older than 60.","completion":"SELECT name, occupation FROM people WHERE age > 60;"},{"prompt":"Write a PHP code for finding the longest word in an array of strings. arr = [\\"Hello\\", \\"World\\", \\"My\\", \\"Name\\", \\"Is\\"];","completion":"<?php arr = [\\"Hello\\", \\"World\\", \\"My\\", \\"Name\\", \\"Is\\"]; //Finding the longest word in the array longestWord = \\"\\"; foreach(arr as word) { if (strlen(word) > strlen(longestWord)) { longestWord = word; } } echo \\"The longest word is: \\" . longestWord; ?>"},{"prompt":"Write an SQL query to find the average salary of all the employees with 10 years of experience.","completion":"SELECT AVG(salary) FROM employees WHERE experience = 10;"},{"prompt":"Write a Java program for computing the product of two matrixes.","completion":"public class MatrixProduct { // Method for matrix multiplication static int[][] multiplyMatrix(int[][] matrix1, int[][] matrix2) { int rowsInA = matrix1.length; int columnsInA = matrix1[0].length; // same as rows in B int columnsInB = matrix2[0].length; int[][] product = new int[rowsInA][columnsInB]; for (int i = 0; i < rowsInA; i++) { for (int j = 0; j < columnsInB; j++) { for (int k = 0; k < columnsInA; k++) { product[i][j] += matrix1[i][k] * matrix2[k][j]; } } } return product; } // Driver code public static void main(String args[]) { int[][] matrixA = { { 1, 2, 3 }, { 4, 5, 6 } }; int[][] matrixB = { { 7, 8 }, { 9, 10 }, { 11, 12 } }; int[][] product = multiplyMatrix(matrixA, matrixB); # the product matrix // Display the result System.out.println(\\"Product of two matrices is : \\"); for (int[] row : product) { for (int column : row) { System.out.print(column + \\" \\"); } System.out.println(); } } }"},{"prompt":"Write an HTML code for creating a dropdown menu with two options, \\"Apple\\" and \\"Orange\\".","completion":"<select> <option value=\\"Apple\\">Apple</option> <option value=\\"Orange\\">Orange</option> </select>"},{"prompt":"Write an HTML program to display an output as a table.","completion":"<html> <head> <title>Table example</title> </head> <body> <table border = \\"1\\"> <tr> <td>Row 1, Column 1</td> <td>Row 1, Column 2</td> </tr> <tr> <td>Row 2, Column 1</td> <td>Row 2, Column 2</td> </tr> </table> </body> </html>"},{"prompt":"What are the components of a class in Java?","completion":"A class in Java consists of the following components: fields (state of the object), constructors (constructs an object), methods (behavior of the object), nested classes and interfaces (classes that are associated with the class in which it is declared). The fields and methods are collectively called members of the class. Fields are variables that hold the state of the object while methods represent the behaviors of the object."},{"prompt":"Write a TensorFlow program to compute the sum of two tensors. x = [[1,2],[3,4]] y = [[5,6],[7,8]]","completion":"import tensorflow as tf x = tf.constant([[1,2],[3,4]], dtype=tf.int32) y = tf.constant([[5,6],[7,8]], dtype=tf.int32) #Sum operation z = tf.add(x, y) #Run in session with tf.Session() as session: print(session.run(z)) # Output: # [[ 6 8] # [10 12]]"},{"prompt":"Convert the following JavaScript function to TypeScript. function countOccurences(numList,num) { let count = 0; for (let i = 0; i < numList.length; i++) { if (numList[i] === num) count++; } return count; }","completion":"function countOccurences(numList: number[], num: number): number { let count = 0; for (let i = 0; i < numList.length; i++) { if (numList[i] === num) count++; } return count; }"},{"prompt":"Guess what is wrong with the following HTML code. <h1>Welcome<h1> <b>This is a sample page<b>","completion":"The HTML tags should be closed properly. The correct code should be: <h1>Welcome</h1> <b>This is a sample page</b>"},{"prompt":"Name the four programming paradigms.","completion":"The four main programming paradigms are procedural, object-oriented, functional, and logical."},{"prompt":"Write the code for the following sorting algorithm. Bubble Sor","completion":"def bubbleSort(arr): # Traverse through all array elements for i in range(len(arr)): # Last i elements are already in place for j in range(0, len(arr)-i-1): # traverse the array from 0 to n-i-1 # Swap if the element found is greater # than the next element if arr[j] > arr[j+1] : arr[j], arr[j+1] = arr[j+1], arr[j] # Driver code to test above arr = [64, 34, 25, 12, 22, 11, 90] bubbleSort(arr) print (\\"Sorted array is:\\") for i in range(len(arr)): print (\\"%d\\" %arr[i]),"},{"prompt":"Using Java, write the code to calculate the sum of elements in a two-dimensional array. int[][] arr = { {2, 3, 8}, {4, 5, 1}, {7, 0, 6} };","completion":"public class SumOfEle{ public static void main(String[] args) { // creating a two-dimensional array int[][] arr = { {2, 3, 8}, {4, 5, 1}, {7, 0, 6} }; // Creating an int variable to store the value. int sum = 0; for (int i=0; i<arr.length; i++){ for (int j=0; j<arr[i].length; j++) { sum += arr[i][j]; } } System.out.println(\\"Sum of Array Elements = \\"+sum); } }"},{"prompt":"Write a JavaScript program to accept a string and display the characters in reverse order.","completion":"function reverseString(str) { return str.split('').reverse().join(''); } let str = \\"JavaScript\\"; console.log(reverseString(str)); // Output: tpircSavaJ"},{"prompt":"Suggest a plugin or software that can be used to debug a React application.","completion":"React's official debugging tool, the React Developer Tools, is a great plugin for debugging React applications. It is available for both Chrome and Firefox, and provides detailed information about the component hierarchy, current props and state of the application, and detailed performance metrics. Additionally, React's Error Boundary feature can be used to detect and debug errors and issues in the React application."},{"prompt":"Create a switch statement in JavaScript to compare two values.","completion":"let x = 1; let y = 2; switch (x) { case 1: if (y === 2) { console.log('x is 1 and y is 2'); break; } default: console.log('No match'); }"},{"prompt":"Suggest an algorithm to search an element in a sorted array using Java.","completion":"public int binarySearch(int[] arr, int element){ int low = 0; int high = arr.length - 1; while(low <= high){ int mid = (low + high) / 2; if(arr[mid] == element) return mid; else if(arr[mid] > element) high = mid - 1; else low = mid + 1; } return -1; }"},{"prompt":"alize a 2D array with all elements set to 0 in C.","completion":"int arr[N][M] = {0};"},{"prompt":"Calculate the area of a square with side length 4.","completion":"Area = 4 x 4 = 16"},{"prompt":"Create a React component that displays the text \\"Hello World!\\".","completion":"import React from 'react'; const HelloWorld = () => ( <h1>Hello World!</h1> ); export default HelloWorld;"},{"prompt":"Generate a Fibonacci sequence up until 50.","completion":"0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55"},{"prompt":"What is the output of the following code? def check_even(num): if num % 2 == 0: return \\"Even\\" else: return \\"Odd\\" print(check_even(3))","completion":"Odd"},{"prompt":"Edit the following HTML code to make all the headings bold. <h1>Heading 1</h1> <h2>Heading 2</h2>","completion":"<h1><strong>Heading 1</strong></h1> <h2><strong>Heading 2</strong></h2>"},{"prompt":"Name 3 popular JavaScript frameworks.","completion":"Three popular JavaScript frameworks are React, Angular, and Vue."},{"prompt":"What are the best practices when writing Javascript code?","completion":"The best practices for writing JavaScript code include using valid and properly formatted code, utilizing functions, avoiding global variables, using comments to explain code, using object and array literals, and avoiding memory leaks."},{"prompt":"Classify the given code as \\"correct\\" or \\"incorrect\\". def extract_file_name(file_path): dot_index = file_path.find('.') slash_index = file_path.find('/')","completion":"correct"},{"prompt":"Convert the following code from if/else to a ternary operator and output the result as a string. if age > 18: verdict = \\"Adult\\" else: verdict = \\"Minor","completion":"verdict = \\"Adult\\" if age > 18 else \\"Minor\\""},{"prompt":"Take the input list and transform it to a dictionary where the keys are the elements of the list and the values equal to True. my_list = [\\"apple\\", \\"banana\\", \\"strawberry\\"]","completion":"my_dict = { \\"apple\\": True, \\"banana\\": True, \\"strawberry\\": True }"},{"prompt":"Output the sum of all the elements in the two-dimensional array. arr = [[1, 2, 3], [4, 5, 6], [7, 8, 9]]","completion":"45"},{"prompt":"Create a function that takes two strings as inputs and outputs their concatenation.","completion":"def concat_strings(string1, string2): return string1 + string2"},{"prompt":"Change the code so that it swaps the contents of two variables in one line. a = 5 b = 10","completion":"a, b = b, a"},{"prompt":"Detect if the given code is a loop or not and output true if it is a loop or false if it is not. x = 0 while (x < 10): x += 1","completion":"True"},{"prompt":"prompt the user to enter a number, then output it in a sentence","completion":"number = int(input(\\"Enter a number: \\")) print(\\"You entered: \\", number)"},{"prompt":"Use the following input to write a python code for calculating the area of a triangle Base = 6cm, Height = 4.5cm","completion":"# calculate the area of a triangle # define the constant base and height base = 6.0 height = 4.5 # calculate the area area = 0.5 * base * height # print the result print('The area of the triangle is: %0.2f cm^2' %area)"},{"prompt":"Cut and paste the following Java code snippet and add a condition to ensure that the number entered is always greater than 0. int number; Scanner in = new Scanner (System.in); number = in.nextInt ();","completion":"int number; Scanner in = new Scanner (System.in); do { number = in.nextInt (); } while (number <= 0);"},{"prompt":"Using the given input, modify the code to remove all occurences of \\"abcd string s = \\"abcd abcd abcd abcd\\";","completion":"string s = \\" \\"; s = s.replaceAll(\\"abcd\\", \\"\\");"},{"prompt":"What type of function is needed to solve the following problem Compute the average age of a given list of number","completion":"A reduction function is needed in order to solve the given problem, which will iterate through the list of numbers and compute the average age. The function could take the form of a loop or other type of iterator."},{"prompt":"What is the name of the following component of a computer system A component that can perform data processing and calculatio","completion":"The component in question is known as the Central Processing Unit (CPU)."},{"prompt":"mplement Binary Search in Python [2, 3, 4, 5, 11, 19, 20]","completion":"# function to do binary search def binarySearch(array, x): l, r = 0, len(array)-1 while l <= r: mid = l + (r - l)//2; # Check if x is present at mid if array[mid] == x: return mid # If x is greater, ignore left half elif array[mid] < x: l = mid + 1 # If x is smaller, ignore right half else: r = mid - 1 # If we reach here, then the element # was not present return -1 array = [2, 3, 4, 5, 11, 19, 20] x = 11 result = binarySearch(array, x) if result != -1: print (\\"Element is present at index\\", result) else: print (\\"Element is not present in array\\")"},{"prompt":"Using the given input, modify the following HTML code so it shows a list of 5 items <ul> <li></li> </ul>","completion":"<ul> <li>Item 1</li> <li>Item 2</li> <li>Item 3</li> <li>Item 4</li> <li>Item 5</li> </ul>"},{"prompt":"Generate a valid MySQL query to retrieve a column from a table Table = Users, Column = Addre","completion":"SELECT Address FROM Users;"},{"prompt":"Generate a correct JavaScript program to convert a string into an array s = \\"hello world\\";","completion":"//function to split a string into an array function stringToArray(s) { return s.split(' '); } //create a string s = \\"hello world\\"; //convert string to array array = stringToArray(s); //print the array console.log(array);"},{"prompt":"Using the comment as a guide, edit the code that prints \\"X out of 10\\" to print \\"X out of Y\\". x = 5 print(\\"x out of 10\\") #TODO: replace 10 with the correct variable","completion":"x = 5 print(\\"x out of \\" + str(x))"},{"prompt":"Generate an XOR function in C++.","completion":"int xor(int x, int y) { return (x || y) && !(x && y); }"},{"prompt":"Create a function in Python that adds two numbers.","completion":"def add(x, y): \\"\\"\\"Return the sum of x and y.\\"\\"\\" return x + y"},{"prompt":"Create an HTML page that displays a list of users and their ages. Alice: 25 Bob: 27 Carol: 30","completion":"<!DOCTYPE html> <html> <head> <title>User Ages</title> </head> <body> <ul> <li>Alice: 25</li> <li>Bob: 27</li> <li>Carol: 30</li> </ul> </body> </html>"},{"prompt":"Generate a function in Java for finding the largest number in an array.","completion":"public static int largestNumber(int[] arr) { int max = arr[0]; for (int i = 1; i < arr.length; i++) if (arr[i] > max) max = arr[i]; return max; }"},{"prompt":"Calculate how many distinct values can be inserted in a binary tree containing 2 nodes.","completion":"2^2 - 1 = 3 distinct values can be inserted in a binary tree containing 2 nodes."},{"prompt":"Write an HTML code for a common list item.","completion":"<li>List item</li>"},{"prompt":"Write a Java program to sort the elements of an int array in the descending order. [1, 10, 4, 2, 5, 3, 9]","completion":"public class ArraySort { public static void main(String[] args) { int array[] = {1, 10, 4, 2, 5, 3, 9}; int n = array.length; for (int i = 0; i < n-1; i++) for (int j = 0; j < n-i-1; j++) if (array[j] < array[j+1]) { int temp = array[j]; array[j] = array[j+1]; array[j+1] = temp; } for (int i=0; i<n; ++i) System.out.println(array[i] + \\" \\"); } }"},{"prompt":"Name a built-in function that rounds off a given number to the nearest whole number.","completion":"The built-in function to round off a given number to the nearest whole number is the round() function."},{"prompt":"Write a JavaScript program to convert an array of objects into an object of objects. [ { id: '001', firstName: 'John' , lastName: 'Doe' }, { id: '002', firstName: 'Jim' , lastName: 'Smith' }, { id: '003', firstName: Joe , lastName: 'Mail' }, ]","completion":"const arrayToObj = (arr) => { return arr.reduce((acc, item) => { acc[item.id] = item; return acc; }, {}); } const result = arrayToObj([ { id: '001', firstName: 'John' , lastName: 'Doe' }, { id: '002', firstName: 'Jim' , lastName: 'Smith' }, { id: '003', firstName: Joe , lastName: 'Mail' }, ]); console.log(result); // Output // { // 001: { id: '001', firstName: 'John', lastName: 'Doe' }, // 002: { id: '002', firstName: 'Jim', lastName: 'Smith' }, // 003: { id: '003', firstName: 'Joe', lastName: 'Mail' }, // }"},{"prompt":"Write a Swift code to print out the signature of a function. func addNumbers(a: Int, b: Int) -> Int { return a + b }","completion":"print(addNumbers.signature) // prints: func addNumbers(a: Int, b: Int) -> Int"},{"prompt":"Create a new table in a database named 'customers' with the specified columns.","completion":"CREATE TABLE customers ( id int NOT NULL AUTO_INCREMENT, firstname varchar(45) NOT NULL, lastname varchar(45) NOT NULL, address varchar(100) NOT NULL, phone varchar(20) NOT NULL, email varchar(45) NOT NULL, PRIMARY KEY (id) );"},{"prompt":"Create a if statement in JavaScript that checks if number is divisible by 3. Number: 9","completion":"if (number % 3 === 0) { console.log('Number is divisible by 3'); }"},{"prompt":"Write a regular expression that returns “Hello World” if found in the provided text. Text: This example will show you how to print Hello World using Regular Expressions.","completion":"/Hello World/"},{"prompt":"Use a while loop to print a message 5 times. Message: Hello!","completion":"var i = 0; while (i < 5) { console.log('Hello!'); i++; }"},{"prompt":"Create a quick calculator in Python based on the user input. 2 * 3 + 5","completion":"def quick_calc(string): result = 0 calculation = string.split(\\" \\") for item in calculation: try: result += int(item) except: if item.lower() == \\"*\\": result *= int(calculation[calculation.index(item) + 1]) return result print(quick_calc(\\"2 * 3 + 5\\")) 11"},{"prompt":"Output the nth Fibonacci number in JavaScript. 10","completion":"function Fibonacci(n) { var a = 0, b = 1, c, i; if (n == 0) return a; for (i = 2; i <= n; i++) { c = a + b; a = b; b = c; } return b; } console.log(Fibonacci(10)); 55"},{"prompt":"Create a class in jQuery to handle user authentication.","completion":"class UserAuthentication { constructor (startupOptions) { // initialize settings, read startup settings, etc. } authenticate(credentials) { // verify user credentials, read data, etc. } logout() { // delete session, reset variables, etc. } }"},{"prompt":"Create a function in JavaScript to implement Newton's Method of Numerical Approximation.","completion":"function newtonsMethod(f, df, x, epsilon) { // Keep track of how many iterations we calculate let iteration = 0; while (Math.abs(f(x)) > epsilon && iteration < MAX_ITER) { x -= f(x) / df(x); iteration += 1; } return x; }"},{"prompt":"You are presented with a string which contains a code snippet. Extract the variable types from this string. let myVariable1 = 5; let myVariable2 = true; let myVariable3 = \\"Hello\\";","completion":"let myVariable1: number, myVariable2: boolean, myVariable3: string"},{"prompt":"Create an algorithm in JavaScript to find the closest pair of points from a given set of points. let points = [[2, 0], [4, 4], [-2, 2], [-3, -4], [4, -2]];","completion":"// algorithm to find closest pair of points // uses divide and conquer approach const closestPair = (points) => { // base case: two or fewer points if (points.length <= 2) { return points; } // divide const middle = Math.floor(points.length / 2); const left = points.slice(0, middle); const right = points.slice(middle); // conquer const leftPoints = closestPair(left); const rightPoints = closestPair(right); const closestPair = getClosestPair(leftPoints, rightPoints); // combine return closestPair; } // get closest pair between two sets of points const getClosestPair = (leftPoints, rightPoints) => { // calculating the minimum distance let minDist = getDistance(leftPoints[0], rightPoints[0]); let closestPair = [leftPoints[0], rightPoints[0]]; for (let i = 0; i < leftPoints.length; i++) { for (let j = 0; j < rightPoints.length; j++) { let dist = getDistance(leftPoints[i], rightPoints[j]); if (dist < minDist) { minDist = dist; closestPair = [leftPoints[i], rightPoints[j]]; } } } // return the minimum distance and its pair return closestPair; } // calculate the Euclidean distance between two points const getDistance = (point1, point2) => { let xDist = Math.abs(point2[0] - point1[0]); let yDist = Math.abs(point2[1] - point1[1]); return Math.sqrt(Math.pow(xDist, 2) + Math.pow(yDist, 2)); } // testing our function let points = [[2, 0], [4, 4], [-2, 2], [-3, -4], [4, -2]]; let closestPoints = closestPair(points); console.log(closestPoints); //Output: [[-2, 2], [2, 0]]"},{"prompt":"Create a web server in Java to handle a POST request.","completion":"import java.io.BufferedReader; import java.io.InputStreamReader; import java.io.PrintWriter; import java.net.ServerSocket; import java.net.Socket; public class WebServer { public static void main(String[] args) throws Exception { // listen for a connection from a client ServerSocket connection = new ServerSocket(80); Socket clientSocket = connection.accept(); BufferedReader in = new BufferedReader(new InputStreamReader(clientSocket.getInputStream())); // get the request data String line; String requestData = \\"\\"; while ((line = in.readLine()) != null) { if (line.startsWith(\\"POST\\")) { requestData = line.split(\\"s+\\")[1]; break; } } // send a response PrintWriter out = new PrintWriter(clientSocket.getOutputStream(), true); out.print(\\"HTTP 200 OKn\\"); // respond to the request out.write(handleRequest(requestData)); out.flush(); out.close(); } public static String handleRequest(String requestData) { return \\"Received request data: \\" + requestData; } }"},{"prompt":"Output the result of 2 to the power of 8 in Java.","completion":"int result = (int) Math.pow(2, 8); System.out.println(result); //Output: 256"},{"prompt":"Write an SQL query to select the students who scored higher than the average in Maths.","completion":"SELECT * FROM student_scores WHERE math_score > (SELECT AVG(math_score) from student_scores);"},{"prompt":"Edit this code snippet to reverse a string in Python. def reverse_string(s): # Edit here return reversed_string","completion":"def reverse_string(s): reversed_string = \\"\\" for char in s: reversed_string = char + reversed_string return reversed_string"},{"prompt":"Write a JavaScript function to search a string for a specified value and return the position of the match. searchString = \\"banana\\" searchValue = \\"","completion":"function searchString(str, val) { let pos = -1; const len = str.length; for (let i=0; i < len; i++) { if (str[i] === val) { pos = i; break; } } return pos; } const searchString = 'banana'; const searchValue = 'a'; const searchResult = searchString(searchString, searchValue); console.log(searchResult); // outputs 2, because 'a' is in the 2nd position in \\"banana\\""},{"prompt":"Write an SQL query to find all the customers who've purchased an item in the last month.","completion":"SELECT customers.* FROM customers JOIN orders ON customers.customer_id = orders.customer_id WHERE orders.order_date > DATE_SUB(CURDATE(), INTERVAL 1 MONTH);"},{"prompt":"Write a PHP script to loop through a multidimensional array and print out the values. array = array('fruit' => array('apple', 'banana', 'orange'), 'vegetable' => array('carrot', 'potato'));","completion":"<?php array = array('fruit' => array('apple', 'banana', 'orange'), 'vegetable' => array('carrot', 'potato')); foreach (array as category => values) { echo \\"Category: \\" . category . \\"n\\"; foreach (values as value) { echo \\"Value: \\" . value . \\"n\\"; } } ?>"},{"prompt":"Translate the following SQL query into MongoDB syntax. SELECT * FROM properties WHERE bedrooms > 3 and price < 500","completion":"db.properties.find({ and: [ { bedrooms: { gt: 3 } }, { price: { lt: 500 } } ] })"},{"prompt":"Write a bash script that searches for a given text string in a directory tree recursively.","completion":"#!/bin/bash search_string=\\"text string\\" directory=\\"directory_name\\" #searching for text string recursive in the directory grep -rnw directory -e \\"search_string\\""},{"prompt":"Create a React component that renders a table containing the records from an array of objects. const records = [ { id: 1, name: 'Adam', age: 25 }, { id: 2, name: 'James', age: 30 }, { id: 3, name: 'Nick', age: 28 }, { id: 4, name: 'John', age: 29 } ];","completion":"import React from 'react'; const RecordTable = (props) => ( <div> <table> <thead> <tr> <th>ID</th> <th>Name</th> <th>Age</th> </tr> </thead> <tbody> { props.records.map(record => ( <tr key={record.id}> <td>{ record.id }</td> <td>{ record.name }</td> <td>{ record.age }</td> </tr> )) } </tbody> </table> </div> ); export default RecordTable;"},{"prompt":"Create a Drupal 8 theme that implements a 3 column layout with a header, side bar, content and footer.","completion":"<html> <head> <title>{{ site.name }}</title> <style> body { display: flex; flex-direction: column; } header, footer { flex-basis: 10%; } main { flex-basis: 80%; display: flex; } #sidebar { flex-basis: 20%; } #content { flex-basis: 80%; } </style> </head> <body> <header> {% include 'head.html.twig' %} </header> <main> <div id=\\"#sidebar\\"> {% include 'sidebar.html.twig' %} </div> <div id=\\"content\\"> {% block content %} {% endblock %} </div> </main> <footer> {% include 'footer.html.twig' %} </footer> </body> </html>"},{"prompt":"mplement a webhook endpoint in Java using Spring MVC to process a payment request.","completion":"@RestController public class PaymentController { @PostMapping(\\"/payment\\") public void processPayment(@RequestBody PaymentRequest request) { // Process the payment inside this method } }"},{"prompt":"Generate a regular expression to match a string of consecutive numbers with a minimum of 4 digits.","completion":"^[0-9]{4,}"},{"prompt":"Can you code a solution to Bubble Sort an array of integers? [5, 4, 3, 2, 1]","completion":"def bubbleSort(arr): n = len(arr) # Traverse through all array elements for i in range(n): # Last i elements are already in place for j in range(0, n-i-1): # traverse the array from 0 to n-i-1 # Swap if the element found is greater # than the next element if arr[j] > arr[j+1] : arr[j], arr[j+1] = arr[j+1], arr[j] # Driver code to test above arr = [5, 4, 3, 2, 1] bubbleSort(arr) print (\\"Sorted array is:\\") for i in range(len(arr)): print (\\"%d\\" %arr[i]),"},{"prompt":"Write a function to check whether two lists are equal. list1=[1,2,3,4,5] list2=[1,2,3,4,5]","completion":"def equal(list1, list2): if len(list1) != len(list2): return False for i in range(len(list1)): if list1[i] != list2[i]: return False return True"},{"prompt":"mplement a function to return the element that appears most frequently in a list. [5,5,5,5,6,6,7,7,7]","completion":"def find_most_frequent_element(arr): d = {} for num in arr: if num in d: d[num] += 1 else: d[num] = 1 max_freq = 0 most_frequent_element = None for num in d: if d[num] > max_freq: max_freq = d[num] most_frequent_element = num return most_frequent_element"},{"prompt":"dentify the type of a variable in a Python program. x = [1, 2, 3]","completion":"type(x) # List"},{"prompt":"Choose the correct output for following code snippet. x = \\"hello world\\" y = x y[0] = \\"H","completion":"x = \\"Hello world\\""},{"prompt":"Create a program that takes two parameters and print out the result of the larger one. param1 = 20 param2 = 50","completion":"def largest_param(param1, param2): if param1 > param2: return param1 else: return param2"},{"prompt":"Take two strings and a separator as inputs and join the two strings using the separator and output the resulting string. str1=\\"Hello\\" str2=\\"World\\" separator=\\"-","completion":"def join_strings(str1, str2, separator): return str1 + separator + str2"},{"prompt":"Write a Python program to sort the given list of dictionary elements by the score value lst = [{\\"score\\":1},{\\"score\\":5},{\\"score\\":8}]","completion":"def sort_by_score(lst): lst.sort(key=lambda item: item['score']) return lst"},{"prompt":"Edit the code below to calculate minimum of 3 numbers. def min(a, b): if a < b: return a else: return b","completion":"def min(a, b, c): if a < b and a < c: return a elif b < a and b < c: return b else: return c"},{"prompt":"Convert the given list of dictionaries to a tuple of tuples. lst = [{\\"name\\":\\"John\\", \\"age\\":21}, {\\"name\\":\\"Bill\\", \\"age\\":30}]","completion":"def convert_to_tuple(lst): tup = [(x['name'], x['age']) for x in lst] return tuple(tup)"},{"prompt":"Code a solution to remove any element from given list if it appears more than 3 times. [1,2,3,1,1,1,2]","completion":"def remove_excess_lst(lst): # Count the frequency of each element in the list cnt = Counter(lst) # Return the list with elements appearing more than 3 times removed return list(filter(lambda x: cnt[x] <= 3, lst))"},{"prompt":"Create a loop that will print out numbers from 0 to 12.","completion":"for (let i = 0; i <= 12; i++) { console.log(i); }"},{"prompt":"Develop a program that finds the maximum number of overlapping events within a given time period. [[1, 7], [2, 5], [3, 6], [8, 10]]","completion":"function maxOverlapping(arr) { let max = 0; let curr = 0; const timeline = {}; for (let i = 0; i < arr.length; i++) { const start = arr[i][0]; const end = arr[i][1]; timeline[start] = (timeline[start] || 0) + 1; timeline[end] = (timeline[end] || 0) - 1; } for (const key in timeline) { curr += timeline[key]; max = Math.max(max, curr); } return max; } console.log(maxOverlapping([[1, 7], [2, 5], [3, 6], [8, 10]])); // output: 3"},{"prompt":"Create a program that takes a string and returns an object with the count of all the characters in the string. \\"Hello World","completion":"function charCount(str) { let result = {}; for (let i = 0; i < str.length; i++) { let char = str[i].toLowerCase(); result[char] = (result[char] || 0) + 1; } return result; } console.log(charCount('Hello World')); // output: {h: 1, e: 1, l: 3, o: 2, w: 1, r: 1, d: 1}"},{"prompt":"Convert the following chess board into a 2D array in JavaScript. +---+ |BR | |BK | | BB| |BR | +---+","completion":"let chessBoard = [[\\"BR\\", \\"BK\\", \\"BB\\", \\"BR\\"]];"},{"prompt":"Create a variables in Python to store the following information. Name: John, Age: 35","completion":"name = \\"John\\" age = 35"},{"prompt":"Edit the following HTML to create a heading with the title \\"Welcome\\". <h2>Hello World</h2>","completion":"<h2>Welcome</h2>"},{"prompt":"Write a Python program to print a random integer between 0 and 5.","completion":"import random # Print random integer print(random.randint(0, 5))"},{"prompt":"Create a validation rule to check if an email address is valid for an input field in JavaScript.","completion":"function validateEmail(email) { var re = /^(([^<>()[].,;:s@\\"]+(.[^<>()[].,;:s@\\"]+)*)|(\\".+\\"))@(([[0-9]{1,3}.[0-9]{1,3}.[0-9]{1,3}.[0-9]{1,3}])|(([a-zA-Z-0-9]+.)+[a-zA-Z]{2,}))/; return re.test(email); }"},{"prompt":"Rewrite the following Java code using a switch statement instead of if/else. int time = 10; if (time < 12) { System.out.println(\\"Good morning\\"); } else if (time < 17) { System.out.println(\\"Good afternoon\\"); } else { System.out.println(\\"Good evening\\"); }","completion":"int time = 10; switch (time) { case time < 12: System.out.println(\\"Good morning\\"); break; case time < 17: System.out.println(\\"Good afternoon\\"); break; case time >= 17: System.out.println(\\"Good evening\\"); break; }"},{"prompt":"Write a function that takes two strings and determines whether one string is an anagram of the other. string1 = 'listen'; string2 = 'silent'","completion":"function isAnagram(string1, string2) { const s1 = string1.split('').sort().join(''); const s2 = string2.split('').sort().join(''); return s1 === s2; }"},{"prompt":"Write a C# code snippet to add 2 numbers.","completion":"int number1 = 5; int number2 = 10; int sum = number1 + number2;"},{"prompt":"Generate a random 5-element list of integers between 0 and 10.","completion":"import random random_list = [random.randint(0, 10) for _ in range(5)]"},{"prompt":"Write a class definition for a Box class.","completion":"class Box: def __init__(self, width, length, height): self.width = width self.length = length self.height = height def calculate_volume(self): return self.width * self.length * self.height"},{"prompt":"Run the program located in 'helloworld.py'","completion":"python helloworld.py"},{"prompt":"Convert this CSV data into a Pandas DataFrame. name,age John,20 James,31","completion":"import pandas as pd data = pd.read_csv('data.csv') df = pd.DataFrame(data)"},{"prompt":"Find the lowest integer that can not be represented as the sum of two prime numbers.","completion":"The lowest integer that can not be represented as the sum of two prime numbers is 45."},{"prompt":"What data structure would be best to store key-value pairs?","completion":"A hash table (or a dictionary in Python) is the best data structure to store key-value pairs."},{"prompt":"Write a function to move all zeros in an array to the end. [1, 2, 0, 3, 4, 0, 5]","completion":"def moveZeroes(nums): zeros = 0 for i in range(len(nums)): if nums[i] == 0: zeros += 1 else: nums[i-zeros] = nums[i] nums[len(nums)-zeros:] = [0] * zeros"},{"prompt":"Create a new list filled with the same values as the existing list but with the values multiplied by 5. [1, 2, 3, 4, 5]","completion":"new_list = [i * 5 for i in [1, 2, 3, 4, 5]]"},{"prompt":"Write a method to compare two unsorted arrays of integers and find the number of mismatches. [1, 3, 2, 5], [2, 4, 1, 5]","completion":"def get_mismatches(arr1, arr2): mismatches = 0 if len(arr1) != len(arr2): return -1 for i in range(len(arr1)): if arr1[i] != arr2[i]: mismatches += 1 return mismatches"},{"prompt":"Create a SQL statement to select the first ten elements from a table with a specific id. The table name is 'products', and the product id is 1.","completion":"SELECT * FROM products WHERE product_id = 1 LIMIT 10;"},{"prompt":"Write a VBA macro to convert a sequence of text to uppercase. The text is: \\"Hello World\\".","completion":"Sub upperCase() Dim myText As String myText = \\"Hello World\\" ActiveCell.Value = UCase(myText) End Sub"},{"prompt":"Create a HTML page with an ordered list of items using Five items: apple, banana, orange, strawberry, and lemon.","completion":"<html> <body> <ol> <li>Apple</li> <li>Banana</li> <li>Orange</li> <li>Strawberry</li> <li>Lemon</li> </ol> </body> </html>"},{"prompt":"Write a C++ program that prints the following pattern to the screen:","completion":"#include <iostream> int main() { // Print the pattern using nested for loop for (int i=0; i<5; i++) { for (int j=0; j<i+1; j++) std::cout << \\"*\\"; std::cout << std::endl; } return 0; } /* Output * ** *** **** ***** */"},{"prompt":"Design a method for reversing a string in Java","completion":"public static String reverse(String str) { String reversedString = \\"\\"; for (int i = str.length() - 1; i >= 0; i--) { reversedString += str.charAt(i); } return reversedString; }"},{"prompt":"Given an input list of integers, sort the list in ascending order","completion":"def sortAsc(lst): for i in range(len(lst)): for j in range(i+1, len(lst)): if lst[i] > lst[j]: lst[i], lst[j] = lst[j], lst[i] return lst"},{"prompt":"Create an SQL query to find all states in a given zip code The zip code is 90210.","completion":"SELECT state FROM zip_codes WHERE zip_code = '90210';"},{"prompt":"Create a formula that calculates the total cost of an item given the item price and tax rate","completion":"Total Cost = Item Price + (Item Price * (Tax Rate/100))"},{"prompt":"Convert a given XML document to JSON document","completion":"<?xml version=\\"1.0\\"?> <root> <person> <name>John Doe</name> <age>22</age> <address> <street>123 Main St.</street> <city>Anytown</city> <state>FL</state> <zip>12345</zip> </address> </person> </root> { \\"person\\" : { \\"name\\" : \\"John Doe\\", \\"age\\" : 22, \\"address\\" : { \\"street\\" : \\"123 Main St.\\", \\"city\\" : \\"Anytown\\", \\"state\\" : \\"FL\\", \\"zip\\" : \\"12345\\" } } }"},{"prompt":"put two numbers and output the maximum one in Python 3, 5","completion":"a = 3 b = 5 if a > b: print(a) else: print(b)"},{"prompt":"Sort the list using Quick Sort [2, 3, 5, 6, 1, 4]","completion":"def quick_sort(arr): if len(arr) <= 1: return arr pivot = arr[len(arr) // 2] left = [x for x in arr if x < pivot] right = [x for x in arr if x > pivot] return quick_sort(left) + [pivot] + quick_sort(right)"},{"prompt":"Generate a SQL query to return all records from the table with a specified column including null values Table name: my_table Column name: age","completion":"SELECT * FROM my_table WHERE age IS NULL OR age != '';"},{"prompt":"Construct an if-else statement to determine if a given number is divisible by 4","completion":"if (number % 4 == 0) System.out.println(\\"The number is divisible by 4\\"); else System.out.println(\\"The number is not divisible by 4\\");"},{"prompt":"Formulate a SQL query that fetches the records with the latest date Table name: my_table Columns: id, date","completion":"SELECT * FROM my_table ORDER BY date DESC LIMIT 1;"},{"prompt":"Write a script in JavaScript to iterate over a given array of objects and return all objects with the color green. const arr = [{ color: 'blue', shape: 'square' }, { color: 'red', shape: 'triangle' }, { color: 'green', shape: 'circle' }]","completion":"const greenObjects = arr.filter(obj => obj.color === 'green');"},{"prompt":"Write a JavaScript function that returns that number of elements from an array of numbers which sum up to a given target. array = [2, 3, 7, 8, 10] target = 11","completion":"function findElementsSum(array, target){ let result = []; for (let i = 0; i < array.length; i++){ for (let j = i+1; j < array.length; j++){ if (array[i] + array[j] == target){ result.push([i, j]); } } } return result; }"},{"prompt":"Write a Python function to check if a given string is a palindrome and has all the vowels in it.","completion":"def all_vowels_palindrome(word): vowels = ['a', 'e', 'i', 'o', 'u'] if not word == word[::-1]: return False for char in vowels: if char not in word: return False return True"},{"prompt":"Write a Python script to detect if two numbers have the same frequency of digits.","completion":"def same_frequency(num1,num2): str1 = str(num1) str2 = str(num2) if len(str1) != len(str2): return False dict = {} for char in str1: if char in dict: dict[char] += 1 else: dict[char] = 1 for char in str2: if not char in dict: return False dict[char] -= 1 for k in dict: if dict[k] != 0: return False return True"},{"prompt":"Writing a Python function which takes a 2D array as an argument and transposes it. arr = [[4, 5, 44], [3, 8, 20], [2, 5, 10]]","completion":"def transpose_(arr): transposedarr = [] for i in range(len(arr[0])): row = [] for j in range(len(arr)): row.append(arr[j][i]) transposedarr.append(row) return transposedarr"},{"prompt":"Create a function in JavaScript to search an element in a given sorted array. arr = [1, 3, 4, 5, 6, 7, 9, 11]","completion":"function sortedArraySearch(arr, el) { let start = 0, end = arr.length - 1; while (start <= end) { let mid = Math.floor((start + end) / 2); if (arr[mid] === el) return true; else if (arr[mid] < el) start = mid + 1; else end = mid - 1; } return false; }"},{"prompt":"What is polymorphism and how it is used in object-oriented programming?","completion":"Polymorphism is the ability of an object to be interpreted and used differently in different contexts. In object-oriented programming, it allows operations to be performed on objects despite different underlying data types. For example, it allows functions to take multiple types of arguments and still be able to process them, without requiring different lines of code for each data type. Polymorphism also allows for code reuse through the concept of inheritance, where subclasses can inherit all the methods and properties of their parent class. As a result, objects can be written more efficiently and with less repetition."},{"prompt":"Edit the following code in Java to include a new method “printName()”. public class Person { String name; void displayAge(){ System.out.println(\\"age is: \\"+ age); } }","completion":"public class Person { String name; void displayAge(){ System.out.println(\\"age is: \\"+ age); } void printName(){ System.out.println(\\"Name: \\"+ name); } }"},{"prompt":"Describe the use of the class keyword in C++.","completion":"The class keyword in C++ is used to declare a class, which contains (public or private) data members, member functions, and constructors. A class can be thought of as a blueprint for creating objects that have their own state and behavior. Data members represent the state of an object, and the member functions represent the behavior of the object. Class constructors are special member functions that allow for the creation of an instance of a class."},{"prompt":"Compute the average age of the following ages: 18, 20, 17, 19, 15.","completion":"Average age = 17.8"},{"prompt":"Explain how a min-heap works.","completion":"A min-heap is a data structure used for storing and retrieving data. It is a complete binary tree, where the root node is the minimum element in the heap. Each node of the heap follows the \\"min-heap\\" property, where the parent node is always less than or equal to its children. This property allows for efficient data retrieval; the parent node can always be deleted from the heap, since it is the minimum value, and the heap can be re-balanced in O(log n) time."},{"prompt":"Write a shell command to switch to a given directory Dirpath=/Users/username/Docume","completion":"cd /Users/username/Documents"},{"prompt":"Construct a for loop in Python to iterate through the items in the list and print their corresponding index. lst = [1,2,3]","completion":"for i, num in enumerate(lst): print(i, num)"},{"prompt":"Write a code snippet to get the name of the planet which is the fifth planet from the sun.","completion":"name_planets = [\\"Mercury\\", \\"Venus\\", \\"Earth\\", \\"Mars\\", \\"Jupiter\\", \\"Saturn\\", \\"Uranus\\", \\"Neptune\\"] fifth_planet = name_planets[4] print(fifth_planet)"},{"prompt":"Write code to delete all elements in a given Python list which are NOT integer type. lst = [1, \\"a\\", 2.3, False, 4, \\"abc\\"]","completion":"for item in lst[:]: if not isinstance(item, int): lst.remove(item)"},{"prompt":"Write an SQL statement to add two new columns, 'size' and 'color', to the existing products table.","completion":"ALTER TABLE products ADD COLUMN size INT, ADD COLUMN color VARCHAR(100);"},{"prompt":"Write code to create a dictionary from a list of tuples, where each tuple consists of a color name and its value. items = [(\\"red\\", \\"#FF0000\\"), (\\"blue\\", \\"#0000FF\\")]","completion":"colors = dict(items)"},{"prompt":"Write an SQL query to find the list of products whose price is greater than 50.","completion":"SELECT * FROM products WHERE price > 50;"},{"prompt":"Design a MySQL query to find the average monthly salary of people in the table \\"Employees\\". Table: Employees Columns: employee_id, name, salary","completion":"SELECT AVG(salary) as avg_salary FROM Employees WHERE MONTH(CURDATE()) = MONTH(salary);"},{"prompt":"Create a css class to set the text color of a h1 element to blue.","completion":"h1 { color: blue; }"},{"prompt":"Create a python anonymous function that squares an input number.","completion":"square_num = lambda x: x ** 2"},{"prompt":"Suggest a type of join to use to find all customers with an order total greater than 100. Table: Customers Columns: customer_id, name Table: Orders Columns: order_id, customer_id, total","completion":"SELECT c.customer_id, c.name FROM Customers c INNER JOIN Orders o ON c.customer_id = o.customer_id WHERE o.total > 100;"},{"prompt":"Write a python loop to print all the even numbers between 2 and 15 (inclusive).","completion":"for i in range(2, 16): if i % 2 == 0: print(i)"},{"prompt":"Create an SQL query to select the name and age of all employees that are younger than 25. Table: Employees Columns: employee_id, name, age","completion":"SELECT name, age FROM Employees WHERE age < 25;"},{"prompt":"Write a python statement to calculate the factorial of 6.","completion":"import math factorial = math.factorial(6)"},{"prompt":"Print all the elements in the following array in descending order. [4, 2, 6, 8, 5, 9, 1]","completion":"9 8 6 5 4 2 1"},{"prompt":"Design a data structure to store the details of a student (Name, Age, Course).","completion":"struct Student { name: String, age: u32, course: String, }"},{"prompt":"Create a method to transform a string from lowercase to title case.","completion":"def to_title_case(string): return string.title()"},{"prompt":"Modify the following block of code to set a maximum length of the list list = [1, 2, 3, 4, 5, 6]","completion":"list = [1, 2, 3, 4, 5, 6][:5]"},{"prompt":"Write an algorithm to swap two elements a[i] and a[j] in a given array a.","completion":"def swap(a, i, j): temp = a[i] a[i] = a[j] a[j] = temp"},{"prompt":"Update the strings stored in a dictionary, so that all strings have the same length. d = { 'apple': 'small', 'orange': 'medium size' }","completion":"d = { 'apple': 'small ', 'orange': 'medium size' }"},{"prompt":"Create an object to store the variables that are necessary for the following code snippet. x = 10 y = 20 z = 30","completion":"class Coordinates: def __init__(self, x, y, z): self.x = x self.y = y self.z = z coordinates = Coordinates(x=10, y=20, z=30)"},{"prompt":"Make a program to determine if the elements of the array are in increasing order [3, 5, 7]","completion":"def isIncreasing(arr): for i in range(len(arr)-1): if arr[i] >= arr[i+1]: return False return True"},{"prompt":"Generate a correct c++ program to compute the YTM of a bond","completion":"#include <iostream> #include <cmath> using namespace std; // Function to calculate bond yield float calculateYTM(float faceValue, float price, int numInterestPayments, float couponRate, float MaturityPeriod) { float guess = 0.1, ytm = 0; float a, b; while (ytm != guess) { ytm = guess; a = price; // Calculating the bond price // using the YTM guess for (int i = 0; i < MaturityPeriod; i++) a = a - (faceValue * (couponRate/2) / (pow((1 + ytm/2), (numInterestPayments/2 - i)))); a = a - (faceValue / (pow((1 + ytm/2), (numInterestPayments/2)))); b = MaturityPeriod * (faceValue * (couponRate/2 / (pow((1 + ytm/2), (numInterestPayments/2 - MaturityPeriod)))) + (faceValue/ (pow((1 + ytm/2), (numInterestPayments/2)))); // calculating YTM using Newton's Method guess = ytm + (a/b); } return guess * 2; }"},{"prompt":"Suggest a code snippet to detect a cycle in a linked list","completion":"def contains_cycle(head): slow = head fast = head while fast is not None and fast.next is not None: fast = fast.next.next slow = slow.next if slow is fast: return True return False"},{"prompt":"Given a list of integers, write a function in Python to sort and reverse the list. input_list = [3, 8, 10, 1, 9]","completion":"def sort_and_reverse(list): res_list = sorted(list, reverse=True) return res_list sort_and_reverse(input_list) # Output [10, 9, 8, 3, 1]"},{"prompt":"Write a Java program to calculate the area of a square given the length of a side.","completion":"public class CalculateSquareArea { public static double calculateArea(double sideLength) { double area = sideLength * sideLength; return area; } public static void main(String[] args) { double sideLength = 5; double area = calculateArea(sideLength); System.out.println(\\"The area of a square with side length \\" + sideLength + \\" is \\" + area); } }"},{"prompt":"Generate a unique ID string of length 12 using a Python function.","completion":"import string, random def generate_unique_id(stringLength=12): lettersAndDigits = string.ascii_letters + string.digits return ''.join(random.choice(lettersAndDigits) for i in range(stringLength)) unique_string = generate_unique_id() print(\\"unique string: \\",unique_string)"},{"prompt":"Write a SQL query to select the distinct cities from a table of customer data.","completion":"SELECT DISTINCT city FROM customer_data;"},{"prompt":"Convert a given number to its corresponding Roman numeral.","completion":"def convertToRoman(num): val = [ 1000, 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1 ] syb = [ \\"M\\", \\"CM\\", \\"D\\", \\"CD\\", \\"C\\", \\"XC\\", \\"L\\", \\"XL\\", \\"X\\", \\"IX\\", \\"V\\", \\"IV\\", \\"I\\" ] roman_num = '' i = 0 while num > 0: for _ in range(num // val[i]): roman_num += syb[i] num -= val[i] i += 1 return roman_num # Driver Code num = 13 print(convertToRoman(num)) # Output: XIII"},{"prompt":"Generate a list of all even numbers between 20 and 40.","completion":"even_numbers = [] for num in range(20, 41): if num % 2 == 0: even_numbers.append(num) print(even_numbers) # Output: [20, 22, 24, 26, 28, 30, 32, 34, 36, 38, 40]"},{"prompt":"Find the reverse of an array in Python. arr = [1, 2, 3, 4, 5]","completion":"arr = [5, 4, 3, 2, 1]"},{"prompt":"Output the name of the font styles available in HTML.","completion":"normal, italic, oblique, small-caps, inherit"},{"prompt":"Write JavaScript code for a for loop with condition that iterates 8 times.","completion":"for (let i = 0; i < 8; i++) { // code to be executed }"},{"prompt":"Count the number of elements in an array using HTML. arr = ['a', 'b', 'c', 'd']","completion":"arr.length //4"},{"prompt":"Find two missing numbers in an array in C++. arr = [1, 3, 6, 5, 8, 9, 10]","completion":"#include <algorithm> #include <iostream> #include <vector> std::vector<int> find_missing_numbers(const std::vector<int>::iterator begin, const std::vector<int>::iterator end) { int n = end - begin; int total_sum = (n + 2)*(n + 1)/2; int missing_sum = 0; for (auto it = begin; it != end; ++it) { missing_sum += *it; } int difference = total_sum - missing_sum; int a = difference/2; int b = a + difference; return {a, b}; } int main() { std::vector<int> arr = {1, 3, 6, 5, 8, 9, 10}; std::vector<int> results = find_missing_numbers(arr.begin(), arr.end()); std::cout << results[0] << \\" \\" << results[1] << std::endl; return 0; }"},{"prompt":"Create a function in C to check whether a given string contains any punctuations or not.","completion":"bool containsPunctuation(string s) { for (char c : s) { if (ispunct(c)) return true; } return false; }"},{"prompt":"w can you remove duplicate characters from a string in Java?","completion":"We can use a Set collection to remove duplicate characters from a string in Java. We can loop through the characters in the string, and add them to a Set, which does not allow duplicate elements. Then we can loop through the set and append each character to a new string. This new string will be free of duplicate characters."},{"prompt":"Create a Java method that computes the factorial of an integer.","completion":"public static int factorial(int n) { int factorial = 1; for (int i = 1; i <= n; i++) { factorial *= i; } return factorial; }"},{"prompt":"Python, how can you iterate a list in reverse order?","completion":"We can use the reversed() function to iterate a list in reverse order in Python. For example: my_list = [1, 2, 3, 4] for element in reversed(my_list): print(element)"},{"prompt":"w can you create a dictionary in Python with 3 key-value pairs?","completion":"We can create a dictionary in Python with 3 key-value pairs by declaring a dictionary variable with the desired contents. For example: my_dict = { \\"key1\\": \\"value1\\", \\"key2\\": \\"value2\\", \\"key3\\": \\"value3\\" }"},{"prompt":"Given a list, write a Python code snippet to print the elements of the list in reverse order. my_list = [\\"one\\", \\"two\\", \\"three\\", \\"four\\", \\"five\\"]","completion":"for element in reversed(my_list): print(element)"},{"prompt":"Run the given code and determine the result. a = 3 b = 5 c = a + b","completion":"c = 8"},{"prompt":"Using Python, reverse a given string \\"Hello World!\\".","completion":"\\"!dlroW olleH\\""},{"prompt":"Make the following CSS code work properly on the web page. .special { background-color: #eee; border: 2px solid #999; }","completion":".special { background-color: #eee; border: 2px solid #999; padding: 10px; display: block; }"},{"prompt":"Train a machine learning model without using any frameworks with the folowing input and output data. Input Data: A, B, C, D Output Data: 0, 1, 0, 1","completion":"model = Model() model.fit(x=[A, B, C, D], y=[0, 1, 0, 1])"},{"prompt":"Create a functional HTML form using the following attributes. name, email, country","completion":"<form> <label for=\\"name\\">Name</label> <input type=\\"text\\" name=\\"name\\"> <label for=\\"email\\">Email</label> <input type=\\"email\\" name=\\"email\\"> <label for=\\"country\\">Country</label> <select name=\\"country\\"> <option>---------</option> <!-- To be populated dynamically --> </select> <input type=\\"submit\\" value=\\"Submit\\"> </form>"},{"prompt":"Create a React component for a button that takes two props: an onClick event handler and an id.","completion":"const MyButton = props => { return ( <button onClick={props.onClick} id={props.id}> Click Me </button> ) }"},{"prompt":"Create a class in Java that will print the two integers added together.","completion":"public class Addition { public static int add(int x, int y) { return x + y; } public static void main(String[] args) { System.out.println(add(5,7)); } }"},{"prompt":"Develop a bash script that will take 2 arguments as input and print \\"Arguments are equal\\" if both arguments are equal or \\"Arguments are not equal\\" otherwise.","completion":"#!/bin/bash if [ 1 -eq 2 ]; then echo \\"Arguments are equal\\" else echo \\"Arguments are not equal\\" fi"},{"prompt":"What changes can you suggest in order to optimize the following Java code? public class Student { //private variables private String name; private int age; private int grade;","completion":"public class Student { //private variables private String name; private int age; private int grade; //create getters and setters for the fields public String getName() { return name; } public void setName(String name) { this.name = name; } public int getAge() { return age; } public void setAge(int age) { this.age = age; } public int getGrade() { return grade; } public void setGrade(int grade) { this.grade = grade; } }"},{"prompt":"Create a function in Python that can compute the area of a rectangular room in square feet. length = 20 width = 15","completion":"def findArea(length, width): area = length * width return area # Call the function area = findArea(20, 15) print(\\"The area of the room is: \\" + str(area) + \\"sq.ft\\")"},{"prompt":"Design a data structure in Python to store customer contact details.","completion":"#Create a class to store customer information class ContactData: def __init__(self, name, email, phone): self.name = name self.email = email self.phone = phone #Create a dictionary to store the customer contact details customer_details = {} # function to add customer details in the dictionary def add_customer_details(name, email, phone): customer_details[name] = ContactData(name, email, phone) #Function to display customer details def display_customer_details(): for key in customer_details.keys(): customer = customer_details[key] print(\\"Name: {}, Email: {}, Phone: {}\\".format( customer.name, customer.email, customer.phone))"},{"prompt":"Suggest the missing line of code in the following Python program. nums = [1, 2, 3] for n in nums: print(n)","completion":"nums = [1, 2, 3] for n in nums: print(n) #Print the sum of the list print(sum(nums))"},{"prompt":"Merge the following two linked lists. Linked List 1: 1->3->5 Linked List 2: 2->4","completion":"def merge(head1, head2): # If either is empty if not head1 or not head2: return head1 or head2 # if first linked list is smaller if head1.data < head2.data: head1.next = merge(head1.next, head2) return head1 else: # if second linked list is smaller or equal head2.next = merge(head1, head2.next) return head2"},{"prompt":"Write an SQL query that returns all the students with their marks from the following table. Student ( id, name, marks) Marks (sub_id, marks)","completion":"SELECT s.name, m.marks FROM Student s, Marks m WHERE s.id = m.sub_id"},{"prompt":"Complete the following bash script with conditional statements. #!/bin/bash echo \\" Enter an integer \\" read num","completion":"#!/bin/bash echo \\"Enter an integer\\" read num if (( num > 0 )); then echo \\"The number is positive\\" elif (( num < 0 )); then echo \\"The number is negative\\" else echo \\"The number is zero\\" fi"},{"prompt":"Design a MySQL Table to store company employees.","completion":"CREATE TABLE \`employee\` ( \`employee_id\` int(11) NOT NULL AUTO_INCREMENT PRIMARY KEY, \`name\` varchar(255) NOT NULL, \`dob\` datetime NOT NULL, \`salary\` decimal(10,2) NOT NULL, \`address\` varchar(255) );"},{"prompt":"Classify the type of the expression 5 + 4 * 3 - 7","completion":"The expression 5 + 4 * 3 - 7 is a mathematical expression of arithmetic operations."},{"prompt":"Write a code that takes a list as input and returns a list of every permutation of that list [1, 2, 3]","completion":"def get_permutations(input_list): result = [] if len(input_list) == 0: return [] if len(input_list) == 1: return [input_list] for i in range(len(input_list)): x = input_list[i] xs = input_list[:i] + input_list[i+1:] for p in get_permutations(xs): result.append([x] + p) return result"},{"prompt":"Write a code that takes a string and a character as an argument and counts the number of occurrences of that character in the string Avengers: \\"He brought the team together\\" Character:","completion":"def count_character(input_string, character): count = 0 for char in input_string: if char == character: count +=1 return count"},{"prompt":"Create a code that edits a list by adding two to each element [1, 2, 3]","completion":"def add_two(input_list): new_list = [] for num in input_list: new_list.append(num + 2) return new_list"},{"prompt":"Write a code that takes a numeric value and returns the factorial of that number 3","completion":"def factorial(n): result = 1 for i in range(1,n+1): result *= i return result"},{"prompt":"Write a code that takes a list as an input and returns the elements in reverse order ['apple', 'banana', 'cherry']","completion":"def reverse_list(input_list): reversed_list = [] for i in range(len(input_list)-1,-1,-1): reversed_list.append(input_list[i]) return reversed_list"},{"prompt":"Create a program to determine the type of triangle given 3 side lengths [5, 4, 3]","completion":"def determine_triangle_type(triangle_sides): if triangle_sides[0] == triangle_sides[1] and triangle_sides[1] == triangle_sides[2]: return 'equilateral' elif triangle_sides[0] == triangle_sides[1] or triangle_sides[1] == triangle_sides[2] or triangle_sides[2] == triangle_sides[0]: return 'isosceles' else: return 'scalene'"},{"prompt":"Create a while loop in Java to calculate the Fibonacci numbers up to the number 10.","completion":"int num1 = 0, num2 = 1, fibo = 0; while(fibo <= 10) { fibo = num1 + num2; num1 = num2; num2 = fibo; System.out.print(fibo +\\" \\"); }"},{"prompt":"Using only JavaScript, determine the length of a given string \\"Hello World\\".","completion":"let stringLength = \\"Hello World\\".length; console.log(stringLength); // output 11"},{"prompt":"Write a query to find all employees whose age is between 25 and 30 and whose department is Marketing.","completion":"SELECT * FROM Employees WHERE age BETWEEN 25 and 30 AND department = 'Marketing';"},{"prompt":"Using HTML, create a button that displays a message when clicked.","completion":"<button onclick=\\"alert('Hello World!')\\"> Click me! </button>"},{"prompt":"Construct a regex statement to select all words starting with a capital letter.","completion":"b[A-Z]w+"},{"prompt":"Write a SQL query to find the count of all the books listed in a library catalog.","completion":"SELECT COUNT(*) FROM library_catalog;"},{"prompt":"Create a method to sort a given array of integers without using any of the built-in sorting functions in JavaScript. array = [5, 4, 3, 2, 1]","completion":"\\"\\"\\" Create a method to sort a given array of integers without using any of the built-in sorting functions in JavaScript Input: array = [5, 4, 3, 2, 1] \\"\\"\\" // bucket sort function bucketSort(arr) { let buckets = new Array(arr.length); let result = []; for (let i = 0; i < arr.length; i++) { buckets[i] = 0; } for (let i = 0; i < arr.length; i++) { buckets[arr[i]]++; } for (let i = 0; i < arr.length; i++) { while (buckets[i] > 0) { result.push(i); buckets[i]--; } } return result; }"},{"prompt":"Create a method which receives a list of names and outputs the name which occurs the most in that list. list = ['Jon', 'Arya', 'Jon', 'Tyrion', 'Cersei', 'Jon']","completion":"\\"\\"\\" Create a method which receives a list of names and outputs the name which occurs the most in that list. Input: list = ['Jon', 'Arya', 'Jon', 'Tyrion', 'Cersei', 'Jon'] \\"\\"\\" def getMostFrequent(list): frequency = dict() holder = None max_count = 0 for name in list: if name in frequency: frequency[name] += 1 else: frequency[name] = 1 if frequency[name] > max_count: max_count = frequency[name] holder = name return holder list = ['Jon', 'Arya', 'Jon', 'Tyrion', 'Cersei', 'Jon'] print(getMostFrequent(list))"},{"prompt":"Create a JavaScript code that takes a number as input and returns its factorial. num = 5","completion":"\\"\\"\\" Create a JavaScript code that takes a number as input and returns its factorial. Input: num = 5 \\"\\"\\" function factorial(num) { if (num === 0) { return 1; } else { return num * factorial(num-1); } } console.log(factorial(5))"},{"prompt":"Create a method to join an array of strings together. arr = ['one', 'two', 'three']","completion":"\\"\\"\\" Create a method to join an array of strings together. Input: arr = ['one', 'two', 'three'] \\"\\"\\" function joinStrings(arr) { let joinedStr = ''; for (let i = 0; i < arr.length; i++) { joinedStr += arr[i] if (i < arr.length - 1) { joinedStr += ' '; } } return joinedStr; } console.log(joinStrings(['one', 'two', 'three']));"},{"prompt":"Edit the code so it displays the numbers 1 to 5. for i in range(2, 10): print(i)","completion":"for i in range(1, 6): print(i)"},{"prompt":"Calculate the factorial of n using a recursive function.","completion":"def factorial(n): if n == 0: return 1 else: return n * factorial(n-1)"},{"prompt":"Given the following array and a number k, write a program to determine if it contains a pair of numbers that add up to k. arr = [1, 2, 3, 4, 5] k = 7","completion":"def has_pair_with_sum(arr, k): temp_set = set() for i in range(len(arr)): temp = k - arr[i] if temp in temp_set: return True temp_set.add(arr[i]) return False"},{"prompt":"Summarize the following text using an algorithm. The average daily temperature in Chicago during the month of January is usually below zero degrees Celsius. As such, the streets become icy and treacherous for the residents.","completion":"Chicago residents face treacherous icy streets during the month of January due to average daily temperatures below zero degrees Celsius."},{"prompt":"Write the definition of function to calculate the perimeter of a triangle.","completion":"def perimeter(a, b, c): return a + b + c"},{"prompt":"Explain what is meant by the term ‘machine learning’.","completion":"Machine learning is the process of teaching a machine to recognize patterns in data and make decisions based on those patterns. It involves feeding a machine large amounts of data, which it can then use to learn, develop and form predictions based on patterns it identifies."},{"prompt":"w could Big data analysis be used to provide better services and products ?","completion":"Big data analysis can provide companies with data-driven insights that can be used to improve services and products. By accurately analyzing customer trends, companies can build targeted marketing campaigns and make decisions on which services and products to focus on, helping them reach their desired market more efficiently. Additionally, it can help organizations create better customer experiences by identifying areas of improvement in customer support and services."},{"prompt":"Develop a C program to print a pattern like a pyramid.","completion":"#include <stdio.h> int main() { int i, j, k, rows; printf(\\"Enter the number of rows n\\"); scanf(\\"%d\\",&rows); for(i=1; i<=rows; i++ ) { for(k=rows; k >= i; k--) printf(\\" \\"); for(j=1; j<= (2*i-1) ; j++ ) printf(\\"*\\"); printf(\\"n\\"); } return 0; }"},{"prompt":"Describe your approach to sorting a variety of data with a single sorting algorithm.","completion":"My approach to sorting a variety of data would involve using a single sorting algorithm. Depending on the type of data, I would select the most appropriate sorting algorithm which would involve understanding the complexity of the data and the type of sorting required. Generally, I would use quick sort or merge sort as they are efficient and have good performance. However, if needed, I would be open to using insertion or bubble sort as well."},{"prompt":"Edit a program to show the area of the rectangle #include <stdio.h> int main() { int length, width; printf(\\"Enter the length : \\"); scanf(\\"%d\\", &length); printf(\\"Enter the width : \\"); scanf(\\"%d\\", &width); printf(\\"The Perimeter of rectangle is : %d n\\", 2*(length + width)); return 0; }","completion":"#include <stdio.h> int main() { int length, width; printf(\\"Enter the length : \\"); scanf(\\"%d\\", &length); printf(\\"Enter the width : \\"); scanf(\\"%d\\", &width); printf(\\"The Perimeter of rectangle is : %d n\\", 2*(length + width)); printf(\\"The Area of rectangle is : %d n\\", length * width); return 0; }"},{"prompt":"Create a custom exception class for a restaurant that has no menu items.","completion":"class NoMenuItemsError(Exception): def __init__(self, message): super().__init__(message) self.message = message def raise_error(): raise NoMenuItemsError(\\"No menu items are available\\")"},{"prompt":"Create a dictionary in which keys are characters and values are the occurences of that character in a given string. string = \\"apple","completion":"def get_char_count(string): char_count = {} for char in string: if char not in char_count: char_count[char] = 1 else: char_count[char] += 1 return char_count"},{"prompt":"Write a function to calculate all the possible paths for a N x N matrix.","completion":"def calculate_paths(matrix): rows = len(matrix) cols = len(matrix[0]) dp = [[0 for _ in range(cols)] for _ in range(rows)] dp[0][0] = 1 for i in range(rows): for j in range(cols): if i-1 >= 0: dp[i][j] = dp[i][j] + dp[i-1][j] if j-1 >= 0: dp[i][j] = dp[i][j] + dp [i][j-1] return dp[rows-1][cols-1]"},{"prompt":"Write a Python code to initialize a 10 x 10 matrix with random values.","completion":"import random def init_matrix(): matrix = [[0 for _ in range(10)] for _ in range(10)] for i in range(len(matrix)): for j in range(len(matrix[0])): matrix[i][j] = random.randint(0,100) return matrix"},{"prompt":"Describe the recursive approach for solving a problem.","completion":"Recursive approach is an approach wherein a problem is broken down into multiple subproblems until the base case is reached. Once the base case is reached, the results of each sub-problem are combined to obtain a solution to the original problem. It is used when the problem exhibits the self-similarity property."},{"prompt":"Create a JavaScript function to convert a string to pig-latin.","completion":"function toPigLatin(str) { const vowels = ['a', 'e', 'i', 'o', 'u']; let result = ''; str.split(' ').forEach(word => { if (vowels.includes(word[0])) { result += \`{word}ay \`; } else { result += \`{word.substring(1)}{word[0]}ay \`; } }); return result; }"},{"prompt":"Using React, create a component to display an alert message.","completion":"import React from 'react' const AlertMessage = () => { return ( <div className=\\"alert-message\\"> <p>This is an alert message!</p> </div> ) } export default AlertMessage;"},{"prompt":"Design a database schema for an online banking system.","completion":"CREATE TABLE users ( user_id INT NOT NULL AUTO_INCREMENT, first_name VARCHAR(50) NOT NULL, last_name VARCHAR(50) NOT NULL, username VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, PRIMARY KEY (user_id) ); CREATE TABLE accounts ( account_id INT NOT NULL AUTO_INCREMENT, user_id INT NOT NULL, balance DECIMAL(20), type VARCHAR(20), PRIMARY KEY (account_id), FOREIGN KEY (user_id) REFERENCES users(user_id) ); CREATE TABLE transactions ( transaction_id INT NOT NULL AUTO_INCREMENT, account_id INT NOT NULL, amount DOUBLE, date DATE, type VARCHAR(10), PRIMARY KEY (transaction_id), FOREIGN KEY (account_id) REFERENCES accounts(account_id) );"},{"prompt":"Using CSS, use a flex box layout to arrange a sidebar, main content, and footer in a single row.","completion":"<div class=\\"container\\"> <div class=\\"sidebar\\">Sidebar</div> <div class=\\"main-content\\">Main Content</div> <div class=\\"footer\\">Footer</div> </div> <style type=\\"text/css\\"> .container { display: flex; flex-direction: row; } .sidebar { flex: 1; } .main-content { flex: 3; } .footer { flex: 1; } </style>"},{"prompt":"Using python, create two variables that are equal to each other.","completion":"x = 5 y = 5"},{"prompt":"Write a regex expression that matches sentences with the word \\"cat\\" followed by any number of characters except the letter \\"z\\".","completion":"/cat[^z]*/"},{"prompt":"Create a list of 5 strings in Java.","completion":"List<String> list = Arrays.asList(\\"hello\\", \\"world\\", \\"news\\", \\"sun\\", \\"moon\\");"},{"prompt":"Write a command line program in C++ which takes a string as input and prints all its characters in reverse order. input_string = \\"Hello world!","completion":"#include <iostream> #include <string> using namespace std; int main() { string input; cin >> input; int size = input.length(); for (int i=size-1; i>=0; i--) { cout << input[i]; } return 0; }"},{"prompt":"Construct an SQL statement to select the column names from a table. table_name=\\"customer","completion":"SELECT column_name FROM customers;"},{"prompt":"Write a bash script that prints out the current working directory.","completion":"#!/bin/bash DIR=( pwd ) echo \\"Current working directory: DIR\\""},{"prompt":"Create a style sheet in CSS to display an element as a block with a width of 200px and a padding of 10px.","completion":".element { display: block; width: 200px; padding: 10px; }"},{"prompt":"mplement a quicksort algorithm in JavaScript that takes an array of numbers as input and returns a sorted array. input_array = [21, 4, 1, 3, 9, 20, 25]","completion":"function quicksort(input_array) { if (input_array.length <= 1) { return input_array; } const pivot = input_array[0]; const left = []; const right = []; for (let i = 1; i < input_array.length; i++) { if (input_array[i] < pivot) { left.push(input_array[i]); } else { right.push(input_array[i]); } } return [...quicksort(left), pivot, ...quicksort(right)]; } input_array = [21, 4, 1, 3, 9, 20, 25] console.log(quicksort(input_array)) // prints [1, 3, 4, 9, 20, 21, 25]"},{"prompt":"Create an object in C++ that has two integer values and two functions.","completion":"class MyObject { public: int x; int y; void Add() { x + y; } void Multiply() { x * y; } };"},{"prompt":"Construct a MySQL query to select all records from a table named Users.","completion":"SELECT * FROM Users;"},{"prompt":"Modify the given Java code to print the first character of each word in a sentence. String sentence = \\"Today is a good day\\";","completion":"String sentence = \\"Today is a good day\\"; String[] words = sentence.split(\\" \\"); for (String word : words) { System.out.print(word.charAt(0)); }"},{"prompt":"Construct a HTML table with four columns.","completion":"<table> <tr> <th>Column 1</th> <th>Column 2</th> <th>Column 3</th> <th>Column 4</th> </tr> </table>"},{"prompt":"What is the syntax of an if-else block in Java?","completion":"The syntax of an if-else block in Java is: if (condition) { // execute this code if the condition is true } else { // execute this code if the condition is false }"},{"prompt":"Construct an SQL query to delete the records whose age is greater than 30.","completion":"DELETE FROM table_name WHERE Age > 30;"},{"prompt":"Write a code snippet to loop over the characters in a string and add them to an array in Python.","completion":"def loop_over_string(s): arr = [] for c in s: arr.append(c) return arr"},{"prompt":"w can you delete an object in JavaScript?","completion":"To delete an object in JavaScript, you can use the delete keyword, e.g. delete object_name;"},{"prompt":"Change the function to eliminate passing by reference def f(arr): arr.remove(arr[0])","completion":"def f(arr): arr_copy = arr[::] arr_copy.remove(arr_copy[0]) return arr_copy"},{"prompt":"Given an array of positive numbers, write a function to return the maximum number of adjacent numbers with the same sign. arr = [5, 2, 3, -2, 4, -5, 2, 3]","completion":"def maxAdjSameSign(arr): \\"\\"\\" This function returns the maximum number of adjacent numbers with the same sign. \\"\\"\\" max_count = 0 count = 1 for i in range(0, len(arr)-1): # If current element and the next element # have the same sign if (arr[i] > 0 and arr[i+1] > 0) or (arr[i] < 0 and arr[i+1] < 0): count += 1 else: max_count = max(max_count, count) # Reset count to 1 count = 1 return max(max_count, count)"},{"prompt":"Print the longest palindrome from the given string s = \\"abbab","completion":"def longestPalindrome(s): \\"\\"\\" This function prints the longest palindrome from the given string. \\"\\"\\" longest_str = \\"\\" n = len(s) for i in range(n): # check for odd conditions middle = s[i] left = i-1 right = i+1 while (left >= 0 and right < n and s[left] == s[right]): middle = s[left] + middle + s[right] left -= 1 right += 1 longest_str = middle if len(middle) > len(longest_str) else longest_str # check for even conditions middle = '' left = i right = i+1 while (left >= 0 and right < n and s[left] == s[right]): middle = s[left] + middle + s[right] left -= 1 right += 1 longest_str = middle if len(middle) > len(longest_str) else longest_str return longest_str"},{"prompt":"Count the number of quadruples that sum up to zero arr = [-2, -1, 0, 1, 2]","completion":"def countQuadruplesSumZero(arr): \\"\\"\\" This function returns the number of quadruples that sum up to zero. \\"\\"\\" quad = 0 for i in range(len(arr)): for j in range(i+1, len(arr)): for k in range(j+1, len(arr)): for l in range(k+1, len(arr)): if arr[i] + arr[j] + arr[k] + arr[l] == 0: quad += 1 return quad"},{"prompt":"Write a Spark program to count the number of words for a given text. Text: This is a test text.","completion":"val data = Array(\\"This is a test text.\\") val wordsRDD = sc.parallelize(data).flatMap(x => x.split(\\" \\")) val wordCounts = wordsRDD.countByValue() for ((word, count) <- wordCounts) println(word + \\" : \\" + count)"},{"prompt":"Create a matrix of size 3 x 3 in Python.","completion":"# 3x3 matrix matrix3x3 = [[10, 20, 30], [15, 25, 35], [27, 29, 37]]"},{"prompt":"Write a CSS code for adding a yellow background for a block of text.","completion":"p { background-color: yellow; }"},{"prompt":"Write a PHP script to generate a random password with 8 characters.","completion":"<?php // Generate random password function generateRandomPassword() { alphabet = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890'; // Maximum characters in the password max = 8; password = array(); //Initialize the password array alphaLength = strlen(alphabet) - 1; //Length of the alphabet string for (i = 0; i < max; i++) { n = rand(0, alphaLength); password[] = alphabet[n]; } return implode(password); //Return the joined string } password = generateRandomPassword(); //Print out the random password echo password; ?>"},{"prompt":"Write a sql query that joins two tables on a condition and select distinct records. TableA: id | name | type TableB: id | age | gender","completion":"SELECT DISTINCT A.id, A.name, A.type, B.age, B.gender FROM TableA A INNER JOIN TableB B ON A.id = B.id;"},{"prompt":"Output the following data in json format Name: John Age: 24 Location: US","completion":"{ \\"name\\": \\"John\\", \\"age\\": 24, \\"location\\": \\"USA\\" }"},{"prompt":"Write an algorithm for computing the sum of all digits between 1 to N.","completion":"def sum_digits(n): sum = 0 for i in range(1, n+1): digits = list(str(i)) for digit in digits: sum += int(digit) return sum"},{"prompt":"Fill in the blanks to correctly identify the type of the following variable The variable x is an __________.","completion":"The variable x is an integer."},{"prompt":"Compute the modulo of following two numbers 56 % 7","completion":"0"},{"prompt":"Generate an HTML element","completion":"<html> <body> </body> </html>"},{"prompt":"Construct a python list comprehension List of numbers from 2 to 8","completion":"list_nums = [x for x in range(2, 9)]"},{"prompt":"Write an SQL query that returns the records of the table that have a value larger than 5 TableA: id | name | type","completion":"SELECT * FROM TableA WHERE type > 5;"},{"prompt":"Write a function to remove the value x from a list l x = 2 l = [1, 2, 3, 4, 5]","completion":"def remove_x(x, l): l.remove(x) return l"},{"prompt":"Generate a React class component that handles one event type. Event Type: onMouseLeave","completion":"class MyComponent extends React.Component { handleMouseLeave = (event) => { // Handle mouse leave event } render() { return ( // Render component here ); } };"},{"prompt":"w could you add a classname of \\"main\\" to the div element in this HTML code? <div>Hello World!</div>","completion":"<div class=\\"main\\">Hello World!</div>"},{"prompt":"Name the type of data structure used in the following algorithm. In this algorithm, we iterate through an array of elements, and perform an action on each of these elements: for element in array: performAction(element)","completion":"This algorithm uses an array as its data structure."},{"prompt":"Write a query to find the names of all employees who have the same salary as the employee with the highest salary. Table Name: Employees Columns: Name, Salary","completion":"SELECT Name FROM Employees WHERE Salary = (SELECT MAX(Salary) FROM Employees);"},{"prompt":"Create a SQLite database table using the following information Table Name: Students Columns: Name (string), Age (integer), GPA (float)","completion":"CREATE TABLE Students ( Name text, Age integer, GPA float );"},{"prompt":"Create a Bash script that runs a Python code Python code: def hello_world(): print(\\"Hello World!\\")","completion":"#!/bin/bash python << END def hello_world(): print(\\"Hello World!\\") hello_world() END"},{"prompt":"Write an HTML page including 1 form element Form Element: text area control","completion":"<html> <head> <title>Form Element</title> </head> <body> <form action=\\"\\"> <textarea placeholder=\\"Enter your text here...\\" rows=\\"4\\" cols=\\"50\\"></textarea> <input type=\\"submit\\" value=\\"Submit\\"> </form> </body> </html>"},{"prompt":"Suggest an algorithm to search for a matching string in a large text Text: “This is a long piece of text with a searching string” Searching string: “searching string”","completion":"The most efficient algorithm for this task would be the KMP (Knuth-Morris-Pratt) algorithm. This is an efficient string matching algorithm that is used to match a pattern string in a given text string. The KMP algorithm is more efficient than traditional string matching algorithms as it pre-processes the pattern string to generate a lps (longest proper prefix which is also a suffix) array, which is then used to compare characters in the text string with characters in the pattern string."},{"prompt":"Write a short python script to determine whether a given number is divisible by 5.","completion":"def is_divisible_by_5(number): \\"\\"\\"Check whether a given number is divisible by 5 or not.\\"\\"\\" if number % 5 == 0: return True return False"},{"prompt":"Write a python command which prints the text “Hello World” if a given number is even. number = 10","completion":"if number % 2 == 0: print(\\"Hello World\\")"},{"prompt":"Answer the following question: What Python library is used for web scraping?","completion":"The Python library used for web scraping is called 'BeautifulSoup'."},{"prompt":"Create a for loop which prints the first 5 numbers in a given list. list_numbers = [1, 2, 3, 4, 5, 6, 7]","completion":"for i in range(0, 5): print(list_numbers[i])"},{"prompt":"Which sorting algorithm is the best for linked lists?","completion":"The best sorting algorithm for linked lists is Merge Sort. Merge Sort is more efficient than other sorting algorithms such as Quicksort or Insertion Sort because it does not require extra space. Furthermore, it is an in-place sorting algorithm, which means that resources are used to sort the linked list without the need to use extra space."},{"prompt":"Format the following code according to PEP 8 style guidelines. def function1( a, b, c): d = a+b*c return d","completion":"def function1(a, b, c): d = a + b * c return d"},{"prompt":"Write a python command which prompts the user to input text","completion":"input_text = input(\\"Enter some text: \\")"},{"prompt":"What data type is returned by the Python function pow()?","completion":"The Python function pow() returns a float data type."},{"prompt":"Create a try/except block which checks that the input is a valid integer input_text = input(\\"Enter a number: \\")","completion":"try: input_text = int(input(\\"Enter a number: \\")) except ValueError: print(\\"Invalid input\\")"},{"prompt":"What is the GIL in Python and what is its purpose?","completion":"The Global Interpreter Lock (GIL) is a mechanism used by Python to manage and control access to shared data and resources. It prevents multiple threads from accessing the same data or using shared resources at the same time. The purpose of the GIL is to prevent the Python interpreter from crashing due to race conditions."},{"prompt":"Write a code to print out an array of the first ten positive even numbers.","completion":"def printEvenNumbers(): my_list = [] for item in range(2,21,2): my_list.append(item) print(my_list) printEvenNumbers() # prints [2, 4, 6, 8, 10, 12, 14, 16, 18, 20]"},{"prompt":"Design a class to normalize the salary of an employee with a minimum salary of 20,000.","completion":"class SalaryNormalizer: def __init__(self, salary): self.minimum = 20000 self.input_salary = salary def normalize(self): if self.input_salary < self.minimum: self.normalized_salary = self.minimum else: self.normalized_salary = self.input_salary return self.normalized_salary"},{"prompt":"Compute the square root of a number without using the square root function. number = 4","completion":"def sqrt(number): x = number y = 1 epsilon = 0.000001 while x-y > epsilon: x = (x + y)/2 y = number/x return x sqrt(number) # returns 2.0"},{"prompt":"Create a function to check if a given triangle is an equilateral triangle. a = 5, b = 5, c = 5","completion":"def isEquilateral(a, b, c): if (a == b == c): return True else: return False isEquilateral(a, b, c) # returns True"},{"prompt":"the following code valid Python? if bool == true: print(\\"True\\")","completion":"False"},{"prompt":"Which of the following statements is/are valid in Javascript? let x = \\"Hello World!\\"; let y = 'Hello World!'","completion":"Both statements are valid in Javascript. The first statement uses double quotes, while the second statement uses single quotes."},{"prompt":"What data type should the following expression evaluate to? 3 + 4 * 5","completion":"The expression 3 + 4 * 5 will evaluate to 23, which is a number data type."},{"prompt":"Write a code to process a given array and add 10 to each value stored in the array. arr = [1, 2, 3, 4, 5]","completion":"#Process a given array and add 10 to each value arr = [1, 2, 3, 4, 5] #Loop through the array for i in range(len(arr)): #Add 10 to the current element arr[i] = arr[i] + 10 #Print the modified array print(arr) \\"\\"\\" Output: [11, 12, 13, 14, 15] \\"\\"\\""},{"prompt":"Format a given date in the following format: \\"Month Day, Year date = '2020-10-25'","completion":"#Format a given date date = '2020-10-25' #Split the date month, day, year = date.split('-') #Format the date formatted_date = month + ' ' + day + ', ' + year #Print the formatted date print(formatted_date) \\"\\"\\" Output: October 25, 2020 \\"\\"\\""},{"prompt":"w can you check if a given key exists in a dictionary?","completion":"You can check if a given key exists in a dictionary using the \`in\` keyword. For example: my_dict = { 'name': 'John', 'age': 20 } if 'name' in my_dict: print('Key found')"},{"prompt":"Construct a list of integers from m to n. m = 3 n = 8","completion":"lst = [] for i in range(m, n+1): lst.append(i)"},{"prompt":"Find the greatest common divisor (GCD) of 24 and 32.","completion":"The greatest common divisor (GCD) of 24 and 32 is 8."},{"prompt":"Compare two objects and return 0 if they are equal, -1 if the first is less than the second, and 1 if the first is greater than the second. object1 = 7 object2 = 8","completion":"def compare(object1, object2): if object1 == object2: return 0 elif object1 < object2: return -1 else: return 1"},{"prompt":"Write a regular expression to match only words containing a single 'a' character.","completion":"pattern = r\\"b[^a]*a[^a]*b\\""},{"prompt":"Capitalize the letters A - Z in the given string. text = \\"We are learning natural language processing","completion":"text = \\"We Are Learning Natural Language Processing\\""},{"prompt":"Generate a C++ program to sum up the elements of an array","completion":"#include<iostream> using namespace std; int sumArray(int arr[], int size) { int sum = 0; for (int i=0; i<size; i++) sum += arr[i]; return sum; } int main() { int arr[] = {1, 2, 3, 4, 5}; int size = sizeof(arr) / sizeof(arr[0]); cout << \\"Sum of array elements: \\" << sumArray(arr, size); return 0; }"},{"prompt":"dentify the type of a given function f(x)=2^x","completion":"Exponential function."},{"prompt":"Write a Regex expression to extract all numbers larger than 0 in a string","completion":"b[1-9][0-9]*"},{"prompt":"Generate a HTML code to display a basic webpage with Heading: Welcome Text: Hello World!","completion":"<html> <head> <title>Welcome</title> </head> <body> <h1>Welcome</h1> <p>Hello World!</p> </body> </html>"},{"prompt":"dentify the correct syntax to declare a variable in Java","completion":"dataType variableName;"},{"prompt":"Construct a CSS style sheet Change the default color of the HTML text to be purple","completion":"* { color: #7a00e6; }"},{"prompt":"Construct a for loop to print the integer from 0 to 50.","completion":"for i in range(51): print(i)"},{"prompt":"Which boolean value will be returned if the expression 5 is not equal to 10 is evaluated?","completion":"True"},{"prompt":"w many parameters does the following function require? def multiply(a, b): return a * b","completion":"Two, 2."},{"prompt":"Replace all the x in the given list with y. list = [1, 2, 'x', 'x', 1]","completion":"list = [1, 2, 'y', 'y', 1]"},{"prompt":"Generate a list of dictionary keys from the given dictionary. my_dict = {'Name':'John','Age':24,'City':'New York'}","completion":"list_keys = list(my_dict.keys()) print(list_keys) Output: ['Name', 'Age', 'City']"},{"prompt":"Make a list of numbers from 0 to 20 that are divisible by 3.","completion":"numbers = [x for x in range(21) if x % 3 == 0]"},{"prompt":"Generate a random hex color in Python.","completion":"import random def random_hex_colour_code(): return '#' + ''.join([random.choice('0123456789ABCDEF') for x in range(6)]) print (\\"Random Hex Color Code:\\", random_hex_colour_code())"},{"prompt":"Create an HTML page with a layout consisting of 3 containers: one on the left and two on the right.","completion":"<html> <head> </head> <style> #container{ width: 100%; display: flex; } #left-container{ width: 20%; } #right-containers{ width: 80%; display: flex; } #right-container1{ width: 50%; } #right-container2{ width: 50%; } </style> <body> <div id=\\"container\\"> <div id=\\"left-container\\"> <!-- Left Container Content --> </div> <div id=\\"right-containers\\"> <div id=\\"right-container1\\"> <!-- Right Container 1 Content --> </div> <div id=\\"right-container2\\"> <!-- Right Container 2 Content --> </div> </div> </div> </body> </html>"},{"prompt":"Create an if statement in Ruby that checks if a given number is a prime number.","completion":"def is_prime?(number) if number < 2 return false else (2...number).each do |i| if number % i == 0 return false end end true end end"},{"prompt":"Output a triangle shape using only asterisks (e.g. *) in Java.","completion":"public class Triangle { public static void main(String[] args) { int limit=15; System.out.println(\\"Right Angle Triangle\\"); for (int i = 0; i < limit; i++) { for (int j = 0; j <= i; j++) { System.out.print(\\"*\\"); } System.out.println(); } } }"},{"prompt":"Create a loop in PHP to iterate over an associative array and print each key and value. arr = [\\"a\\" => 1, \\"b\\" => 2, \\"c\\" => 3];","completion":"foreach (arr as key => value) { echo \\"Key=\\" . key . \\", Value=\\" . value; echo \\"n\\"; }"},{"prompt":"Write a function in Python that takes a list of integers as an argument and calculates the mean average.","completion":"def calculate_mean(numbers): total_sum = 0; for num in numbers: total_sum += num mean_average = total_sum / len(numbers) return mean_average"},{"prompt":"Output all items from an array in descending order in Java.","completion":"public static void printDescendingOrder(int[] arr) { // sort the array in descending order Arrays.sort(arr, Collections.reverseOrder()); for (int i=0; i<arr.length; i++) System.out.print(arr[i] + \\" \\"); }"},{"prompt":"Create a while loop in JavaScript to print the Fibonacci series.","completion":"let result = []; let prev = 0; let next = 1; while (next < 10) { temp = prev; prev = next; next = temp + next; result.push(next); } console.log(result);"},{"prompt":"Write a function in Python to split a given string into the words in the string.","completion":"def split_string(string): return string.split()"},{"prompt":"Edit the following C# code to throw an exception if the divisor is equal to 0. int result = dividend / divisor;","completion":"int result; try { result = dividend / divisor; if (divisor == 0) throw new ArithmeticException(\\"Divisor cannot be zero\\"); } catch (DivideByZeroException e) { Console.WriteLine(\\"Exception caught: {0}\\", e); }"},{"prompt":"Create a JavaScript class named \\"Student\\" that has the following fields.","completion":"class Student { constructor(name, age, email) { this.name = name; this.age = age; this.email = email; } }"},{"prompt":"Reverse this array in-place using Python. arr = [4, 2, 8, 6]","completion":"arr.reverse() # arr is now [6, 8, 2, 4]"},{"prompt":"Explain the difference between String comparison operators == and === in JavaScript.","completion":"The \\"==\\" operator is the equality comparison operator, which compares two values and returns true if they are equal. The \\"===\\" operator is the strict equality comparison operator, which compares two values and returns true only if both the values and their type are equal."},{"prompt":"Using the following code snippet, generate a list containing numbers from 1 to n. n = 5","completion":"nums = list(range(1, n+1)) # nums is now [1, 2, 3, 4, 5]"},{"prompt":"Convert this list of strings to a single string without using the \\"join\\" method. str_list = [\\"I\\", \\"am\\", \\"a\\", \\"list\\", \\"of\\", \\"strings\\"]","completion":"result = '' for string in str_list: result += string # result is now \\"Iamalistofstrings\\""},{"prompt":"Determine the code complexity for the following codse sample. def get_sum(list): sum = 0 for num in list: sum += num return sum","completion":"The code complexity of the given function is O(n), where n is the length of the list."},{"prompt":"e regular expression to determine the number of words in a string. This is a string of tex","completion":"import re def get_num_words(inp_str): words = re.findall(r'w+', inp_str) return len(words) if __name__ == '__main__': inp_str = 'This is a string of text' print(get_num_words(inp_str)) # Output: 4 words"},{"prompt":"Convert the following data into Excel Format. [ {'name': 'John', 'age': 20}, {'name': 'Paul', 'age': 22}, {'name': 'Ringo', 'age': 19} ]","completion":"\\"\\"\\" Convert data into Excel format \\"\\"\\" import csv def to_excel(data): with open('data.csv', 'w', newline='') as csvfile: fieldnames = ['name', 'age'] writer = csv.DictWriter(csvfile, fieldnames=fieldnames) writer.writeheader() for row in data: writer.writerow(row) if __name__ == '__main__': data = [ {'name': 'John', 'age': 20}, {'name': 'Paul', 'age': 22}, {'name': 'Ringo', 'age': 19} ] to_excel(data)"},{"prompt":"Design a data structure to model the evolution of a population.","completion":"\\"\\"\\" Model the evolution of a population \\"\\"\\" class Population: def __init__(self): self.population = [] self.generation = 0 def add_member(self, member): self.population.append(member) def next_generation(self): self.generation += 1 self.population = self.population.create_next_generation() class Member: def __init__(self, data): self.data = data def create_next_generation(self): next_gen_data = [] # perform population evolution algorithm # ... return [Member(g) for g in next_gen_data]"},{"prompt":"Given a list of numbers, implement a quick sort algorithm. [7, 4, 5, 9, 1]","completion":"def quick_sort(arr): if len(arr) < 2: return arr pivot = arr[0] less = [i for i in arr[1:] if i <= pivot] greater = [i for i in arr[1:] if i > pivot] return quick_sort(less) + [pivot] + quick_sort(greater) if __name__ == '__main__': arr = [7, 4, 5, 9, 1] print(quick_sort(arr)) # Output:[1, 4, 5, 7, 9]"},{"prompt":"Set up a basic HTML page with a title that says \\"My Web Page\\".","completion":"<!DOCTYPE html> <html> <head> <title>My Web Page</title> </head> <body> </body> </html>"},{"prompt":"Write a SQL query to select rows from the table \\"Customers\\" where the \\"City\\" column equals \\"London\\".","completion":"SELECT * FROM Customers WHERE City = 'London';"},{"prompt":"Write a Java code snippet to set the 3rd element in an array of integers to the value 5. int[] arr = {1, 2, 3, 4, 5};","completion":"arr[2] = 5;"},{"prompt":"Calculate the sum of 3, 5, 7 and 17 using JavaScript.","completion":"let sum = 3 + 5 + 7 + 17;"},{"prompt":"Write a SQL query that sums the values in the \\"Amount\\" column of a table called \\"Transactions\\".","completion":"SELECT SUM(Amount) FROM Transactions;"},{"prompt":"Create a C++ variable with the name \\"name\\" that can store a string value.","completion":"string name;"},{"prompt":"Generate a unique 8 digit alphanumeric ID using Java.","completion":"String alphaNumericString = \\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\\" + \\"0123456789\\" + \\"abcdefghijklmnopqrstuvxyz\\"; StringBuilder sb = new StringBuilder(8); for (int i = 0; i < 8; i++) { int index = (int)(alphaNumericString.length() * Math.random()); sb.append(alphaNumericString.charAt(index)); } String generatedID = sb.toString();"},{"prompt":"Generate an HTML form in PHP to gather user information such as name and address.","completion":"<html> <head> <title>User Form</title> </head> <body> <form action=\\"process_form.php\\" method=\\"post\\"> Name: <input type=\\"text\\" name=\\"name\\"><br> Address: <input type=\\"text\\" name=\\"address\\"><br> <input type=\\"submit\\" value=\\"Submit\\"> </form> </body> </html>"},{"prompt":"Write a Python program that reads a list of words and prints the most frequently used one. ['apple', 'banana', 'orange', 'apple']","completion":"\\"\\"\\" Program to read a list of words and print the most frequently used one Input: List of words Output: Most frequently used word \\"\\"\\" def most_freq_word(words): # Create an empty dictionary freq = {} # Iterate over the list of words for word in words: # Check if word is already present in the freq dictionary if (word in freq): #Increment the count of word freq[word] += 1 else: # Add it to the dictionary with a count of one freq[word] = 1 # Get the count of most frequent word max_count = max(freq.values()) # Loop over words and return the most frequent one for key, value in freq.items(): if value == max_count: return key if __name__ == '__main__': # Input words = ['apple', 'banana', 'orange', 'apple'] # Result print(most_freq_word(words))"},{"prompt":"Generate a class in Java for a contact record, including name, age, phone number, email, and address information.","completion":"public class Contact { String name; int age; String phoneNumber; String email; String address; public Contact(String name, int age, String phoneNumber, String email, String address){ this.name = name; this.age = age; this.phoneNumber = phoneNumber; this.email = email; this.address = address; } public String getName(){ return name; } public int getAge(){ return age; } public String getPhoneNumber(){ return phoneNumber; } public String getEmail(){ return email; } public String getAddress(){ return address; } public void setName(String name){ this.name = name; } public void setAge(int age){ this.age = age; } public void setPhoneNumber(String phoneNumber){ this.phoneNumber = phoneNumber; } public void setEmail(String email){ this.email = email; } public void setAddress(String address){ this.address = address; } }"},{"prompt":"Edit the following code to return a length 5 array of zeros. int[] array = new int[10];","completion":"int[] array = new int[5]; for(int i=0; i<array.length; i++){ array[i] = 0; }"},{"prompt":"Output a string which is the reverse of the input string. \\"Hello World","completion":"\\"\\"\\" Function to reverse a given string Input: String Output: Reversed string \\"\\"\\" def reverse_string(string): # Create an empty string to store the reversed string reversed_string = \\"\\" # Iterate over the string from the last character for i in range(len(string)-1, -1, -1): reversed_string += string[i] return reversed_string if __name__ == '__main__': # Input string = \\"Hello World\\" # Result print(reverse_string(string))"},{"prompt":"Output a code to edit the following HTML to add a new heading 'Introduction' before the existing heading 'About'. <h1>About</h1>","completion":"<h1>Introduction</h1> <h1>About</h1>"},{"prompt":"Write a SQL query to select all the customers who have an account balance of more than 1000.","completion":"SELECT * FROM customers WHERE account_balance > 1000;"},{"prompt":"Write a function to output the maximum value possible from a given array. [-1, 2, 4, 6, -3, 5]","completion":"def max_val(arr): maximum = arr[0] for i in arr: if i > maximum: maximum = i return maximum max_val([-1, 2, 4, 6, -3, 5]) # Output: 6"},{"prompt":"Construct a for loop that calculates the sum of the numbers from 0 to n.","completion":"n = 5 total = 0 for i in range(n+1): total += i print(total) # Output: 15"},{"prompt":"Generate an SQL query that will combine two tables. table A with 2 columns (id and name) and 2 rows (1, Tom) (2, Abigail) table B with 2 columns (id and address) and 2 rows (1, USA) (2, Canada)","completion":"SELECT A.id, A.name, B.address FROM A INNER JOIN B ON A.id = B.id"},{"prompt":"Create a text classifier using supervised learning.","completion":"import scikit-learn as sklearn # Load the data X_train, X_test, y_train, y_test = sklearn.model_selection.train_test_split(X, y, test_size = 0.2, random_state = 0) # Train the classifier classifier = sklearn.naive_bayes.MultinomialNB() classifier.fit(X_train, y_train) # Test the classifier y_predicted = classifier.predict(X_test) # Check the accuracy accuracy = sklearn.metrics.accuracy_score(y_test, y_predicted) print(\\"Accuracy score: {:.2f}\\".format(accuracy)) # Output: Accuracy score: 0.89"},{"prompt":"Create a machine learning model that predicts whether an email is spam or not.","completion":"import scikit-learn as sklearn # Load the data X = dataset[['email_body', 'send_from', 'subject', 'num_links']] y = dataset['is_spam'] X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.2, random_state = 0, stratify=y) # Train the model classifier = sklearn.linear_model.LogisticRegression() classifier.fit(X_train, y_train) # Test the model y_predicted = classifier.predict(X_test) # Check the accuracy accuracy = sklearn.metrics.accuracy_score(y_test, y_predicted) print(\\"Accuracy score: {:.2f}\\".format(accuracy)) # Output: Accuracy score: 0.95"},{"prompt":"Using the Pandas library, parse the given json object. { \\"name\\": \\"James\\", \\"age\\": \\"60\\", \\"address\\":{ \\"street\\": \\"123 Fake Street\\", \\"city\\": \\"Springfield\\", \\"state\\": \\"MA\\" } }","completion":"import pandas as pd data = { 'name': [\\"James\\"], 'age': [60], 'street': [\\"123 Fake Street\\"], 'city': [\\"Springfield\\"], 'state': [\\"MA\\"], } df = pd.DataFrame(data) print(df) # Output: name age street city state 0 James 60 123 Fake Street Springfield MA"},{"prompt":"Generate a numpy array of shape (3,3) with random values between 0 and 10.","completion":"import numpy as np array = np.random.randint(0, 10, size=(3, 3)) print(array) # Output: [[5 4 9] [6 8 5] [4 7 6]]"},{"prompt":"Find the sum of factors of a given number.","completion":"def sum_factors(n): total = 0 for i in range(1, n + 1): if n % i == 0: total += i return total sum_factors(12) # Output: 28"},{"prompt":"Create a function that returns true if a given set is a subset of another set. set1 = {1,2,3} set2 = {1,2,3,4,5,6}","completion":"def is_subset(s1, s2): for e in s1: if e not in s2: return False return True is_subset({1,2,3}, {1,2,3,4,5,6}) # Output: True"},{"prompt":"Design a function that takes in a matrix and finds its number of rows and columns. matrix = [[1, 2, 3, 4], [5, 6, 7, 8], [9, 10, 11, 12]]","completion":"def matrix_dimensions(matrix): num_rows = len(matrix) num_columns = len(matrix[0]) return num_rows, num_columns matrix = [[1, 2, 3, 4], [5, 6, 7, 8], [9, 10, 11, 12]] num_rows, num_columns = matrix_dimensions(matrix) print(num_rows) # Output will be 3 print(num_columns) # Output will be 4"},{"prompt":"Create a class definition in Python for a vehicle with attributes like make, model, year.","completion":"class Vehicle: def __init__(self, make, model, year): self.make = make self.model = model self.year = year # Other methods..."},{"prompt":"Explain a Python program to check whether a number is Armstrong or not.","completion":"def is_armstrong(num): digits = [int(d) for d in str(num)] num_digits = len(digits) armstrong_sum = 0 for digit in digits: armstrong_sum += digit ** num_digits return num == armstrong_sum #Test code num = 153 print(is_armstrong(num)) # Output will be True"},{"prompt":"Design a program to select the names of the students who have secured more than 80% marks in a given exam. students = [(\\"John\\", 75), (\\"Mary\\", 90), (\\"Simon\\", 80), (\\"Rose\\", 80)]","completion":"def get_high_scorers(students): # Get the names of students with marks greater than 80 high_scorers = [] for student in students: if student[1] > 80: high_scorers.append(student[0]) return high_scorers students = [(\\"John\\", 75), (\\"Mary\\", 90), (\\"Simon\\", 80), (\\"Rose\\", 80)] print(get_high_scorers(students)) # Output will be [\\"Mary\\"]"},{"prompt":"Design a class in C++ to represent a 2D point and define the addition operation for two points. class Point { private: int x, y; public: Point(int x, int y) : x{x}, y{y} {};","completion":"class Point { private: int x, y; public: Point(int x, int y) : x{x}, y{y} {}; Point operator + (const Point& other) { return Point(this->x + other.x, this->y + other.y); } };"},{"prompt":"Write Python code to fill missing values in a Pandas dataframe with a given value. import pandas as pd df = pd.DataFrame([ [8, 'B', 'G'], [28, 'B', np.nan], [22, np.nan, 'G'], [2, 'A', np.nan] ])","completion":"import pandas as pd df = pd.DataFrame([ [8, 'B', 'G'], [28, 'B', np.nan], [22, np.nan, 'G'], [2, 'A', np.nan] ]) df.fillna(value='NA', inplace=True)"},{"prompt":"Read this HTML code and extract the content between the <h1> and </h1> tags. <h1>This is a heading</h1>","completion":"This is a heading"},{"prompt":"Write a MySQL statement to sort the table results by the column \\"id\\" in ascending order. SELECT * FROM table_name","completion":"SELECT * FROM table_name ORDER BY id ASC"},{"prompt":"mplement a function in JavaScript that returns true if an object is empty, false otherwise.","completion":"function isEmptyObject(obj) { return Object.keys(obj).length === 0; }"},{"prompt":"Create a HTML form to take user input from a web page.","completion":"<form action=\\"\\"> <label>Name:</label> <input type=\\"text\\" name=\\"name\\" placeholder=\\"Your name\\" required><br><br> <label>Email:</label> <input type=\\"email\\" name=\\"email\\" placeholder=\\"Your email address\\" required><br><br> <input type=\\"submit\\" value=\\"Submit\\"> </form>"},{"prompt":"Find the syntax error in the given C# code. int x = 5; if (x > 4) console.WriteLine(\\"Hello\\");","completion":"The syntax error is that 'console.WriteLine(\\"Hello\\");' should be within a pair of curly braces. i.e. The correct syntax should be \\"if (x > 4) { Console.WriteLine(\\"Hello\\") };\\""},{"prompt":"Define the term \\"polymorphism\\" in programming.","completion":"Polymorphism is a feature in object-oriented programming that allows objects to behave differently depending on the context. It is used to reduce the amount of code needed for different operations and to increase the code's maintainability. Polymorphism allows objects to be defined from a common class in which each instance can be used in a different way based on its particular context. This enables a code to work in multiple forms depending on the data input. It simplifies the coding process by allowing for a single interface to access multiple objects at the same time."},{"prompt":"Create an HTML form that takes one input field - an email address.","completion":"<form action=\\"action.php\\" method=\\"post\\"> <label for=\\"email\\">Email:</label><br> <input type=\\"text\\" name=\\"email\\" placeholder=\\"Enter your email\\"><br><br> <input type=\\"submit\\" value=\\"Submit\\"> </form>"},{"prompt":"Create a select query to fetch all the customers with a name starting with 'A'.","completion":"SELECT * FROM customers WHERE name LIKE 'A%';"},{"prompt":"Write a shell command to print the system IP address.","completion":"ifconfig | grep \\"inet \\" | awk '{ print 2 }'"},{"prompt":"w to extract the domain name from an email address using JavaScript?","completion":"function getDomainFromEmail(email_address) { return email_address.split('@')[1]; } getDomainFromEmail('example@domain.com'); // 'domain.com'"},{"prompt":"Create a function 'greet' that takes a string parameter 'name' and returns the string 'Hello name!'","completion":"function greet(name) { return 'Hello ' + name + '!'; }"},{"prompt":"Create an array of 5 increasing numbers starting from 10.","completion":"var arr = [10, 11, 12, 13, 14];"},{"prompt":"Write a SQL query to return the 5 oldest employees from a table named 'employees'.","completion":"SELECT * FROM employees ORDER BY age DESC LIMIT 5;"},{"prompt":"Write a method 'addString' in Java that takes two strings as parameters and returns a single string that concatenates the two strings.","completion":"public static String addString(String str1, String str2) { return str1 + str2; }"},{"prompt":"Write a function in Python that takes four strings as parameters and returns a single string with all strings concatenated together.","completion":"def concatenate(str1, str2, str3, str4): return str1 + str2 + str3 + str4"},{"prompt":"Write an if-else statement in JavaScript that prints 'positive' if a number is greater than 0 and 'negative' if a number is less than 0.","completion":"if (number > 0) { console.log('positive'); } else if (number < 0) { console.log('negative'); }"},{"prompt":"Create a function 'subStr' that takes a string and a start and end index and returns a substring between the start and end index.","completion":"def subStr(str, start, end): return str.substring(start, end)"},{"prompt":"Write a SQL query to select the users from table 'users' who are born after 1985.","completion":"SELECT * FROM users WHERE birthdate > 1985;"},{"prompt":"Create a function in Java that takes a string as a parameter and returns the string in lowercase letters.","completion":"public static String LowerCase(String str) { return str.toLowerCase(); }"},{"prompt":"Provide instructions to create a linked list in Java.","completion":"In Java, to create a linked list, you need to declare a node class with instance variables for data and reference to the next node. Then create a LinkedList class with a head node and other methods for insertion, deletion and searching in the linked list. To add an element to the linked list, create a node with the given data and traverse the linked list until you reach the end and set the reference of the last node to the new node."},{"prompt":"Categorize a given tweet. \\"This new software program is supposed to make life so much easier!","completion":"positive"},{"prompt":"dentify the type of bug for the following code snippet. def print_message(messsage): print(\\"My message is: \\" + message)","completion":"Syntax error. The function name is missing a single letter \\"s\\", it should be \\"print_message\\"."},{"prompt":"Add a function to the following Javascript code so that it calculates the average of the two numbers. const add = (a, b) => { return a + b; };","completion":"const add = (a, b) => { return a + b; }; const average = (a, b) => { return (a + b) / 2; };"},{"prompt":"Suggest an additional function needed to complete the following programme. class Node: def __init__(self, data): self.data = data self.next = None","completion":"class Node: def __init__(self, data): self.data = data self.next = None def getData(self): return self.data"},{"prompt":"Select what section of the code must be changed for the following C++ code snippet to compile correctly. int main() { std:cout << \\"Hello World!\\"; return 0; }","completion":"The section of the code that must be changed is: std:cout << \\"Hello World!\\"; The correct expression should be: std::cout << \\"Hello World!\\";"},{"prompt":"Suggest a change to render the following CSS code more efficient. .image-box { display: block; width: 100px; height: 100px; background-image: url(\\"logo.png\\"); }","completion":".image-box { display: inline-block; width: 100px; height: 100px; background-image: url(\\"logo.png\\"); background-size: contain; }"},{"prompt":"Describe in one sentence what a variable declaration statement is.","completion":"A variable declaration statement is a line of code that assigns a value to a variable name."},{"prompt":"Suggest a solution to the following problem: Write a program to sort a list of strings in alphabetical order. list_of_strings = ['banana', 'apple', 'orange', 'kiwi']","completion":"list_of_strings.sort() # Sorts the list in alphabetical order"},{"prompt":"Create a function to find cube of any number","completion":"def cube(n): return n**3"},{"prompt":"Extract the unique elements from a given list of numbers list_of_nums = [5, 2, 5, 3, 7, 8, 2]","completion":"unique_nums = set(list_of_nums) # {2, 3, 5, 7, 8}"},{"prompt":"Explain what is the purpose of the try-except block","completion":"The purpose of the try-except block is to handle exceptions that may be raised while a program is executing, so as to avoid crashing of the program."},{"prompt":"Define a function to compare two strings","completion":"def compareStrings(string1, string2): if(string1 == string2): return 0 elif(string1 > string2): return 1 else: return -1"},{"prompt":"Construct a SQL query to get the names, address and age of employees with age more than 25.","completion":"SELECT name, address, age FROM employees WHERE age > 25;"},{"prompt":"Write a pseudocode to compare two strings and determine which is longer.","completion":"Function CompareStrings(str1, str2) if Length(str1) > Length(str2) return str1 else return str2 End Function"},{"prompt":"mplement a function to generate the Fibonacci series upto 'n' terms. n = 10","completion":"def Fibonacci(n): a = 0 b = 1 if n < 0: print(\\"Incorrect input\\") elif n == 0: return a elif n == 1: return b else: for i in range(2,n): c = a + b a = b b = c return b"},{"prompt":"Parse the given markup language to extract out the attributes and their corresponding values. <html> <head> <title>My Amazing Website</title> </head> </html>","completion":"title: My Amazing Website"},{"prompt":"Explain the purpose of a deadlock in a multithreaded program.","completion":"A deadlock occurs in a multithreaded program when two or more threads are blocked from accessing a resource, because each thread is waiting for a resource that is being held by one of the other threads. This results in all threads being stuck, unable to proceed."},{"prompt":"Modify the given code to accept input in Celsius and convert it to Fahrenheit. def c2f(): return ((9/5)*temp + 32)","completion":"def c2f(temp): return ((9/5)*temp + 32)"},{"prompt":"Write code to times the number entered by the user by 3.","completion":"num = int(input('Enter a number:')) print(num*3)"},{"prompt":"Find the square root of the given number using the Newton-Raphson method. Number: 100","completion":"x_n+1 = x_n - f(x_n) / f'(x_n) x_0 = 100 x_1 = 50 - (50*50 - 100) / (2*50) = 50 - (2500 - 100) / 100 = 50 - 24 / 100 = 26 x_2 = 26 - (26*26 - 100) / (2*26) = 26 - (676 - 100) / 52 = 26 - 576 / 52 = 10 x_3 = 10 - (10*10 - 100) / (2*10) = 10 - (100 - 100) / 20 = 10 - 0 / 20 = 10 The square root of 100 is 10."},{"prompt":"dentify the byte sequence that produces the following output. Hello World!","completion":"48 65 6c 6c 6f 20 57 6f 72 6c 64 21"},{"prompt":"Create a Regular Expression to match URLs","completion":"^(https?://)?([da-z.-]+).([a-z.]{2,6})([/w .-]*)*/?"},{"prompt":"Modify the given code snippet to make all elements of the list uppercase. list = [\\"hello\\", \\"world\\"]","completion":"list = [x.upper() for x in list]"},{"prompt":"Classify the following sentence according to the type of speech it is. John said: \\"Let's go to the zoo.","completion":"Direct speech."},{"prompt":"Write a Regular Expression to identify all words that end with \\"ing\\".","completion":"w+ing"},{"prompt":"Erase the duplicated elements of a list. list1 = [13, 15, 16, 18, 15, 20, 17]","completion":"list1 = list(set(list1))"},{"prompt":"Convert the following code snippet into a function. num1 = 4 num2 = 6 result = num1 + num2","completion":"def add(num1, num2): result = num1 + num2 return result"},{"prompt":"What data structure do you choose to represent a sparse matrix in programming?","completion":"A sparse matrix can be represented using a hashmap (dictionary) data structure. The hashmap will contain the non-zero elements of the matrix, where each entry will include the row index, column index and the value at that location. This helps in storing and retrieving massive amounts of data in an efficient manner."},{"prompt":"Compile a java program that prints out \\"Hello World!","completion":"javac HelloWorld.java"},{"prompt":"Create a function to test if an integer is prime or not.","completion":"def is_prime(x): if x < 2: return False for n in range(2, x - 1): if x % n == 0: return False return True"},{"prompt":"mplement Merge Sort algorithm in C++","completion":"#include <iostream> using namespace std; void merge(int arr[], int l, int m, int r) { int i, j, k; int n1 = m - l + 1; int n2 = r - m; int L[n1], R[n2]; for (i = 0; i < n1; i++) L[i] = arr[l + i]; for (j = 0; j < n2; j++) R[j] = arr[m + 1+ j]; i = 0; j = 0; k = l; while (i < n1 && j < n2) { if (L[i] <= R[j]) { arr[k] = L[i]; i++; } else { arr[k] = R[j]; j++; } k++; } while (i < n1) { arr[k] = L[i]; i++; k++; } while (j < n2) { arr[k] = R[j]; j++; k++; } } void mergeSort(int arr[], int l, int r) { if (l < r) { int m = l+(r-l)/2; mergeSort(arr, l, m); mergeSort(arr, m+1, r); merge(arr, l, m, r); } }"},{"prompt":"Generate a classification network in a deep learning framework.","completion":"import tensorflow as tf from tensorflow.keras.models import Sequential from tensorflow.keras.layers import Dense, Activation model = Sequential() model.add(Dense(64, input_dim = 8)) model.add(Activation('relu')) model.add(Dense(16)) model.add(Activation('sigmoid')) model.add(Dense(2)) model.add(Activation('softmax')) model.compile(loss = 'categorical_crossentropy', optimizer = 'adam', metrics = ['accuracy'])"},{"prompt":"Create a set of transformation rules to convert a valid XML document to a valid HTML document.","completion":"1. Replace <?xmlns> element with <html> 2. Replace <xml> tag with <head> 3. Add a <meta> tag inside the <head> tag containing the charset UTF-8 and the content type text/html 4. Replace all <body> elements with <div> elements 5. Replace all <title> elements with <h1> elements 6. Replace all <ul> elements with <ol> elements 7. Replace all <li> elements with <p> elements 8. Replace all <p> elements with <span> elements 9. Replace <link> elements with <style> elements 10. Replace <link/> elements with <script> elements 11. Replace <image> with <img> 12. Replace <video> with <video> with the source attribute specified 13. Replace <audio> with <audio> with the src attribute specified 14. Replace <text> and <textarea> with <p> and <textarea> respectively 15. Replace all <form> with <form> 16. Replace all <input> elements with <input> and optionally add features like placeholder, checked, etc 17. Replace all <nav> elements with <nav> 18. Replace <svg> with <svg>"},{"prompt":"You are given a list of numbers and you need to calculate the standard deviation of the numbers. [1, 2, 3, 4, 5]","completion":"import statistics def calculate_std_dev(nums): return statistics.stdev(nums)"},{"prompt":"Read the code and determine all the variables that have been declared or used. def func(x, y, z): a = x + y + z b = x * y * z c = a / b","completion":"The variables are x, y, z, a, b, and c."},{"prompt":"We need to find all unique combinations of elements from a given list of items. [1, 2, 3, 4]","completion":"def find_unique_combinations(items): result = [] for i in range(1, len(items) + 1): for combination in itertools.combinations(items, i): result.append(list(combination)) return result"},{"prompt":"We need to write a program to generate all permutations of a given string.","completion":"def generate_permutations(s): results = [] if len(s) == 1: results.append(s) else: for i, c in enumerate(s): for perm in generate_permutations(s[:i] + s[i + 1:]): results.append(c + perm) return results"},{"prompt":"You are given a string and you need to clear the line breaks. \\"This is a test string","completion":"def clear_line_breaks(s): return s.replace(\\"n\\", \\"\\")"},{"prompt":"We need to build a function to compute the product of the elements of a given array. [1, 2, 3, 4, 5]","completion":"def product_of_array(arr): prod = 1 for i in arr: prod *= i return prod"},{"prompt":"We need to find the maximum element in a given array of numbers. [1, 2, 3, 4, 5]","completion":"def find_max(arr): maximum = arr[0] for i in arr[1:]: if i > maximum: maximum = i return maximum"},{"prompt":"Create a python function which finds the intersection of two lists list1=[2, 5, 8, 10] list2=[3, 5, 8, 10]","completion":"def intersect(list1,list2): return [i for i in list1 if i in list2]"},{"prompt":"Write a python program that takes a string as a parameter and prints the character at index 4 if the length of the string is greater than 4. astring = \\"Pytho","completion":"def character_at_index(astring): if len(astring) > 4: print(astring[4])"},{"prompt":"Create a python class that stores the name of the student, their total marks and return the student name with their total marks. name = 'John' marks = 75","completion":"class Student: def __init__(self, name, marks): self.name = name self.marks = marks def get_details(self): return self.name + \\": \\" + str(self.marks)"},{"prompt":"Write an if statement that checks if an integer, num, is less than 10. num = 7","completion":"if num < 10: print(\\"num is less than 10\\")"},{"prompt":"Create a program to take a string of words and return the count of each word. word_string = \\"This is a sentence of word","completion":"def countWords(word_string): words = word_string.split() count_dict = {} for word in words: count_dict[word] = words.count(word) return count_dict"},{"prompt":"Create a function that takes two strings's, two string length's and returns true if the second string is a rotation of the first. string1 = \\"Hello World\\" string2 = \\"WorldHello\\" length1 = 11 length2 = 11","completion":"def isRotation(string1, string2, length1, length2): if length1 == length2 and len(string1)>0: string1string1 = string1 + string1 return string2 in string1string1"},{"prompt":"Create a function that takes a string and a number n, then return n characters from the end of the string. string = \\"Hello World\\" n = 3","completion":"def getCharactersFromEnd(string, n): return string[-n:]"},{"prompt":"Write a SQL query to get the details of all Customers from the database.","completion":"SELECT * FROM Customers;"},{"prompt":"List all the methods available in axelrod python library","completion":"Methods available in axelrod Python library are constructor method, player_names method, init method, play method, get_history method, reset method, sign_string method, find_conformers method, oppose_strategy method, strategy method, final_score method, cooperation method, defect method, normalised_score method, and elo_rating method."},{"prompt":"Compute P(A | B) given that P(B | A) = 0.8, P(A) = 0.4, and P(B) = 0.7","completion":"P(A|B) = P(B|A) * P(A) / P(B) = 0.8 * 0.4 / 0.7 = 0.5714286"},{"prompt":"Prompt a clarification from the user when the reply provided is unclear Input Reply: I don't know","completion":"Can you please explain what you mean when you say \\"I don't know\\"?"},{"prompt":"Solve the quadratic equation 3x^2 + 8x + 4 = 0","completion":"x = (-8 ± √-112) / (2 × 3) = (-8 ± 4√7) / 6 = (-2 ± 2√7) / 3"},{"prompt":"Given an array of integers, write a recursive program to merge two sorted subarrays ar1 and ar2 ar1 = [1, 4, 7, 9] ar2 = [2, 5, 6, 8]","completion":"def mergeSortedSubarrays(ar1, ar2): # if ar1 is empty if len(ar1) == 0: return ar2 # if ar2 is empty if len(ar2) == 0: return ar1 # compare the first elements of each array if ar1[0] < ar2[0]: # add the smaller element to the result result = [ar1[0]] # remove the element from the first array ar1.remove(ar1[0]) else: result = [ar2[0]] ar2.remove(ar2[0]) # call the same function over the remaining elements in the both arrays result = result + mergeSortedSubarrays(ar1, ar2) return result"},{"prompt":"Calculate the sum of all characters in a string using a for loop String: Pytho","completion":"total = 0 for ch in 'Python': total += ord(ch) print(total) # Output: 686"},{"prompt":"Construct a binary search tree from a list of given items Items: [1, 5, 7, 9, 11, 16]","completion":"9 / 5 11 / / 1 7 16"},{"prompt":"mplement an algorithm to generate the permutations of a string","completion":"def permutations(string): if len(string) <= 1: return set([string]) # get the last character last_char = string[-1] # get all permutations for the remaining characters all_permutations = permutations(string[:-1]) # create permutations for including the last character permutations_with_last_char = set() for permutation in all_permutations: for idx in range(len(string)): permutation_with_last_char = permutation[:idx] + last_char + permutation[idx:] permutations_with_last_char.add(permutation_with_last_char) return permutations_with_last_char"},{"prompt":"Write a Python parser to parse the json string to a dictionary. {\\"name\\": \\"John\\", \\"age\\": 23}","completion":"import json def json_parser(string): data = json.loads(string) return data"},{"prompt":"Suggest a code that sort a list by the last digit of each element.","completion":"def sort_by_last_digit(list): return sorted(list, key=lambda x: x % 10)"},{"prompt":"Suggest a completion for the following code that generates a sequence of integers. def generate_sequence(starting_number, step)","completion":"def generate_sequence(starting_number, step): num = starting_number while True: yield num num += step"},{"prompt":"Write a function to obtain the result of a given mathematical expression. 2 + 3 - 5","completion":"def calculate_expression(expression): return eval(expression)"},{"prompt":"Suggest a solution to convert a given number from one base to another.","completion":"def base_conversion(num, base_from, base_to): if base_from == 10: num = int(num, base_to) elif base_to == 10: num = int(str(num), base_from) else: num = int(str(int(str(num), base_from)), base_to) return num"},{"prompt":"Develop a GUI application in Java to reverse a string. User should be able to enter a string in the text field.","completion":"import java.awt.BorderLayout; import java.awt.event.*; import javax.swing.JButton; import javax.swing.JFrame; import javax.swing.JPanel; import javax.swing.JTextField; class Reverse extends JFrame { JTextField inputTF; JTextField outputTF; JButton reverseBtn; Reverse() { inputTF = new JTextField(20); outputTF = new JTextField(20); outputTF.setEditable(false); reverseBtn = new JButton(\\"Reverse\\"); JPanel panel = new JPanel(); panel.add(inputTF); panel.add(reverseBtn); panel.add(outputTF); reverseBtn.addActionListener(new ActionListener() { public void actionPerformed(ActionEvent ae) { String userInput = inputTF.getText(); StringBuilder sb = new StringBuilder(); sb.append(userInput); sb = sb.reverse(); outputTF.setText(sb.toString()); } }); add(panel, BorderLayout.CENTER); setVisible(true); } }"},{"prompt":"Create a SQL query to find all employees whose salary is greater than the average salary of their department. Table of Employees: ID | Name | Department | Salary","completion":"SELECT E.Name FROM EMPLOYEES E INNER JOIN (SELECT DEPARTMENT, AVG(SALARY) AVG_SALARY FROM EMPLOYEES GROUP BY DEPARTMENT ) T ON E.DEPARTMENT = T.DEPARTMENT WHERE E.SALARY > T.AVG_SALARY"},{"prompt":"Develop a Node.js program that prints out the current time in a specified timezone.","completion":"const moment = require('moment-timezone'); const timezone = 'America/New_York'; const currentTime = moment().tz(timezone).format('h:mm a z'); console.log(\`The current time in {timezone} is {currentTime}\`);"},{"prompt":"Develop a ReactJS program that displays the sum of two number inputs. The two numbers that the user will input should be positive integers.","completion":"import React, { useState } from \\"react\\"; function SumInput() { const [number1, setNumber1] = useState(\\"\\"); const [number2, setNumber2] = useState(\\"\\"); const [sum, setSum] = useState(0); const handleNumber1Change = e => setNumber1(e.target.value); const handleNumber2Change = e => setNumber2(e.target.value); const handleSumCalc = () => setSum(parseInt(number1) + parseInt(number2)); return ( <div> <input type=\\"text\\" value={number1} onChange={handleNumber1Change} /> + <input type=\\"text\\" value={number2} onChange={handleNumber2Change} /> = <input type=\\"text\\" value={sum} readOnly /> <button onClick={handleSumCalc}>Calculate Sum</button> </div> ); } export default SumInput;"},{"prompt":"Develop a code to perform linear regression in R","completion":"fit <- lm(y ~ x,data) summary(fit)"},{"prompt":"Develop a Swift program that returns the index of a given element in an array. Given an array of integers and a target element.","completion":"func searchIndex(arr: [Int], target: Int) -> Int? { for index in 0..<arr.count { if arr[index] == target { return index } } return nil }"},{"prompt":"Create an algorithm in Java that prints the prime numbers between 1 and 100.","completion":"class PrimeNumber{ public static void main(String args[]){ int i,m=0,flag=0; int n=100;//it is the number to be checked m=n/2; for(i=2;i<=m;i++){ if(n%i==0){ System.out.println(\\"Number is not prime\\"); flag=1; break; } } if(flag==0) System.out.println(\\"Number is prime\\"); } }"},{"prompt":"Generate a code in Lua to find the maximum number in a given array.","completion":"function findMax(arr) local maxValue = -math.huge for i = 1, #arr do if arr[i] > maxValue then maxValue = arr[i] end end return maxValue end"},{"prompt":"Use the information provided to initialize a dictionary in Python. keys = [\\"name\\", \\"age\\", \\"gender\\"] values = [\\"John Doe\\", 25, \\"Male\\"]","completion":"my_dict = dict(zip(keys, values))"},{"prompt":"Compute the sum of two integers without using the \\"+\\" operator. x = 5 y = 7","completion":"sum = x ^ y + (x & y) << 1 # using bitwise operators"},{"prompt":"Update the dictionary values using the same keys. my_dict = {\\"key1\\": 3, \\"key2\\": 6}","completion":"my_dict.update({\\"key1\\": 4, \\"key2\\": 8})"},{"prompt":"Calculate the total of all the elements in the list using a loop. my_list = [2, 5, 9, 4]","completion":"total = 0 for num in my_list: total += num print(total) # 20"},{"prompt":"Create a list of students which contains a nested list of the student’s name and age. students = [\\"Sam\\", 19], [\\"Alice\\", 20], [\\"Linda\\", 21]","completion":"student_list = [[student[0], student[1]] for student in students]"},{"prompt":"Change the following if-else expression to a ternary operator a = 10 b = 5 if a > b: c = a else: c = b","completion":"c = a if a > b else b"},{"prompt":"Define an absolute difference function in Python to find the difference between two numbers.","completion":"def absolute_difference(x, y): return abs(x - y)"},{"prompt":"Classify the following sentence as a declaration or an instruction Be careful while crossing the street.","completion":"Instruction"},{"prompt":"Given two lists, write a Python code to find the common elements in both the lists list1 = [3, 7, 14, 19] list2 = [6, 8, 14, 17]","completion":"common_elements = [element for element in list1 if element in list2] print(common_elements) #[14]"},{"prompt":"Explain the use of the continue keyword in Python","completion":"The continue keyword can be used to skip over certain elements in a loop body. It is often used to skip over certain unwanted elements. It works by returning to the loop condition by stopping the current iteration of the loop and jumping straight to the next iteration."},{"prompt":"Using the following data, generate a random string in Python data = [“H”, “e”, “l”, “l”, “o”]","completion":"import random random_string = \\"\\".join(random.choices(data, k=5)) print(random_string) #helll or olleh or leloh or any other combination"},{"prompt":"Generate a unit test for the following bubble sort algorithm def bubble_sort(arr): n = len(arr) for i in range(n-1): for j in range(0, n-i-1): if arr[j] > arr[j+1] : arr[j], arr[j+1] = arr[j+1], arr[j]","completion":"import unittest class TestBubbleSort(unittest.TestCase): def test_sort(self): arr = [5, 2, 3, 7, 1] bubble_sort(arr) self.assertEqual(arr, [1, 2, 3, 5, 7]) if __name__ == '__main__': unittest.main()"},{"prompt":"Write a Python code to classify the following sentence It's raining cats and dog","completion":"import nltk from nltk.tokenize import word_tokenize sentence = \\"It's raining cats and dogs\\" tokens = word_tokenize(sentence) tagged = nltk.pos_tag(tokens) print(tagged) #[('It', 'PRP'), (\\"'s\\", 'VBZ'), ('raining', 'VBG'), ('cats', 'NNS'), ('and', 'CC'), ('dogs', 'NNS')]"},{"prompt":"Construct a 2-dimensional array, A, of size M*N, filled with all zeroes. M=4, N=5","completion":"A = [[0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0]]"},{"prompt":"Given a course consisting of 5 lessons, write a program to display the first lesson. Lessons = [\\"Python Basics\\", \\"Javascript Basics\\", \\"C++ Basics\\", \\"Data Structures\\", \\"Object-Oriented Programming\\"]","completion":"def display_first_lesson(lessons): print(\\"The first lesson is: \\" + lessons[0]) Lessons = [\\"Python Basics\\", \\"Javascript Basics\\", \\"C++ Basics\\", \\"Data Structures\\", \\"Object-Oriented Programming\\"] display_first_lesson(Lessons)"},{"prompt":"Add styling to the HTML anchor tag. <a href=\\"index.html\\">Home</a>","completion":"<a style=\\"color: blue; font-weight: bold\\" href=\\"index.html\\">Home</a>"},{"prompt":"Assign a value to a given key in a dictionary. dictionary = {'key': 'value'}","completion":"dictionary['key'] = 'updated value'"},{"prompt":"Translate the text \\"Hello\\" to Spanish.","completion":"\\"Hola\\""},{"prompt":"Find the smallest number in the array using the reduce method. array = [2, 7, 3, 8, 5]","completion":"import functools array = [2, 7, 3, 8, 5] smallest = functools.reduce(lambda x,y: x if x < y else y, array) print(smallest)"},{"prompt":"Print a string in reverse. string = \\"Hello World!","completion":"print(string[::-1])"},{"prompt":"Create a class named Square and create a method to calculate the area.","completion":"class Square: def __init__(self, side): self.side = side def area(self): return self.side * self.side"},{"prompt":"Show the memory size of a list using Java. List<Integer> list = new ArrayList<Integer>(); list.add(3); list.add(4); list.add(5);","completion":"// Show the memory size of the list int memorySize = list.size() * Integer.SIZE / 8; System.out.println(memorySize);"},{"prompt":"Change all the element in the array to negative using JavaScript. var arr = [1, 2, 3, 4, 5];","completion":"// Change all the element in the array to negative for (var i = 0; i < arr.length; i++) { arr[i] = -arr[i]; }"},{"prompt":"Find the sum of all elements in a matrix using C. int A[2][2] = { {1, 2}, {3, 4} };","completion":"// Find the sum of all elements of the matrix int sum = 0; for (int i = 0; i < 2; i++) for (int j = 0; j < 2; j++) sum = sum + A[i][j];"},{"prompt":"Sort the strings alphabetically using C++. string arr[] = {\\"Geeks\\", \\"for\\", \\"Geeks\\"};","completion":"// Sort the strings alphabetically sort(arr, arr+3);"},{"prompt":"Check whether all elements in the array are equal using Python. arr = [2,2,2]","completion":"# Check whether all elements in the array are equal if all(x == arr[0] for x in arr): print(\\"All elements are equal\\") else: print(\\"Elements are not equal\\")"},{"prompt":"Perform a linear search to find if a key exists in an array using C. int arr[] = {4, 3, 2, 10, 40}; int key = 40;","completion":"// Perform linear search int flag = 0; for (int i = 0; i < 5; i++) { if (arr[i] == key) { flag = 1; break; } } if (flag == 1) printf(\\"Present\\"); else printf(\\"Not Present\\");"},{"prompt":"Create an object of your own class using JavaScript.","completion":"// Create an object of your own class class MyClass { constructor(name) { this.name = name; } } let obj = new MyClass(\\"MyObject\\"); console.log(obj);"},{"prompt":"Replace all the negative numbers in an array to zero using Ruby. arr = [3, 4, -2, -1]","completion":"# Replace all negative numbers in an array to zero arr.each_with_index do |num, i| arr[i] = 0 if num < 0 end"},{"prompt":"Write a JavaScript code to create a timer that counts down from 10.","completion":"let countDown = 10; let interval = setInterval(() => { countDown--; if (countDown == 0) { clearInterval(interval); } }, 1000);"},{"prompt":"Use the provided text to generate a python \`\`dict\`\`. KEY1:VALUE1,KEY2:VALUE2,KEY3:VALUE3","completion":"{'KEY1': 'VALUE1', 'KEY2': 'VALUE2', 'KEY3': 'VALUE3'}"},{"prompt":"mplement a search algorithm with the given data structure. def searchTree(T, k): \\"\\"\\" Tree T is either empty or a node with two subtrees, left and right. The value at the root is a[0] \\"\\"","completion":"def searchTree(T, k): if not T: return False if k == T[0]: return True elif k < T[0]: return searchTree(T[1], k) else: return searchTree(T[2], k)"},{"prompt":"Generate a regular expression that matches strings containing at least one digit and one uppercase letter.","completion":"^(?=.*[A-Z])(?=.*[0-9])[A-Z0-9]+"},{"prompt":"Classify the given input text into one of the 4 categories (\\"sports\\", \\"weather\\", \\"finance\\", \\"technology\\"). Apple Inc. reported earnings today","completion":"technology"},{"prompt":"Explain what is meant by recursion in programming.","completion":"Recursion is a programming technique which involves a function calling itself in order to solve a problem. It allows the function to repeat itself until a certain condition is met, by breaking the problem down into simpler versions of itself. This is done by using a base case, which is a smaller version of the problem that can be solved without using recursion, and the recursive case, which is the same problem but broken down in a way that it can call itself as a subproblem. This technique can be used to solve complex problems and be used for things such as sorting algorithms, tree traversals, and graph algorithms."},{"prompt":"Write a function that takes two inputs, a list and a target number, and prints only the list items whose total add up to the target number. list = [1, 5, 9, 10], target = 10","completion":"def sum_of_list(lst, target): \\"\\"\\" This function takes a list and a target number as inputs, and prints only the list items whose total add up to the target number. \\"\\"\\" for i in range(len(lst)-1): for j in range(i+1, len(lst)): if lst[i] + lst[j] == target: print (lst[i], lst[j]) sum_of_list(list, target)"},{"prompt":"Given the following Node.js code, explain its functionality. const express = require(\\"express\\"); const app = express();","completion":"The above code initializes an Express web application by importing the express module and creating an Express application instance. The Express module is a web development framework for Node.js that provides a set of features that facilitate the creation of web applications and API's. The app instance is the express router, which is responsible for handling different HTTP methods and routes. It also allows middleware functions to be registered, which are functions that are called before the request is processed. This code is the foundation of any Express web application and is necessary for setting up the app."},{"prompt":"Find and replace all occurrences of \\"cat\\" with \\"dog\\" in the given string. I have a cat and two c","completion":"I have a dog and two dogs"},{"prompt":"Debug the following code, describe the changes and explain their purpose. function reverseString(str) { let newString = \\"\\"; for (let i = str.length - 1; i >= 0; i--) { newString += str[i]; } return newString; }","completion":"function reverseString(str) { let newString = \\"\\"; for (let i = str.length - 1; i >= 0; i--) { newString += str[i]; } // Added return statement return newString; } // The change is a return statement that has been added to the end of the function. The purpose of this return statement is to ensure that the value that is calculated by the function is returned to the calling function. This allows the reversed string to be used by other parts of the program. Without this return statement, the reversed string calculated by the function would never be accessed by the other parts of the program."},{"prompt":"Write a regex expression to match strings that start with \\"abc\\" and end with \\"xyz\\".","completion":"^abc.*xyz"},{"prompt":"w can you create a dictionairy from the following two lists in Python? list1 = [\\"a\\", \\"b\\", \\"c\\"] list2 = [1, 2, 3]","completion":"dict_from_lists = dict(zip(list1, list2))"},{"prompt":"Design a ML algorithm to classify a given handwritten digit.","completion":"The ML algorithm should be a convolutional neural network architecture like LeNet and should take a 28x28 image of a handwritten digit as input. The output of the model should be a one hot vector of 10 elements representing the probability of the corresponding digit."},{"prompt":"Create a HTML form with two text fields that accept a first and last name, respectively.","completion":"<form> <label for=\\"firstName\\">First Name</label> <input type=\\"text\\" id=\\"firstName\\" name=\\"firstName\\"> <label for=\\"lastName\\">Last Name</label> <input type=\\"text\\" id=\\"lastName\\" name=\\"lastName\\"> <input type=\\"submit\\" value=\\"Submit\\"> </form>"},{"prompt":"Create a JavaScript function for sorting a list of strings alphabetically by their third letter. [\\"apple\\",\\"pear\\",\\"banana\\",\\"grape\\"]","completion":"function sortByThirdLetter(arr) { return arr.sort((a, b) => { if (a[2] < b[2]) return -1; if (a[2] > b[2]) return 1; return 0; }); } sortByThirdLetter([\\"apple\\", \\"pear\\", \\"banana\\", \\"grape\\"]); // [\\"apple\\", \\"grape\\", \\"banana\\", \\"pear\\"]"},{"prompt":"w would you create a MySQL table with the following columns? Person (id, first_name, last_name, birth_date, age)","completion":"CREATE TABLE Person ( id INT NOT NULL PRIMARY KEY AUTO_INCREMENT, first_name VARCHAR(42) NOT NULL, last_name VARCHAR(42) NOT NULL, birth_date DATE NOT NULL, age INT NOT NULL );"},{"prompt":"Create an HTML webpage with a main navigation at the top.","completion":"<html> <head> <meta charset=\\"utf-8\\"> <title>Navigation</title> </head> <body> <nav> <ul> <li><a href=\\"home.html\\">Home</a></li> <li><a href=\\"about.html\\">About</a></li> <li><a href=\\"blog.html\\">Blog</a></li> <li><a href=\\"contact.html\\">Contact</a></li> </ul> </nav> </body> </html>"},{"prompt":"Create a Ruby method to sum all numbers from 1 to the given number n.","completion":"def summation(n) sum = 0 for i in 1..n sum += i end return sum end"},{"prompt":"Create a CSS class for creating a two-column layout.","completion":".column-layout{ display: flex; flex-direction: row; width: 100%; } .column-layout > * { flex: 1 1 50%; }"},{"prompt":"w would you create a (scalable) database schema for a blog platform?","completion":"CREATE TABLE users ( user_id INT PRIMARY KEY NOT NULL AUTO_INCREMENT, first_name VARCHAR(50) NOT NULL, last_name VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, password VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL ); CREATE TABLE blogposts ( post_id INT PRIMARY KEY NOT NULL AUTO_INCREMENT, title VARCHAR(100) NOT NULL, body TEXT NOT NULL, created_at DATETIME NOT NULL, user_id INT NOT NULL FOREIGN KEY user_id REFERENCES users(user_id) ); CREATE TABLE comments ( comment_id INT PRIMARY KEY NOT NULL AUTO_INCREMENT, body TEXT NOT NULL, created_at DATETIME NOT NULL, user_id INT NOT NULL FOREIGN KEY REFERENCES users(user_id), post_id INT NOT NULL FOREIGN KEY REFERENCES blogposts(post_id) );"},{"prompt":"Write a SQL query that selects a specific name from user table. User table has columns (id, name, age)","completion":"SELECT name FROM user WHERE id = <specific id>"},{"prompt":"Create a SQL query to delete duplicates from a table and keep only one row. Table name: user Columns: user_id, email","completion":"DELETE FROM user WHERE user_id NOT IN (SELECT min(user_id) FROM user GROUP BY email)"},{"prompt":"Write a function that takes an array and removes all duplicates in place, returning the length of the new array. [1, 2, 3, 2, 4, 3]","completion":"int removeDuplicates(int *arr, int size) { int index = 0, i; for(i=0; i<size; i++) { if (arr[i] != arr[index]) { index++; arr[index] = arr[i]; } } return index + 1; }"},{"prompt":"Classifying whether an email is a spam or not. This email contains the message \\"Try our latest offers - discount up to 50%","completion":"notspam"},{"prompt":"Change this code to print the reversed version of a string. string s = \\"Hello World!\\";","completion":"string s = \\"Hello World!\\"; reverse(s.begin(), s.end()); cout << s; // Outputs: !dlroW olleH"},{"prompt":"Given a string s, determine if it is an isogram. \\"isogram","completion":"bool isIsogram(string s) { int count[256] = {0}; int length = s.length(); for (int i=0; i<length; i++) { if (count[s[i]] == 0) count[s[i]]++; else return false; } return true; }"},{"prompt":"Write a code that checks if two String are anagrams. s1 = \\"listen\\", s2 = \\"sile","completion":"def areAnagrams(s1, s2): if (len(s1) != len(s2)): return False s1 = sorted(s1) s2 = sorted(s2) for i in range(len(s1)): if (s1[i] != s2[i]): return False return True"},{"prompt":"Create a class to represent a 3D point(x,y,z).","completion":"class Point3D(object): def __init__(self, x, y, z): self.x = x self.y = y self.z = z def __repr__(self): return \\"Point3D(%d, %d, %d)\\" % (self.x, self.y, self.z)"},{"prompt":"Write a function to check if an array is sorted according to given constraints. arr = [2, 3, 15, 9, 5]","completion":"def isSorted(arr) : n = len(arr) for i in range(0,n-1): if arr[i] > arr[i+1]: return False return True"},{"prompt":"Write a query that returns the word and the number of times it appears in the string. \\"The quick brown fox jumps over the lazy dog","completion":"SELECT SUBSTRING_INDEX(SUBSTRING_INDEX(str, ' ', n), ' ', -1) as word, COUNT(*) FROM ( SELECT SUBSTRING_INDEX(str, ' ', n) FROM (SELECT TRIM(BOTH ' ' FROM 'The quick brown fox jumps over the lazy dog') as str) t CROSS JOIN ( SELECT 0 AS n UNION ALL SELECT 1 AS n UNION ALL SELECT 2 AS n UNION ALL SELECT 3 AS n UNION ALL SELECT 4 AS n UNION ALL SELECT 5 AS n UNION ALL SELECT 6 AS n UNION ALL SELECT 7 AS n UNION ALL SELECT 8 AS n UNION ALL SELECT 9 AS n UNION ALL SELECT 10 AS n ) n1 WHERE LENGTH(SUBSTRING_INDEX(str, ' ', n)) > 0 ) t GROUP BY word"},{"prompt":"Discuss the potential performance impacts of using a Numpy array for a given task","completion":"Using a Numpy array for a given task can potentially have a positive performance impact in terms of memory usage and computation speed. Numpy arrays are stored contiguously in memory, making them much faster to access than an array stored in traditional Python lists whose elements are stored separately. Additionally, when performing element-wise operations, such as mathematical computations across arrays, Numpy arrays can be much faster than using regular Python loops. Since they are stored contiguosly, they benefit from the processor's usage of cache coherency. Therefore, using Numpy arrays can greatly reduce latency and increase the computational performance of a task."},{"prompt":"An AJAX - jQuery request returns some HTML and requires an ID for the table. Provide an example of the syntax to get the ID.","completion":"The syntax to get the ID would look like this: var table_id = ('#table').attr('id'); This code would retrieve the ID of the HTML element for the table by selecting the element with the id attribute equal to \\"table\\"."},{"prompt":"w can we use try…except blocks in Python to handle errors?","completion":"Try...except blocks are used in Python to handle errors gracefully. They provide a way for Python to execute a code block and gracefully handle any errors that may occur. The code block inside the try is executed first and if an error occurs, it will be caught by the except block and handled. For example, if we have a function that might generate an error, we can use a try...except block to gracefully handle the error and prevent the program from crashing. The try...except block allows us to execute the code and gracefully handle any errors that may occur."},{"prompt":"Create an ArrayList in Java","completion":"The syntax to create an ArrayList in Java would be: ArrayList<dataType> listName = new ArrayList<dataType>(); Replace dataType with the appropriate type of data that needs to be stored in the list and listName with the desired name of the list."},{"prompt":"Design a series of methods that would be used to implement a card game","completion":"The methods that could be used to implement a card game would include the following: - drawCard(): To retrieve a card from the deck. - shuffleDeck(): To mix up the cards in the deck. - getValue(): To get the numerical value of a card. - compareCards(): To compare two cards. - checkForWinner(): To check if a player has won or not. - dealCards(): To distribute the cards to players. - removeCard(): To remove a card from the deck. - printScore(): To print out the scores of a player."},{"prompt":"Summarize the concept of content-based filtering","completion":"Content-based filtering is a method for recommending items to users based on the content of those items. It looks at the content associated with each item such as text, images, and videos and matches users with items that contain similar content. This type of filtering is based on the idea that users who like certain items are likely to like similar items. It is an efficient way of recommending items to users by using the content of items to predict user preferences."},{"prompt":"Compile a program to check whether an array is a subset of another array example1 = [4, 5, 6] example2 = [5, 6, 7]","completion":"def is_subset(a, b): for i in a: if i not in b: return False return True"},{"prompt":"Develop a program for HTML input validation","completion":"function validateInput(field){ let input = field.value; let valid = /^[A-Za-z0-9_]*/; if (!valid.test(input)) { alert(\\"There is a character not accepted\\"); } }"},{"prompt":"Edit the following code to find the maximum of three numbers a = 3 b = 5 c = 7","completion":"a = 3 b = 5 c = 7 maximum = max(a, b, c) print(\\"The maximum of three numbers is: \\", maximum)"},{"prompt":"Change the following code so that it can reverse a list without modifying the original list [1, 2, 3]","completion":"def reverse(lst): return lst[::-1] lst = [1, 2, 3] print(reverse(lst))"},{"prompt":"Compile a program to find the number of a specific digit in a given number. Number = 1234, Digit = 3","completion":"def count_digit(num, digit): count = 0 while num > 0: if num % 10 == digit: count += 1 num //= 10 return count Number = 1234 Digit = 3 print(count_digit(Number, Digit))"},{"prompt":"Create a SQL query to sort the following table by descending order of age. +----+--------+------+ | id | name | age | +----+--------+------+ | 1 | David | 21 | | 2 | Emily | 17 | | 3 | Rachel | 23 | | 4 | John | 12 | +----+--------+------+","completion":"SELECT name, age FROM table ORDER BY age DESC;"},{"prompt":"Create a SQL query to find the names of all people who are older than 18 years of age. +----+--------+------+ | id | name | age | +----+--------+------+ | 1 | David | 21 | | 2 | Emily | 17 | | 3 | Rachel | 23 | | 4 | John | 12 | +----+--------+------+","completion":"SELECT name FROM table WHERE age > 18;"},{"prompt":"Given a list, sort it in descending order without using the built-in sort function. list = [2, 7, 3, 4, 9, 1]","completion":"[ 9, 7, 4, 3, 2, 1]"},{"prompt":"Generate a function that swaps two given numbers.","completion":"def swap(x, y): temp = x x = y y = temp return x, y"},{"prompt":"Rewrite the given recursive Python program as a loop. def factorial(n): if (n == 1): return n else: return n * factorial(n-1)","completion":"def factorial(n): result = 1 for i in range(n): result = result * (i + 1) return result"},{"prompt":"Rewrite the given code so that it uses Java 8 features. import java.util.ArrayList; List<String> list = new ArrayList<String>(); int sum = 0; for(String str: list){ sum += Integer.parseInt(str); }","completion":"import java.util.List; List<String> list = List.of(\\"1\\",\\"2\\",\\"3\\",\\"4\\"); int sum = list.stream() .mapToInt(Integer::parseInt) .sum();"},{"prompt":"Determine if the given string matches the given regular expression pattern. String: this is a sample string Pattern: (.*) sample (.*)","completion":"Yes, the string matches the given regular expression pattern."},{"prompt":"Name the string method that searches a string for a specified value and returns the position of the match.","completion":"The string method is called indexOf()"},{"prompt":"Rewrite the following code using C# with the same output. def roman_number(number): roman = '' coefficients = [1000, 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1] numerals = [\\"M\\", \\"CM\\", \\"D\\", \\"CD\\", \\"C\\", \\"XC\\", \\"L\\", \\"XL\\", \\"X\\", \\"IX\\", \\"V\\", \\"IV\\", \\"I\\"] for i in range(len(coefficients)): while number >= coefficients[i]: number -= coefficients[i] roman += numerals[i] return rom","completion":"public string Roman_Number(int number) { string roman = \\"\\"; int[] coefficients = new int[]{1000, 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1}; string[] numerals = new string[]{\\"M\\", \\"CM\\", \\"D\\", \\"CD\\", \\"C\\", \\"XC\\", \\"L\\", \\"XL\\", \\"X\\", \\"IX\\", \\"V\\", \\"IV\\", \\"I\\"}; for (int i = 0; i < coefficients.Length; i++) { while (number >= coefficients[i]) { number -= coefficients[i]; roman += numerals[i]; } } return roman; }"},{"prompt":"Classify the following collection of HTML tags into four categories. <ul>, <div>, <span>, <h1>","completion":"Block level elements: <div>, <h1> Inline level elements: <ul>,<span> Grouping elements: <ul> Text level elements: <span>"},{"prompt":"Suggest an appropriate input for the following ReactJS program to display the provided output. import React from 'react'; const App = (props) => { return ( <div> {props.title} </div> ) } ​ Output: My App","completion":"<App title=\\"My App\\" />"},{"prompt":"Suggest an appropriate return data type of the following function that takes an integer array as input. def find_max(arr)","completion":"int"},{"prompt":"Create a python function that takes a string as input and returns a boolean if the string contains only upper case letters.","completion":"def all_upper(s): return s.isupper()"},{"prompt":"Write an SQL query to display the maximum and minimum values of the \\"amount\\" column from the following table. transactions columns: id, user_id, amou","completion":"SELECT MAX(amount) AS max_amount, MIN(amount) AS min_amount FROM transactions;"},{"prompt":"Create an SQL Query to display the first 5 records from the following table. users columns: id, username, email","completion":"SELECT * FROM users LIMIT 5;"},{"prompt":"Rewrite the following HTML table using CSS. <table> <tr> <th>Name</th> <th>Age</th> </tr> <tr> <td>John</td> <td>20</td> </tr> </table>","completion":"<style> table{ border-collapse: collapse; width: 100%; } th { text-align: left; background-color: darkgray; padding: 8px; } td { background-color: whitesmoke; padding: 8px; } </style> <table> <tr> <th>Name</th> <th>Age</th> </tr> <tr> <td>John</td> <td>20</td> </tr> </table>"},{"prompt":"Create a JavaScript function to validate an email address with the following conditions.","completion":"function validateEmail(email) { const re = /^(([^<>()[].,;:s@\\"]+(.[^<>()[].,;:s@\\"]+)*)|(\\".+\\"))@(([[0-9]{1,3}.[0-9]{1,3}.[0-9]{1,3}.[0-9]{1,3}])|(([a-zA-Z-0-9]+.)+[a-zA-Z]{2,}))/; return re.test(email); }"},{"prompt":"Create code to check if the number is a power of three. num = 8","completion":"def is_power_of_3(num): if num == 1: return True elif num % 3 != 0: return False else: return is_power_of_3(num / 3)"},{"prompt":"Design a program to reverse a string without using the built-in 'reverse' method. string = \\"Hello World","completion":"def reverseStr(str): revStr = \\"\\" i = len(str) - 1 while i >= 0: revStr += str[i] i = i - 1 return revStr"},{"prompt":"Create a method to calculate the sum of the cubes of the elements in an array. arr = [1,2,3,4]","completion":"def sumCubes(arr): sum = 0 for i in arr: sum += i**3 return sum"},{"prompt":"Produce a code to change the case of a given string. string = \\"Hello World","completion":"def changeCase(string): return string.swapcase()"},{"prompt":"Develop an algorithm to delete a given node from a linked list. Node 3 in the list {1->2->3->4->5}","completion":"def deleteNode(head, node): # If head node itself holds the data to be deleted if (head == node): head = node.next # Find the previous node prev = None curr = head while (curr.data != node.data): prev = curr curr = curr.next # Unlink the node from linked list prev.next = curr.next"},{"prompt":"Create a code to insert an item in a given position in a linked list. Insert \\"Hello\\" at position 2 in the list {1->2->3->4->5}","completion":"def insertAtPos(head, pos, data): if head is None: return else: temp = head newNode = Node(data) count = 0 while (count < pos-1) : temp = temp.next count += 1 newNode.next = temp.next temp.next = newNode"},{"prompt":"Write a function that takes a string as an input and returns a list of all the substring of the given string. string = \\"hello","completion":"def substrings(string): substrings_list = [] for i in range(len(string)+1): for j in range(i+1, len(string)+1): substrings_list.append(string[i:j]) return substrings_list"},{"prompt":"Take a list of numbers and remove the numbers that are greater than 10. numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]","completion":"def remove_greater_than_10(numbers): return [x for x in numbers if x <= 10]"},{"prompt":"Wirte a function that takes a string as input and returns the number of times the character 'a' appears in it. string = \\"abacadab","completion":"def count_a(string): count = 0 for char in string: if char == 'a': count += 1 return count"},{"prompt":"Modify the code to add a class called Animal that accepts a name and an age as arguments. class Animal","completion":"class Animal: def __init__(self, name, age): self.name = name self.age = age"},{"prompt":"Take a list of objects as input and return a list with removed duplicates. objects = [1, 2, 3, 4, 5, 1, 2, 3]","completion":"def remove_duplicates(objects): new_list = [] for obj in objects: if obj not in new_list: new_list.append(obj) return new_list"},{"prompt":"Write a function that takes a numerical string as input and returns an integer. string = \\"12345","completion":"def string_to_int(string): return int(string)"},{"prompt":"Create a basic log in security system in Java","completion":"boolean checkLogin(String username, String password) { boolean success = false; if(username.equals(\\"admin\\") && password.equals(\\"admin\\")) { success = true; } return success; }"},{"prompt":"Generate a JavaScript solution to print all prime numbers between 1 and 50.","completion":"for(var i = 2; i <= 50; i++) { var isPrime = true; for(var j = 2; j < i; j++) { if(i % j == 0) { isPrime = false; } } if(isPrime) { console.log(i); } }"},{"prompt":"Create a hash function that assigns a unique number to each character of the input string. Hello World","completion":"// Create a Hash Table let hashTable = {}; // Create a hash function function createHash(str) { for (let i = 0; i < str.length; i++) { // Assign a unique number to each character present in the string hashTable[str.charAt(i)] = i; } // Return the hash table return hashTable; }"},{"prompt":"Design a function that encrypts a string using the Caesar Cipher Hello World","completion":"function encryptCaesarCipher(str, key) { let encryptedStr = \\"\\"; for (i = 0; i < str.length; i++) { let charCode = str.charCodeAt(i); let encryptedCharCode = charCode + key; let encryptedChar = String.fromCharCode(encryptedCharCode); encryptedStr += encryptedChar; } return encryptedStr; }"},{"prompt":"Determine the most frequent character in the provided string Hello World","completion":"function maxFrequencyChar(str) { let maxChar = ''; let maxFrequency = 0; let hashTable = {}; for(let char of str) { if (hashTable[char]) { hashTable[char] += 1; } else { hashTable[char] = 1; } } for(let char in hashTable) { if(hashTable[char] > maxFrequency) { maxFrequency = hashTable[char]; maxChar = char; } } return maxChar; }"},{"prompt":"Rewrite this function to reverse the order of the elements in the array. list = [1,2,3,4,5]","completion":"def reverse_list(list): mid = len(list)//2 for i in range(mid): tmp = list[i] list[i] = list[len(list)-i-1] list[len(list)-i-1]=tmp return list"},{"prompt":"Create a function that calculates the length of a linked list. Linked List: 10 -> 20 -> 30 -> 40 -> 50","completion":"def list_length(head): count = 0 while head is not None: count += 1 head = head.next return count"},{"prompt":"Construct a class that can be used to check if the braces in an expression are balanced. expression = \\"[(}{)]","completion":"class BalancedBraces: def checkBalanced(self, expression): s = [] for i in expression: if i == '(' or i == '[' or i == '{': s.append(i) elif i == ')' or i == ']' or i == '}': if len(s) > 0 and ( (i == ')' and s[len(s)-1] == '(')or (i == ']' and s[len(s)-1] == '[')or (i == '}' and s[len(s)-1] == '{')): s.pop() else: return False return len(s) == 0"},{"prompt":"Make a C++ program to delete a node from a doubly linked list at a given position. Linked List: 84 -> 13 -> 25 -> 48 -> 50 Position: 3","completion":"void deleteNode(struct Node **head_ref, int position) { if (*head_ref == NULL) return; // Store head node struct Node* temp = *head_ref; // If header is removed if (position == 0) { *head_ref = temp->next; // Change head free(temp); // free old head return; } // Find previous node of the node to be deleted for (int i=0; temp!=NULL && i<position-1; i++) temp = temp->next; // If position is more than number of ndoes if (temp == NULL || temp->next == NULL) return; // Node temp->next is the node to be deleted // Store pointer to the next of node to be deleted struct Node *next = temp->next->next; // Unlink the node from linked list free(temp->next); // Free memory temp->next = next; // Unlink the deleted node from list }"},{"prompt":"Generate a proper HTML page.","completion":"<!DOCTYPE html> <html> <head> <title>Title of the document</title> </head> <body> <h1>This is a Heading</h1> <p>This is a paragraph.</p> </body> </html>"},{"prompt":"Write a class to implement a stack using an array.","completion":"class Stack: def __init__(self): self.stack = [] def isEmpty(self): return self.stack == [] def push(self, data): self.stack.append(data) def pop(self): data = self.stack[-1] del self.stack[-1] return data def peek(self): return self.stack[-1] def sizeStack(self): return len(self.stack)"},{"prompt":"Create a function in Python which takes two strings as arguments and returns true if the first string contains the second string, false otherwise.","completion":"def contains(string1, string2): return string2 in string1"},{"prompt":"Transform the following SQL query into a NoSQL query for MongoDB. SELECT * FROM users WHERE birthdate < '2020-04-01'","completion":"db.users.find({birthdate: {lt: '2020-04-01'}})"},{"prompt":"Calculate the Fibonacci sequence of the number 12.","completion":"144"},{"prompt":"Evaluate the following arithmetic expression with Python. 15 * (2 + 7)","completion":"195"},{"prompt":"Create a CSS rule to set a width of 500px to the elements having the class \\"container\\".","completion":".container { width: 500px; }"},{"prompt":"mplement a function in JavaScript which returns the nth element from the end of an array. array: [2, 5, 8, 6, 9, 0] n: 2","completion":"function nthFromEnd(arr, n) { return arr[arr.length - n]; } nthFromEnd([2, 5, 8, 6, 9, 0], 2) // returns 6"},{"prompt":"Split the string \\"hello world\\" into an array of individual words in JavaScript.","completion":"\\"hello world\\".split(\\" \\") // returns [\\"hello\\", \\"world\\"]"},{"prompt":"Write a SQL query which returns the top 10 most popular products in the following \\"products\\" table.","completion":"SELECT product_name, COUNT(*) FROM products GROUP BY product_name ORDER BY COUNT(*) DESC LIMIT 10;"},{"prompt":"Change the following HTML elements into a bulleted list with CSS. <div>Item 1</div> <div>Item 2</div> <div>Item 3</div>","completion":"<style> div { list-style-type: disc; } <style> <div>Item 1</div> <div>Item 2</div> <div>Item 3</div>"},{"prompt":"Create a Java program which will print the following pattern.","completion":"public class Pattern { public static void main(String[] args) { for (int i = 1; i <= 5; i++) { for (int j = 1; j <= i; j++) { System.out.print(i); } System.out.println(); } } } // Output 1 22 333 4444 55555"},{"prompt":"Merge the two following dictionaries into one with Python. dict1 = {'a':1, 'b':2} dict2 = {'c':3, 'd':4};","completion":"dict1 = {'a':1, 'b':2} dict2 = {'c':3, 'd':4}; merged_dict = {**dict1, **dict2} print(merged_dict) // returns {'a': 1, 'b': 2, 'c': 3, 'd': 4}"},{"prompt":"Write a SQL query which returns the number of customers from the following \\"customers\\" table that are from France.","completion":"SELECT COUNT(*) FROM customers WHERE country = 'France';"},{"prompt":"Count the number of employees for a given company in the following list. company_list = [ [\\"Apple\\", \\"John\\", \\"James\\"], [\\"Google\\", \\"Adam\\", \\"Steve\\", \\"Joseph\\"], [\\"Facebook\\", \\"Matt\\", \\"Chris\\"], ]","completion":"6"},{"prompt":"Write a SQL query to select the names of all employees who work at company 'Apple'.","completion":"SELECT name FROM employees WHERE company = 'Apple';"},{"prompt":"Explain in simple terms what a dictionary is in Python.","completion":"In Python, a dictionary is a collection of unordered key-value pairs. It is a mutable data type which allows users to store data in the form of key-value pairs. A key is an immutable object (like a number, string, or tuple) that is used to access the value stored for the corresponding key. A value can be any type of object like an integer, float, list, string, etc."},{"prompt":"Write a Regular Expression that matches all strings starting with a lowercase 'a' and ending with an uppercase 'Z'.","completion":"^a.*Z"},{"prompt":"Translate the following Ruby code to Javascript def print_hello puts \\"Hello!\\" end print_hello","completion":"function printHello() { console.log(\\"Hello!\\"); } printHello();"},{"prompt":"Write a Java program that takes a String as parameter and counts how many words are in it.","completion":"public class WordCounter { public static int countWords(String s) { String trimStr = s.trim(); if (trimStr.isEmpty()) return 0; return trimStr.split(\\"s+\\").length; } public static void main(String args[]) { String s = \\"This is a sample sentence\\"; System.out.println(\\"Number of words in the given sentence: \\" + countWords(s)); } }"},{"prompt":"w would you define a Python decorator called \`\`logger\`\` to log the functions being called?","completion":"from functools import wraps def logger(func): @wraps(func) def log_function(*args, **kwargs): print('Running \\"{}\\" with arguments {}, {}'.format(func.__name__, args, kwargs)) return func(*args, **kwargs) return log_function"},{"prompt":"Write a class in Python to represent an entry in a contact book.","completion":"class ContactEntry: def __init__(self, name, phone_number, email): self.name = name self.phone_number = phone_number self.email = email"},{"prompt":"Using the standard library to construct a generator that returns the first n prime numbers.","completion":"from math import sqrt def prime_numbers(n): primes = [] i = 2 while len(primes) < n: for number in range(2, int(sqrt(i)) + 1): if i % number == 0: break else: primes.append(i) i += 1 yield from primes"},{"prompt":"Compose a regular expression to match the words 'beginning' and 'starting'.","completion":"reg_expr = r\\"b(beginning|starting)b\\""},{"prompt":"Find the maximum and minimum values of a given list of integers in Python.","completion":"int_list = [3, 5, 2, 4, 1] max_value = max(int_list) min_value = min(int_list)"},{"prompt":"Reduce the 3-dimensional numpy array to a 2-dimensional numpy array.","completion":"import numpy as np a_3d_array = np.array([[[1,2], [3,4]], [[5,6], [7,8]]]) a_2d_array = a_3d_array.reshape(4,2)"},{"prompt":"Create a Python script to print the following output.","completion":"for x in range(10): for y in range(10): print(\\"*\\" if (x + y) % 2 == 0 else \\" \\", end=\\"\\") print(\\"\\")"},{"prompt":"Find all words that contain the string \\"ed\\" in the provided text. She's a very dedicated person, who always tries to get the job done.","completion":"dedicated, tried"},{"prompt":"Write Python code to create a list of numbers from 1 to 10 (including 10).","completion":"list_numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]"},{"prompt":"Create a dictionary containing the keys \\"name\\" and \\"age\\".","completion":"my_dict = {\\"name\\": \\"\\", \\"age\\": 0}"},{"prompt":"Create a class named \\"Person\\" containing the data members \\"name\\", \\"age\\", and \\"address\\".","completion":"class Person: def __init__(self, name, age, address): self.name = name self.age = age self.address = address"},{"prompt":"Given a string, find the longest substring containing no repeated characters. \\"abcabcbb","completion":"def longest_substring(str): seen = {} start = 0 maxlen = 0 for i, char in enumerate(str): if char in seen: start = max(start, seen[char] + 1) seen[char] = i maxlen = max(maxlen, i - start + 1) return maxlen print(longest_substring(\\"abcabcbb\\")) # Output: 3"},{"prompt":"Given two sets, A and B, write a program to find the union of the two. A = {1, 2, 3, 4, 5} B = {3, 4, 5, 6, 7}","completion":"def union(A, B): union_set = set() for item in A: union_set.add(item) for item in B: union_set.add(item) return union_set"},{"prompt":"Given a number n, write a program to find the nth prime number.","completion":"def nth_prime(n): if n == 0: return None primeCount = 0 checkNum = 2 while(primeCount < n): isPrime = True for i in range(2, checkNum): if checkNum % i == 0: isPrime = False if isPrime == True: primeCount += 1 if primeCount == n: return checkNum else: checkNum += 1"},{"prompt":"Given a starting number, write a program to generate the Fibonacci sequence up to nth number.","completion":"def fibonacci(n): if n <= 0: return None first = 0 second = 1 sequence = [first, second] for i in range(2, n): next_term = first + second sequence.append(next_term) first = second second = next_term return sequence"},{"prompt":"Write a C++ program that takes a string, reverses the string and prints it out. text = \\"Hello World!","completion":"#include <iostream> #include <string> int main() { std::string text = \\"Hello World!\\"; std::string reversed = \\"\\"; for (int i=text.length()-1; i>=0; i--) { reversed = reversed + text[i]; } std::cout << reversed << std::endl; return 0; }"},{"prompt":"the accompanying array containing movie ratings, print out only the movies with ratings 8 or greater. movies = [ {\\"title\\": \\"Toy Story 4\\", \\"rating\\": 8}, {\\"title\\": \\"Joker\\", \\"rating\\": 9}, {\\"title\\": \\"The Lion King\\", \\"rating\\": 7}, {\\"title\\": \\"Avengers: Endgame\\", \\"rating\\": 8}, ]","completion":"for (const movie of movies) { if (movie[\\"rating\\"] >= 8) { std::cout << movie[\\"title\\"] << std::endl; } } // Output: // Toy Story 4 // Joker // Avengers: Endgame"},{"prompt":"Write a code that uses a for-loop to print out the elements of the following array: my_list = [1,2,3,4]","completion":"for element in my_list: print(element)"},{"prompt":"Write a code to filter the even numbers from the following array: my_array = [1,2,3,4,5,6]","completion":"even_numbers = [] for number in my_array: if number % 2 == 0: even_numbers.append(number) print(even_numbers)"},{"prompt":"Enhance the following code to find the average of all the even numbers in the array: my_array = [1,2,3,4,5,6]","completion":"even_numbers = [] for number in my_array: if number % 2 == 0: even_numbers.append(number) average = sum(even_numbers) / len(even_numbers) print(average)"},{"prompt":"Use expand tabs to replace all the tabs in the following text with four spaces. text = 'thello tworld t'","completion":"import re text = 'thello tworld t' text = re.sub('t', ' ', text) print(text)"},{"prompt":"Analyze the following sentence and determine whether the dependent clause is restrictive or nonrestrictive. The elderly woman, who was once young and strong, works every day.","completion":"The dependent clause \\"who was once young and strong\\" is restrictive as it limits the definition of the noun phrase to a specific group. This particular group is elderly women who were once young and strong."},{"prompt":"Create a Java program to list all duplicated words in the given string. He explained the problem in an intelligent and articulate manner.","completion":"import java.util.LinkedHashSet; public class DuplicateWords { public static void findDuplicates(String str) { String[] words = str.split(\\"s+\\"); LinkedHashSet<String> set = new LinkedHashSet<>(); for (int i = 0; i < words.length; i++) { if (!set.add(words[i])) { System.out.println(words[i]); } } } public static void main(String[] args) { String str = \\"He explained the problem in an intelligent and articulate manner.\\"; findDuplicates(str); } } Output: He and"},{"prompt":"Write a SQL query to combine two tables into one and delete the duplicate rows. Table A: id | name | age 1 | John | 20 2 | Mary | 22 3 | Jane | 19 Table B: id | name | age 4 | Mark | 25 5 | John | 20 6 | Jack | 15","completion":"DELETE t1 FROM TableA t1 INNER JOIN TableB t2 ON t1.name = t2.name AND t1.age = t2.age; INSERT INTO TableA (id, name, age) SELECT id, name, age FROM TableB;"},{"prompt":"Create a SQL query to compute the average salary of the employees.","completion":"SELECT AVG(salary) FROM Employees;"},{"prompt":"Rewrite the following code snippet using a switch-case statement. if (a == 0) { result = b * c; } else if (a == 1) { result = b + c; } else { result = b - c; }","completion":"int result; switch (a) { case 0: result = b * c; break; case 1: result = b + c; break; case 2: result = b - c; break; default: break; }"},{"prompt":"dentify the type of object-oriented programming pattern used in the following code snippet. public class Animal { public void eat() { // eat logic } public void move() { // move logic } public void sleep() { // sleep logic } }","completion":"The code snippet is an example of the Template Method pattern. It provides a template method (eat, move, and sleep) that can be used by subclasses. The template method is defined in a superclass and the subclasses can override the methods to provide custom implementations."},{"prompt":"Write a CSS selector to select all the <h1> elements inside a <div> element.","completion":"div h1 { // styles here }"},{"prompt":"Write a SQL query to calculate the standard deviation of student grades from the following table. Student | Grade John | 75 Mary | 85 Bob | 80 Jane | 90","completion":"SELECT STDDEV(Grade) FROM StudentTable;"},{"prompt":"Analyze the following sentence to determine the type of verb phrase involved. We have met several times.","completion":"The verb phrase in this sentence is a perfect verb phrase, as it indicates an action that has been completed in the past and has a continuing result in the present. The verb in the phrase is \\"have met\\"."},{"prompt":"Write a SQL query to find the first name of all students enrolled in course \\"CSCI-203","completion":"SELECT firstName FROM students WHERE courseName = 'CSCI-203';"},{"prompt":"Parse this JSON string into a JSONObject { \\"status\\": 200, \\"message\\": \\"OK\\", \\"data\\": { \\"users\\": [ { \\"name\\": \\"John\\", \\"age\\": 20 }, { \\"name\\": \\"Ken\\", \\"age\\": 30 } ] } }","completion":"JSONObject jsonObj = new JSONObject(jsonInput); // get the data JSONObject data = jsonObj.getJSONObject(\\"data\\"); // get the users list JSONArray users = data.getJSONArray(\\"users\\"); // traverse the users list for(int i=0;i<users.length();i++){ JSONObject user = users.getJSONObject(i); String name = user.getString(\\"name\\"); int age = user.getInt(\\"age\\"); }"},{"prompt":"Format the following string to a valid JSON {name: \\"John\\", age: 20}","completion":"\\"{\\"name\\": \\"John\\", \\"age\\": 20}\\""},{"prompt":"Write SQL code to insert a row into this table called \\"tbl_users\\". Table Structure: tbl_users user_id (int, primary key) user_name (varchar) user_email (varchar)","completion":"INSERT INTO tbl_users (user_name, user_email) VALUES ('John Doe', 'john@example.com');"},{"prompt":"Process this CSV string into an array of objects. name, age John, 20 Ken, 30","completion":"const csvInput = \`name, age John, 20 Ken, 30\`; const lines = csvInput.split('n'); const header = lines[0].split(', '); const rows = lines.slice(1); const objects = []; rows.forEach(row => { const entries = row.split(', '); const obj = {}; header.forEach((key, i) => { obj[key] = entries[i]; }); objects.push(obj); }); // [ // { name: 'John', age: '20' }, // { name: 'Ken', age: '30' } // ]"},{"prompt":"Read two strings from the user and check if they are anagrams. string1 = 'listen', string2 = 'silent'","completion":"def isAnagram(string1, string2): # get lengths of strings string1_length = len(string1) string2_length = len(string2) # if length dont match if string1_length != string2_length: return False # sorting both strings string1 = sorted(string1) string2 = sorted(string2) # compare the sorted strings for i in range(0, string1_length): if string1[i] != string2[i]: return False return True # testing string1 = 'listen' string2 = 'silent' print(isAnagram(string1, string2)) # Output: True"},{"prompt":"Using the following input and code, edit the code so the output returns a list with only the unique elements from the list. list1 = [1,2,2,4,4,4,5]","completion":"def unique_list(list1): unique_list = [] for x in list1: if x not in unique_list: unique_list.append(x) return unique_list # testing list1 = [1,2,2,4,4,4,5] print(unique_list(list1)) # Output: [1, 2, 4, 5]"},{"prompt":"Write code that takes in two numeric variables x and y, and if x is divisible by y, it should print \\"x is divisible by y\\"Otherwise it should print \\"x is not divisible by y\\". x = 9, y = 3","completion":"def is_divisible(x, y): if x % y == 0: print(\\"x is divisible by y\\") else: print(\\"x is not divisible by y\\") # testing x = 9 y = 3 print(is_divisible(x ,y)) # Output: x is divisible by y"},{"prompt":"Create an HTML page that displays the Date and Time in the header.","completion":"<html> <head> <title>Date and Time</title> </head> <body> <h3 id=\\"date\\"><script>document.getElementById(\\"date\\").innerHTML = Date()<\/script></h3> </body> </html>"},{"prompt":"Create a list comprehension that outputs a list of odd numbers from a given list of numbers. numbers = [1,2,3,4,5,6,7,8,9,10]","completion":"odd = [x for x in numbers if x % 2 != 0] print(odd) # Output: [1, 3, 5, 7, 9]"},{"prompt":"Write a function that creates a new array from a given array of integers, leaving out the negative ones. list1 = [-1, 1, 2, -2, 3, -3]","completion":"def removeNegative(list1): outputArray = [x for x in list1 if x >= 0] return outputArray # testing list1 = [-1, 1, 2, -2, 3, -3] print(removeNegative(list1)) # Output: [1,2,3]"},{"prompt":"Code an SQL query to get the records of all students with a grade of ‘A’ in the Student table. Table Name: Student Columns: id, name, grade","completion":"SELECT * FROM Student WHERE grade = 'A';"},{"prompt":"Write a JavaScript program to create an array of elements, representing the Fibonacci sequence, up to the given number n.","completion":"function fibonacci_array(n) { let sequence = [0, 1]; while (sequence.length <= n) { let lastIndex = sequence.length - 1; sequence.push(sequence[lastIndex] + sequence[lastIndex - 1]); } return sequence; }"},{"prompt":"dentify the dependent clause in the given sentence. Sentence: Although he was sad, he still managed to go to the party.","completion":"Although he was sad."},{"prompt":"w does JavaScript handle undeclared variables?","completion":"JavaScript will automatically create an undeclared variable if it is referenced in the code. The variable is then set to the undefined value. The variable cannot be set or accessed until it has been declared. The variable will also remain in the global scope."},{"prompt":"Code an SQL query to insert new records into the Students table. Table Name: Students Columns: id, name, grade","completion":"INSERT INTO Students (id, name, grade) VALUES (1, 'John', 'A'), (2, 'Kate', 'B'), (3, 'Steve', 'A');"},{"prompt":"Remove comments from a given HTML page.","completion":"def remove_comments(html_page): comment_start = \\"<!--\\" comment_end = \\"-->\\" output_page = \\"\\" while html_page: comment_start_index = html_page.find(comment_start) if comment_start_index == -1: output_page += html_page break output_page += html_page[:comment_start_index] html_page = html_page[comment_start_index:] comment_end_index = html_page.find(comment_end) + len(comment_end) html_page = html_page[comment_end_index:] return output_page"},{"prompt":"Draft a while loop to print the numbers up to and including 5.","completion":"i = 1 while i <= 5: print(i) i += 1"},{"prompt":"Formulate a regular expression to identify even numbers up to 100.","completion":"^([02468]|[13579][0-9]?)"},{"prompt":"Create a function which returns the factorial of a given number.","completion":"\\"\\"\\" Function which returns factorial of a given number \\"\\"\\" def factorial(num): if (num == 0): return 1 else: return num * factorial(num-1) if __name__ == '__main__': print(factorial(5))"},{"prompt":"Find the type of an object for the given object. Object: \\"Hello World","completion":"str"},{"prompt":"dentify the Python statement used for looping.","completion":"for"},{"prompt":"Write a code snippet to cut the first 10 characters from a string. String: \\"Hello World!","completion":"\`\`\` string = \\"Hello World!\\" string = string[10:] print(string) \`\`\`"},{"prompt":"w do you access the first element of the given list? List = [6, 7, 8]","completion":"list[0]"},{"prompt":"Write a code to validate an email entered by the user.","completion":"\\"\\"\\" Validate an email entered by the user \\"\\"\\" import re def validate_email(email): regex = '^w+([.-]?w+)*@w+([.-]?w+)*(.w{2,3})+' if(re.search(regex, email)): return True else: return False if __name__ == '__main__': email = input('Enter email address: ') if validate_email(email): print('Valid email address') else: print('Invalid email address')"},{"prompt":"Parse the data in the given json to a list of key-value dictionaries {\\"country\\": \\"faculty of engineering\\", \\"students\\": 15000, \\"graduates\\": 1200 }","completion":"[{'country': 'faculty of engineering', 'students': 15000}, {'graduates': 1200}]"},{"prompt":"Generate a regex that detects an email","completion":"^w+([.-]?w+)*@w+([.-]?w+)*(.w{2,3})+"},{"prompt":"Print the contents of the provided dictonary Dictonary: {'name': 'John', 'age': 23, 'address': '123 Main Street'}","completion":"print('Name:', d['name']) print('Age:', d['age']) print('Address:', d['address'])"},{"prompt":"Output the smallest and greatest number from the provided list List: [53, 78, 25, 63, 23, 39]","completion":"Minimum: 23 Maximum: 78"},{"prompt":"Format the following string using the str.format() method. String: The name of the person is {} and his age is {}","completion":"print(\\"The name of the person is {name} and his age is {age}\\".format(name=\\"John Doe\\", age=23))"},{"prompt":"Raise an error with the message \\"Invalid value\\" when the following function is called and the value of \\"n\\" is below 0. def check_value(n): # TODO","completion":"def check_value(n): if n < 0: raise ValueError(\\"Invalid value\\")"},{"prompt":"Classify and label the outputs from a logistic regression. [-1, 0.1, 0.6, 1.8]","completion":"The outputs from the logistic regression are [-1, 0.1, 0.6, 1.8]. The labels for these outputs are: -1 = \\"Negative Class\\", 0.1 = \\"Close to Negative Class\\", 0.6 = \\"Neutral Class\\", 1.8 = \\"Positive Class\\"."},{"prompt":"Write a code to group the elements in a list into a dictionary with the list element as the key and the number of times the element is repeated in the list as the value. [1, 2, 2, 2, 3, 3, 4, 4, 5]","completion":"def group_list(list): result = {} for element in list: if element in result: result[element] += 1 else: result[element] = 1 return result list = [1, 2, 2, 2, 3, 3, 4, 4, 5] result = group_list(list) print(result) #{1: 1, 2: 3, 3: 2, 4: 2, 5: 1}"},{"prompt":"Generate a query to count the number of unique values in a SQL table.","completion":"SELECT COUNT(DISTINCT column_name) FROM table_name;"},{"prompt":"Generate a function to convert an infix expression to a postfix expression. \\"A + B * C","completion":"def infix_to_postfix(exp): stack = [] postfix_exp = \\"\\" # Convert the expression to a list exp_list = exp.split() for char in exp_list: # If the character is an operand, append it if char in ['A', 'B', 'C']: postfix_exp += char # If the character is an operator, push it to the stack elif char in ['+', '-', '*', '/']: stack.append(char) # When the closing parentheses is encountered, pop all the operators from the stack elif char == ')': while stack[-1] != '(': postfix_exp += stack.pop() stack.pop() #pop the opening parentheses # Pop all the operators in the stack while stack: postfix_exp += stack.pop() return postfix_exp exp = \\"A + B * C\\" result = infix_to_postfix(exp) print(result) #ABC*+"},{"prompt":"Read the integers in a given list and return the sum of the squares of the list elements. arr = [1, 2, 3]","completion":"def squares_sum(arr): sum = 0 for i in range(len(arr)): sum += arr[i] ** 2 return sum"},{"prompt":"Create a format string in Python to output the sentence “Hello, my name is John Doe.” name = \\"John Doe","completion":"print(f\\"Hello, my name is {name}.\\")"},{"prompt":"Split the following sentence into three words using regular expression. sentence = \\"Meeting is at 4 pm","completion":"import re words = re.split(r's', sentence) print(words) # Output: ['Meeting', 'is', 'at', '4', 'pm']"},{"prompt":"Write a Python script to create a dictionary of key - value pairs from a list. list = [\\"apple\\", \\"banana\\", \\"cherry\\"]","completion":"dictionary = dict.fromkeys(list, 0) print(dictionary) # Output: {'apple': 0, 'banana': 0, 'cherry': 0}"},{"prompt":"Read an array of integers and sort it in increasing order. arr = [3, 1, 4, 5, 2]","completion":"def sortArray(arr): n = len(arr) for i in range(n): for j in range(0, n-i-1): if arr[j] > arr[j+1] : arr[j], arr[j+1] = arr[j+1], arr[j] sortArray(arr) print(arr) # Output: [1, 2, 3, 4, 5]"},{"prompt":"Create a loop in Python to print odd numbers between 10 and 25.","completion":"for i in range(11, 25, 2): print(i)"},{"prompt":"Edit this code to create a function which prints the Fibonacci series.","completion":"def Fibonacci(n): if n==0: return 0 elif n==1: return 1 else: return Fibonacci(n-1)+Fibonacci(n-2) for n in range(10): print(Fibonacci(n))"},{"prompt":"Read a list of strings and return a list which contains only the strings with length at least 3. list = [\\"Apple\\", \\"cat\\", \\"dog\\", \\"banana\\", \\"mouse\\"]","completion":"newList = [i for i in list if len(i) >= 3] print(newList) # Output: ['Apple', 'banana', 'mouse']"},{"prompt":"Create a Java program which takes a year as input and prints whether it is a leap year or not. year = 2020","completion":"public class LeapYear { public static void main(String args[]) { int year = 2020; if((year % 400 == 0) || ((year % 4 == 0) && (year % 100 != 0))) System.out.println(\\"The year is a leap year.\\"); else System.out.println(\\"The year is not a leap year.\\"); } }"},{"prompt":"Write an SQL query that displays the 10 highest paid employees.","completion":"SELECT * FROM Employee ORDER BY Salary DESC LIMIT 10;"},{"prompt":"Given a 2D array, transpose the array. matrix = [[1, 2, 3], [4, 5, 6], [7, 8, 9]]","completion":"transpose_matrix = [[1, 4, 7], [2, 5, 8], [3, 6, 9]]"},{"prompt":"Format the given list of numbers in such a way that element at i'th index is the product of all elements in the list except the i'th element. numbers = [1, 2, 3, 4]","completion":"def format_list(numbers): result = [] prod = 1 for i in range(0, len(numbers)): prod = prod * numbers[i] for i in range(0, len(numbers)): result.append(prod // numbers[i]) return result"},{"prompt":"Create a function to compute the depth of a binary tree.","completion":"def tree_depth(root): # Base case if root is None: return 0 ; # If tree is not empty then height = 1 + max of left # height and right heights return 1 + max(tree_depth(root.left), tree_depth(root.right))"},{"prompt":"Create a function to find a pair of elements in an array whose sum matches the given target. numbers = [1, 2, 3, 4, 5], target = 6","completion":"def find_pair(numbers, target): nums_set = set(numbers) for num in nums_set: if target - num in nums_set: return [num, target-num]"},{"prompt":"Write a function in Python that takes a list of integer as input and return the most frequent value in the list. [3, 9, 5, 6, 3, 9, 5]","completion":"def most_frequent_value(list): return max(set(list), key = list.count)"},{"prompt":"Alter the following CSS code to make font size \\"40px\\" for all h1 and h2 elements. h1, h2 { font-size: 20px; }","completion":"h1, h2 { font-size: 40px; }"},{"prompt":"Create a function in Javascript to be used for capitalizing the first letter of each word in a string of text.","completion":"const toTitleCase = (str) => { return str.replace(/wS*/g, function(txt){ return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase(); }); }"},{"prompt":"Suggest a one-line solution for intersecting two given arrays in Javascript.","completion":"const intersection = (arr1, arr2) => arr1.filter(x => arr2.includes(x));"},{"prompt":"Rewrite the following function to use the modern function syntax in Javascript. function greetUser(name) { console.log('Hello ' + name + '!'); }","completion":"const greetUser = (name) => console.log(\`Hello {name}!\`);"},{"prompt":"Create a JavaScript class named “Apple” that holds one property, the “Name”.","completion":"class Apple { constructor(name){ this.Name = name; } }"},{"prompt":"Write a SQL query to find all flights departing from a given location after a given date and time. StartCity: NYC Date/Time: March 16, 2021 8:00 AM","completion":"SELECT flightno, startcity, starttime FROM flights WHERE startcity = 'NYC' AND starttime > '2021-03-16 08:00:00';"},{"prompt":"Create an object in Python that has three properties, \\"Color\\", \\"Height\\" and \\"Weight\\".","completion":"myObject = { 'color': '', 'height': 0, 'weight': 0 }"},{"prompt":"Write a CSS rule to set the text size of all elements with the class “big-header” to 24px.","completion":".big-header { font-size: 24px; }"},{"prompt":"Create an HTML table that contains 10 rows and 3 columns.","completion":"<table> <thead> <tr> <th>Column A</th> <th>Column B</th> <th>Column C</th> </tr> </thead> <tbody> <tr> <td></td> <td></td> <td></td> </tr> <tr> <td></td> <td></td> <td></td> </tr> <tr> <td></td> <td></td> <td></td> </tr> <tr> <td></td> <td></td> <td></td> </tr> <tr> <td></td> <td></td> <td></td> </tr> <tr> <td></td> <td></td> <td></td> </tr> <tr> <td></td> <td></td> <td></td> </tr> <tr> <td></td> <td></td> <td></td> </tr> <tr> <td></td> <td></td> <td></td> </tr> <tr> <td></td> <td></td> <td></td> </tr> </tbody> </table>"},{"prompt":"Compute the sum of all the numbers in the following array: [1, 2, 3, 4, 5].","completion":"15"},{"prompt":"List all the items in an associative array named ‘inventory’. inventory = { \\"fruits\\": [\\"Apple\\", \\"Banana\\", \\"Orange\\"], \\"vegetables\\": [\\"Carrot\\", \\"Cucumber\\", \\"Spinach\\"] }","completion":"[\\"Apple\\", \\"Banana\\", \\"Orange\\", \\"Carrot\\", \\"Cucumber\\", \\"Spinach\\"]"},{"prompt":"Edit the following code to use more efficient algorithms to improve its performance. for (int i = 0; i < n; i++) { sum += i; }","completion":"int sum = 0; for (int i = 0; i < n; i++) sum += i; sum = n * (n + 1) / 2;"},{"prompt":"Observe the given piece of code and suggest the possible data structure to use. for (int i = 0; i < input.length; i++) { if (input[i] == 0) { output[output_index] = i; output_index++; } }","completion":"An array or a list should be used to store the positions of the numbers that are equal to 0 in the input. The output array should be used to store the positions. The output index should be used to keep track of the current position in the output array."},{"prompt":"w would you go about sorting a million numbers in memory?","completion":"A common approach would be to use an efficient sorting algorithm, such as Quicksort, Merge Sort, or Heapsort. These algorithms typically take time proportional to n log n, where n is the number of elements being sorted."},{"prompt":"Edit the Python code to reverse a linked list. # Definition for singly-linked list. class ListNode: def __init__(self, x): self.val = x self.next = None","completion":"# Definition for singly-linked list. class ListNode: def __init__(self, x): self.val = x self.next = None def reverse_list(head): prev = None while head != None: next = head.next head.next = prev prev = head head = next return prev"},{"prompt":"Change the Python code to output the product of two numbers. def multiply(a, b): return a + b","completion":"def multiply(a, b): return a * b"},{"prompt":"Change the Python code to find the occurrences of an item in a list def count(list_of_items, item): return len(list_of_items)","completion":"def count(list_of_items, item): count = 0 for i in list_of_items: if i == item: count += 1 return count"},{"prompt":"Create a program to generate all subsets of a set. input_set = {1, 2, 3}","completion":"def all_subsets(input_set): res = [[]] for ele in input_set: res += [i + [ele] for i in res] return res"},{"prompt":"Generate a Python program to generate the square of a number.","completion":"def square(n): return n*n"},{"prompt":"Output the first 10 Fibonacci numbers.","completion":"0 1 1 2 3 5 8 13 21 34"},{"prompt":"Create a basic login form in HTML.","completion":"<form action=\\"\\" method=\\"POST\\"> <div> <label for=\\"username\\">Username:</label> <input type=\\"text\\" name=\\"username\\" id=\\"username\\"> </div> <div> <label for=\\"password\\">Password:</label> <input type=\\"password\\" name=\\"password\\" id=\\"password\\"> </div> <button type=\\"submit\\">Log In</button> </form>"},{"prompt":"mplement an algorithm in C++ for finding the largest number in an array. int arr[] = {3, 7, 1, -2, 9, 5};","completion":"#include <iostream> using namespace std; int largestNumber(int arr[], int n) { int max = arr[0]; for (int i = 0; i < n; i++) { if (arr[i] > max) max = arr[i]; } return max; } int main() { int arr[] = {3, 7, 1, -2, 9, 5}; int n = sizeof(arr) / sizeof(arr[0]); cout <<\\"The largest element is \\"<< largestNumber(arr, n); return 0; }"},{"prompt":"Create discrete buckets in a given array using the following algorithm. [2, 3, 6, 7, 8]","completion":"def create_buckets(arr): buckets = [] x = arr[0] for i in range(1, len(arr)): if arr[i] != x + 1: buckets.append(arr[i-1]) x = arr[i] buckets.append(arr[-1]) return buckets create_buckets([2, 3, 6, 7, 8]) # Output: [2, 3, 6, 8]"},{"prompt":"Construct a JavaScript function that implements a fibonacci sequence.","completion":"function fibonacci(num) { let a = 1, b = 0, temp; while (num >= 0) { temp = a; a = a + b; b = temp; num--; } return b; }"},{"prompt":"Fix the following code so it outputs the correct result. def string_formatter(string): new_str = string.split() return new_str print(string_formatter('This is a string'))","completion":"def string_formatter(string): new_str = string.split() return ' '.join(new_str) print(string_formatter('This is a string')) # Output: This is a string"},{"prompt":"Find the minimum, maximum, and the average of a list of numbers. [1, 2, 3, 4, 5]","completion":"min = 1 max = 5 average = 3"},{"prompt":"Create a class in Java called Student which contains string 'name' and int 'grade'.","completion":"public class Student { private String name; private int grade; public void setName(String name) { this.name = name; } public void setGrade(int grade) { this.grade = grade; } public String getName() { return name; } public int getGrade() { return grade; } }"},{"prompt":"w would you convert this list of strings to integers in Python? str_list = ['1', '2', '3', '4']","completion":"int_list = [int(i) for i in str_list] # Output: [1, 2, 3, 4]"},{"prompt":"Find the position of an element in an array. arr = [1, 4, 7, 9] target = 4","completion":"def find_index(arr, target): for i, num in enumerate(arr): if num == target: return i find_index(arr, target) # Output: 1"},{"prompt":"Debug the following code to print out the result of the polynomial. polynomial equation: f(x) = x³ + 5x - 62 x = 9","completion":"\\"\\"\\" Debug the following code to print out the result of the polynomial. \\"\\"\\" def evaluate_polynomial(coefficients, x): result = 0 for i in range(len(coefficients)): result += coefficients[i] * (x ** (len(coefficients) - i - 1)) return result coefficients = [1, 5, -62] x = 9 print(evaluate_polynomial(coefficients, x)) # 390"},{"prompt":"Detect and output any phone numbers in the give text. Text: Hello, my name is John and my phone number is (123) 456-7890.","completion":"(123) 456-7890"},{"prompt":"Write code to print out the numbers up to and including the provided number, starting at 1. number = 10","completion":"\\"\\"\\" Write code to print out the numbers up to and including the provided number, starting at 1. \\"\\"\\" def print_numbers_up_to(n): for i in range(1, n+1): print(i) if __name__ == '__main__': print_numbers_up_to(10)"},{"prompt":"Find the longest substring containing only digits from within the given string. String: This string contains 11111 and 123456","completion":"['11111']"},{"prompt":"Create a Python function to generate a random hex color code.","completion":"import random def generate_random_hex_color_code(): hex_code = \\"#\\" for i in range(6): random_digit = random.choice(\\"0123456789ABCDEF\\") hex_code += random_digit return hex_code if __name__ == '__main__': print(generate_random_hex_color_code())"},{"prompt":"Train a classification model to classify the sentiment of the given sentence. Sentence: I love this new book!","completion":"\\"\\"\\" Train a classification model to classify the sentiment of the given sentence. \\"\\"\\" import numpy as np import tensorflow as tf # Create the model model = tf.keras.Sequential([ tf.keras.layers.Embedding(input_dim=vocab_size, output_dim=embedding_dim), tf.keras.layers.Bidirectional(tf.keras.layers.LSTM(embedding_dim)), tf.keras.layers.Dense(embedding_dim, activation='relu'), tf.keras.layers.Dense(2, activation='softmax') ]) # Compile the model model.compile(loss='sparse_categorical_crossentropy',optimizer='adam',metrics=['accuracy']) # Train the model model.fit(train_input_data, train_labels, epochs=num_epochs) # Make prediction pred = model.predict([np.array([sentence])]) # Print prediction result if pred[0][0] > pred[0][1]: print(\\"Negative sentiment\\") else: print(\\"Positive sentiment\\")"},{"prompt":"Generate code for a for loop to iterate through the numbers from 0 to n-1. n = 5","completion":"for i in range(0, n): print(i)"},{"prompt":"Write code to delete the given key from the given dictionary. Dictionary: my_dict = {'a': 1, 'b': 2, 'c': 3, 'd': 4} Key: 'd'","completion":"my_dict.pop('d')"},{"prompt":"What is an example of an algorithm for solving Sudoku?","completion":"One example algorithm for solving Sudoku is called 'Backtracking'. This algorithm works by first filling in possible solutions for the empty cells, then using a series of rules to determine the correct answer. The algorithm starts with each cell of the Sudoku and tries different numbers for it until a solution is found. If a solution is not found, it backtracks and tries a different number. This process is repeated until all cells have been filled in with the correct numbers, or there is no solution."},{"prompt":"What is a heuristic for solving the traveling salesman problem?","completion":"A heuristic for the traveling salesman problem is to make use of the nearest neighbor algorithm or the brute-force algorithm. The nearest neighbor algorithm works by starting at a random node and visiting its nearest unvisited neighbor, then repeating the process until all nodes have been visited. The brute-force algorithm works by trying all possible combinations of nodes and finding the shortest route that visits all nodes."},{"prompt":"Design an algorithm to find the longest substring with no repeating characters in a given string. \\"abcabcbb","completion":"def longest_no_repeat(s): max_length = 0 length = 0 seen = dict() for i in range(len(s)): if s[i] not in seen: length += 1 seen[s[i]] = i else: if length > max_length: max_length = length length = i - seen[s[i]] for j in seen: if seen[j] < seen[s[i]]: del seen[j] seen[s[i]] = i if length > max_length: max_length = length return max_length if __name__ == '__main__': s = \\"abcabcbb\\" print(longest_no_repeat(s))"},{"prompt":"Create a function to calculate the network's throughput given a data rate and a size of the packets. Data Rate = 10 Mbps; Packet size = 1000 b","completion":"def calculate_throughput(data_rate, packet_size): return data_rate / (packet_size / 8) # converting bits to bytes if __name__ == '__main__': data_rate = 10 # Mbps packet_size = 1000 # bits throughput = calculate_throughput(data_rate, packet_size) print(throughput) # 125000.0"},{"prompt":"Print “Hello World” using the print() function.","completion":"print(\\"Hello World\\")"},{"prompt":"Create a function that takes in two strings and returns the number of times the first string is found within the second string. string1 = \\"ab\\" string2 = \\"abcabcabc","completion":"def count_substring(string1, string2): count = 0 for i in range(len(string2)-len(string1)+1): if string2[i:i+len(string1)] == string1: count += 1 return count"},{"prompt":"Create an algorithm to sort the given list of integers. [5, 7, 2, 4, 9]","completion":"def sort(lst): for i in range(len(lst)): min_index = i for j in range(i+1, len(lst)): if lst[j] < lst[min_index]: min_index = j lst[i], lst[min_index] = lst[min_index], lst[i] return lst"},{"prompt":"Write a JavaScript function to print a specific pattern.","completion":"function printPattern(n) { for (var i = 1; i <= n; i++) { for (var j = 1; j <= i; j++) { document.write(j + \\" \\"); } document.write(\\"<br>\\"); } } printPattern(7);"},{"prompt":"Using any programming language, write a program which takes a number as an input and outputs the first two prime numbers after it. 7","completion":"def find_next_prime_numbers(num): \\"\\"\\"This function takes a number as an input and returns the first two prime numbers after it\\"\\"\\" prime_numbers = [] # Increment num to the first prime number while not is_prime(num): num += 1 # Append num to prime_numbers (first prime after input) prime_numbers.append(num) # Increment num to the second prime number num += 1 while not is_prime(num): num += 1 # Append num to prime_numbers (second prime after input) prime_numbers.append(num) # Return the list of prime numbers return prime_numbers def is_prime(num): \\"\\"\\"Returns True if number is prime\\"\\"\\" if num <= 1: return False for i in range(2, num): if num % i == 0: return False return True print(find_next_prime_numbers(7)) # Output: [11, 13]"},{"prompt":"Replace the following comma-separated values with tabs. boats,cars,plane","completion":"boatstcarstplanes"},{"prompt":"Design a function in Python which takes a list of characters and returns the frequency of each character as a dictionary. [\\"a\\", \\"b\\", \\"c\\", \\"a\\", \\"a\\", \\"b\\", \\"d\\"]","completion":"def character_frequency(lst): \\"\\"\\"Function to count the frequency of each character in a list\\"\\"\\" frequencies = {} for c in lst: if c in frequencies: frequencies[c] += 1 else: frequencies[c] = 1 return frequencies print(character_frequency([\\"a\\", \\"b\\", \\"c\\", \\"a\\", \\"a\\", \\"b\\", \\"d\\"])) # Output: {'a': 3, 'b': 2, 'c': 1, 'd': 1}"},{"prompt":"Create a program which takes a string and replaces all instances of the letter \\"e\\" with \\"X\\". \\"Hello world","completion":"def replace_e_with_x(s): \\"\\"\\"Function to replace all instances of the letter \\"e\\" with \\"X\\"\\"\\" return s.replace('e', 'X') print(replace_e_with_x(\\"Hello world\\")) # Output: \\"HXllo world\\""},{"prompt":"Write a function in Java to delete all numbers from an array which are divisible by three. [1, 2, 3, 4, 5, 6, 7, 8, 9]","completion":"public static int[] deleteByThree(int[] arr) { int[] result = new int[arr.length]; int index = 0; for(int i = 0; i < arr.length; i++) { if(arr[i] % 3 != 0) { result[index++] = arr[i]; } } return Arrays.copyOf(result, index); } System.out.println(Arrays.toString(deleteByThree(new int[]{1, 2, 3, 4, 5, 6, 7, 8, 9}))); // Output: [1, 2, 4, 5, 7, 8 ]"},{"prompt":"Create a JavaScript program which takes an array of dates and returns the average date. [2018-01-01, 2018-01-05, 2018-01-10]","completion":"function avgDate(dates) { let sum = 0; const dateLen = dates.length; for (let i = 0; i < dateLen; i++) { sum += Date.parse(dates[i]); } const avgDate = Date(); avgDate.setTime(sum / dateLen); return avgDate; } console.log(avgDate([\\"2018-01-01\\", \\"2018-01-05\\", \\"2018-01-10\\"])); // Output: Mon Jan 07 2019 00:00:00 GMT+0545 (Nepal Time)"},{"prompt":"Write a SQL query to find the most popular product by category. Table name: Products Columns: category (String), product_id (Integer), rating (Integer)","completion":"SELECT category, product_id, MAX(rating) FROM Products GROUP BY category ORDER BY rating DESC"},{"prompt":"Construct a JavaScript program to sort a two-dimensional array by column 3 in ascending order. const array = [ [7, 0, 5], [3, 2, 1], [2, 5, 9], [0, 6, 8] ]","completion":"function sortByColumn3Ascending(array) { array.sort(function(a, b) { return a[2] - b[2]; }); return array; } console.log(sortByColumn3Ascending(array));"},{"prompt":"Define a Java class 'Fruits' with three instance variables - name(String), quantity(int), and colour(String).","completion":"public class Fruits { String name; int quantity; String colour; public Fruits(String name, int quantity, String colour) { this.name = name; this.quantity = quantity; this.colour = colour; } }"},{"prompt":"Modify the following array to output the sum of the second and third items in the array. const array = [1, 2, 3, 4];","completion":"const array = [1, 2, 3, 4]; const sum = array[1] + array[2]; console.log(sum); // 5"},{"prompt":"Write a function to check if an integer is a multiple of another integer.","completion":"def is_multiple_of(num, multiple): if num % multiple == 0: return True return False"},{"prompt":"Construct a C++ program to find the maximum value in an array of integers. int array[] = {1, -2, 3, 4, 7, 5}","completion":"#include <iostream> using namespace std; int findMax(int array[], int array_size) { int max_value = array[0]; for (int i = 1; i < array_size; i++) if (array[i] > max_value) max_value = array[i]; return max_value; } int main() { int array[] = {1, -2, 3, 4, 7, 5}; int array_size = sizeof(array)/sizeof(array[0]); cout << \\"Max: \\" << findMax(array, array_size); return 0; }"},{"prompt":"Write an R program to check if an array is in ascending order. x <- c(2, 4, 8, 10, 15)","completion":"is_ascending <- function(x) { sorted_x <- sort(x) if (sorted_x == x) { return TRUE } else { return FALSE } }"},{"prompt":"Complete the program written in Java to add two numbers and print out the sum. int a = 3; int b = 5;","completion":"public class AddNumbers { public static void main(String[] args) { int a = 3; int b = 5; int sum = a + b; System.out.println(\\"Sum is: \\" + sum); } }"},{"prompt":"Create an API in node.js to get the details of a user using an ID id = \\"12345","completion":"var express = require(\\"express\\"); var app = express(); // API to get user details app.get(\\"/user/:id\\", function(req,res) { var id = req.params.id; var user = { name: \\"John Doe\\", age: 30 }; res.status(200).send(JSON.stringify(user)); }); app.listen(3000);"},{"prompt":"Design a user interface in HTML for a login form.","completion":"<!DOCTYPE html> <html lang=\\"en\\"> <head> <meta charset=\\"UTF-8\\"> <meta name=\\"viewport\\" content=\\"width=device-width, initial-scale=1.0\\"> <title>Login Form</title> </head> <body> <form> <label>Username:</label> <input type=\\"text\\" name=\\"username\\" required> <label>Password:</label> <input type=\\"password\\" name=\\"password\\" required> <input type=\\"submit\\" value=\\"Login\\"> </form> </body> </html>"},{"prompt":"Design a data structure in Java for storing student information.","completion":"public class Student { private String studentId; private String name; private int age; private String school; private String address; private String phoneNumber; //Getters and Setters public String getStudentId() { return studentId; } public void setStudentId(String studentId) { this.studentId = studentId; } public String getName() { return name; } public void setName(String name) { this.name = name; } public int getAge() { return age; } public void setAge(int age) { this.age = age; } public String getSchool() { return school; } public void setSchool(String school) { this.school = school; } public String getAddress() { return address; } public void setAddress(String address) { this.address = address; } public String getPhoneNumber() { return phoneNumber; } public void setPhoneNumber(String phoneNumber) { this.phoneNumber = phoneNumber; } }"},{"prompt":"Design a web page in HTML5 with a heading, a paragraph and a button.","completion":"<!DOCTYPE html> <html> <head> <title>My Web Page</title> </head> <body> <h1>This is my title</h1> <p>This is some content.</p> <button>Click Me!</button> </body> </html>"},{"prompt":"Write an SQL query to find the longest length of movies in a database called \\"Movies\\".","completion":"SELECT MAX(length) FROM Movies;"},{"prompt":"Create a JavaScript module to get the current day and month.","completion":"var getDateInfo = (function() { var today = new Date(); var day = today.getDate(); var month = today.getMonth() + 1; return { day : day, month : month }; })(); module.exports = getDateInfo;"},{"prompt":"Determine what header is needed for the following function. def split_list(a_list): mid_point = int(len(a_list) / 2) first_half = a_list[:mid_point] second_half = a_list[mid_point:] return first_half, second_half","completion":"import math def split_list(a_list): mid_point = int(math.floor(len(a_list) / 2)) first_half = a_list[:mid_point] second_half = a_list[mid_point:] return first_half, second_half"},{"prompt":"Express the following in a for loop Print the squares of all the numbers from 1 to 10","completion":"for i in range(1, 11): print(i**2)"},{"prompt":"Write a function which takes a number and returns the Fibonacci sequence up to that number. n = 10","completion":"def fibonacci(n): fib_list = [1] if n == 1: return fib_list else: fib_list.append(1) while len(fib_list) < n: fib_list.append(fib_list[-1] + fib_list[-2]) return fib_list"},{"prompt":"Develop a program to remove an element from a list at the specified index. my_list = [4, 5, 6, 7] index = 2","completion":"def remove_at_index(my_list, index): del my_list[index] return my_list"},{"prompt":"Create a function which swaps the values of two list elements at a specific index. my_list = [1, 2, 3] index1 = 0 index2 = 2","completion":"def swap_elements(my_list, index1, index2): my_list[index1], my_list[index2] = my_list[index2], my_list[index1] return my_list"},{"prompt":"Create an algorithm to determine the maximum element in a given list. my_list = [3, 6, 4, 1]","completion":"def find_max(my_list): max_num = 0 for num in my_list: if num > max_num: max_num = num return max_num"},{"prompt":"Generate a program to perform string formatting on a given string. my_string = \\"Hello, World!","completion":"def string_format(my_string): my_string = my_string.lower() my_string = my_string.capitalize() return my_string"},{"prompt":"Develop a function which returns the position of a given element in a list. my_list = [1, 2, 3, 4] element = 3","completion":"def find_index(my_list, element): for i in range(len(my_list)): if my_list[i] == element: return i"},{"prompt":"Create a program to return all the prime numbers under the nth number. n = 10","completion":"def find_primes(n): primes = [] for num in range(2, n + 1): for i in range(2, num): if (num % i) == 0: break else: primes.append(num) return primes"},{"prompt":"mplement a function in C++ to return the inverse of a given 2-D array. [[1, 2], [3, 4]]","completion":"#include <vector> std::vector< std::vector<int> > find_inverse(std::vector< std::vector<int> > arr) { std::vector< std::vector<int> > inv; inv.resize(arr[0].size(), std::vector<int>(arr.size(), 0)); for (int i = 0; i < arr.size(); i++) for (int j = 0; j < arr[0].size(); j++) inv[j][i] = arr[i][j]; return inv; }"},{"prompt":"Create a function in Java to check if the sum of two given numbers is greater than two times the second number. num1 = 6, num2 = 7","completion":"public static boolean checkSum(int num1, int num2) { if((num1 + num2) > (2 * num2)) return true; else return false; }"},{"prompt":"Write a shell script to list the contents of a given folder. /path/to/folder","completion":"#!/bin/sh ls -al /path/to/folder"},{"prompt":"w would you create a function to calculate factorial of a given number in Python?","completion":"def factorial(n): if n == 0: return 1 return n * factorial(n-1)"},{"prompt":"Delete all comments that start with the string '#' from the given text. The following program writes \\"Hello World!\\" to the screen. # This is a comme","completion":"The following program writes \\"Hello World!\\" to the screen."},{"prompt":"What is the best way to format a large number such that it is easy to read?","completion":"The best way to format a large number is to add separator characters such as comma, underscore, period or space. This makes it easier to read and understand the large number."},{"prompt":"Create a function to raise a given number to the Nth power.","completion":"def power(n, x): if x == 0: return 1 return n * power(n, x-1)"},{"prompt":"Print the number of days in the month of January 2021.","completion":"31 days."},{"prompt":"Create a program to output the squares of all numbers between 1 and 100.","completion":"for i in range(1, 101): print(i**2)"},{"prompt":"w do you set up a yaml list with a specific size?","completion":"You can set up a yaml list with a specific size by declaring the list and adding the required number of elements to it, like so: my_list: - Element 1 - Element 2 - Element 3 - Element 4"},{"prompt":"Generate prime numbers between two given numbers start = 8 end = 20","completion":"The prime numbers between 8 and 20 are 11, 13, 17, 19"},{"prompt":"Split a list into two parts mylist = [1, 2, 3, 4, 5, 6]","completion":"The two parts of the list will be [1, 2, 3, 4] and [5, 6]."},{"prompt":"Edit the following CSS code to make all text in an <H1> tag have a font size of 22 pixels. h1 { color: CornflowerBlue; font-size: 20px; }","completion":"h1 { color: CornflowerBlue; font-size: 22px; }"},{"prompt":"Generate HTML code to create a login page with a username and password field.","completion":"<!DOCTYPE html> <html> <head> <title>Login</title> </head> <body> <div> <h1>Login</h1> <form id=\\"loginForm\\" action=\\"\\" method=\\"post\\"> <label>Username:</label> <input type=\\"text\\" name=\\"username\\" required/> <label>Password:</label> <input type=\\"password\\" name=\\"password\\" required/> <input type=\\"submit\\" value=\\"Login\\"/> </form> </div> </body> </html>"},{"prompt":"Create a SQL query to return every column from a table named 'books' where the title includes the word 'Ember'.","completion":"SELECT * FROM books WHERE title LIKE '%Ember%';"},{"prompt":"Edit the following HTML code so the inner text of all the <p> tags is centered. <p>This is some text.</p> <p>Some more text.</p>","completion":"<p style=\\"text-align: center;\\">This is some text.</p> <p style=\\"text-align: center;\\">Some more text.</p>"},{"prompt":"Generate HTML code to create a button with the text \\"Submit\\".","completion":"<button type=\\"submit\\">Submit</button>"},{"prompt":"Edit the following JavaScript code to create an array of only the even numbers from the given array. [5, 12, 7, 23, 10]","completion":"let arr = [5, 12, 7, 23, 10]; let evenNumbers = arr.filter(num => num % 2 == 0);"},{"prompt":"Write a SQL query to select everyone from the table named 'users' with the first name equal to 'John'.","completion":"SELECT * FROM users WHERE firstname = 'John';"},{"prompt":"Edit the following CSS code to make the background color of all <a> tags equal to '#237ac2'. a { font-size: 16px; color: #efefef; }","completion":"a { font-size: 16px; color: #efefef; background-color: #237ac2; }"},{"prompt":"Extend the following code to ensure that the array of numbers is sorted using insertion sort. arr = [9, 5, 7, 3]","completion":"def insertionSort(arr): for i in range(1, len(arr)): temp = arr[i] j = i - 1 while j >= 0 and temp < arr[j]: arr[j + 1] = arr[j] j -= 1 arr[j + 1] = temp"},{"prompt":"Describe the purpose of a hash table.","completion":"A hash table is a data structure that is used to store key-value pairs. It allows efficient insertion, retrieval, and deletion of items by using a hash function to map keys to values. Hash tables are typically used for faster lookups, and they can be used to implement associative arrays, symbolic dictionaries, and many other data structures."},{"prompt":"Rewrite the following JavaScript function to be more concise. function findMax(nums) { let currentMax = 0; for (let i = 0; i < nums.length; i++) { if (nums[i] > currentMax) currentMax = nums[i]; } return currentMax; }","completion":"function findMax(nums) { return nums.reduce((currentMax, num) => num > currentMax ? num : currentMax, 0); }"},{"prompt":"Debug the following code snippet in Python to find the maximum number accross a list of integers. lst = [-1, 5, 10, 0, -9]","completion":"def find_maximum(lst): max_value = float('-inf') for i in lst: if i > max_value: max_value = i return max_value print(find_maximum(lst))"},{"prompt":"Write an algorithm in JavaScript for finding all common elements between two given integer arrays. [1,7,9] and [2,7,8]","completion":"function findCommonElements(arr1, arr2) { const commonElements = []; arr1.forEach(num => { if(arr2.includes(num)) { commonElements.push(num); } }); return commonElements; } console.log(findCommonElements([1,7,9], [2,7,8]))"},{"prompt":"Create a regex expression in Python that finds all numbers from 1 to 100 inclusive.","completion":"import re regex = re.compile('[1-9]|[1-9][0-9]|100')"},{"prompt":"Create a class in Java for representing a Rectangle that stores length and width attributes and a method to calculate its area.","completion":"public class Rectangle { int length; int width; public Rectangle(int length, int width) { this.length = length; this.width = width; } public int calculateArea() { return this.length * this.width; } }"},{"prompt":"Create a SQL query to find the number of employees with the same name as the given name 'John'.","completion":"SELECT COUNT(*) FROM employees WHERE name = 'John';"},{"prompt":"Write a Java code snippet for creating an array with 10 random numbers between 1 and 50.","completion":"int[] randNums = new int[10]; Random rand = new Random(); for(int i = 0; i < randNums.length; i++) { randNums[i] = rand.nextInt(50) + 1; }"},{"prompt":"Create a regex expression that matches all strings with four alphabetic characters.","completion":"^[a-zA-Z]{4}"},{"prompt":"Create a SQL query to group the table by age and calculate the average salary of each group. Table name: employees Fields: name (varchar(255)), age (int), salary (int)","completion":"SELECT AVG(salary) FROM employees GROUP BY age;"},{"prompt":"What is the purpose of the SQL HAVING clause?","completion":"The HAVING clause is used in SQL to restrict the results of a query based on a set of conditions. It filters records that are returned from the GROUP BY clause, and is used in conjunction with aggregate functions used in the SELECT clause. It is similar to the WHERE clause, but WHERE is used to filter records before they are grouped, while HAVING is used to filter the results of the group."},{"prompt":"Construct a JavaScript program to find all the prime numbers within a range of numbers range = [2,10]","completion":"function findPrimes(range) { let primes = []; for (let i=range[0]; i< range[1]; i++) { if (checkPrime(i)) { primes.push(i); } } return primes; } function checkPrime(num) { for (let i=2; i<=Math.sqrt(num); i++) { if (num % i == 0) { return false; } } return true; }"},{"prompt":"Create a function to find the sum of the squares of all natural numbers up to a certain number. n = 10","completion":"def sumOfSquares(n): sum = 0 for i in range(1, n+1): sum += i*i return sum"},{"prompt":"Write a java code to take a string as input and return the number of words present in it.","completion":"import java.util.StringTokenizer; public class WordCounter { public static int countWords(String str) { StringTokenizer tokenizer = new StringTokenizer(str); return tokenizer.countTokens(); } public static void main(String[] args) { String str = \\"Geeks for Geeks class\\"; System.out.println(\\"Number of words in a given String : \\" + countWords(str)); } }"},{"prompt":"Train a model in PyTorch to classify the following dataset into 4 classes.","completion":"import torch # Load the dataset train_data, valid_data, test_data = torch.utils.data.random_split(dataset, (1000, 400, 200)) # Build the model model = torch.nn.Sequential( torch.nn.Linear(7, 15), torch.nn.ReLU(), torch.nn.Linear(15, 4), torch.nn.Softmax() ) # Compile the model criterion = torch.nn.CrossEntropyLoss() optimizer = torch.optim.Adam(model.parameters(), lr=0.001) # Train the model model.train() for epoch in range(10): loss = 0 for data, target in train_loader: data, target = data.to(device), target.to(device) optimizer.zero_grad() output = model(data) loss += criterion(output, target).item() loss.backward() optimizer.step() print(f'Epoch: {epoch}, Loss: {loss/len(train_data)}')"},{"prompt":"Delete all duplicated characters in a string. String: abcabcabc","completion":"abc"},{"prompt":"Compare and contrast SQL and NoSQL databases.","completion":"SQL databases store data in predefined tables and use structured query language (SQL) for querying the data. In contrast, NoSQL databases are designed to store large amounts of unstructured data and are commonly used for distributed data processing. Unlike SQL, NoSQL databases are known for their flexibility and scalability, since they do not require a fixed schema. They also offer a cost-effective alternative to traditional relational databases when large amounts of data must be processed."},{"prompt":"What is Naive Bayes classification?","completion":"Naive Bayes classification is a supervised machine learning technique used for classification tasks which is based on the Bayes Theorem. It assumes that each input feature is independent of each other, which is called the assumption of \\"naive\\" Bayes. The algorithm uses prior knowledge of the data set and determines the probability of each class, given the data. Based on these probabilities it then assigns a class to the input, using a decision rule (usually the maximum a posteriori likelihood), to maximize the overall accuracy of the model."},{"prompt":"Write a code snippet to print a right aligned triangle of asterisks. Length: 5","completion":"* ** *** **** *****"},{"prompt":"What is the significance of a long identifier name in programming?","completion":"A long identifier name is important for programming as it clearly and accurately describes the purpose of the identifier. It is easier for another programmer to understand what a specific code does if the identifier names are descriptive of their purpose. Long and descriptive names also make the code more organized and help to preserve the syntax. In addition, it allows for better debugging and easier maintenance in the long run."},{"prompt":"w can a programmer optimize a code to improve its performance?","completion":"A programmer can optimize a code to improve its performance by using techniques like loop optimization, code refactoring, resource optimization, cache optimization, and parallel computing. Loop optimization involves reducing the number of iterations in loops, using variables instead of literals, removing redundant loops, debugging errors, and choosing the most efficient looping techniques. Code refactoring involves restructuring the code to make it more concise, readable, and maintainable. Resource optimization involves using efficient data structures, such as hash tables and balanced trees, to reduce computational resources as well as using optimized algorithms. Cache optimization involves designing well-crafted caches to store frequently accessed data, while parallel computing allows multiple tasks to be completed simultaneously on different CPU cores."},{"prompt":"What is the purpose of using an exception handler?","completion":"The purpose of an exception handler is to catch and handle any unexpected errors that may occur while code is executing. It is a code block which is used to detect and handle runtime errors when they occur. This allows the code to immediately handle the error, thus avoiding a crash and providing the user with meaningful feedback."},{"prompt":"w does debugging help a programmer?","completion":"Debugging helps a programmer by identifying the source of errors or bugs in the program. Through debugging, a programmer can pinpoint exactly where the issue is, rather than having to spend time searching through lines of code trying to find the problem. Debugging also allows a programmer to make well-informed decisions when trying to resolve the issue. By understanding the issue in detail and being able to trace the code line by line, the programmer can better assess which possible solutions will be most effective."},{"prompt":"Generate a multiplication table for a given number in JavaScript. n = 5;","completion":"function createmultiplicationTable(n) { for ( var i = 1; i <=10; i++ ) { document.write(n+\\" x \\"+i+\\" = \\"+n*i,\\"<br>\\"); } } createmultiplicationTable(n);"},{"prompt":"Build a function to convert an adjacency matrix into an adjacency list. A = [[0, 1, 0, 0], [1, 0, 1, 1], [0, 1, 0, 0], [0, 1, 0, 0]]","completion":"def adjacency_matrix_to_list(A): \\"\\"\\" Convert an adjacency matrix to an adjacency list Parameters ---------- A: 2D list representing an adjacency matrix Returns ------- adj_list: Adjacency list \\"\\"\\" n = len(A) adj_list = [[] for i in range(n)] for i in range(n): for j in range(n): if A[i][j] == 1: adj_list[i].append(j) return adj_list"},{"prompt":"Explain why we use a Dictionary instead of Lists when we need to store multiple pairs of data (key-value pair)?","completion":"Lists are used to store an ordered collection of elements, but they are not suitable for storing key-value pairs of data because they don't provide an efficient way to look up values associated with specific keys. Dictionaries provide a more efficient way to store key-value pairs of data, as they use a hashmap underlying data structure. This allows them to quickly determine the value associated with a given key, which makes the fetching and insertion of data much faster and more efficient. Additionally, dictionaries provide the flexibility to insert and update multiple pairs of key-value data."},{"prompt":"Mark the output of the following two lines of C++ code int a = 10; int b = ++a + ++a;","completion":"a = 11 b = 23"},{"prompt":"Write a Regular Expression to match any line with vowels followed by numbers","completion":"w[aeiouAEIOU]d+"},{"prompt":"Find the number of unique subsets of a given set given_set = {1, 2, 3}","completion":"def unique_subsets_count(given_set): \\"\\"\\" Find the number of unique subsets of a given set Parameters ---------- given_set: Set of elements Returns ------- count: Number of unique subsets \\"\\"\\" count = 1 << len(given_set) return count"},{"prompt":"Design a CSS class to center align a div with class name \\"main\\".","completion":".main { margin: 0 auto; width: 50%; text-align: center; }"},{"prompt":"Create a JavaScript object with the keys \\"name\\", \\"age\\", and \\"location\\".","completion":"var person = { name: 'John Doe', age: 26, location: 'New York' };"},{"prompt":"Write a MySQL query to create a database called \\"flower_shop\\".","completion":"CREATE DATABASE flower_shop;"},{"prompt":"Parse the given XML document. <?xml version=\\"1.0\\" encoding=\\"UTF-8\\"?> <bookstore> <book> <title>A Game of Thrones</title> <author>George R. R. Martin</author> <price>9.99</price> </book> <book> <title>A Clash of Kings</title> <author>George R. R. Martin</author> <price>12.99</price> </book> </bookstore>","completion":"#import the required modules import xml.etree.ElementTree as ET # parse the given xml document tree = ET.parse('document.xml') root = tree.getroot() # iterate over all the elements in the document for book in root.findall('book'): title = book.find('title').text author = book.find('author').text price = book.find('price').text # print the element and its attribute print('Title:', title, ', Author:', author, ', Price:', price)"},{"prompt":"Write a shell script to monitor the usages of CPU and RAM.","completion":"#!/bin/bash # Display free memory echo \\"Free Memory:\\"; free -h; # Get disk partitions with available disk space echo \\"Available disk space:\\" df -h; # Get CPU utilization info echo \\"CPU Utilization: \\" top -bn1 | grep \\"Cpu(s)\\" | sed \\"s/.*, *([0-9.]*)%* id.*/1/\\" | awk '{print 100 - 1\\"%\\"}';"},{"prompt":"Develop a Django application to store car model, make and year in the database.","completion":"# create Django project django-admin startproject car_database # create Django app cd car_database django-admin startapp cars # Add 'cars' to INSTALLED_APPS in settings.py INSTALLED_APPS = ( ... 'cars', ) # Create models.py file class Car(models.Model): model = models.CharField(max_length=50) make = models.CharField(max_length=50) year = models.IntegerField() # Make and apply migrations python manage.py makemigrations python manage.py migrate"},{"prompt":"Generate a bar chart in R using the given dataset. Number of Movies Watched in the Last 6 Months Month Number January 5 February 7 March 9 April 8 May 12 June 11","completion":"# install packages install.packages(\\"ggplot2\\") # import required libraries library(ggplot2) # data movies <- c(5, 7, 9, 8, 12, 11) months <- c(\\"January\\", \\"February\\", \\"March\\", \\"April\\", \\"May\\", \\"June\\") # create dataframe object data <- data.frame(months, movies) # plot ggplot(data, aes(x = months, y = movies)) + geom_bar(stat = \\"identity\\", fill = \\"#0066FF\\")"},{"prompt":"Use HTML web storage to exchange data between a web page and the server.","completion":"// To store data localStorage.setItem(\\"name\\", \\"John Doe\\"); // To get data var name = localStorage.getItem(\\"name\\"); // To remove data localStorage.removeItem(\\"name\\");"},{"prompt":"Write code to find the powers of two in a given range. Range: 0 to 20","completion":"def powers_of_two(start, end): powers = [] current_power = 1 while current_power < end: if current_power >= start: powers.append(current_power) current_power *= 2 return powers"},{"prompt":"Build a quickly-sortable tree from a given array. Array = [3, 8, 4, 5, 2, 10, 7]","completion":"class TreeNode: def __init__(self, key): self.left = None self.right = None self.key = key def quick_sort_tree(arr): if not arr: return None pivot = arr[0] pivot_node = TreeNode(pivot) left_subtree_elements = [x for x in arr[1:] if x < pivot] right_subtree_elements = [x for x in arr[1:] if x >= pivot] pivot_node.left = quick_sort_tree(left_subtree_elements) pivot_node.right = quick_sort_tree(right_subtree_elements) return pivot_node"},{"prompt":"Design a class for a grocery store inventory management system.","completion":"class GroceryInventory: def __init__(self): self.inventory = {} def add_item(self, item, quantity): if item not in self.inventory: self.inventory[item] = quantity else: self.inventory[item] += quantity def remove_item(self, item, quantity): if item in self.inventory: self.inventory[item] -= quantity if self.inventory[item] <= 0: del self.inventory[item] def get_inventory(self): return self.inventory"},{"prompt":"Write a function that returns the number of times an element appears in a sorted array. Array = [3, 8, 10, 10, 10, 13, 15] Element = 10","completion":"def get_count(arr, element): left_index = bisect.bisect_left(arr, element) right_index = bisect.bisect_right(arr, element) return right_index - left_index"},{"prompt":"Given two strings, find the minimum number of operations required to convert one string to the other. String 1 = \\"horse\\" String 2 = \\"ro","completion":"def find_edit_distance(str1, str2): len_str1 = len(str1) len_str2 = len(str2) matrix = [[0] * (len_str2+1) for _ in range(len_str1+1)] for i in range(len_str1+1): matrix[i][0] = i for j in range(len_str2+1): matrix[0][j] = j for i in range(1, len_str1+1): for j in range(1, len_str2+1): if str1[i-1] == str2[j-1]: matrix[i][j] = matrix[i-1][j-1] else: matrix[i][j] = min(matrix[i-1][j]+1, matrix[i][j-1]+1, matrix[i-1][j-1]+1) return matrix[len_str1][len_str2]"},{"prompt":"mplement a function to perform in-place array rotation. arr = [1, 2, 3, 4, 5] rotation = 2","completion":"def rotate_in_place(arr, rotation): rotation %= len(arr) start = 0 count = 0 while count < len(arr): current_index = start current_value = arr[start] next_index = (current_index + rotation) % len(arr) while next_index != start: next_value = arr[next_index] arr[next_index] = current_value current_index = next_index current_value = next_value next_index = (current_index + rotation) % len(arr) count += 1 arr[start] = current_value start += 1 count += 1"},{"prompt":"Given an array of numbers, find the longest increasing sequence in the array. Array = [2, 3, 5, 4, 7, 9, 6, 8]","completion":"def longest_increasing_sequence(arr): lengths = [1]*len(arr) for i in range(1, len(arr)): for j in range(i): if arr[i] > arr[j]: lengths[i] = max(lengths[i], lengths[j] + 1) max_length_index = 0 for i in range(len(lengths)): if lengths[i] > lengths[max_length_index]: max_length_index = i current_index = max_length_index sequence = [arr[max_length_index]] for i in range(max_length_index-1, -1, -1): if lengths[i] == lengths[current_index] - 1 and arr[i] < arr[current_index]: sequence.append(arr[i]) current_index = i sequence.reverse() return sequence"},{"prompt":"Create a query in SQL to find the record with id 2 from the table \\"users\\". Table Name: user","completion":"SELECT * from users WHERE id = 2;"},{"prompt":"Write a function that takes two strings and determines if the first string is one character away from the second string. String 1 = \\"cat\\", String 2 = \\"co","completion":"def oneAway(str1, str2): len1 = len(str1) len2 = len(str2) if abs(len1 - len2) > 1: return False i = 0 j = 0 count = 0 while i < len1 and j < len2: if str1[i] != str2[j]: if count == 1: return False count = 1 if len1 > len2: i += 1 elif len1 < len2: j += 1 else: i +=1 j += 1 else: i += 1 j += 1 if i < len1 or j < len2: count += 1 return count == 1"},{"prompt":"Create a while loop in Python to increment a counter by 1 until it reaches 10. counter = 0","completion":"while counter < 10: counter += 1"},{"prompt":"Manipulate a string in C++ to delete all special characters from it. String = “Hello!&@ This#%^ is a string”","completion":"string s = \\"Hello!&@ This#%^ is a string\\"; for (int i = 0; i < s.length(); i++) { if (!isalnum(s[i])) s.erase(s.begin() + i); }"},{"prompt":"Assign the variable \\"age\\" with the value 18.","completion":"int age = 18;"},{"prompt":"Write a function to traverse a tree using depth-first search algorithm in Java.","completion":"public void traverseTree(Node root) { S tack<Node> stack = new Stack<>(); stack.push(root); while (!stack.isEmpty()) { Node node = stack.pop(); // Process the node if (node.right != null) stack.push(node.right); if (node.left != null) stack.push(node.left); } }"},{"prompt":"Create a Regex in JavaScript to extract all words of length 6 or more from a sentence. Sentence = \\"This is a sample sentence with some words of length 6 or more","completion":"let regex = /w{6,}/g; let words = sentence.match(regex);"},{"prompt":"dentify the data structure most suitable for storing 100 unique integers.","completion":"Hash Table"},{"prompt":"Write a loop in Java to add all elements of a given array. int[] arr = {1, 2, 3, 4, 5};","completion":"int sum = 0; for (int i = 0; i < arr.length; i++) sum += arr[i];"},{"prompt":"Explain the process of linear search in a few sentences.","completion":"Linear search is a technique for searching for an element in a list by repeatedly checking every element until a match is found or the end of the list is reached. It is typically implemented as a loop, where each element is compared to the search key until a match is found, or until all the elements have been searched."},{"prompt":"Suppose a set of n numbers and write a program to calculate the median int[] numbers = {3,7,5,14,15,17};","completion":"int n = numbers.length; if (n % 2 == 0) { // if n is even int m = n/2; double median = (numbers[m-1] + numbers[m]) / 2.0 } else { // if n is odd int m = (n+1) / 2; double median = numbers[m-1]; }"},{"prompt":"w would you test a Turing machine?","completion":"A Turing machine can be tested by providing sample inputs that cover various cases and examining the output. An ideal test would consist of input strings that cover all possible scenarios, such as inputs with no computation, inputs with long computations, inputs that flip a single bit, etc. Additionally, Turing machine implementations should be tested for edge cases, such as providing inputs with invalid syntax or supplying an input of exceptional size."},{"prompt":"Write a java program to generate a Fibonacci series up to N numbers int N = 10;","completion":"public class Fibonacci{ public static void main(String args[]) { int n1=0,n2=1,n3,i,count=10; System.out.print(n1+\\" \\"+n2);//printing 0 and 1 for(i=2;i<count;++i)//loop starts from 2 because 0 and 1 are already printed { n3=n1+n2; System.out.print(\\" \\"+n3); n1=n2; n2=n3; } } }"},{"prompt":"Construct an algorithm to detect a cycle in a linked list","completion":"A cycle can be detected in a linked list using the Floyd's Algorithm. This algorithm works by using two pointers; a slow pointer and a fast pointer. The slow pointer moves one node of the list at a time, while the fast pointer moves two nodes at a time. If the two pointers point to the same node, then a cycle exists in the list."},{"prompt":"Create a function that takes an array of integers and prints out their product. array = [1,2,3,4,5]","completion":"def product(arr): product = 1 for x in arr: product *= x return product # Driver Code array = [1,2,3,4,5] print(product(array))"},{"prompt":"Write a function to determine the largest integer in an unordered array. array = [6, 8, 1, 3, 4]","completion":"def largest_int(arr): largest_int = arr[0] for i in range(1, len(arr)): if arr[i] > largest_int: largest_int = arr[i] return largest_int # Driver Code array = [6, 8, 1, 3, 4] print(largest_int(array))"},{"prompt":"Write a code to generate a random password using random library of Python. length = 8","completion":"import string import random def generate_password(length): # Generate a random string of characters letters = string.ascii_letters + string.digits password = ''.join(random.choice(letters) for i in range(length)) return password # Driver Code length = 8 print(generate_password(length))"},{"prompt":"Build a program to print the frequency of characters in an input string. input_string = \\"abcabcabcabc","completion":"def frequency_chart(input_string): # Dictionary to store character frequency freq = {} # Loop over the input string for char in input_string: if char in freq: freq[char] += 1 else: freq[char] = 1 return freq # Driver Code input_string = \\"abcabcabcabc\\" print(frequency_chart(input_string))"},{"prompt":"Write a function to get a string made of the first and last two characters of a given string. input_string = \\"spring","completion":"def string_two_characters(input_string): # Get the length of the string n = len(input_string) # Return the string which is made of the first and last two characters return input_string[0:2] + input_string[n-2:n] # Driver Code input_string = \\"spring\\" print(string_two_characters(input_string))"},{"prompt":"Return the maximum number of 256-bit numbers that fit in a 1GB RAM.","completion":"The maximum number of 256-bit numbers that fit in a 1GB RAM is 134217728."},{"prompt":"What is the maximum number of nodes in a full binary tree with a given height? Height: 4","completion":"The maximum number of nodes in a full binary tree with a given height of 4 is 2^4 - 1, which is 15."},{"prompt":"Convert a string to its corresponding integer value. String: \\"123","completion":"def string_to_int(s): res = 0 for char in s: res = res * 10 + int(char) return res"},{"prompt":"Remove all duplicates from an array. [1, 1, 2, 3, 4, 5, 3, 4]","completion":"def remove_duplicates(arr): res = [] seen = set() for element in arr: if element not in seen: res.append(element) seen.add(element) return res"},{"prompt":"What is the output of the following C code? int main() { int x = 10; x = x * -0.5; printf(\\"%d\\", x); return 0; }","completion":"The output of the above program is -5."},{"prompt":"Create a new vector of size 5 filled with zeros.","completion":"vec = [ 0., 0., 0., 0., 0. ]"},{"prompt":"mplement the Euclidean distance formula using a def function in Python.","completion":"def euclidean_dist(x, y): # write function here dist = 0 # iterate through each coordinate of the points for i in range(len(x)): # calculate the distance between corresponding coordinates dist += (x[i]-y[i])**2 return (dist**0.5)"},{"prompt":"Create a switch statement that prints \\"Yay!\\" if input is 1 and \\"Nay!\\" if input is 2.","completion":"switch(input){ case 1: console.log(\\"Yay!\\"); break; case 2: console.log(\\"Nay!\\"); break; default: console.log(\\"Invalid Input\\") break; }"},{"prompt":"Write a for loop for printing the first 10 powers of 2.","completion":"for(let i = 0; i <= 10; i++){ console.log(2**i); }"},{"prompt":"Create a tower of stars made up of 10 lines of increasing star lengths.","completion":"starString = \\"*\\"; for (let i = 1; i <= 10; i++){ console.log(starString); starString += \\"*\\"; }"},{"prompt":"Change the background color of all element with the class \\"container\\" to blue.","completion":"document.querySelectorAll(\\".container\\").forEach(function(container){ container.style.backgroundColor = \\"blue\\"; });"},{"prompt":"Print out the sum of each row of a given 2 dimensional array. arr = [ [1, 1, 1], [2, 2, 2], [3, 3, 3] ]","completion":"// Total sum of each row for(let row of arr){ let total = 0 for(let col of row){ total += col } console.log(total) }"},{"prompt":"Using conditional statements, print out whether a given number is odd or even. number = 7","completion":"if(number % 2 == 0){ console.log('\`number\` is even') } else { console.log('\`number\` is odd') }"},{"prompt":"Write a function for removing duplicate values from an array.","completion":"function removeDuplicates(arr){ let result = []; arr.forEach(function(element){ if(!result.includes(element)){ result.push(element); } }); return result; }"},{"prompt":"Refactor this function to be less complex and more readable. def calculate_price(products): total_price=0 for p in products: total_price+=p[0]*p[1] return total_price","completion":"def calculate_price(products): total_price = 0 for price, quantity in products: total_price += price * quantity return total_price"},{"prompt":"Write a regular expression to match emails with domain example.com","completion":"/[a-zA-Z0-9_-.]+@example.com/"},{"prompt":"Create a database table for a social media application.","completion":"CREATE TABLE users ( id int NOT NULL AUTO_INCREMENT, username varchar(255) NOT NULL, password varchar(255) NOT NULL, email varchar(255) NOT NULL, PRIMARY KEY (id) );"},{"prompt":"Create a React component for displaying a list of items with name, description, and price fields.","completion":"import React from 'react'; const ItemList = ({items}) => { return ( <div className=\\"item-list\\"> {items.map(item => ( <div className=\\"item\\" key={item.name}> <div className=\\"name\\">{item.name}</div> <div className=\\"description\\">{item.description}</div> <div className=\\"price\\">{item.price}</div> </div> ))} </div> ); }; export default ItemList;"},{"prompt":"Compare the following two strings and print out which one is bigger. str1=\\"Hello\\" str2=\\"World","completion":"let str1=\\"Hello\\"; let str2=\\"World\\"; if(str1 > str2){ console.log(str1 + \\" is bigger than \\" + str2); } else{ console.log(str2 + \\" is bigger than \\" + str1); }"},{"prompt":"Given an array of strings, generate an object with the strings as keys and the length of each string as values. let arr = [\\"Hello\\", \\"World\\", \\"Foo\\", \\"Bar\\"]","completion":"let arr = [\\"Hello\\", \\"World\\", \\"Foo\\", \\"Bar\\"]; let obj = {}; for(let i=0; i<arr.length; i++){ obj[arr[i]] = arr[i].length; } console.log(obj); // {Hello: 5, World: 5, Foo: 3, Bar: 3}"},{"prompt":"Create a css class for a card component with rounded corners, a light shadow, and a maximum width of 500px.","completion":".card { border-radius: 10px; box-shadow: 0 0 5px rgba(0, 0, 0, 0.2); max-width: 500px; }"},{"prompt":"Update the following code to add a method to retrieve elements from the list. class MyList def initialize @list = [] end end","completion":"class MyList def initialize @list = [] end def get(index) @list[index] end end"},{"prompt":"Given an array of numbers, calculate the average. let arr=[5,7,8,9]","completion":"let arr=[5,7,8,9]; let sum=0; for(let i=0; i<arr.length; i++){ sum+=arr[i]; } let average=sum/arr.length; console.log(average); // 7.5"},{"prompt":"Write an algorithm to search for numbers in an array and replace them with their square roots. [1,2,3,4,5]","completion":"Function searchAndReplace(nums): for i in range(len(nums)): if nums[i] >= 0: nums[i] = math.sqrt(nums[i]) return nums"},{"prompt":"Write a HTML code to display a ordered list of five items inside a div with the classname \\"list\\".","completion":"<div class=\\"list\\"> <ol> <li>Item 1</li> <li>Item 2</li> <li>Item 3</li> <li>Item 4</li> <li>Item 5</li> </ol> </div>"},{"prompt":"dentify the correct loop structure to traverse through a list of numbers.","completion":"for number in list_of_numbers:"},{"prompt":"Create a 2D array with n columns and m rows and fill it with random numbers. Rows: 6, Columns: 8","completion":"import random def create2DArray(row, col): arr = [[random.randint(1,100) for j in range(col)] for i in range(row)] return arr"},{"prompt":"Create a stack and add two elements to it.","completion":"class Stack(): def __init__(self): self.items = [] def push(self, item): self.items.append(item) def pop(self): return self.items.pop() stack = Stack() stack.push(5) stack.push(7)"},{"prompt":"Design a program to detect an infinite loop in a given program.","completion":"def detectInfiniteLoop(program): setOfInstructions = set() for line in program.split('n'): if line in setOfInstructions: return True setOfInstructions.add(line) return False"},{"prompt":"Acquire the necessary data to apply linear regression on the following problem statement Predict the average property value in a particular city given population density, housing costs and average income.","completion":"The necessary data to apply linear regression on the problem statement would include population density, housing costs and average income of the particular city. Additionally, the average property value should also be collected as the target variable to be predicted. The data could be collected from public sources like census websites or through primary data collection methods such as surveys."},{"prompt":"Create a JavaScript program that updates the navigation menu based on user preferences","completion":"function updateNavMenu(preferences) { // code to update navigation menu for each user preference let html = ''; for (let preference in preferences) { if (preferences[preference]) { html += '<li>' + preference + '</li>'; } } document.getElementById(\\"navMenu\\").innerHTML = html; }"},{"prompt":"Create a Django application to serve an API endpoint The API endpoint should take an ID and return a user's name and age.","completion":"The output would involve creating a Django application with an API view that takes in the ID as the parameter and returns a dictionary containing the user's name and age. The Django application should also include the necessary models and associated functions, a URL configuration, and a core application to be used in the root project directory."},{"prompt":"Design an algorithm to help a user navigate through a maze","completion":"A possible algorithm to navigate through a maze could involve a Depth-First search approach. This approach involves finding a vertex within the maze, marking it as visited and then exploring all of its unvisited neighbors. After all of the neighbors are explored, the algorithm continues to explore the closest unvisited neighbor which is found on the same level of depth. This process continues until the user reaches the end of the maze."},{"prompt":"Translate the following sentiment analysis model written in Python to JavaScript model = tf.keras.models.Sequential([ tf.keras.layers.Dense(128, activation='relu', input_shape=(tem_train_data.shape[1],)), tf.keras.layers.Dense(2, activation='softmax') ])","completion":"const model = tf.sequential(); model.add(tf.layers.dense({units: 128, activation: 'relu', inputShape: tem_train_data.shape[1]})); model.add(tf.layers.dense({units: 2, activation: 'softmax'}));"},{"prompt":"Develop a React Native application to display a list of recent news articles","completion":"The output would involve creating a React Native application with a News List component which fetches news data from an API and displays it as a list. The application should include features to sort the news list by category and to pull to refresh for the latest news. Additionally, the application should support the navigation between different categories and be responsive for different display sizes."},{"prompt":"Write a MySQL query to join 2 tables Table1: users ID | Name | Email Table2: orders OrderID | UserID | OrderDate","completion":"SELECT users.ID, users.Name, users.Email, orders.OrderID, orders.OrderDate FROM users INNER JOIN orders ON users.ID = orders.UserID;"},{"prompt":"Create a web application using Flask, which provides a search form","completion":"The output would involve creating a web application using Flask that renders a search form. The search form should be able to take in a user's query, process the query and return relevant search results in a structured format. Additionally, the application should include an appropriate error handler for incorrect or invalid queries."},{"prompt":"Design a data structure for a deck of cards","completion":"A data structure for a deck of cards could involve creating an array of objects or associative arrays, where each object or associative array corresponds to a card in the deck. The object or associative array should include properties such as suit, rank, and value to store information about the card. Additionally, the data structure should also include functions to manipulate the deck such as shuffle, draw, and sort."},{"prompt":"Write a MySQL query to find the last four digit of the customer ID from the customer table. customer table | customer_id | customer_name | address | -------------------------------------------- | 000001 | John Doe | Street 1 | | 000002 | Jane Doe | Street 2 | | 000003 | John Smith | Street 3 |","completion":"SELECT RIGHT(customer_id, 4) FROM customer;"},{"prompt":"Create a Tkinter window with a label that says “Hello World!”","completion":"import tkinter root = tkinter.Tk() label = tkinter.Label(root, text=\\"Hello World!\\") label.pack() root.mainloop()"},{"prompt":"Create a JavaScript object with two properties, x and y, and set them to 10 and 20, respectively.","completion":"let obj = { x: 10, y: 20 };"},{"prompt":"Write a code to generate a random float between -5 and 5.","completion":"import random random_float = random.uniform(-5, 5) print(random_float)"},{"prompt":"Create a CSS class and style it to give any HTML element a blue background color.","completion":".blue-bg { background-color: #4f7ed4; }"},{"prompt":"Write a code to find the most frequently occurring item in the list. [17, 25, 6, 30, 14, 28, 6, 20, 13, 25]","completion":"def most_frequent(data): freq = {} for x in data: if x in freq: freq[x] += 1 else: freq[x] = 1 max_freq = 0 for x in freq.values(): if x > max_freq: max_freq = x most_frequent_item = [] for x in freq.keys(): if freq[x] == max_freq: most_frequent_item.append(x) return most_frequent_item data = [17, 25, 6, 30, 14, 28, 6, 20, 13, 25] print(most_frequent(data))"},{"prompt":"Create a class to illustrate the concept of encapsulation in Python.","completion":"class Car: def __init__(self, brand, model, year): self.__brand = brand self.__model = model self.__year = year def get_brand(self): return self.__brand def get_model(self): return self.__model def get_year(self): return self.__year"},{"prompt":"Create a function that takes two strings as parameters, compares them, and returns 0 if they are equal, 1 if the first string is greater, and -1 if the second string is greater.","completion":"def compare_strings(str1, str2): if str1 == str2: return 0 elif str1 > str2: return 1 else: return -1"},{"prompt":"Using the given context and dataframe \\"df\\", write code to select the targets and features. Context: We are building a logistic regression model. DataFrame \\"df\\": Index | Temp (C) | Humidity | Rain (mm) | Rainfall (yes/no) 0 | 15 | 80 | 0 | No 1 | 16 | 75 | 0 | No 2 | 17 | 64 | 10 | Ye","completion":"targets = df['Rainfall (yes/no)'] features = df[['Temp (C)', 'Humidity', 'Rain (mm)']]"},{"prompt":"Write code to calculate the cosine similarity between the two given sentences Sentences: \\"this is a great day\\" and \\"this is a superb day","completion":"from sklearn.metrics.pairwise import cosine_similarity sentence1 = \\"this is a great day\\" sentence2 = \\"this is a superb day\\" vector1 = sentence1.split() vector2 = sentence2.split() cos_sim = cosine_similarity([vector1], [vector2]) print(cos_sim[0][0])"},{"prompt":"Using \\"dictionary\\" as the input, write code to print out the frequency of the words in the dictionary. dictionary = {'apple':2, 'banana':3, 'cherry':1}","completion":"for key, value in dictionary.items(): print(\\"The frequency of {} is {}\\".format(key, value))"},{"prompt":"Write an SQL query to select the \\"name\\" and \\"salary\\" columns of all employees with salary greater than 10000. Table name: employee","completion":"SELECT name, salary FROM employees WHERE salary > 10000;"},{"prompt":"What is the value of \\"c\\" after the code is executed? a = 10 b = 20 c = a + b","completion":"30."},{"prompt":"Sort the list in Ascending order of the second element of each element in the list. list = [(-5, 2), (1, 0), (1, 3), (3, 4), (-3, -9), (-10, -2)]","completion":"sorted_list = sorted(list, key=lambda x: x[1]) print(sorted_list) # Output: [(-3, -9), (1, 0), (-10, -2), (-5, 2), (1, 3), (3, 4)]"},{"prompt":"What is the data type of the given expression? expression = 10 + 20","completion":"Integer."},{"prompt":"Using the given code, extract the year from the given dateTime object. import datetime dateTime = datetime.date.today()","completion":"year = dateTime.year print(year) # Output: 2021"},{"prompt":"w do you develop a software application through agile?","completion":"Developing a software application through agile is a process that systematically focuses on small, incremental changes that are then tested on a regular basis to ensure their effectiveness. This type of development conflicts with traditional linear development approaches that focus on big, planned and predetermined changes. Agile development cycles include iterative sprints and frequent collaboration between stakeholders to ensure the project is proceeding in the right direction. In agile, software development proceeds in a cyclic and iterative manner, which involves planning, designing, coding, and testing. During the sprints, stakeholders review and discuss software progress to ensure continued progress is being made and to help with decision making. Agile development typically involves using automated tools and technologies such as configuration management software and integrated development environments to facilitate quicker development cycles."},{"prompt":"w is AI used in finance?","completion":"AI is being increasingly used in finance to improve the accuracy and speed of processes, make better-informed decisions, and streamline customer service. Financial institutions use AI to automate and speed up operations such as accounts payable and receivable, loans underwriting, money management, fraud detection, and decision-making in stock markets. AI can also be used to help manage large amounts of data and detect patterns in the data. For example, AI can be used to perform sentiment analysis on large amounts of customer data or to detect potential fraudulent activity. It can also provide insights into customer behavior and preferences that can be used to personalize services and create targeted product offerings."},{"prompt":"Create an array with the following numbers: 3,2,4,5,8.","completion":"let myArray = [3, 2, 4, 5, 8];"},{"prompt":"w can you utilize SQL in machine learning?","completion":"SQL is useful in machine learning projects because it allows the data scientist to organize and store large datasets. SQL can also be used to join different datasets and merge unstructured datasets efficiently. Further, with SQL, data scientists can filter and prepare the dataset for further machine learning modeling. Also, SQL can be used to find out the statistical properties of a dataset, such as maximum values, mean, median and other summary outputs, which are very useful for machine learning projects. Finally, SQL can be used to predict future values through statistical models."},{"prompt":"w can you use recurrent neural networks for sequence prediction?","completion":"Recurrent neural networks (RNNs) can be used for sequence prediction tasks. RNNs are powerful models that are able to capture patterns from sequences of data and can remember information from previous inputs. The network is comprised of layers and nodes, and each layer contains nodes that are connected to the previous layer. When a sequence is fed into the network, the nodes of the first layer are activated based on the input. The output of the first layer serves as the input for the next layer, and so on. As the sequence progresses, the internal state of the network is updated and used to make predictions. The output of the RNN is then a prediction of the next element in the sequence."},{"prompt":"Explain one of the most significant application of neural networks in computer science.","completion":"One of the most significant applications of neural networks in computer science is image recognition. Neural networks, with their deep learning capabilities, are able to tackle complex image recognition problems that are difficult to solve with traditional algorithmic approaches. Neural network based systems have been used successfully to identify objects in photos, process real-time video frames, and even to diagnose medical conditions such as cancer."},{"prompt":"Design a memory efficient algorithm for a given problem. Given a list of integers, find the average of all the elements.","completion":"def find_average(nums): length = len(nums) total = 0 for i in range(length): total += nums[i] return total / length"},{"prompt":"w would you code a basic spell-checker","completion":"def spell_checker(input_text): correct_words = [] wrong_words = [] for word in input_text.split(): if is_correct(word): correct_words.append(word) else: wrong_words.append(word) return correct_words, wrong_words # where is_correct() is an appropriate function to determine if the word is spelled correctly or not"},{"prompt":"What data structure would you use to store a matrix in Python","completion":"The best data structure to store a matrix in Python is a two-dimensional list. A two-dimensional list is a list of lists where each sub-list represents a row in the matrix. This makes it easy to access and modify values in the matrix."},{"prompt":"Find the angle between two given vectors","completion":"The angle between two vectors can be found using the following formula: theta = arccos(v1.v2 / (||v1||*||v2||)), where v1 and v2 represent the two given vectors and ||v1|| and ||v2|| are the magnitudes of the vectors."},{"prompt":"Why is indexing important in databases?","completion":"Indexing in databases is important because it allows for faster access to data. Indexing works by creating an index data structure that stores a specific value or field in the database and a pointer to the data record containing that value. This strategy increases the speed of the query operations by allowing programs to quickly search the index to find the data instead of searching each record in the database one-by-one."},{"prompt":"Sort a given array of integers using Quick Sort","completion":"def quickSort(arr): if len(arr) <= 1: return arr else: pivot = arr[len(arr) // 2] left = [x for x in arr if x < pivot] middle = [x for x in arr if x == pivot] right = [x for x in arr if x > pivot] return quickSort(left) + middle + quickSort(right)"},{"prompt":"What is the difference between static binding and dynamic binding","completion":"Static binding is the process of linking a procedure call to the code to be executed during compile-time. This link is done by compiler at the compile-time and is fixed for the life of the program. On the other hand, dynamic binding is the process of linking a procedure call to the code to be executed during run-time. This link is done by the program at the run-time and can be changed during the life of the program."},{"prompt":"Alter the following given code so that it will implement the Bubble Sort Algorithm def mySort(arr): n = len(arr) for i in range(n-1): for j in range(0, n-i-1): if arr[j] > arr[j+1] : arr[j], arr[j+1] = arr[j+1], arr[j]","completion":"def bubbleSort(arr): n = len(arr) for i in range(n): for j in range(0, n-i-1): if arr[j] > arr[j+1] : arr[j], arr[j+1] = arr[j+1], arr[j]"},{"prompt":"Write a SQL query that outputs the names of all the students in a given table sorted in descending order","completion":"SELECT name FROM students ORDER BY name DESC;"},{"prompt":"Read in a string of comma-separated integers and create an array of the integers. \\"1,2,3,4,5","completion":"int[] arr = {1,2,3,4,5};"},{"prompt":"Create a virtual environment in Python using the \\"virtualenv\\" tool.","completion":"python -m pip install virtualenv virtualenv envname source envname/bin/activate"},{"prompt":"Create a SQL query to find all records of employees who are over 40 years old.","completion":"SELECT * FROM Employees WHERE age > 40;"},{"prompt":"Write a function that takes in a max number and returns the sum of all numbers between 0 and the max number. 10","completion":"def sumFromZeroToMax(n): sum = 0 for x in range(n+1): sum += x return sum print(sumFromZeroToMax(10))"},{"prompt":"Fix the logic of the function to print out the element in the array. let nums = [1, 2, 3, 4];","completion":"let nums = [1, 2, 3, 4]; function printArrElement(arr){ for(let i = 0; i < arr.length; i++){ console.log(arr[i]); } } printArrElement(nums);"},{"prompt":"Write code to calculate the total number of votes for a candidate in an election. candidates = [\\"AJ Bascombe\\", \\"Maya Mathews\\", \\"Toby White\\"] votes = [2000, 4000, 3000]","completion":"total_votes = 0 for candidate in range(len(candidates)): total_votes+=votes[candidate] print(total_votes)"},{"prompt":"Write a statement to print a formatted string. Name: Joe Age: 31","completion":"print(\\"My name is {}, and I'm {} years old.\\".format(\\"Joe\\",31))"},{"prompt":"mplement a simple search engine using recursion. query = \\"computer\\" data = [\\"mobile\\",\\"computer\\",\\"laptop\\",\\"tablet\\"]","completion":"def search(query, data): # base case if len(data) == 0: return False # recursive step else: if data[0] == query: return True else: return search(query, data[1:]) query = \\"computer\\" data = [\\"mobile\\",\\"computer\\",\\"laptop\\",\\"tablet\\"] print(search(query, data))"},{"prompt":"Edit the given list to only include even numbers. list = [2,3,4,5,6,7,8]","completion":"for i in list: if i % 2 != 0: list.remove(i) print(list)"},{"prompt":"Edit this code to print out the square of a given number, using '#' as a marker. num = 8","completion":"num = 8 # # # # # # # # # # # # # # # # #"},{"prompt":"Write a code snippet to find all the Pythagorean triplets which sum up to the given number.","completion":"def find_triplet(n): \\"\\"\\" @brief: Finds all Pythagorean triplets which sum upto the given number n @param n: the sum which is the given number @return: a list of all Pythagorean triplets which might sum upto n, or an empty list if none are found \\"\\"\\" triplets = [] for a in range(1, n): for b in range(a + 1, n - a): c = int(n - a - b) if (a*a) + (b*b) == (c*c): triplets.append((a, b, c)) return triplets"},{"prompt":"Design a program to find all prime numbers up to a given limit n.","completion":"def find_primes(limit): \\"\\"\\" @brief: Finds all prime numbers up to a given limit n @param limit: the upper limit to find prime numbers @return: a list of all prime numbers found \\"\\"\\" primes = [] for n in range(2, limit + 1): is_prime = True for prime in primes: if n % prime == 0: is_prime = False break if is_prime: primes.append(n) return primes"},{"prompt":"Modify the following code to swap the values of two variables without using a third variable. a = 5 b = 3","completion":"a = 5 b = 3 a, b = b, a"},{"prompt":"Write a code snippet to determine the number of odd numbers in a given array.","completion":"def count_odds(arr): \\"\\"\\" @brief: Counts the number of odd numbers in a given array @param arr: array whose odd numbers are to be counted @return: the number of odd numbers in the given array \\"\\"\\" count = 0 for num in arr: if num % 2 == 1: count += 1 return count"},{"prompt":"Given a list of integers and a target value, calculate two integers in the list that add up to the target value. target = 6 list = [1, 2, 3, 4, 5]","completion":"(1, 5)"},{"prompt":"Create an array in Python that contains five different values.","completion":"arr = [1, 2, 3, 4, 5]"},{"prompt":"Write a SELECT query to identify the names of authors who have published books with the topic ‘Artificial Intelligence’.","completion":"SELECT name FROM Author WHERE topic = 'Artificial Intelligence';"},{"prompt":"Create a function in JavaScript to take a given number and add 10 to it.","completion":"function addTen(num) { return num+10; }"},{"prompt":"Write a Java class to define a student object that includes a name and a grade.","completion":"public class Student { //instance variables String name; int grade; //constructor public Student(String studentName, int studentGrade) { name = studentName; grade = studentGrade; } //methods public String getName(){ return name; } public int getGrade(){ return grade; } }"},{"prompt":"Write an Iterative program in Java to print the first n terms of the Fibonacci sequence.","completion":"public static void printFibonacciIterative(int n) { int prev1=0, prev2=1, sum=0; for (int i = 0; i < n; i++) { System.out.print(sum + \\" \\"); prev2 = sum; sum = prev1 + prev2; prev1 = prev2; } }"},{"prompt":"Create a bar chart in Python, plotting the following integer data set. [1, 2, 4, 8, 16, 32]","completion":"import matplotlib.pyplot as plt data_set = [1, 2, 4, 8, 16, 32] plt.bar(range(len(data_set)), data_set) plt.show()"},{"prompt":"Create a python script to determine whether a number is odd or even. 15","completion":"number = 15 if (number % 2 == 0): print(\\"even\\") else: print(\\"odd\\")"},{"prompt":"Write a SQL query to output the full names from a 'persons' table.","completion":"SELECT first_name, last_name FROM persons;"},{"prompt":"Write a function in C++ to check if the given array of integers is in ascending order or not. [1, 2, 3, 4, 5]","completion":"bool is_ascending(int arr[], int arr_size) { if (arr_size == 1) return true; // Recursively check if the // array is sorted in // non-decreasing order by // calling for the rest of // the array. if (arr[0] < arr[1] && is_ascending(arr + 1, arr_size - 1)) return true; else return false; }"},{"prompt":"Convert the following array of strings to a set of tuples in Python. ['Python', 'Java', 'JavaScript']","completion":"arr = ['Python', 'Java', 'JavaScript'] arr_tuple = tuple(arr) print(arr_tuple)"},{"prompt":"From the given data set, calculate the mean and print it out. [1, 2, 3, 4, 5]","completion":"data_set = [1, 2, 3, 4, 5] mean = sum(data_set) / len(data_set) print(\\"The mean is {}\\".format(mean))"},{"prompt":"Make a prediction using the following machine learning model in Python.","completion":"svm_model = SVC() svm_model.fit(X_train, y_train) predictions = svm_model.predict(X_test)"},{"prompt":"Write a regex pattern to check if the given string is a US phone number.","completion":"regex = r\\"^(?[2-9]{3})?[-. ]?[2-9]{3}[-. ]?[0-9]{4}\\""},{"prompt":"Create a random list of 10 numbers in the range of -10 to 10 in Python.","completion":"import random random_list = [random.randint(-10, 10) for i in range(10)] print(random_list)"},{"prompt":"Generate a SQL statement to retrieve the title of all books in the library table.","completion":"SELECT title FROM Library;"},{"prompt":"Create an HTML form with radio buttons and labels to get the user's gender.","completion":"<form> <label>Gender:</label> <input type=\\"radio\\" id=\\"male\\" name=\\"gender\\" value=\\"male\\"> <label for=\\"male\\">Male</label> <input type=\\"radio\\" id=\\"female\\" name=\\"gender\\" value=\\"female\\"> <label for=\\"female\\">Female</label> </form>"},{"prompt":"Scan the given array and find the second largest number. [13, 54, 78, 54, 3, 87]","completion":"78"},{"prompt":"Generate a JavaScript object that contains two key-value pairs.","completion":"let object = { key1: \\"value1\\", key2: \\"value2\\" }"},{"prompt":"dentify the wrong code in this JavaScript snippet. let a = \\"Hello World!\\"; console 'log(a);","completion":"console 'log(a); // lacks () parenthesis for the log method of the console object."},{"prompt":"Write a query to retrieve all rows from the Students table where the Grade is \\"A\\".","completion":"SELECT * FROM Students WHERE Grade = 'A';"},{"prompt":"Write an Apache VTL code to check if the user is logged in or not.","completion":"#if({user.loggedIn}) You are logged in. #else You are not logged in. #end"},{"prompt":"Convert the string \\"Hello World\\" to upper case using a Java program.","completion":"String upperCaseString = \\"Hello World\\".toUpperCase();"},{"prompt":"What is the argument type of the function \\"len()\\" in Python?","completion":"The argument type of the function \\"len()\\" in Python is an object."},{"prompt":"Modify the code below to create a new function called \\"addSquares()\\" that adds the squares of two numbers and returns the result. def add(x, y): return x + y","completion":"def add(x, y): return x + y def addSquares(x, y): return x*x + y*y"},{"prompt":"Print all the numbers in a given string using Java. String str = \\"123XYZ456ABC789","completion":"for (int i = 0; i < str.length(); i++) { if (Character.isDigit(str.charAt(i))) { System.out.print(str.charAt(i) + \\" \\"); } } // Output -> 1 2 3 4 5 6 7 8 9"},{"prompt":"Create a program in Java to print a multiplication table of size 5x5.","completion":"for (int i = 1; i <= 5; i++) { System.out.printf(\\"%d * %d = %dn\\", i, i, i * i); for (int j = 1; j <= 5; j++) { System.out.printf(\\"%d * %d = %dn\\", i, j, i * j); } System.out.println(); }"},{"prompt":"Find the power of a number using a C program. Base = 5, Exponent = 3","completion":"#include <stdio.h> int main() { int base = 5, exponent = 3, result = 1; while (exponent != 0) { result *= base; --exponent; } printf(\\"Result = %d\\", result); return 0; } // Output -> Result = 125"},{"prompt":"w many parameters does a C++ function have?","completion":"A C++ function can have any number of parameters, from zero parameters to an unlimited number of parameters."},{"prompt":"What is the syntax for creating an object of the \\"Car\\" class in Java?","completion":"The syntax for creating an object of the \\"Car\\" class in Java is: Car myCar = new Car();"},{"prompt":"Write a Java function to compare two strings and print the longer string. // Two Strings: String str1 = \\"stack\\"; String Str2 = \\"overflow\\";","completion":"public static String longestString(String str1, String str2) { if (str1.length() > str2.length()) { return str1; } return str2; }"},{"prompt":"Create a C++ program for printing a pyramid pattern up to a given number. //n = 5","completion":"#include<iostream> using namespace std; int main() { int i, j, rows; cout << \\"Enter number of rows: \\"; cin >> rows; for(i=1; i<=rows; i++) { for(j=1; j<=i; ++j) { cout<< \\"* \\"; } cout << \\"n\\"; } return 0;"},{"prompt":"Using Flexbox (CSS Framework), center the text \\"My Title\\" horizontally and vertically on the page.","completion":".container { display: flex; align-items: center; justify-content: center; } <div class=\\"container\\"> <h1>My Title</h1> </div>"},{"prompt":"Construct a query in SQL to select users from the \\"Users\\" table aged between 30 and 40. // Table Name User","completion":"SELECT * FROM Users WHERE age BETWEEN 30 AND 40;"},{"prompt":"Craft a JavaScript snippet to create an array with elements from 0 to 10.","completion":"let array = Array.from({length: 11}, (v, k) => k);"},{"prompt":"Find the maximum element from a given array in JavaScript. //Array let array = [2, 3, 6, 9, 5, 14];","completion":"let maxElement = Math.max(...array); console.log(maxElement); //Output: 14"},{"prompt":"Create an HTML element that displays text “Welcome” with the color blue.","completion":"<span style=\\"color: blue;\\">Welcome</span>"},{"prompt":"Modify a C++ program to print the following sequence of numbers using a loop: * 5, 4, 3, 2, 1 //Existing code cout << \\"Hello world!\\" << endl;","completion":"#include <iostream> using namespace std; int main () { int x; cout << \\"Hello world!\\" << endl; for (x=5; x>=1; x--) { cout << x <<\\", \\"; } cout << \\"Blast off!\\"; return 0; }"},{"prompt":"Construct an SQL query to get the name of the oldest user from the \\"Users\\" table. // Table Name User","completion":"SELECT name FROM Users ORDER BY date_of_birth DESC LIMIT 1;"},{"prompt":"Create a function to register a new user using a given username, email and password. username: angelina email: angelina@example.com password: abc12345","completion":"\\"\\"\\" Function register: Registers a new user using a given username, email and password \\"\\"\\" def register(username, email, password): # initialize user database user_db = {} # add user info to database user_db[username] = { 'email': email, 'password': password } # return user database return user_db if __name__ == '__main__': username = 'angelina' email = 'angelina@example.com' password = 'abc12345' print(register(username, email, password))"},{"prompt":"Compute the maximum amount of money X which can be obtained using two given coins of denomination A and B. A = 5 B = 7 X = 31","completion":"\\"\\"\\" Function max_money: Computes the maximum amount of money X which can be obtained using two given coins of denomination A and B. \\"\\"\\" def max_money(A, B, X): max_A = X // A # maximum coins A can be used max_B = X // B # maximum coins B can be used # Try all possible combinations between coins of A and B max_money = 0 for a in range(max_A + 1): for b in range(max_B + 1): money = a * A + b * B if money <= X: max_money = max(max_money, money) return max_money if __name__ == '__main__': A = 5 B = 7 X = 31 print(max_money(A, B, X))"},{"prompt":"Classify the given news title into two categories: Positive andNegative The stock market bounces back","completion":"Positive."},{"prompt":"Create a function to group a given set of numbers into a continuous range Set of numbers: [1, 3, 4, 6, 7, 8, 10]","completion":"\\"\\"\\" Function group_numbers: Groups a given set of numbers into a continuous range. \\"\\"\\" def group_numbers(nums): # Initialize left and right pointers l = 0 r = 1 # Initialize ranges list ranges = [] while r < len(nums): # If the end of the range is not same as the # start of the next range, append the current range if nums[r - 1] + 1 != nums[r]: ranges.append(str(nums[l]) + \\"->\\" + str(nums[r - 1])) l = r r += 1 # Append the last range ranges.append(str(nums[l]) + '->' + str(nums[r - 1])) return ranges if __name__ == '__main__': nums = [1, 3, 4, 6, 7, 8, 10] print(group_numbers(nums))"},{"prompt":"mplement a comparator method in Java to compare two objects of the same class. class Country { String name; double population; double area; }","completion":"class CountryComparator implements Comparator<Country> { @Override public int compare(Country c1, Country c2) { //compare by population if (c1.population < c2.population) { return -1; } else if (c1.population > c2.population) { return 1; } else { return 0; } } }"},{"prompt":"Write a MySQL query to display the most populous region with its population count","completion":"SELECT region, COUNT(*) AS population FROM Census GROUP BY region ORDER BY population DESC LIMIT 1;"},{"prompt":"Write an SQL query to identify the most frequently occurring value in a given column","completion":"SELECT column_name, COUNT(*) AS frequency FROM table_name GROUP BY column_name ORDER BY frequency DESC LIMIT 1;"},{"prompt":"Write a HTML code to create a table with two columns, one for the name of a person and the other for their address.","completion":"<table> <thead> <tr> <th>Name</th> <th>Address</th> </tr> </thead> <tbody> <tr> <td>John Doe</td> <td>123 Main Street</td> </tr> <tr> <td>Jane Doe</td> <td>456 South Ave</td> </tr> </tbody> </table>"},{"prompt":"Create a PHP script to encode a given string in base-64.","completion":"<?php // Function to encode a given string in base-64 function encodeBase64(str){ return base64_encode(str); } echo encodeBase64(\\"Hello World!\\"); ?>"},{"prompt":"Write a MongoDB query to find documents where a given field contains a substring.","completion":"db.collection.find({where: \\"return this.field.includes('substring')\\"})"},{"prompt":"Write an HTML code to create a dropdown selection list with three options.","completion":"<select> <option value=\\"option1\\">Option 1</option> <option value=\\"option2\\">Option 2</option> <option value=\\"option3\\">Option 3</option> </select>"},{"prompt":"Compile and execute this Java code. public class Main { public static void main(String[] args) { System.out.println(\\"Welcome to Java\\"); } }","completion":"Compilation successful. Welcome to Java"},{"prompt":"Explain the use of 'break' and 'continue' in for loops.","completion":"The “break” keyword is used to exit from the loop and continues to execute the code after the loop. The \\"continue\\" keyword is used to skip the rest of the loop and start from the beginning of the loop again. It is used mostly when you have defined certain condition and want to skip some codes when that condition is being met."},{"prompt":"Create classes and interfaces to represent an online news system.","completion":"class NewsSystem { public string title; public string content; public NewsSystem(string title, string content) { this.title = title; this.content = content; } } interface INewsActions { void PostNewArticle(NewsSystem article); void EditArticle(NewsSystem article); void DeleteArticle(NewsSystem article); }"},{"prompt":"Design a data structure that will store name, phone number and address of a person.","completion":"class PersonData { String name; String phoneNumber; String address; PersonData(String name, String phoneNumber, String address) { this.name = name; this.phoneNumber = phoneNumber; this.address = address; } }"},{"prompt":"Convert this ES6 code to ES5. let newList = myList.map(num => num * 2)","completion":"var newList = myList.map(function(num) { return num * 2; });"},{"prompt":"Create a function that converts an arbitrary number from any base between 2 and 16 to its decimal representation. int value = 0xFE;","completion":"public static int ConvertToDecimal (int value, int base) { int decimalValue = 0; int i = 0; while (value != 0 && i++ < 8) { int remainder = value % 10; value /= 10; decimalValue += remainder * (int)Math.Pow(base, i); } return decimalValue; }"},{"prompt":"Describe the purpose of Asynchronous programming.","completion":"Asynchronous programming is a method of concurrent programming in which a unit of work runs separately from the main application thread and notifies the calling thread of its completion, failure or progress. It enables programs to run multiple operations at the same time without blocking other operations. This helps improve the performance of applications by allowing them to do work in parallel."},{"prompt":"Describe the use of the HSL color model in web development.","completion":"The HSL (hue, saturation, lightness) color model is used in web development for specifying colors. Hue is the color in the color wheel, saturation is the intensity, and lightness is how light/dark the color is. This model is easy to use and understand because it uses values that are more familiar and natural to humans, making it possible to create more visually appealing and consistent color schemes."},{"prompt":"Create a SQL query to select all columns with the same last name from a database table. Table Name: \\"Users\\" Columns: \\"FirstName\\", \\"LastName","completion":"SELECT * FROM Users WHERE LastName = (SELECT LastName FROM Users);"},{"prompt":"Edit the following function to only accept lowercase parameters. def greeting(name): print('Hello, ' + name + '!')","completion":"def greeting(name): name = name.lower() print('Hello, ' + name + '!')"},{"prompt":"Write SQL query to calculate total rental fees for customers who have rented a movie in the past 7 days. Table Name: \\"Rentals\\" Columns: \\"CustomerId\\", \\"RentalDate\\", \\"RentalFee","completion":"SELECT SUM(RentalFee) FROM Rentals WHERE RentalDate >= DATE_SUB(CURDATE(),INTERVAL 7 DAY);"},{"prompt":"Create a SQL query to find the highest grossing movie. Table Name: \\"Movies\\" Columns: \\"MovieName\\", \\"BoxOfficeGro","completion":"SELECT MovieName FROM Movies ORDER BY BoxOfficeGross DESC LIMIT 1;"},{"prompt":"Write a function in JavaScript to check if the given string contains a vowel or not.","completion":"function containsVowel(str) { var vowels = \\"aeiou\\" for(i=0; i<str.length; i++) { if (vowels.indexOf(str[i]) !== -1) return true; } return false; }"},{"prompt":"Create a Ruby script to loop through the items of a given array and print it on the command line. list = [\\"Apple\\",\\"Banana\\",\\"Orange\\"]","completion":"list = [\\"Apple\\",\\"Banana\\",\\"Orange\\"] list.each do |item| puts item end"},{"prompt":"w can you access the last element of the following Python array? arr = [\\"A\\",\\"B\\",\\"C\\",\\"D\\",\\"E\\"]","completion":"arr[-1]"},{"prompt":"w can you check if the given word is a palindrome in Python?","completion":"word = \\"madam\\" if word == word[::-1]: print(\\"It is a palindrome\\") else: print(\\"It is not a palindrome\\")"},{"prompt":"Write an SQL query that returns the sum of inventories in the Inventory table.","completion":"SELECT SUM(Amount) FROM Inventory;"},{"prompt":"Create a data structure to store records of students' attendance.","completion":"struct StudentAttendance { int studentId; // Unique identifier for each student int classId; // Unique identifier for each class int year; // Year of the class string month; // Month of the class int attendance; // Number of attendances };"},{"prompt":"Read the provided string and print the number of vowels in it. \\"GPT-3 is an advanced language model","completion":"7"},{"prompt":"Create an SQL query that returns the top five most expensive items in the table.","completion":"SELECT ItemName, Price FROM Items ORDER BY Price DESC LIMIT 5;"},{"prompt":"Write a Java program to insert a new node into a singly linked list. head -> 3 -> 4 -> 6 -> null","completion":"// Insert 8 after 4 public static Node insertNode(Node head, int data) { Node node = new Node(data); // Empty List if (head == null) { node.next=null; head = node; return head; } Node CurrNode = head; while (CurrNode.data != 4) { CurrNode = CurrNode.next; } Node temp = CurrNode.next; CurrNode.next = node; node.next = temp; return head; }"},{"prompt":"Create an array of numbers and check if a given number exists in the array. Output true if it exists, output false if it does not. arr = [1,2,3,4,5] n = 4","completion":"true"},{"prompt":"You receive an array of numbers as input and you need to calculate the median number. arr = [3, 2, 4, 1, 5]","completion":"3.0"},{"prompt":"Create a PHP script that closes a MySQL connection.","completion":"mysqli_close(connection);"},{"prompt":"A website requires a logo to be displayed in the header. Design a logo and write the HTML code to display it.","completion":"<div class=\\"logo\\"> <img src=\\"logo.png\\" alt=\\"Company Logo\\"> </div>"},{"prompt":"Read the provided code and determine whether it is using object-oriented programming or not. Output true if it is and false if it is not. function displayName(name) { console.log(name); }","completion":"false"},{"prompt":"You need to write a function that validates a given password. It should only be valid if it contains at least one lowercase letter, one uppercase letter, one number, and one special character.","completion":"function validatePassword(password) { if(/^(?=.*[a-z])(?=.*[A-Z])(?=.*d)(?=.*[@!%*?&])[A-Za-zd@!%*?&]{8,}/.test(password)) { return true; } else { return false; } }"},{"prompt":"Devise a data structure to store an inventory of items in a store.","completion":"struct StoreInventory { char itemName; //Name of the item int itemCode; //Unique identifier for each item float itemPrice; //Price of the item int itemQuantity; //Quantity of the item };"},{"prompt":"Reverse a given array without using a loop. arr = [1,2,3,4]","completion":"[4, 3, 2, 1]"},{"prompt":"Write a code to generate 1000 random numbers and print the mean of these random numbers.","completion":"# Import the random module import random # Generate 1000 random numbers random_numbers = [random.randint(1, 1000) for i in range(1000)] # Calculate mean of the random numbers mean = sum(random_numbers)/len(random_numbers) # Print mean of random numbers print(\\"The mean of 1000 random numbers is: \\", mean)"},{"prompt":"Create a code to raise a number to a given power p. 2","completion":"# Define the function to raise a number to a given power def power(x, p): # The base case is when power is 0 if p == 0: return 1 # if power is not 0, then recursively call the function power return x * power(x, p-1) # Get the number x = 2 # Get the power p = 3 # Calculate the result result = power(x, p) # Print the result print(\\"The result is: \\", result)"},{"prompt":"Create a code to print the items from a given array in reverse. [1,2,3,4]","completion":"# Define the function to print array in reverse def print_reverse(arr): # Base case if len(arr) == 0 : return # Print the last value print(arr.pop()) # Recursive call with array - 1 return print_reverse(arr) # Get the array arr = [1,2,3,4] # Print the array in reverse print(\\"The array in reverse is: \\") print_reverse(arr)"},{"prompt":"Given a two-dimensional array, write a code to print the elements column-wise. [[1, 2], [3, 4], [5, 6]]","completion":"# Define a function to print elements column-wise def print_columnwise(arr): # Get the number of rows and columns num_rows = len(arr) num_cols = len(arr[0]) # Initialize the columns k = 0 # Iterate through the rows while k < num_cols : # Iterate through the columns for i in range(num_rows): # Print the element print(arr[i][k], end=\\" \\") # Update the column k = k + 1 print() # Get the array arr = [[1, 2], [3, 4], [5, 6]] # Print the elements column-wise print_columnwise(arr)"},{"prompt":"Change the following text from uppercase to lowercase. MY NAME IS JOHN","completion":"my name is john"},{"prompt":"Write a CSS class that will make the font size of all elements 2 times larger.","completion":".increase-font-size { font-size: 2rem; }"},{"prompt":"Convert the given list of integers to a string of comma separated values. [1, 2, 3, 4, 5]","completion":"\\"1,2,3,4,5\\""},{"prompt":"Create a function to find the total number of vowels in a series of strings. string1: \\"Hello\\" string2: \\"World","completion":"public static int countVowels(String... strings) { int count = 0; for (String str : strings) { for (char c : str.toCharArray()) { switch (c) { case 'a': case 'e': case 'i': case 'o': case 'u': count++; } } } return count; }"},{"prompt":"Write an algorithm to calculate the average of a list of integers given as input.","completion":"def average(nums): \\"\\"\\" Takes a list of numbers and returns the average. \\"\\"\\" total = 0 for num in nums: total += num return total / len(nums)"},{"prompt":"Create a css class for a table to be displayed on a mobile device.","completion":".mobile-table { width: 100%; border-collapse: collapse; overflow-x: scroll; } .mobile-table td { padding: 10px; vertical-align: top; overflow-y: hidden; overflow-x: auto; }"},{"prompt":"Split the given string into words and remove any words that have less than 4 characters. string = 'This is a test string'","completion":"string = 'This is a test string' words = string.split() filtered_words = [] for word in words: if len(word) >= 4: filtered_words.append(word) print(filtered_words) # Output: # ['This', 'test', 'string']"},{"prompt":"Write a JavaScript function to convert a given number to its Roman numeral equivalent.","completion":"function toRoman(num) { // store roman equivalents of numbers var romanNumerals = { 1: 'I', 4: 'IV', 5: 'V', 9: 'IX', 10: 'X', 40: 'XL', 50: 'L' }; // array to store roman numeral var roman = []; // loop to check for roman equivalents for (let i = Object.keys(romanNumerals).length; i >= 0; i--) { let div = Math.floor(num / Object.keys(romanNumerals)[i]); let rem = num % Object.keys(romanNumerals)[i]; if (div > 0) { roman.push(romanNumerals[Object.keys(romanNumerals)[i]].repeat(div)); num = rem; } } // return the new created string return roman.join(\\"\\"); }"},{"prompt":"Write a function that takes in a list of strings and returns True if any of the strings contains the letter \`a\`.","completion":"def contains_A(strings): for string in strings: if 'a' in string: return True return False"},{"prompt":"Write a Java program to remove comments from the Java program. public class HelloWorld { /* This is a multiline comment. */ public static void main(String[] args) { System.out.println(\\"Hello World!\\"); // This is a single line comment. } }","completion":"public class HelloWorld { public static void main(String[] args) { System.out.println(\\"Hello World!\\"); } }"},{"prompt":"Create a bash script to check the disk usage of the \\"/tmp\\" directory.","completion":"#!/bin/bash echo \\"Checking disk usage of the /tmp directory\\" # Get the current disk usage du -sh /tmp/"},{"prompt":"Create a PHP function that sorts the elements of an array in ascending order.","completion":"<?php function sort_array_ascending(array) { sort(array); return array; } ?>"},{"prompt":"Write a loop to iterate through the following array and prints each element. arr = [1, 2, 3, 4, 5]","completion":"arr = [1, 2, 3, 4, 5]; for (let i = 0; i < arr.length; i++) { console.log(arr[i]); }"},{"prompt":"Filter the array based on the given condition and return a new array of elements that satisfy the condition. arr = [1, 2, 3, 4, 5]","completion":"arr = [1, 2, 3, 4, 5]; const filteredArray = arr.filter(item => item % 2 === 0); console.log(filteredArray); # Output: # [2, 4]"},{"prompt":"Create a MongoDB query to find all documents that have an array \\"items\\" with a field \\"name\\" equal to \\"pen\\".","completion":"db.collection.find( { \\"items\\": { elemMatch: { \\"name\\": \\"pen\\" } } } )"},{"prompt":"Refactor the following condition to use the ternary operator instead of an if-else statement. if (x < 0) { y = -1; } else { y = 1; }","completion":"y = x < 0 ? -1 : 1;"},{"prompt":"Design an algorithm to check if a given string can be converted to a palindrome.","completion":"We can use a two pointer approach to traverse the string and compare the leftmost and rightmost characters. If the characters are not equal, then the string cannot be a palindrome. We can move the left pointer one character to the right, and move the right pointer one character to the left, and compare the characters again. We keep repeating this until either the left pointer is equal to the right pointer, or the left and right pointers have crossed each other. If one of the comparisons does not result in equality, then the string cannot be converted to a palindrome. If the left pointer is equal to the right pointer, or if the two pointers have crossed each other, then the string can be converted to a palindrome."},{"prompt":"Describe a machine learning algorithm that uses supervised learning.","completion":"One popular supervised machine learning algorithm is the Support Vector Machine (SVM). It uses labelled data points to infer the best decision boundary between different classes. It uses an optimization function to maximize the margin between the support vectors (data points) and the decision boundary. The support vectors are the data points which are the closest to the hyperplane and the decision boundary is the one that best separates the different classes. The SVM could also be tweaked to use different kernels, such as the Gaussian Kernel which is commonly used for non-linear classification."},{"prompt":"You are given an array of integers and you need to find the maximum sum of any subarray of the given array.","completion":"The maximum sum of any subarray of a given array of integers can be found with the Kadane's algorithm. This algorithm works by keeping track of the maximum sum seen so far and the current sum running. Whenever the current sum running is negative, the current sum running is reset to 0 and the maximum sum seen is compared with the current sum. Whenever the current sum running is positive, it is added to the maximum sum seen so far. This way, the maximum sum of any subarray of the given array can be found in one pass."},{"prompt":"Suggest a way to search for a target element in a binary search tree in less than O(n) time.","completion":"The binary search tree can be traversed in a depth-first manner to search for the target element in a time complexity of O(log n), where n is the number of nodes in the binary search tree. In a depth-first search, the target node is compared with each node in the tree and if it does not match, the left or right subtree is recursively searched depending on whether the target element is smaller or bigger than the current node. This way, the target element can be searched in less than O(n) time."},{"prompt":"Design an algorithm to check if two given binary trees are identical.","completion":"We can use a recursive approach to compare two binary trees. We can start by a root node comparison and if the values of the two root nodes are not equal, the trees are not equivalent. Otherwise, we can move on to compare the left subtree and the right subtree of each tree for equality. To do so, we can recursively call the algorithm on the left nodes of each tree and the right nodes of each tree. If at any point, any of the nodes are not equal, the two trees are not identical. If all nodes are equal, the two binary trees are identical."},{"prompt":"Design a function in Python to sort a list of tuples based on the first element.","completion":"def sort_list_of_tuples(my_list): my_list.sort(key=lambda x: x[0]) return my_list"},{"prompt":"Format the strings given in the list so that only the first letter of each word is in upper case. [\\"Hello world\\", \\"Wonderful DAY\\"]","completion":"[\\"Hello World\\", \\"Wonderful Day\\"]"},{"prompt":"Write a function to sum values stored in a dictonary using for loop. mydict = {‘a’:1, ‘b’:2, ‘c’:3}","completion":"def sum_dict_values(mydict): ans = 0 for key,val in mydict.items(): ans += val return ans"},{"prompt":"Create an HTML table with two columns called \\"Name\\" and \\"Age\\", and three rows, with the name and age of Alice, Bob and Eve.","completion":"<table> <tr> <th>Name</th> <th>Age</th> </tr> <tr> <td>Alice</td> <td>20</td> </tr> <tr> <td>Bob</td> <td>30</td> </tr> <tr> <td>Eve</td> <td>40</td> </tr> </table>"},{"prompt":"Create a CSS class to make all the text in the body of the page blue.","completion":"body { font-color: blue; }"},{"prompt":"Write a MySQL query to insert values into a table called 'users' with three columns: 'name', 'email', and 'age'. name: John, email: john@example.com, age: 28","completion":"INSERT INTO users (name, email, age) VALUES ('John', 'john@example.com', 28);"},{"prompt":"Create an Angular 10 service to fetch data from a remote API and print the results to the console. address: 'www.example.com/api/v1/data'.","completion":"import { Injectable } from '@angular/core'; import { HttpClient } from '@angular/common/http'; @Injectable() export class DataService { constructor(private http: HttpClient) { } async getData() { const data = await this.http.get(address).toPromise(); console.log(data); } }"},{"prompt":"Create a React component which renders an input box and a submit button.","completion":"import React from 'react'; export default function Form() { return ( <form> <input type=\\"text\\" /> <input type=\\"submit\\" value=\\"Submit\\" /> </form> ); }"},{"prompt":"Generate code to display a progress bar in HTML.","completion":"<div class=\\"progress\\"> <div class=\\"progress-bar\\" role=\\"progressbar\\" style=\\"width: 25%;\\" aria-valuenow=\\"25\\" aria-valuemin=\\"0\\" aria-valuemax=\\"100\\"></div> </div>"},{"prompt":"Create a Swift class with a method named 'validate' which returns true if the given value is greater than 10 and false otherwise.","completion":"class Validation { func validate(value: Int) -> Bool { return value > 10 } }"},{"prompt":"Create a C# program to sort a given array of integers. int[] nums = {8, 5, 1, 3, 9};","completion":"int[] sorted = nums.OrderBy(n => n).ToArray();"},{"prompt":"Generate code to call an API and print the results using JavaScript. url: 'www.example.com/api/v1/data'","completion":"fetch(url) .then(response => { return response.json() }).then(data => { console.log(data); });"},{"prompt":"Using HTML, create an input field that stores an integer.","completion":"<input type=\\"number\\">"},{"prompt":"Use Java to generate a string containing 1000 random characters of length 10.","completion":"String chars = \\"ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890\\"; StringBuilder randomString = new StringBuilder(); Random rand = new Random(); for (int i = 0; i < 1000; i++){ int randIndex = rand.nextInt(chars.length()); randomString.append(chars.charAt(randIndex)); } String result = randomString.toString();"},{"prompt":"Using CSS, modify the background color of a div.","completion":"div { background-color: blue; }"},{"prompt":"Create an HTML form element to store a password with a validation of maximum 8 characters.","completion":"<form> <label for=\\"password\\">Password: </label> <input type=\\"password\\" id=\\"password\\" name=\\"password\\" maxlength=\\"8\\"> </form>"},{"prompt":"Create a Python script to generate random numbers from 1 to 10 in a given range.","completion":"import random def random_num_gen(start, end): random_nums = [] for _ in range(start, end + 1): random_nums.append(random.randint(1, 10)) return random_nums"},{"prompt":"Using HTML, create a select option field with five given options. Options: Option 1, Option 2, Option 3, Option 4, Option 5","completion":"<select> <option>Option 1</option> <option>Option 2</option> <option>Option 3</option> <option>Option 4</option> <option>Option 5</option> </select>"},{"prompt":"Using JavaScript, create an input field to store a hexadecimal value.","completion":"<input type=\\"text\\" pattern=\\"^#([A-Fa-f0–9]{6}|[A-Fa-f0–9]{3})\\">"},{"prompt":"Debug the following Java program to get the output \\"Can you try again? public class TryAgain { public static void main (String[] args) { x = 4; System.out.println(x = 4); } }","completion":"public class TryAgain { public static void main (String[] args) { int x = 4; System.out.println(\\"Can you try again?\\"); } }"},{"prompt":"Create an SQL query to sum all values in the \\"amount\\" column.","completion":"SELECT SUM(amount) FROM table_name;"},{"prompt":"Write a JavaScript function to check whether a string contains all the vowels in alphabetical order.","completion":"function checkVowels(str) { const sortedVowels = 'aeiou'.split('').sort().join(''); const sortedStr = str .toLowerCase() .split('') .filter(letter => ['a','e','i','o','u'].includes(letter)) .sort() .join(''); return sortedVowels === sortedStr; }"},{"prompt":"Check if an integer is a power of two.","completion":"public static boolean isPowerOfTwo(int n) { return (n > 0) && ((n & (n - 1)) == 0); }"},{"prompt":"Change the following code to use for-loops instead of while-loops. x = 0 while x < 5: print(x) x += 1","completion":"for x in range(5): print(x)"},{"prompt":"Generate a correct Java program to swap two given numbers.","completion":"public class Swap { public static void main(String[] args) { int a = 10; int b = 20; System.out.println(\\"before swap: a = \\"+a+\\" b = \\"+b); int temp = a; a = b; b = temp; System.out.println(\\"after swap: a = \\"+a+\\" b = \\"+b); } }"},{"prompt":"Edit the following code so that it prints out a right triangle of size n int n = 5; for (int i = 0; i < n; i++) { for (int j = 0; j <= i; j++) { System.out.print(\\"*\\"); } System.out.println(); }","completion":"int n = 5; for (int i = n; i > 0; i--) { for(int j = 0; j < i; j++) { System.out.print(\\"*\\"); } System.out.println(); }"},{"prompt":"Generate a correct SQL query for checking if a record exists with a given condition. Check if a record exists in the \\"Customers\\" table with the email address \\"john@example.com\\";","completion":"SELECT COUNT(*) FROM Customers WHERE email = 'john@example.com';"},{"prompt":"Write a Python program to convert a given binary string to its equivalent hexadecimal representation.","completion":"def bin_to_hex(binary_string): dec = int(binary_string, 2) hex_string = hex(dec).replace('x', '') return hex_string"},{"prompt":"Write a SQL query to find the names of all users where the gender is \`Female\`.","completion":"SELECT Name FROM Users WHERE Gender = 'Female'"},{"prompt":"Write Python code to merge two given dictionaries into a single dictionary. Dictionary 1: {'A':1, 'B':2} Dictionary 2: {'C':3, 'D':4}","completion":"def merge_dicts(dic1, dic2): res = {**dic1, **dic2} return res"},{"prompt":"Find the largest integer in this list? [1, 4, 9, 3, 5]","completion":"largest_integer = max([1, 4, 9, 3, 5]) print(largest_integer) # Output: 9"},{"prompt":"Write a Spring Boot Rest Controller to list all products in an online store.","completion":"@RestController public class ProductController { @Autowired private ProductService productService; @GetMapping(\\"/products\\") public List<Product> getProducts(){ return productService.listProducts(); } }"},{"prompt":"Write a CSS code to align a button to the center of a webpage. <button>My Button</button>","completion":"button { display: block; margin-left: auto; margin-right: auto; }"},{"prompt":"Write a Bash script to check if the number of arguments supplied is equal to 3 or not.","completion":"#!/bin/bash if [ \\"#\\" -eq 3 ] then echo \\"Number of Arguments provided is 3\\" else echo \\"Number of Arguments provided is not 3\\" fi"},{"prompt":"Find all words that start with the letter 'R' in a string. string = \\"hello world","completion":"def findAllWordsStartingWith(string,letter): words = string.split(' ') allWordsStartingWithLetter = [] for word in words: if word[0] == letter: allWordsStartingWithLetter.append(word) return allWordsStartingWithLetter print(findAllWordsStartingWith('hello world', 'R')) # Output: []"},{"prompt":"Explode a string with a given delimiter. given_str = \\"apple,banana,orange","completion":"def explode_string(given_str): return given_str.split(\\",\\") given_str = \\"apple,banana,orange\\" exploded_str = explode_string(given_str) print(exploded_str) # Output: ['apple', 'banana', 'orange']"},{"prompt":"Construct a Python class for a camera object.","completion":"class Camera: \\"\\"\\"Class representing a camera\\"\\"\\" def __init__(self, brand, model): \\"\\"\\"\\"\\"\\" self.brand = brand self.model = model def get_brand(self): \\"\\"\\"\\"\\"\\" return self.brand def get_model(self): \\"\\"\\"\\"\\"\\" return self.model"},{"prompt":"Program a binary search algorithm. data: [2, 4, 6, 8, 10, 12, 14, 16, 18, 20] target: 16","completion":"def binary_search(data, target): low = 0 high = len(data) - 1 while low <= high: index = (low + high) // 2 value = data[index] if value == target: return index if target < value: high = index - 1 else: low = index + 1 return -1 data = [2, 4, 6, 8, 10, 12, 14, 16, 18, 20] target = 16 index = binary_search(data, target) if index != -1: print(\\"Target is at index: {}\\".format(index)) else: print(\\"Target not found\\")"},{"prompt":"Replace the \\"TODO\\" comment in this code with logic to calculate the mean of a list of numbers. numbers = [1, 2, 3, 4, 5] # TODO: calculate the me","completion":"numbers = [1, 2, 3, 4, 5] # calculate the mean mean = sum(numbers)/len(numbers) print('The mean of the list of numbers is {}.'.format(mean))"},{"prompt":"Construct an if-else statement to compare two variables. variable1: 5 variable2: 10","completion":"variable1 = 5 variable2 = 10 if variable1 > variable2: print(\\"variable1 is greater than variable2\\") elif variable1 < variable2: print(\\"variable1 is less than variable2\\") else: print(\\"variable1 is equal to variable2\\")"},{"prompt":"Debug the following code and update the list \\"result\\" accordingly. def foo(nums): result = [] for val in nums: val += 2 result.append(val) return result nums = [1, 2, 3, 4]","completion":"def foo(nums): result = [] for val in nums: val += 2 result.append(val) return result nums = [1, 2, 3, 4] result = foo(nums)"},{"prompt":"Consider the formula z=(x1n+x2+x3)(2x2+3x3)? find the value of y x1 = 2; x2 = 4; x3 = 6","completion":"y = 28"},{"prompt":"Summarize the given code def sumOfTwo(a, b): \\"\\"\\"Returns the sum of two integers.\\"\\"\\" c = a + b return c","completion":"This function takes two integers as input and returns their sum."},{"prompt":"Modify the program to work with any dataset def sum_values(data): \\"\\"\\"Returns the sum of values in the given dataset.\\"\\"\\" sum = 0 # TODO: Your code here return sum","completion":"def sum_values(data): \\"\\"\\"Returns the sum of values in the given dataset.\\"\\"\\" sum = 0 for val in data: sum += val return sum"},{"prompt":"Write a Python program to calculate the sum of the digits in an integer N = 155","completion":"def sum_digits(n): s = 0 while(n): s += n % 10 n //= 10 return s print(sum_digits(155))"},{"prompt":"Output the 5th element in an array [1, 5, 9, 17, 24, 42, 50]","completion":"24"},{"prompt":"Read the comment in the code and update the code accordingly. def get_multiples(n, limit): \\"\\"\\"Return list of n's multiples for all numbers up to limit\\"\\"\\" multiples = [] # TODO: Your code here return multiple","completion":"def get_multiples(n, limit): \\"\\"\\"Return list of n's multiples for all numbers up to limit\\"\\"\\" multiples = [] for i in range(limit + 1): if i % n == 0: multiples.append(i) return multiples"},{"prompt":"Perform a selection sort on the given array [4, 1, 10, 8, 5]","completion":"def selection_sort(arr): for i in range(len(arr)): min_idx = i for j in range(i+1, len(arr)): if arr[min_idx] > arr[j]: min_idx = j arr[i], arr[min_idx] = arr[min_idx], arr[i] return arr print(selection_sort([4, 1, 10, 8, 5]))"},{"prompt":"What will be the ouptut of below operation? print(4 >> 2)","completion":"1"},{"prompt":"Write a Java program that prints all numbers between 1 to 100.","completion":"public class PrintNumbers{ public static void main(String[] args){ // Prints numbers from 1 to 100 for(int i = 1; i <= 100; i++){ System.out.println(i); } } }"},{"prompt":"Determine if the given input string is a valid C++ identifier or not. stringInput = \\"my_age","completion":"true"},{"prompt":"Create a SQL query to show all the employees' names working in the company 'ABC'.","completion":"SELECT name FROM Employees WHERE company = 'ABC';"},{"prompt":"Explain the role of an HTML div tag.","completion":"The <div> tag defines a division or section in the HTML document. It is used to group blocks of related elements to structure and style a page. The <div> tag is a block-level element, meaning it can stand alone and not appear within any other tags. CSS can be used along with the <div> to define design elements such as the color, size, and position of the division."},{"prompt":"ert the missing code in the function below to sort an array of strings: arr = [\\"hello\\", \\"apple\\", \\"cat\\"] def sort_str(arr): # Insert code here","completion":"def sort_str(arr): # Insert code here arr.sort() return arr"},{"prompt":"Create a JavaScript statement to set the margin of an element with class \\"myclass\\" to 0.","completion":"document.querySelector('.myclass').style.margin = '0';"},{"prompt":"Construct an array in JavaScript that contains the numbers from 6 to 15.","completion":"let arr = [6, 7, 8, 9, 10, 11, 12, 13, 14, 15];"},{"prompt":"Create a SQL query to display sales sum in ascending order of year. SalesSum(TOTAL)","completion":"SELECT YEAR, SUM(TOTAL) AS SalesSum FROM Orders GROUP BY YEAR ORDER BY YEAR ASC"},{"prompt":"Generate a Java program that prints the sum of digits of a given number. 17","completion":"public class SumOfDigits { public static void main(String args[]) { int num = 17; int sum = 0; while(num > 0) { sum += num % 10; num /= 10; } System.out.println(\\"Sum of Digits of the Number: \\" +sum); } }"},{"prompt":"Describe the different types of loops in Java.","completion":"In Java, there are three types of loops: while loops, for loops and do-while loops. While loops execute a block of code until a certain condition is met. For loops are used when the number of iterations is known, with the loop iterating a specific number of times. Do-while loops are similar to while loops, except the condition is tested after the loop iteration, so the loop body will always execute at least once."},{"prompt":"Design a Java program to display the given integer in reverse. 6789","completion":"public class ReverseNumber { public static void main(String[] args) { int num = 6789; int reversed = 0; while(num != 0) { int digit = num % 10; reversed = reversed * 10 + digit; num /= 10; } System.out.println(\\"Reversed Number: \\" + reversed); } }"},{"prompt":"Construct a SQL query to display the product name from the table 'products' ordered by price in descending order.","completion":"SELECT product_name FROM products ORDER BY price DESC"},{"prompt":"Generate a C program to encrypt a sentence using Caesar cipher. The quick brown fox jumps over the lazy dog","completion":"#include <stdio.h> #include <string.h> char encrypt(char ch, int key); int main() { char message[] = \\"The quick brown fox jumps over the lazy dog\\"; int key; printf(\\"Enter the key: \\"); scanf(\\"%d\\", &key); char encrypted_message[100]; for (int i = 0; i < strlen(message); ++i) { encrypted_message[i] = encrypt(message[i], key); } printf(\\"Encrypted message: %sn\\", encrypted_message); return 0; } char encrypt(char ch, int key) { if (ch >= 'a' && ch <= 'z') return (char)('a' + (ch - 'a' + key) % 26); else if (ch >= 'A' && ch <= 'Z') return (char)('A' + (ch - 'A' + key) % 26); else return ch; }"},{"prompt":"Write a Python program to read a list of numbers and print them as a single string without any space. [34, 32, 67, 85]","completion":"my_list = [34, 32, 67, 85] # using join() print(''.join(str(n) for n in my_list))"},{"prompt":"w does one go about creating a function in JavaScript?","completion":"In JavaScript, functions are declared using the 'function' keyword followed by the name of the function and a pair of parentheses. The code for the function should be enclosed within curly brackets. For example: function addTwoNumbers(a, b) { return a + b; }"},{"prompt":"Create a class to represent a blog post in Python.","completion":"class BlogPost: def __init__(self, title, content, author): self.title = title self.content = content self.author = author def edit_post(self, new_title, new_content): self.title = new_title self.content = new_content"},{"prompt":"Create a regex expression to find a date format of \\"yyyy-mm-dd\\".","completion":"d{4}-d{2}-d{2}"},{"prompt":"w do you represent time in JavaScript?","completion":"In JavaScript, time is typically represented as the number of milliseconds that have elapsed since midnight on January 1st, 1970 (also known as the Unix Epoch). It can be represented as a Date object, or by using its individual components (such as hours, minutes, and seconds)."},{"prompt":"Compare and contrast AJAX and XMLHttpRequest.","completion":"AJAX (Asynchronous JavaScript and XML) is a technology that enables web developers to send and receive data asynchronously between the browser and the server without needing to make changes to the existing pages. It works by sending a request to the server using the XMLHttpRequest object, which then processes the request and sends back a response. XMLHttpRequests are used in AJAX, but they can also be used independently of AJAX to send and receive data. The main difference between AJAX and XMLHttpRequest is that AJAX can be used to send and receive multiple requests and responses at once, whereas XMLHttpRequest is limited to one request at a time."},{"prompt":"Write a loop to iterate through all elements in an array in JavaScript.","completion":"for (let i = 0; i < array.length; i++) { const element = array[i]; // perform operations on element }"},{"prompt":"Create two lists, one in Python and one in JavaScript, with 10 numbers each.","completion":"Python List: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10] JavaScript List: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]"},{"prompt":"Write a long-running Python script with a while loop?","completion":"while True: # perform a long-running task pass # or perform an action"},{"prompt":"w can one retrieve data from a web server using Node.js?","completion":"Using Node.js, one can retrieve data from a web server by making an HTTP request. This can be accomplished using the built-in 'http' module, or by using a third-party library such as Request or Axios. After making the request, the response from the server must be handled and the data can then be processed."},{"prompt":"Compare and contrast JavaScript Objects and Arrays.","completion":"JavaScript Objects and Arrays are both used to store and organize data in JavaScript. However, they are two distinct data structures. Objects store data in key-value pairs, while Arrays are indexed collections of items. Additionally, Objects are mutable, whereas Arrays are not. Objects can have any type of data as a key, whereas Array indices must typically be represented by integers."},{"prompt":"Create a regex expression to match the numbers from 0 to 9.","completion":"[0-9]"},{"prompt":"Create an array of five integers with any values.","completion":"int[] nums = {12, 24, 49, 37, 54};"},{"prompt":"Calculate the sum of angles in an octagon.","completion":"The sum of angles in an octagon is 1080° (360° × 3)."},{"prompt":"Create a C++ class called 'Car' with five fields - brand, color, year manufactured, engine type, and number of doors.","completion":"class Car { private: string brand; string color; int year; string engine; int doors; public: Car(string brand, string color, int year, string engine, int doors) { this->brand = brand; this->color = color; this->year = year; this->engine = engine; this->doors = doors; } };"},{"prompt":"Create a JavaScript object called 'book' with the following properties - title, author, genre, and number of pages.","completion":"let book = { title: \\"The Great Gatsby\\", author: \\"F.Scott Fitzgerald\\", genre: \\"Novel\\", pages: 180 };"},{"prompt":"Calculate the area of a triangle given the following lengths of its sides a, b, and c. a = 5, b = 6, c = 8","completion":"double area = 0.25*sqrt((a + b + c)*(b + c - a)*(c + a - b)*(a + b - c));"},{"prompt":"Design a function in C++ that takes in a vector of integers and returns the maximum number in the vector.","completion":"int getMax(vector<int> nums) { // Rule out empty vector if (nums.empty()) { return -1; } int max = nums[0]; // Iterate through every item in vector for (int i = 1; i < nums.size(); i++) { // Update max if needed if (nums[i] > max) { max = nums[i]; } } return max; }"},{"prompt":"Construct a MySQL query to select the employee name and their salary from a table named 'employees' where the salary is greater than 30,000.","completion":"SELECT name, salary FROM employees WHERE salary > 30000;"},{"prompt":"Generate a regular expression that can detect if the length of given strings is above 10.","completion":"re.compile(r\\".{10,}\\")"},{"prompt":"Categorize this sentence as either an imperative instruction or a question. Write a program to count the number of times a specific word appears in a given string.","completion":"Imperative instruction"},{"prompt":"Carve out a SQL query that selects the name and phone number from table named 'Customers'.","completion":"SELECT name, phone_number FROM Customers;"},{"prompt":"Create a class in C++ that can produce the result of an arithmetic expression with two numbers as input. num1 = 5, num2 = 10","completion":"class ArithmeticExpression { public: int CalculateExpression(int num1, int num2) { return num1 + num2; } };"},{"prompt":"Create a Java program that print the Fibonacci sequence in the given range. min = 0, max = 10","completion":"public class Fibonacci { public static void main(String[] args) { int min = 0, max = 10; int prev = 0, next = 1; System.out.print(\\"Fibonacci Sequence in the given range:\\"); for (int i = 0; i <= max; i++) { if (i >= min) { System.out.print(\\" \\" + prev); } int sum = prev + next; prev = next; next = sum; } } }"},{"prompt":"Generate the ternary operator for the following expression: x > 0 ? 10 : 5.","completion":"x > 0 ? 10 : 5"},{"prompt":"Write a basic CSS rule that sets text color to red.","completion":"p { color: red; }"},{"prompt":"Generate the for loop in Java for iterating from 0 to the given number. 4","completion":"for (int i = 0; i < 4; i++) { //code to be executed }"},{"prompt":"Edit the following code so that it prints the given value to the console. System.out.println(\\"Hello World\\"); 5","completion":"System.out.println(5);"},{"prompt":"Change the if-else statement to a switch statement. if (x == 0) { Console.WriteLine(\\"Zero\\"); } else if (x == 1) { Console.WriteLine(\\"One\\"); }","completion":"switch (x) { case 0: Console.WriteLine(\\"Zero\\"); break; case 1: Console.WriteLine(\\"One\\"); break; }"},{"prompt":"Create an HTML form that takes 5 inputs: name, age, gender, email, and phone.","completion":"<form> <label>Name:</label><input type=\\"text\\" name=\\"name\\" required /><br/> <label>Age:</label><input type=\\"text\\" name=\\"age\\" required /><br/> <label>Gender:</label><input type=\\"text\\" name=\\"gender\\" required /><br/> <label>Email:</label><input type=\\"text\\" name=\\"email\\" required /><br/> <label>Phone:</label><input type=\\"text\\" name=\\"phone\\" required /><br/> <input type=\\"submit\\" /> </form>"},{"prompt":"Write an algorithm that reverses a string. Hello World","completion":"def reverse_string(string): reversed_string = \\"\\" for char in string: reversed_string = char + reversed_string return reversed_string"},{"prompt":"Generate the syntax for initializing an array of integers with the given elements. [1, 2, 3]","completion":"int[] arr = {1, 2, 3};"},{"prompt":"Modify the following code so that it prints out the characters from the given string one at a time. String str = \\"Hello World\\";","completion":"String str = \\"Hello World\\"; for (int i = 0; i < str.length(); i++) { System.out.println(str.charAt(i)); }"},{"prompt":"Create a function that takes two arguments (n and m) and returns a randomly shuffled array of length n and containing only elements from 0 to m. n = 5 m = 10","completion":"def shuffle_array(n, m): arr = [] for i in range(n): arr.append(random.randint(0,m)) random.shuffle(arr) return arr"},{"prompt":"Using the heapsort algorithm, sort the following array of numbers in ascending order. [97,54,67,8,2,22,5,47]","completion":"[2, 5, 8, 22, 47, 54, 67, 97]"},{"prompt":"Determine which of the following two strings is a palindrome. \\"kite\\" \\"racecar","completion":"\\"racecar\\" is a palindrome."},{"prompt":"mplement the Caesar Cipher algorithm that shifts the characters in a string by a specified number of spaces. String: \\"Hello World!\\" Shift by: 3","completion":"Khoor Zruog!"},{"prompt":"mplement a function that takes an integer n as input and returns a matrix of size nxn consisting of the natural numbers from 1 to n^2 in row major order. n = 5","completion":"[[1, 2, 3, 4, 5], [6, 7, 8, 9, 10], [11, 12, 13, 14, 15], [16, 17, 18, 19, 20], [21, 22, 23, 24, 25]]"},{"prompt":"Write a function that takes in 2 lists, reverses the elements of each list and combines the elements to output a single list. list1 = [1,2,3] list2 = [4,5,6]","completion":"[6, 5, 4, 3, 2, 1]"},{"prompt":"Compute the probability of each string from the below list. ['apple', 'banana', 'watermelon', 'mango']","completion":"The probability of 'apple' is 0.25, The probability of 'banana' is 0.25, The probability of 'watermelon' is 0.25, The probability of 'mango' is 0.25."},{"prompt":"Take a string as an input and determine the number of times the letter 'a' appears in the string. String: \\"The quick brown fox jumps over the lazy dog","completion":"The letter 'a' appears 1 time in the string."},{"prompt":"the following code, what is the purpose of the 'if' statement? words = [\\"apple\\", \\"pie\\", \\"make\\"] for word in words: if len(word) > 4: print(word)","completion":"The 'if' statement is used to check if the length of the current word is greater than 4, and if it is, the word is printed."},{"prompt":"Suggest an alternative data representation for the following code. ages = {\\"Alice\\": 24, \\"Bob\\": 3, \\"Carol\\": 15}","completion":"ages = [('Alice', 24), ('Bob', 3), ('Carol', 15)]"},{"prompt":"Write a function that takes two parameters, an array of integers and an integer value, and returns the number of occurrences of the given value in the array. input_array = [1, 2, 3, 2, 1] input_value = 2","completion":"def count_occurrences(input_array, input_value): return len([item for item in input_array if item == input_value])"},{"prompt":"Write function to encrypt the text with Caesar Cipher. text = \\"hello\\" shift = 3","completion":"def caesar_cipher(text, shift): ciphered = '' for char in text: ciphered += chr(ord(char) + shift) return ciphered"},{"prompt":"Suggest an alternative way of writing the following code using list slicing. a = [1,2,3,4,5] b = [] for i in range(len(a)): if (i+1) % 2 == 0: b.append(a[i])","completion":"a = [1,2,3,4,5] b = a[1::2]"},{"prompt":"Construct a class which inherits from the parent class by implementing the abstract method. class Parent: def __init__(self): pass def parent_func(self): print('Parent Function') class Child(Parent): # TODO: implement abstract method","completion":"class Parent: def __init__(self): pass def parent_func(self): print('Parent Function') class Child(Parent): def abstract_method(self): pass"},{"prompt":"Output the fifth letter of the given string. Apple","completion":"e"},{"prompt":"Create a regex to detect URL.","completion":"b(https?|ftp|file)://[-A-Za-z0-9+&@#/%?=~_|!:,.;]+[-A-Za-z0-9+&@#/%=~_|]"},{"prompt":"Change the given string to list. Data Science","completion":"['Data', 'Science']"},{"prompt":"Change the comparison operator in the given line to its equivalent. x != y","completion":"x <> y"},{"prompt":"Format the given date and time as DD-MM-YYYY HH:MM 19-03-2020 17:30","completion":"19-03-2020 17:30"},{"prompt":"Use the given string to find the number of occurrences of each letter. Hello World","completion":"occurrences = { 'H': 1, 'e': 1, 'l': 3, 'o': 2, ' ': 1, 'W': 1, 'r': 1, 'd': 1 }"},{"prompt":"Update the code to print out the first five elements of the given list. [3, 4, 1, 6, 8, 9]","completion":"for i in range(5): print(arr[i])"},{"prompt":"Sort the given list with size constraint N in increasing order. N = 4 arr = [8, 7, 6, 5, 4, 1]","completion":"arr = [1, 4, 5, 6, 7, 8]"},{"prompt":"Write a query to select the employee name and salary whose salary is between 10000 and 50000.","completion":"SELECT name, salary FROM employees WHERE salary BETWEEN 10000 AND 50000;"},{"prompt":"Use the given string and convert it to hexadecimal representation. Pytho","completion":"0x50797468"},{"prompt":"Administer a MySQL database to save the customer information below. Henry Smith;25;Real Estate Age","completion":"INSERT INTO customers (name, age, occupation) VALUES ('Henry Smith', 25, 'Real Estate Agent');"},{"prompt":"Modify the code below to filter out negative numbers from the given array. var arr = [2, -4, -6, 0, 1];","completion":"var arr = [2, 0, 1]; arr = arr.filter(element => element >= 0);"},{"prompt":"w many jokes can you write in Python?","completion":"There is no definite answer to this question. It depends on the creativity and programming skills of the individual. It is possible to write an infinite number of jokes, but writing a joke that is funny and unique will require more effort and expertise."},{"prompt":"mplement a function that takes in three string parameters and prints out the longest one.","completion":"def longest_string(str1, str2, str3): if len(str1) >= len(str2) and len(str1) >= len(str3): print(str1) elif len(str2) >= len(str1) and len(str2) >= len(str3): print(str2) else: print(str3)"},{"prompt":"Create a class called \\"BankAccount\\" with two instance variables \\"accountNumber\\" and \\"balance\\".","completion":"class BankAccount(): def __init__(self, accountNumber, balance): self.accountNumber = accountNumber self.balance = balance"},{"prompt":"ert data into a specific field in a given table. Table Name: User Field: Country Data: Indone","completion":"INSERT INTO User (Country) VALUES ('Indonesia');"},{"prompt":"Complete the function definition so that it takes in two parameters \\"x\\" and \\"y\\" and returns the sum of x and y. def sum(x, y)","completion":"def sum(x, y): return x + y"},{"prompt":"Edit the given JavaScript code so that the output is the Fibonacci sequence from 1 to \\"n\\". let a = 0, b = 1, result for (let i = 1; i < n; i++) { result = a + b a = b b = result } console.log(result)","completion":"let a = 0, b =1, result for (let i = 0; i < n; i++) { result = a + b a = b b = result console.log(a) }"},{"prompt":"Calculate the value of \\"x\\" in the equation \\"5x - 12 = 8\\".","completion":"x = 4"},{"prompt":"Create SQL to select data from the table that has a specific value in the 'name' field. Table Name: Country Field: Name Value: US","completion":"SELECT * FROM Country WHERE Name = 'USA';"},{"prompt":"Create a class called \\"Employee\\" with three instance variables: 'Name', 'Salary', and 'Position'.","completion":"class Employee(): def __init__(self, name, salary, position): self.name =name self.salary = salary self.position = position"},{"prompt":"Convert the code from OOP to a functional programming style. class Employee: def __init__(self, name, age): self.name = name self.age = age def print_details(self): print(f\\"Name: {self.name}, age: {self.age}\\")","completion":"def Employee(name, age): return (name, age) def print_details(employee): name, age = employee print(f\\"Name: {name}, age: {age}\\")"},{"prompt":"Generate code that implements a method to compare two strings.","completion":"def compare_strings(str1, str2): if len(str1) != len(str2): return False for i in range(len(str1)): if str1[i] != str2[i]: return False return True"},{"prompt":"Explain the difference between a shallow copy and a deep copy.","completion":"A shallow copy of an object creates a new object with the same values as the original but with a different location in memory. A deep copy of an object copies not just the values of the original object but also creates copies of any objects that the original object is referencing. The result is two objects which are completely independent of each other."},{"prompt":"Create a Ruby program that reverses the characters of a provided string. Input: \\"Hello world!","completion":"def reverse_string(str) str.reverse end puts reverse_string(\\"Hello world!\\") #=> \\"!dlrow olleH\\""},{"prompt":"Create a SQL query that generates the first 10 names starting with \\"A\\".","completion":"SELECT NAME FROM TABLE WHERE NAME LIKE \\"A%\\" LIMIT 10;"},{"prompt":"Categorize the following string as either a palindrome or not. Input: \\"racecar","completion":"This string is a palindrome."},{"prompt":"Write a shell script that exits with a status code of 0.","completion":"#!/bin/bash exit 0"},{"prompt":"Modify the following CSS code to target the links with the word \\"Learn\\". a { color: blue; }","completion":"a[href*=\\"Learn\\"] { color: blue; }"},{"prompt":"What is the fifth prime number?","completion":"The fifth prime number is 11."},{"prompt":"Subdivide the following HTML into two columns. <div> <h1>Hello world!</h1> <p>Welcome to my website.</p> </div>","completion":"<div class=\\"columns\\"> <div class=\\"column\\"> <h1>Hello world!</h1> </div> <div class=\\"column\\"> <p>Welcome to my website.</p> </div> </div>"},{"prompt":"Create a randomized password of 10 characters.","completion":"F8a_3q4*f2"},{"prompt":"Edit the code so that it produces the desired output. answer = n if answer % 2 == 0: print('even') else: print('odd') Outpu","completion":"answer = n if answer % 2 == 0: print('even') elif answer % 2 == 1: print('odd')"},{"prompt":"Write a function that takes two strings and returns True if one of the strings is the other string reversed. string_1 = \\"abcde\\" string_2 = \\"edcb","completion":"def isReverse(string_1, string_2): if len(string_1) != len(string_2): return False for i in range(len(string_1)): if string_1[i] != string_2[len(string_2)-i-1]: return False return True"},{"prompt":"Write a code that returns the longest substring of the given string without repeating characters. string = \\"abcabcbb","completion":"def longestSubstring(s): length = len(s) longest_string = 0 i = 0 while (i < length): # Store the last index of the current character last_char_index = -1 string_set = set() current_string = 0 for j in range(i, length): # If the character is already in string_set if s[j] in string_set: # Update the last index last_char_index = j break else: # Add the character to string_set string_set.add(s[j]) # Increase its length by 1 current_string += 1 if longest_string < current_string: longest_string = current_string # Move ahead until the last index i = last_char_index + 1 return longest_string"},{"prompt":"dentify what type of error the code has x = 10 y = \\"10\\" z = x + y","completion":"This code produces a TypeError as it is attempting to add an integer to a string."},{"prompt":"mplement an algorithm to delete a node in a singly linked list, given only access to the node. head = [4, 5, 1, 9] del = 5","completion":"def deleteNode(head, del): # If the node to be deleted is the head node if head.data == del: head = head.next return head # Find previous node of the node to be deleted previous = head while previous.next and previous.next.data != del: previous = previous.next # If node to be deleted is not present in the list if previous.next is None: return head # Change the next pointer of the previos node previous.next = previous.next.next return head"},{"prompt":"Given a string containing a comma-separated list of integers, write code to print all the even numbers. string = \\"23, 2, 5, 16, 1, 9, 8","completion":"#Split the string into a list of integers numbers = [int(x) for x in string.split(',')] #Iterate through the list, if the integer is even, print it for number in numbers: if number % 2 == 0: print(number)"},{"prompt":"Create a function that takes two parameters, a string and an integer, and prints the string the given number of times. string = \\"Hello\\" number = 3","completion":"def printString(string, number): for i in range(number): print(string) printString(string, number)"},{"prompt":"Given a list of lists, generate a single flattened list. lst = [[1, 2], [3, 4], [5, 6]]","completion":"lst = [[1, 2], [3, 4], [5, 6]] flattened = [item for sublist in lst for item in sublist] print(flattened)"},{"prompt":"Write an SQL query that displays a table of the ten most commonly used words in the given article. Today, I climbed the tallest mountain in the world. It was an incredible experience with stunning views and a sense of accomplishment at the top.","completion":"SELECT word, COUNT(*) AS occurrence FROM article GROUP BY word ORDER BY occurrence DESC LIMIT 10;"},{"prompt":"Create a C program that asks for a user input, adds 10 to the value, and prints the result.","completion":"#include <stdio.h> int main() { int num; printf(\\"Enter a number: \\"); scanf(\\"%d\\", &num); num += 10; printf(\\"The result is %d\\", num); return 0; }"},{"prompt":"Translate the following JavaScript code into Python. let x = 10; if(x > 0){ console.log(\\"x is positive\\"); }","completion":"x = 10 if x > 0: print(\\"x is positive\\")"},{"prompt":"Write a function to reverse a linked list in O(n) time complexity.","completion":"def reverse(head): prev = None curr = head while curr is not None: next_node = curr.next curr.next = prev prev = curr curr = next_node head = prev return head"},{"prompt":"Design a Java class for a Car which has the following attributes: name, model, year, and price.","completion":"class Car { private String name; private String model; private int year; private double price; //constructor to initialize Car object public Car(String name, String model, int year, double price) { this.name = name; this.model = model; this.year = year; this.price = price; } //getters and setters public String getName() { return name; } public void setName(String name) { this.name = name; } public String getModel() { return model; } public void setModel(String model) { this.model = model; } public int getYear() { return year; } public void setYear(int year) { this.year = year; } public double getPrice() { return price; } public void setPrice(double price) { this.price = price; } @Override public String toString() { return \\"Car: \\" + this.name + \\" \\" + this.model + \\" (\\" + this.year + \\"), \\" + this.price; } }"},{"prompt":"Create a Javascript function which takes an array as an argument and returns an array with the elements in reverse order. [1, 2, 3, 4, 5]","completion":"function reverseArray(arr) { return arr.reverse(); }"},{"prompt":"Design a Spring Boot class that provides a bean of type String to the application.","completion":"@Configuration public class StringBeanProvider { @Bean public String provideString() { return \\"Hello World!\\"; } }"},{"prompt":"Tell me how to print an IMDB movie rating using Python","completion":"import imdb # create an instance of the IMDb class ia = imdb.IMDb() # get the movie movie = ia.get_movie('tt0111161') # The Shawshank Redemption # get the rating rating = movie['rating'] # print the rating print(f\\"Rating for the movie 'The Shawshank Redemption': {rating}\\")"},{"prompt":"Generate a pseudocode for an algorithm to check if an array is a palindrome.","completion":"FUNCTION isPalindrome(arr[], size) START i <- 0 j <- size-1 WHILE i < j DO IF arr[i] != arr[j] RETURN false END IF i <- i + 1 j <- j - 1 END WHILE RETURN true END"},{"prompt":"Name some of the important data types in Python.","completion":"The important data types in Python are integers, floats, strings, booleans, lists, tuples, dictionaries and sets."},{"prompt":"Create a condition statement to check if all elements in a list are the same.","completion":"all_same = len(list) > 0 and all(x == list[0] for x in list)"},{"prompt":"Create a while loop to print all elements of an array. arr = [1, 2, 3, 4, 5]","completion":"i = 0 while i < len(arr): print(arr[i]) i += 1"},{"prompt":"Create a loop to go through all elements of a dictionary. d = {'name':'John', 'age': 27, 'job': 'Programmer'}","completion":"for key, val in d.items(): print(f\\"{key} : {val}\\")"},{"prompt":"Design a data structure in Java to store and sort a list of customers by their age.","completion":"public class Customer{ private int age; private String name; public Customer(int age, String name) { this.age = age; this.name = name; } public int getAge() { return age; } public String getName() { return name; } } public class AgeSortedCustomerList { private List<Customer> customers = new ArrayList<>(); public void add(Customer customer) { customers.add(customer); } public List<Customer> getSortedByAge(){ customers.sort(Comparator.comparing(Customer::getAge)); return customers; } }"},{"prompt":"Write code to produce the output mentioned. Input Array: [3, 4, 5, 7, 8] Output Array: [7, 8, 5, 4, 3]","completion":"int[] input_arr = { 3, 4, 5, 7, 8 }; int[] output_arr = new int[input_arr.length]; for (int i = 0; i < input_arr.length; i++) { output_arr[i] = input_arr[input_arr.length - 1 - i]; }"},{"prompt":"Create a class in C++ for a circle which includes radius as a member variable.","completion":"#include <iostream> class Circle { private: double radius; public: Circle(double r) { radius = r; } double getRadius() { return radius; } };"},{"prompt":"Edit the given code in Python to produce the desired output. lst = [3, 8, 9] for i in lst: print(i) Expected Output: 3 8 9","completion":"lst = [3, 8, 9] for i in lst: print(str(i)) # Output 3 8 9"},{"prompt":"Write a SQL query to select all employee records with salary greater than 30000. Employees Table id | name | age | salary ------------------------ 1 | John | 20 | 25000 2 | Nancy | 27 | 35000 3 | David | 30 | 40000 4 | Mike | 36 | 31000","completion":"SELECT * FROM Employees WHERE salary > 30000;"},{"prompt":"Ruby, write a method to find the sum of two numbers from the given string. String: “The sum of 4 and 8 is 12”","completion":"def sum_from_string(str) array = str.scan(/d+/).map(&:to_i) sum = array[0] + array[1] return sum end sum_from_string(\\"The sum of 4 and 8 is 12\\") # Output: 12"},{"prompt":"Write a query in MySQL to find the particular employee's salary from an employee table. Employee table name | age | salary Bob | 20 | 20000 John | 45 | 27000 Tim | 23 | 35000","completion":"SELECT salary FROM Employee WHERE name = 'Bob';"},{"prompt":"Repair the given HTML code to display a ‘div’ element centered on the page with a width of 400px. <div style=\\"width: 400px; margin: 0 auto;\\"></div>","completion":"<div style=\\"width: 400px; margin: 0 auto; text-align: center;\\"></div>"},{"prompt":"Write a custom CSS class to add a 3px solid blue border around a button with text size as 18px.","completion":".button { text-size: 18px; border: 3px solid blue; }"},{"prompt":"Create a MySQL trigger to store the times for insertion and updating a row in a table.","completion":"CREATE TRIGGER tr_storeTime BEFORE INSERT OR UPDATE ON <Table> FOR EACH ROW BEGIN IF INSERTING THEN SET NEW.addedTime = NOW(); END IF; IF UPDATING THEN SET NEW.updatedTime = NOW(); END IF; END;"},{"prompt":"Reset the input field in areact Native form after submitting the form.","completion":"onSubmit() { this.form.reset(); }"},{"prompt":"Create a function in python to print all values between two given values. Do not include the two given values in the output.","completion":"def print_range(start, end): for value in range(start + 1, end): print(value, end = \\" \\")"},{"prompt":"Create a function in JavaScript that finds the maximum number between two given numbers.","completion":"function maxNum(num1, num2) { if (num1 > num2) { return num1; } else { return num2; } }"},{"prompt":"Create an HTML page with a form that verifies if the email address entered is valid or not.","completion":"<form method=\\"post\\" action=\\"verify.php\\"> Enter your email address:<br> <input type=\\"text\\" name=\\"email\\"> <br><br> <input type=\\"submit\\" value=\\"Verify\\"> </form>"},{"prompt":"Write a CSS rule to set a transparent border for all buttons on a page.","completion":"button { border: 2px solid transparent; }"},{"prompt":"Create an HTML document with a heading \\"Heading\\" and a paragraph with the text \\"Hello, World!","completion":"<!DOCTYPE html> <html> <head> <title>Example Document</title> </head> <body> <h1>Heading</h1> <p>Hello, World!</p> </body> </html>"},{"prompt":"ert 15 random numbers between 0 and 10 in a list.","completion":"import random numbers = [] for i in range(15): numbers.append(random.randrange(0, 10)) print(numbers)"},{"prompt":"Write a JavaScript function that takes an array of words and returns an array of the lengths of each of those words.","completion":"function lengths(words) { var length = []; for (var i = 0; i < words.length; i++) { length.push(words[i].length); } return length; }"},{"prompt":"Write a Python program to parse a text string given a regular expression and return the matches.","completion":"import re def parse(expression, string): matches = re.finditer(expression, string) return [match.group(0) for match in matches]"},{"prompt":"Create a TensorFlow neural network model to classify animals into 4 categories.","completion":"import tensorflow as tf # Define the model model = tf.keras.Sequential([ tf.keras.layers.Flatten(input_shape=(28, 28)), tf.keras.layers.Dense(128, activation='relu'), tf.keras.layers.Dropout(0.2), tf.keras.layers.Dense(4, activation='softmax') ]) # Compile the model model.compile(optimizer='adam', loss='sparse_categorical_crossentropy', metrics=['accuracy'])"},{"prompt":"Create a MongoDB query to find all the documents containing the string \\"Apple\\" in the field \\"Company\\".","completion":"db.collection.find({Company: { regex: /Apple/ }});"},{"prompt":"Describe how a web server handles a request.","completion":"When a web server receives a request, it typically passes the request to a request handler. The request handler interprets the request and takes the appropriate action. Depending on the type of request, this could include accessing a file or a database, or running an application. After the request has been processed, the response is typically sent back to the user in the form of HTML, XML, or JSON."},{"prompt":"Edit the following code to add a sharing feature that posts to Facebook. def share(message): #code here","completion":"def share(message): import facebook graph = facebook.GraphAPI(access_token=<ACCESS_TOKEN>) graph.put_object(parent_object='me', connection_name='feed', message=message)"},{"prompt":"What does the “static” keyword do in Java?","completion":"The \\"static\\" keyword in Java is used to define static members of a class. This includes static methods, static variables, static blocks, and static inner classes. Static methods can be invoked without creating an instance of the class, and static variables are shared among all objects of the same class."},{"prompt":"Create a class that represents a student that contains the following information: name, email, age and type of degree.","completion":"class Student: def __init__(self, name, email, age, degree_type): self.name = name self.email = email self.age = age self.degree_type = degree_type"},{"prompt":"Create a program that takes in a numeric value, X, and prints all the positive divisors of that number. X = 8","completion":"def print_divisors(x): divisors = [] for i in range(1, x + 1): if(x % i == 0): divisors.append(i) print(divisors)"},{"prompt":"Create a function that takes in an integer and returns true if the number is prime or false if the number is not prime.","completion":"def is_prime(num): for n in range(2, num): if(num % n == 0): return False else: return True"},{"prompt":"Create a function that takes an array of numbers, calculates the sum of the numbers across all the arrays, and returns the average of those sums. arr = [[1, 2, 3], [4, 5, 6], [7, 8, 9]]","completion":"def get_average_sum(arr): total = 0 count = 0 for sub_arr in arr: total += sum(sub_arr) count += len(sub_arr) return total / count"},{"prompt":"What type of optimization algorithm is used in the following snippet of code? weights = np.random.rand(2, 1) for epoch in range(50): predictions = predict(x, weights) gradients = calcluate_gradients(x, predictions, y) weights -= gradients * learning_rate","completion":"Stochastic Gradient Descent optimization algorithm is used in the given snippet of code."},{"prompt":"Rewrite the following code to use loop instead of recursion. def longest_substring(input_string): if len(input_string) <= 1: return input_string else: first_letter = input_string[0] rest_substring = input_string[1:] sub_string = longest_substring(rest_substring) if first_letter in sub_string: return sub_string else: return first_letter + sub_string","completion":"def longest_substring(input_string): longest_substring = \\"\\" for i in range(len(input_string)): current_substring = \\"\\" for j in range(i, len(input_string)): if input_string[j] not in current_substring: current_substring += input_string[j] else: break if len(current_substring) > len(longest_substring): longest_substring = current_substring return longest_substring"},{"prompt":"Write a function which will print out a given pattern. * ** *** ****","completion":"def print_pattern(n): for i in range(1, n+1): print(\\"*\\" * i) print_pattern(4)"},{"prompt":"Write a class that implements an arithmetic operator. None","completion":"class ArithmeticOperator: def __init__(self, operator, left, right): self.operator = operator self.left = left self.right = right def operate(self): if self.operator == \\"+\\": return self.left + self.right elif self.operator == \\"-\\": return self.left - self.right elif self.operator == \\"*\\": return self.left * self.right elif self.operator == \\"/\\": return self.left / self.right else: raise ValueError('Not a valid operator')"},{"prompt":"Print out the Fibonacci series up to a given number. n = 5","completion":"def print_fibonacci_series(n): a = 0 b = 1 print(a, end = \\" \\") print(b, end = \\" \\") for _ in range(2, n): c = a + b a = b b = c print(c, end = \\" \\") print() print_fibonacci_series(5)"},{"prompt":"Given the following code, find the output. def f(x): if x == 0 or x == 1: return 1 return f(x-1) + f(x-2) print(f(4))","completion":"The output of the following code is 3."},{"prompt":"Edit the given code to use dynamic programming to solve the problem. def rod_cutting(arr, n): if n <= 0: return 0 max_val = 0 for i in range(0, n): max_val = max(max_val, arr[i] + rod_cutting(arr, n-i-1)) return max_val","completion":"def rod_cutting(arr, n): dp = [-1 for _ in range(n+1)] dp[0] = 0 for i in range(1, n+1): for j in range(i): dp[i] = max(dp[i], arr[j] + dp[i - j - 1]) return dp[n]"},{"prompt":"Create an array of random integers from 0-10 and print the sum of all elements in the array.","completion":"import random # generate random integers int_list = [random.randint(0, 10) for i in range(10)] # calculate the sum total = 0 for e in int_list: total += e # print the sum print(total)"},{"prompt":"Create a Flask application to display a web page containing the words \\"Hello, World.","completion":"from flask import Flask app = Flask(__name__) @app.route('/') def hello(): return \\"<h1>Hello, World!</h1>\\" if __name__ == '__main__': app.run()"},{"prompt":"Use Python to reverse the order of a string input. I love coding","completion":"def reverse_string(string): return string[::-1] string_input = 'I love coding' reverse_string(string_input)"},{"prompt":"Create a Java class named \\"MyClass\\" with three methods - getName(), setName(), and displayName().","completion":"public class MyClass { private String name; // constructor public MyClass(String name) { this.name = name; } // getName public String getName() { return this.name; } // setName public void setName(String name) { this.name = name; } // displayName public void displayName() { System.out.println(\\"Name is: \\" + this.name); } }"},{"prompt":"Create a JSON from a given array. [1, 2, 3, 4, 5]","completion":"let array = [1, 2, 3, 4, 5]; let json = JSON.stringify(array); console.log(json);"},{"prompt":"Create an algorithm in JavaScript to sort an array of numbers. [5, 2, 4, 6, 1]","completion":"let arr = [5, 2, 4, 6, 1]; arr.sort(function(a, b){ return a-b; }); console.log(arr);"},{"prompt":"Design a program to count the total number of even numbers in a given array. [1, 2, 3, 4, 5, 6]","completion":"def count_evens(arr): count = 0 for i in arr: if (i % 2) == 0: count+=1 return count arr = [1, 2, 3, 4, 5, 6] count = count_evens(arr) print(count)"},{"prompt":"Design an algorithm in JavaScript to check if a given string consists of only unique characters. Hello","completion":"function isUnique(str) { for(let i = 0; i<str.length; i++){ for(let j = i+1; j<str.length; j++){ if(str.charAt(i) === str.charAt(j)){ return false; } } } return true; } let str = 'Hello'; let result = isUnique(str); console.log(result);"},{"prompt":"Modify the following CSS code to change the background color of the element to \\"#FFC0CB .main-page { background-color: #FFF; }","completion":".main-page { background-color: #FFC0CB; }"},{"prompt":"Create an array with 3 elements, first element is 5, the second element is 17 and the third element is identical to the first element","completion":"[5, 17, 5]"},{"prompt":"Given the following data structure, write a function that takes two arguments and returns the value of the specified property from the object const data = { id: 1, name: 'John' }","completion":"function getValue(data, key) { return data[key]; }"},{"prompt":"Create a dictionary with three items of your choice","completion":"{ 'apple': 'fruit', 'carrot': 'vegetable', 'sugar': 'sweetener' }"},{"prompt":"Using the same array, write a function that returns the largest number [3, 5, 22, 11, 16, 9]","completion":"function getMaxNumber(nums) { let maxNum = nums[0]; for (let i = 1; i < nums.length; i++) { if (nums[i] > maxNum) { maxNum = nums[i]; } } return maxNum; }"},{"prompt":"Write the SQL query to select the last element of a table table_name: user","completion":"SELECT * FROM users ORDER BY id DESC LIMIT 1;"},{"prompt":"Retrieve the company name from the following object const user = { name: 'John Doe', company: 'Google' }","completion":"user.company"},{"prompt":"Round the number 3.1415 to the nearest hundredth","completion":"Math.round(3.1415 * 100) / 100;"},{"prompt":"Edit the given HTML code to create a paragraph element. <div>Hello World!</div>","completion":"<div><p>Hello World!</p></div>"},{"prompt":"Create a query in MySQL which fetches the first 10 records from a table called 'table1'.","completion":"SELECT * FROM table1 LIMIT 10;"},{"prompt":"Edit the given python code to execute the arithmetic operation. a = 8 b = a+2","completion":"a = 8 b = a + 2 c = a * b print(c)"},{"prompt":"Use Predicate logic for representing the following statement. \\"An elephant only lives in an African safari.","completion":"∀x(Elephant (x) ∧ Lives_in(x, African_safari))"},{"prompt":"Develop an HTML page in which you can display a message to the user.","completion":"<html> <head> <title>Display Message</title> </head> <body> <div> <h1>Welcome!</h1> <p>This page displays a message to the user.</p> </div> </body> </html>"},{"prompt":"Write a SQL query which returns all columns from the table 'employees'","completion":"SELECT * FROM employees;"},{"prompt":"Create a function in Python which checks if an input value is positive or negative.","completion":"def check_sign(x): if x < 0: print(\\"The number is negative.\\") elif x > 0: print(\\"The number is positive.\\") else: print(\\"The number is 0.\\")"},{"prompt":"Design a C++ class which adds the two arguments and returns the result.","completion":"class adder { int a, b; public: adder (int a, int b) { this->a = a; this->b = b; } int add() { int sum = a + b; return sum; } };"},{"prompt":"Convert the given context free grammar to Chomsky Normal Form. S --> AaBb A --> aA | b B --> bB |","completion":"S --> AaBb A --> aA | bB B --> bBB | bA | aB | aA"},{"prompt":"Define a function in R which takes two arguments and finds their average.","completion":"find_average <- function(x, y){ avg <- (x + y) / 2 return(avg) }"},{"prompt":"Develop a Java code which assigns each element of an array to an individual variable.","completion":"int[] myArray = {1,2,3}; int first = myArray[0]; int second = myArray[1]; int third = myArray[2];"},{"prompt":"Write a query in PostgreSQL for deleting a table.","completion":"DROP TABLE table_name;"},{"prompt":"Write a Java program to read in a list of integers and separate them into two lists of even and odd numbers. [1, 4, 6, 7, 8, 10, 12]","completion":"List even = [4, 6, 8, 10, 12] List odd = [1, 7]"},{"prompt":"Use an object oriented approach to create an object in Java to store the temperature, humidity and wind speed from a weather forecast.","completion":"class WeatherData { private int temperature; private int humidity; private int windSpeed; // ... setter and getter methods }"},{"prompt":"Write a HTML structure using semantic tags to list the skills of a web developer. HTML, CSS, JavaScript, Reac","completion":"<!DOCTYPE html> <html lang=\\"en\\"> <head> <meta charset=\\"UTF-8\\"> <meta name=\\"viewport\\" content=\\"width=device-width, initial-scale=1.0\\"> <title>Web Developer Skills</title> </head> <body> <h1>Web Developer Skills</h1> <ul> <li>HTML</li> <li>CSS</li> <li>JavaScript</li> <li>React</li> </ul> </body> </html>"},{"prompt":"Write a HTML to generate a form to login.","completion":"<!DOCTYPE html> <html lang=\\"en\\"> <head> <meta charset=\\"UTF-8\\"> <meta name=\\"viewport\\" content=\\"width=device-width, initial-scale=1.0\\"> <title>Login</title> </head> <body> <form action=\\"\\"> <label for=\\"username\\">Username</label> <input type=\\"text\\" placeholder=\\"Username\\" name=\\"username\\"><br><br> <label for=\\"password\\">Password</label> <input type=\\"password\\" placeholder=\\"Password\\" name=\\"password\\"><br><br> <input type=\\"submit\\" value=\\"Login\\"> </form> </body> </html>"},{"prompt":"Use an object oriented approach to create a class in Java to store the cost and name of an item.","completion":"class Item { private String name; private double cost; // ... setter and getter methods }"},{"prompt":"Create HTML code for a web page that has a centered title, a logo, and a colorscheme. Title: \\"My Website\\" Logo: <link to logo file> Color Scheme: #123456, #234567, #345678","completion":"<html> <head> <title>My Website</title> </head> <body> <h1 align=\\"center\\">My Website</h1> <img src=\\"<link to logo file>\\" align=\\"center\\"> <style> body { background-color: #123456; color: #234567; } h1 { color: #345678; } </style> </body> </html>"},{"prompt":"Edit this text to make it more concise without losing any information. The research assisted in understanding the ways in which we can better optimize our data structures. We discovered many new ways of more efficiently using the resources that we were given.","completion":"Research revealed ways to optimize data structures more efficiently, leading to new resource-saving techniques."},{"prompt":"Write a Python function that takes a list of numbers and returns the mean and standard deviation of that list. list = [1, 2, 3, 4, 5]","completion":"import statistics def get_stats(list): mean = statistics.mean(list) stdev = statistics.stdev(list) return mean, stdev mean, stdev = get_stats(list) print(\\"Mean:\\", mean) print(\\"Standard Deviation:\\", stdev)"},{"prompt":"Create HTML code for a table that has 7 columns and 3 rows.","completion":"<html> <table> <tr> <th>Column 1</th> <th>Column 2</th> <th>Column 3</th> <th>Column 4</th> <th>Column 5</th> <th>Column 6</th> <th>Column 7</th> </tr> <tr> <td>Cell 1</td> <td>Cell 2</td> <td>Cell 3</td> <td>Cell 4</td> <td>Cell 5</td> <td>Cell 6</td> <td>Cell 7</td> </tr> <tr> <td>Cell 8</td> <td>Cell 9</td> <td>Cell 10</td> <td>Cell 11</td> <td>Cell 12</td> <td>Cell 13</td> <td>Cell 14</td> </tr> </table> </html>"},{"prompt":"Write a SQL query to find the number of customers with a given state. state = \\"Tex","completion":"SELECT COUNT(*) FROM customers WHERE state = \\"Texas\\";"},{"prompt":"Create a Python program that prints out all even numbers between 0 and the given number n.","completion":"def print_even_numbers(n): for i in range (0, n+1): if i % 2 == 0: print (i) print_even_numbers(20)"},{"prompt":"Write a Python function to create a dictionary with the given list as its keys and values. list = [\\"a\\", \\"b\\", \\"c\\"]","completion":"def create_dict(list): return dict(zip(list, list)) dict = create_dict(list) print(dict) # Output: {'a': 'a', 'b': 'b', 'c': 'c'}"},{"prompt":"Write a shell script which prints “Hello World” 5 times.","completion":"#!/bin/bash for i in {1..5}; do echo \\"Hello World\\" done"},{"prompt":"Create a new list which contains even elements from the existing list A. A = [1, 4, 5, 12, 3, 7, 16]","completion":"A = [1, 4, 5, 12, 3, 7, 16] even_list = [x for x in A if x % 2 == 0 ]"},{"prompt":"Create a dictionary which contains the product of keys and their individual values from another dictionary. d = {'X': 4, 'Y': 5}","completion":"d = {'X': 4, 'Y': 5} d2 = {k:v*v for k,v in d.items()}"},{"prompt":"Explain how to use trapezoidal approach for numerical integration.","completion":"The trapezoidal approach is a numerical integration technique of approximating the area under a curve or a function using the trapezoid rule. It uses the formula y0 + yn + 2(y1+y2+...+yn-1) and is a first-order numerical integration method that can be used to approximate a definite integral. It works by splitting the integration domain into trapezoids and computing the area of each trapezoid. This can be used to approximate the integral of the function and hence, solve the definite integral."},{"prompt":"When would you use a while-loop in Python?","completion":"A while-loop in Python is used when we need to iterate through a set of instructions or code block until a condition is met or false. It allows us to perform an operation multiple times until the condition is met. For example, we can use a while-loop to iterate and check if a certain number is prime or not."},{"prompt":"w would you create a function in Python to add two numbers?","completion":"def add(a, b): return a + b # Usage print(add(3,4)) # output: 7"},{"prompt":"Rewrite the following instruction to print the binary value it holds. int n = 12;","completion":"System.out.println(Integer.toBinaryString(n));"},{"prompt":"Write a Java method to remove all whitespaces from a string","completion":"public static String removeWhitespace(String str) { return str.replaceAll(\\"s\\", \\"\\"); }"},{"prompt":"Create a shell script to print out the names of the all subdirectories in given directory","completion":"#!/bin/bash for dir in 1/* do if [ -d dir ] then echo (basename dir) fi done"},{"prompt":"Write a C++ program to find the sum of all the perfect numbers between two given inputs.","completion":"#include <iostream> using namespace std; int perfectNo(int low, int high) { int sum = 0; for (int i=low; i<high; i++) { int div_sum = 0; for (int j=1; j<i; j++) if (i % j == 0) div_sum += j; if (div_sum == i && i != 1) sum += i; } return sum; } int main() { int low = 1, high = 25; cout << perfectNo(low, high) << endl; return 0; }"},{"prompt":"Write a Java program to get the day of the month from given a Date object","completion":"public class DayFromDate { public static void main(String[] args) { Date date = new Date(); System.out.println(\\"Day of the month: \\" + date.getDate()); } }"},{"prompt":"Explain how inheritance works in programming.","completion":"Inheritance is a feature of object-oriented programming (OOP) that allows one class, known as the \\"parent class\\" or \\"base class\\", to pass its properties and methods to another class, known as the \\"child class\\" or \\"inherited class\\". This relationship between the classes allows for code reuse, as the child class can access the data and functionality of the parent class. Additionally, the child class is allowed to modify and add onto the parent class's features, allowing for even more code reuse between classes and creating more efficient developer workflows."},{"prompt":"Design a class for a user profile.","completion":"class UserProfile: def __init__(self, username, password, email, full_name, date_of_birth, address): self.username = username self.password = password self.email = email self.full_name = full_name self.date_of_birth = date_of_birth self.address = address def update_phone_number(self, phone_number): self.phone_number = phone_number"},{"prompt":"Use the comment as a guide, replace its content with the proper code. char array1[10] = {'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j'}; char array2[10]; // TODO: copy the content of array1 to array2","completion":"char array1[10] = {'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j'}; char array2[10]; for (int i = 0; i < 10; i++) { array2[i] = array1[i]; }"},{"prompt":"mplement a JavaScript function to find all distinct prime factors of a given number.","completion":"function findPrimeFactors(num) { let factors = []; while (num % 2 === 0) { factors.push(2); num = num / 2; } // num must be odd at this point for (let i = 3; i <= Math.sqrt(num); i += 2) { while (num % i === 0) { factors.push(i); num = num / i; } } // This condition is to handle the case // when num is a prime number greater than 2 if (num > 2) factors.push(num); // Distinct prime factors let uniqFactors = new Set(factors); return [...uniqFactors]; }"},{"prompt":"Create a class in JavaScript to encapsulate user information.","completion":"class User { constructor(fullName, email, address) { this.fullName = fullName; this.email = email; this.address = address; } updateName(name) { // update the user's full name this.fullName = name; } updateEmail(email) { // update the user's email address this.email = email; } updateAddress(address) { // update the user's address this.address = address; } getFullName() { // return the user's full name return this.fullName } getEmail() { // return the user's email return this.email } getAddress() { // return the user's address return this.address } }"},{"prompt":"Edit the code to create a class for a profile. class Profile { }","completion":"class Profile { constructor(name, email, avatar_url) { this.name = name; this.email = email; this.avatar_url = avatar_url; } updateName(name) { // update the profile's name this.name = name; } updateEmail(email) { // update the profile's email address this.email = email; } updateAvatar(url) { // update the profile's avatar url this.avatar_url = url; } getName() { // return the profile's name return this.name; } getEmail() { // return the profile's email return this.email; } getAvatarUrl() { // return the profile's avatar url return this.avatar_url; } }"},{"prompt":"Design a HTML page to display a table of students’ grades for a specific subject.","completion":"<!DOCTYPE html> <html> <head> <style> table { font-family: arial, sans-serif; border-collapse: collapse; width: 100%; } td, th { border: 1px solid #dddddd; text-align: left; padding: 8px; } tr:nth-child(even) { background-color: #dddddd; } </style> </head> <body> <h2>Students' Grades</h2> <table> <tr> <th>Name</th> <th>Grade</th> </tr> <tr> <td>John</td> <td>A</td> </tr> <tr> <td>Steve</td> <td>B</td> </tr> <tr> <td>Jane</td> <td>A+</td> </tr> <tr> <td>Jeff</td> <td>C+</td> </tr> </table> </body> </html>"},{"prompt":"Create a MySQL query to find the employees with the best rating during their last review.","completion":"SELECT * FROM Employees WHERE Rating IN (SELECT MAX(Rating) FROM Reviews WHERE ReviewDate = (SELECT MAX(ReviewDate) FROM Reviews) GROUP BY EmployeeID) ORDER BY Rating DESC;"},{"prompt":"Design an algorithm to determine if an integer is even or odd.","completion":"def is_even(num): if num % 2 == 0: return True else: return False"},{"prompt":"Create a PHP script to print out Fibonacci numbers up to 50.","completion":"<?php function Fibonacci(n){ if (n == 0) return 0; else if (n == 1) return 1; else return (Fibonacci(n-1) + Fibonacci(n-2)); } n = 50; for (i = 0; i < n; i++) echo Fibonacci(i),' '; ?>"},{"prompt":"Write a C++ program to calculate the distance between two points in 3D space.","completion":"#include <iostream> #include <cmath> using namespace std; struct Point { double x, y, z; }; //Calculate distance between two points double distance(Point p1, Point p2) { return sqrt(pow(p2.x - p1.x, 2) + pow(p2.y - p1.y, 2) + pow(p2.z - p1.z, 2)*1.0); } int main() { Point p1 = {2.0, 4.0, 9.0}; Point p2 = {5.1, 7.5, 10.0}; cout << \\"Distance between p1 and p2 is \\" << distance(p1, p2); return 0; }"},{"prompt":"Rewrite the following JavaScript program using ES6 syntax. let result=[]; for (let i=0;i<array.length;i++) { if (array[i]%2 == 0) { result.push(array[i]); } }","completion":"let result = array.filter(n => n % 2 == 0);"},{"prompt":"Create an algorithm which is able to sort a given array of integers in descending order.","completion":"def sort_descending(nums): for i in range(len(nums)): for j in range(len(nums)): if nums[i] > nums[j]: nums[i],nums[j] = nums[j],nums[i] return nums"},{"prompt":"Given the object below, debug the problem to make a valid code in JavaScript. let obj = { name: 'John', age: 20, printDetails: () => { console.log(\`The name is {name} and age is {age}\`); } }","completion":"let obj = { name: 'John', age: 20, printDetails() { console.log(\`The name is {this.name} and age is {this.age}\`); } }"},{"prompt":"Compute the average of the following three numbers: 5, 10, and 15.","completion":"10.0"},{"prompt":"Create a for loop that prints the following output:","completion":"for i in range(10): print(i)"},{"prompt":"Using the given array, create a function that takes in two arguments, the array and a number, and returns the position of the number in the array. let arr = [1, 7, 9, 8, 5]","completion":"function findIndexOf(array, num) { return array.indexOf(num); }"},{"prompt":"Create an if statement that prints \\"Fizz\\" if a number is divisible by 3 and \\"Buzz\\" if a number is divisible by 5.","completion":"if (num % 3 == 0 && num % 5 == 0) { console.log(\\"FizzBuzz\\"); } else if (num % 3 == 0) { console.log(\\"Fizz\\"); } else if (num % 5 == 0) { console.log(\\"Buzz\\"); }"},{"prompt":"Reverse this sentence: \\"I can do coding.","completion":"\\"coding do can I\\""},{"prompt":"Write a Bash script to read three numbers and print their sum to the screen.","completion":"#/bin/bash echo \\"Enter the first number: \\" read num1 echo \\"Enter the second number: \\" read num2 echo \\"Enter the third number: \\" read num3 echo \\"The sum of the three numbers is: \\" echo ((num1 + num2 + num3))"},{"prompt":"Using the given object, create a function to print out the value of the property \\"age\\" within the object. let obj = { name: 'John', age: 20, printDetails: () => { console.log(\`The name is {name} and age is {age}\`); } }","completion":"function printAge(obj) { console.log(obj.age); }"},{"prompt":"Use JavaScript to write a program that finds the greatest common divisor of two numbers. num1 = 45 num2 = 36","completion":"function findGCD(num1, num2) { let min = Math.min(num1, num2); while (num1 % min !== 0 || num2 % min !== 0) { min--; } return min; } let result = findGCD(45, 36); console.log(result); // output: 9"},{"prompt":"mplement a method in Java to generate a random float within the given range. min = 0.3 max = 0.7","completion":"/** * Generates a random float value within the given range (inclusive). * @param min the minimum value of the range * @param max the maximum value of the range * @return a random float value within the range */ public static float randomFloat(float min, float max) { Random rand = new Random(); return rand.nextFloat() * (max - min) + min; }"},{"prompt":"Edit the code below to sort the list of integers given in the input. list_in = [40, 32, 12, 19]","completion":"list_in = [40, 32, 12, 19] list_in.sort() print(list_in) #output: [12, 19, 32, 40]"},{"prompt":"Substitute the correct data type for each variable in the code below. name = <data_type> age = <data_type> if_married = <data_type>","completion":"name = str age = int if_married = bool"},{"prompt":"Create a Python program to take the input and print the output as shown in the example below. list1 = [10, 20, 30, [40, 50], [60, 70], 80]","completion":"print(list1[3][1]) print(list1[4][0]) print(list1[3][1]) # output: 50 print(list1[4][0]) # output: 60"},{"prompt":"Construct an SQL query to find the names of all senior developers. developers table: id INT, name VARCHAR(50), seniority VARCHAR(20)","completion":"SELECT name FROM developers WHERE seniority = 'Senior'"},{"prompt":"Let's try a different sort algorithm. Generate a Python code snippet to implement merge sort.","completion":"# Merges two subarrays of arr[]. # First subarray is arr[l..m] # Second subarray is arr[m+1..r] def merge(arr, l, m, r): n1 = m - l + 1 n2 = r- m # create temp arrays L = [0] * (n1) R = [0] * (n2) # Copy data to temp arrays L[] and R[] for i in range(0 , n1): L[i] = arr[l + i] for j in range(0 , n2): R[j] = arr[m + 1 + j] # Merge the temp arrays back into arr[l..r] i = 0 # Initial index of first subarray j = 0 # Initial index of second subarray k = l # Initial index of merged subarray while i < n1 and j < n2 : if L[i] <= R[j]: arr[k] = L[i] i += 1 else: arr[k] = R[j] j += 1 k += 1 # Copy the remaining elements of L[], if there # are any while i < n1: arr[k] = L[i] i += 1 k += 1 # Copy the remaining elements of R[], if there # are any while j < n2: arr[k] = R[j] j += 1 k += 1 # l is for left index and r is right index of the # sub-array of arr to be sorted def mergeSort(arr,l,r): if l < r: # Same as (l+r)//2, but avoids overflow for # large l and h m = (l+(r-1))//2 # Sort first and second halves mergeSort(arr, l, m) mergeSort(arr, m+1, r) merge(arr, l, m, r)"},{"prompt":"Create an input validation function in Python which checks that the input is an integer between 2-6.","completion":"def input_validation(input): try: input = int(input) if input >= 2 and input <= 6: return True else: return False except ValueError: return False"},{"prompt":"Make a function in Python that sorts a list of integers in increasing order. [50, 2, 8, 7, 19, 29]","completion":"def sortInt(nums): for i in range(len(nums)-1): for j in range(i+1,len(nums)): if nums[i] > nums[j]: #Swap nums[i],nums[j] = nums[j],nums[i] return nums"},{"prompt":"Develop an HTML/CSS layout with 2 columns and a 2-row header.","completion":"<div class=\\"container\\"> <div class=\\"header\\"> <div class=\\"row1\\">Row1</div> <div class=\\"row2\\">Row2</div> </div> <div class=\\"main\\"> <div class=\\"column1\\">Column1</div> <div class=\\"column2\\">Column2</div> </div> </div>"},{"prompt":"Create a MySQL query to select the top 10 sales records from the table \\"sales\\".","completion":"SELECT * FROM sales ORDER BY amount DESC LIMIT 10;"},{"prompt":"Create a MongoDB query to find all records with a \\"quantity\\" field greater than 5.","completion":"db.collection.find({ \\"quantity\\": { gt: 5 } })"},{"prompt":"Create an HTML page with a basic calculator form that takes two numbers as inputs and computes and displays the sum.","completion":"<!DOCTYPE html> <html lang=\\"en\\"> <head> <meta charset=\\"UTF-8\\" /> <meta name=\\"viewport\\" content=\\"width=device-width, initial-scale=1.0\\" /> <title>Calculator</title> </head> <body> <h1>Calculator</h1> <form> <label> Number 1: <input type=\\"text\\" name=\\"num1\\" /> </label> <br /> <label> Number 2: <input type=\\"text\\" name=\\"num2\\" /> </label> <br /> <button type=\\"submit\\">Calculate</button> </form> <p id=\\"answer\\"></p> <script> let form = document.querySelector(\\"form\\"); form.addEventListener(\\"submit\\", e => { e.preventDefault(); let nums = form.querySelectorAll(\\"input[name=num]\\"); let sum = 0; for (let n of nums) { sum += parseInt(n.value); } document.getElementById(\\"answer\\").textContent = \`The sum is: {sum}\`; }); <\/script> </body> </html>"},{"prompt":"Create a MySQL query to select the records whose name fields begins with an \\"A\\".","completion":"SELECT * FROM table_name WHERE name LIKE 'A%';"},{"prompt":"Develop a CSS/HTML page with a 3-column layout and a sticky navigation bar.","completion":"<!DOCTYPE html> <html lang=\\"en\\"> <head> <meta charset=\\"UTF-8\\"> <meta name=\\"viewport\\" content=\\"width=device-width, initial-scale=1.0\\"> <title>Layout</title> <style> .row { display: flex; flex-wrap: wrap; } .column { flex: 25%; } #nav { position: sticky; top: 0; background-color: #000; padding: 10px; text-align: center; } </style> </head> <body> <div id=\\"nav\\">Navigation Bar</div> <div class=\\"row\\"> <div class=\\"column\\">Column1</div> <div class=\\"column\\">Column2</div> <div class=\\"column\\">Column3</div> </div> </body> </html>"},{"prompt":"Create a function that prints out the List of tuples. t = [(1, 5), (0, 1), (10, 20)]","completion":"def print_list_tuple(t): for item in t: print(item)"},{"prompt":"Construct an SQL query to delete rows from a table that fulfill two conditions. Table Name: Customer Conditions: (1) Country = ‘USA’ (2) Age = 18","completion":"DELETE FROM Customer WHERE Country = 'USA' AND Age = 18;"},{"prompt":"Suggest a name for the variable that represents a temperature value in Fahrenheit","completion":"fahrenheit_temperature"},{"prompt":"Create a function to encrypt a string using the XOR operator. key = 'ABCDEFG'","completion":"def xor_encrypt(string, key): encrypted_string = \\"\\" for i, letter in enumerate(string): encrypted_string += chr(ord(letter) ^ ord(key[i % len(key)])) return encrypted_string"},{"prompt":"Create a class definition for a Car object with attributes of HP and speed.","completion":"class Car: def __init__(self, hp, speed): self.hp = hp self.speed = speed"},{"prompt":"Change the case of all characters in a string. string = \\"Hello World!","completion":"def change_case(string): return string.swapcase()"},{"prompt":"Create a web page with an input field and a button to reset the field.","completion":"<!DOCTYPE html> <html lang=\\"en\\"> <head> <meta charset=\\"UTF-8\\"> <meta name=\\"viewport\\" content=\\"width=device-width, initial-scale=1.0\\"> <title>Input field and Reset button</title> </head> <body> <input type=\\"text\\" placeholder=\\"Type something\\"> <button onclick=\\"resetInput()\\">Reset</button> <script> function resetInput() { document.querySelector('input[type=\\"text\\"]').value = ''; } <\/script> </body> </html>"},{"prompt":"Write a SQL query to select the employees with the lowest salary.","completion":"SELECT * FROM employees ORDER BY salary ASC LIMIT 1;"},{"prompt":"Explain what a constructor is and how it is used in C++.","completion":"A constructor is a special member function of a class which is used to initialize objects of its class type. A constructor has the same name as the class and its purpose is to initialize the members of an object with the given values when an object of that class is declared. In C++, constructors can be either default or parameterized. The default constructor is used to construct an object without any parameters, while the parameterized constructor is used to initialize an object with given parameters."},{"prompt":"Create an XML document with a root element \\"<name>\\".","completion":"<?xml version=\\"1.0\\" encoding=\\"UTF-8\\"?> <name> </name>"},{"prompt":"Write a CSS rule to center an HTML element.","completion":".center { margin: 0 auto; }"},{"prompt":"Create a Java program to find a number in an array and print its index. int[] arr = {1, 2, 3, 4, 5}; int num = 3;","completion":"public class Main { public static void main(String[] args) { int[] arr = {1, 2, 3, 4, 5}; int num = 3; int index = -1; for (int i = 0; i < arr.length; i++) { if (arr[i] == num) { index = i; break; } } if (index == -1) { System.out.println(\\"Number not found.\\"); } else { System.out.println(\\"Number found at index \\" + index); } } }"},{"prompt":"Create a C program to swap two numbers using pointers.","completion":"#include <stdio.h> void swap(int *a, int *b) { int temp = *a; *a = *b; *b = temp; } int main() { int x = 50; int y = 100; printf(\\"x = %d and y = %dn\\", x, y); swap(&x, &y); printf(\\"x = %d and y = %dn\\", x, y); return 0; }"},{"prompt":"Use CSS to style the following list items. <ul> <li> Item 1 </li> <li> Item 2 </li> <li> Item 3 </li> </ul>","completion":"<ul style=\\"list-style: none; font-size: 16px; font-weight: bold; color: #00b5e2;\\"> <li> Item 1 </li> <li> Item 2 </li> <li> Item 3 </li> </ul>"},{"prompt":"What algorithm should be used for predicting the output for a given input?","completion":"The type of algorithm to be used for predicting the output for a given input depends on the complexity of the task. Common algorithms used for prediction tasks include Support Vector Machines, Random Forests, k-Nearest Neighbors and Artificial Neural Networks."},{"prompt":"Link the given HTML elements with the appropriate bootstrap style. <h1>Heading </h1> <button> Button </button>","completion":"<h1 class=\\"text-primary\\">Heading </h1> <button class=\\"btn btn-secondary\\"> Button </button>"},{"prompt":"List the layers of an artificial neural network.","completion":"The layers of an artificial neural network typically include an input layer, one or more hidden layers and an output layer. In addition, some ANNs also include a convolutional layer and/or a pooling layer."},{"prompt":"Analyze the following two functions to determine which one will be faster for executing a given operation. Function 1: def f1(x): for i in range(1, x): print(i) Function 2: def f2(x): i = 1 while i < x: print(i) i += 1","completion":"Function 2 will be faster than Function 1 for executing a given operation. This is because Function 2 uses a while loop, which checks the condition before executing the loop body, while Function 1 uses a for loop, which executes the loop body before checking the condition."},{"prompt":"Name the most important benefit of using a database system.","completion":"The most important benefit of using a database system is the ability to store and retrieve data quickly and easily. Database systems also provide support for data security, data integrity, and concurrently accessing and modifying data from multiple systems."},{"prompt":"Modify the following SQL query to list the top 3 customers with the highest orders. SELECT customers.name, orders.amount FROM customers INNER JOIN orders ON customers.id = orders.customer_id","completion":"SELECT customers.name, orders.amount FROM customers INNER JOIN orders ON customers.id = orders.customer_id ORDER BY orders.amount DESC LIMIT 3"},{"prompt":"Differentiate between a compiler and an interpreter.","completion":"A compiler takes a source code and converts it into an executable program, while an interpreter takes the same source code and executes it directly. Compilers produce a single output file and are usually faster than interpreters. Interpreters take source code as input and produce output directly, and tend to be slower than compilers."},{"prompt":"What is the advantage of using linear regression for predicting the output?","completion":"The advantage of using linear regression for predicting the output is that it can capture important relationship between input variables and the outcome. It is easy to interpret and explain, can produce easily interpretable results, and can also be used to optimize parameters for a given problem."},{"prompt":"Create a class with two methods to generate a random Integer and String","completion":"import random class randomGenerator: def __init__(self): pass def generate_random_int(self): return random.randint(0,100) def generate_random_string(self): return ''.join(random.choices(string.ascii_letters + string.digits, k=10)) randomGenerator = randomGenerator()"},{"prompt":"Python, create a function that reverses a list.","completion":"def reverse_list(list): return list[::-1] list = [10, 16, 1, 5] print(\\"Original List\\", list) print(\\"Reversed List\\", reverse_list(list))"},{"prompt":"Sort the following array arr = [4, 2, 3, 5, 1]","completion":"arr.sort() print(arr)"},{"prompt":"Write a generic function to split an array into n equal slices. arr = [1, 2, 3, 4, 5]","completion":"def splitArr(arr, n): if n > len(arr): return -1 result = [] for i in range(0, len(arr), n): result.append(arr[i:i+n]) return result"},{"prompt":"Create a function that returns the last element of an array. arr = [1, 3, 6, 7, 12]","completion":"def lastElement(arr): return arr[-1]"},{"prompt":"Given a string, remove any duplicate characters. input_string = \\"aaabbbccc","completion":"def removeDupChars(input_string): string_set = set(input_string) new_string = \\"\\". join(string_set) return new_string"},{"prompt":"Write a function to sort a stack in ascending order. stack = [4, 7, 2, 1]","completion":"def sortStackAsc(stack): sorted_stack = [] while stack: current_element = stack.pop() while sorted_stack and current_element < sorted_stack[-1]: stack.append(sorted_stack.pop()) sorted_stack.append(current_element) return sorted_stack"},{"prompt":"Generate a random number between the two numbers provided. min = 5 max = 10","completion":"import random def randomNumber(min, max): return random.randint(min, max)"},{"prompt":"From the array of integers given below, write a Python code snippet to select all even numbers. array = [1, 9, 4, 10, 5, 12];","completion":"even_numbers = [num for num in array if num % 2 == 0]"},{"prompt":"Create a Java program to print all natural numbers between 1 and 50, both inclusive.","completion":"public class Natural { public static void main(String[] args) { int n = 1; while (n <= 50) { System.out.println(n); n = n + 1; } } }"},{"prompt":"Create a CSS style for all <h1> tags to have a red border.","completion":"h1{ border: 1px solid red; }"},{"prompt":"Write a SQL query to select the employee names and IDs from the table 'employees' where the name contains \\"John\\".","completion":"SELECT name, id FROM employees WHERE name LIKE '%John%';"},{"prompt":"Write an HTML structure to create a form with two text boxes and two submit buttons.","completion":"<form action=\\"form_action.php\\" method=\\"POST\\"> <input type=\\"text\\" name=\\"name\\"> <input type=\\"text\\" name=\\"email\\"> <input type=\\"submit\\" name=\\"button1\\" value=\\"Submit\\"> <input type=\\"submit\\" name=\\"button2\\" value=\\"Cancel\\"> </form>"},{"prompt":"From the object given below, write a PHP code snippet to extract the value of the key 'shipping_address'. object = { name: 'John Doe', shipping_address: '123 Main Street' };","completion":"<?php shipping_address = object['shipping_address']; echo shipping_address; ?>"},{"prompt":"Create a HTML structure for an ordered list with 5 items.","completion":"<ol> <li>Item 1</li> <li>Item 2</li> <li>Item 3</li> <li>Item 4</li> <li>Item 5</li> </ol>"},{"prompt":"Write an SQL query to update the column 'name' to 'John' in the table 'employees'.","completion":"UPDATE employees SET name = 'John';"},{"prompt":"From the list of numbers given below, write a PHP code snippet to calculate the mean. list = [1, 8, 4, 6, 5, 3];","completion":"<?php sum = 0; foreach (list as number) { sum += number; } mean = sum / count(list); echo mean; ?>"},{"prompt":"What is the Big O complexity of this following code snippet? def find_duplicates(nums): duplicates = [] for num in nums: if num in duplicates: yield num else: duplicates.append(num)","completion":"The Big O complexity of this code snippet is O(n), since it takes linear time to loop through the array and check if the element has appeared before."},{"prompt":"Write a CSS snippet to create five divs of size 200px by 200px side by side.","completion":"div { width: 200px; height: 200px; } div:nth-child(1) { position: relative; } div:nth-child(2) { position: relative; left: 205px; } div:nth-child(3) { position: relative; left: 410px; } div:nth-child(4) { position: relative; left: 615px; } div:nth-child(5) { position: relative; left: 820px; }"},{"prompt":"w do the following Java methods work? public static void main(String[] args) { int[] arr = {2,4,6,8,10}; int n = 2; int result = binarySearch(arr, 0, arr.length-1, n); if (result == -1) System.out.println(\\"Element is not present\\"); else System.out.println(\\"Element is present at index \\" + result); } static int binarySearch(int arr[], int l, int r, int x) { while (l <= r) { int m = l + (r-l)/2; if (arr[m] == x) return m; if (arr[m] < x) l = m + 1; else r = m - 1; } return -1; }","completion":"The main method takes an array of integers and an element to search for. It calls binarySearch method which uses the binary search algorithm to search for the element in the given array. The algorithm starts by calculating the mid point of the given array. If the element at the mid point is equal to the element to search for, it returns the index of the mid point. If the element being searched for is less than the element at the mid point, the element can be searched in the left subarray by setting right boundary one less than mid point. If the element being searched for is greater than the element at the mid point, the element can be searched in the right subarray by setting the left boundary one greater than the mid point. The search continues until the element is found or whole array is searched. If the element is not present in the array,It returns -1."},{"prompt":"Write a SQL query to find all books that are rated 4 stars or higher.","completion":"SELECT * FROM books WHERE rating >= 4;"},{"prompt":"Explain the result of the following one-liner command. echo Apple Banana Cat | cut -d\\" \\" -f2","completion":"This command prints the second word of the list of words, i.e., \\"Banana\\". The echo command prints out the words 'Apple', 'Banana', and 'Cat', and the cut command is used to extract the parts of each word delimited by spaces. The -d flag specifies the delimiter, which in this case is a space, and the -f flag specifies the field number, which in this case is 2. Therefore, the output is \\"Banana\\"."},{"prompt":"What will be printed with the following Java code? String myString = \\"Hello World\\"; for (int i = 0; i < myString.length(); i++) { System.out.print(i + \\" = \\" + myString.charAt(i) + \\" \\"); }","completion":"0 = H 1 = e 2 = l 3 = l 4 = o 5 = 6 = W 7 = o 8 = r 9 = l 10 = d"},{"prompt":"What should the input to the following JavaScript code be? const capitalizeFirstLetter = word => word[0].toUpperCase() + word.slice(1); const result = capitalizeFirstLetter(input);","completion":"The input to this JavaScript code should be a string. The code capitalizes the first letter of the string, and then concatenates the rest of the string after the first letter. For example, if the input is \\"hello\\", the output will be \\"Hello\\"."},{"prompt":"Generate random numbers in the range of 1 to 100 using a for loop in Python.","completion":"import random for i in range(100): rand_num = random.randint(1, 100) print(rand_num)"},{"prompt":"Create an object in C++ that stores the roll number and name of students in an array.","completion":"#include <iostream> #include <string> class Student { public: int rollNumber; std::string name; }; Student students[100];"},{"prompt":"Create an HTML button with a class and an ID attribute.","completion":"<button class=\\"button\\" id=\\"button-id\\">Click Me!</button>"},{"prompt":"Write a script in JavaScript that gets the value of a certain input field whenever the user clicks it. <input type=\\"text\\" name=\\"myInput\\" value=\\"Input\\" />","completion":"document.getElementById(\\"myInput\\").addEventListener(\\"click\\", function() { var inputValue = document.getElementById(\\"myInput\\").value; console.log(inputValue); });"},{"prompt":"Edit the given HTML code to add a title tag inside the head tag. <html> <head> </head> <body> <h1>My Website</h1> </body> </html>","completion":"<html> <head> <title>My Website</title> </head> <body> <h1>My Website</h1> </body> </html>"},{"prompt":"Create a dictionary in Java containing employee information with their names as the key and salary as the values.","completion":"Map<String, Integer> employeeMap = new HashMap<>(); employeeMap.put(\\"John\\", 1000); employeeMap.put(\\"Amy\\", 1200); employeeMap.put(\\"Dad\\", 1500); employeeMap.put(\\"Mom\\", 2000);"},{"prompt":"Calculate the Fibonacci sequence up to the 10th number using a for loop in JavaScript.","completion":"let n1 = 0, n2 = 1; let fibonacci_sequence = [n1, n2]; for (let i = 2; i < 10; i++) { let n3 = n1 + n2; fibonacci_sequence.push(n3); n1 = n2; n2 = n3; } console.log(fibonacci_sequence);"},{"prompt":"Classify the following sentences into either a question or an instruction: “Please write a script to print all the prime numbers up to 50.”","completion":"Instruction: Please write a script to print all the prime numbers up to 50."},{"prompt":"Add comments to the following code to explain briefly its purpose. def sum_of_numbers(n): total = 0 for i in range(n): total += i return total","completion":"\\"\\"\\" This function is used to calculate the sum of the first 'n' natural numbers \\"\\"\\" def sum_of_numbers(n): # Initialize total to 0 total = 0 # Loop through the first 'n' natural numbers for i in range(n): # Add the current number to the total total += i # Return total return total"},{"prompt":"Write a Python script that prints out the Fibonacci sequence up to the nth number. 10","completion":"\\"\\"\\" Print out the Fibonacci sequence up to the nth number \\"\\"\\" def printFibSequence(n): # Initialize first two terms a = 0 b = 1 # Add the first two terms print(a, end=\\" \\") print(b, end=\\" \\") # Loop up to the n-2th number for i in range(2, n): c = a + b print(c, end=\\" \\") a = b b = c # Main program if __name__ == '__main__': n = 10 printFibSequence(n)"},{"prompt":"Create a JavaScript object with two keys \\"firstName\\" and \\"lastName\\". Ah","completion":"let person = { \\"firstName\\": \\"Ahsan\\", \\"lastName\\": \\"\\" }"},{"prompt":"Suggest a way to persistently store data in a Java program.","completion":"A convenient way to persistently store data in a Java program is to use a database such as MySQL or SQLite. You can also use an API to store data in the cloud, such as AWS S3. Additionally, many Java libraries provide support for persistence such as JPA and Hibernate, which provide object-relational mapping and object-oriented querying capabilities."},{"prompt":"Explain the purpose of the keyword \`\`this\`\` in Java.","completion":"In Java, the keyword \\"this\\" is used to refer to the current object. It can be used to access the values of instance variables and to call methods within the current object. It can also be used to pass the object itself as an argument to another method. \\"this\\" is used to differentiate instance variables from local variables in the same method."},{"prompt":"Write a CSS selector for all elements with the \`\`highlight\`\` class.","completion":".highlight { }"},{"prompt":"Generate a random string of 10 characters in a JavaScript program.","completion":"let randomString = \\"\\"; let characters = \\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\\"; for (let i = 0; i < 10; i++) { randomString += characters.charAt(Math.floor(Math.random() * characters.length)); } console.log(randomString);"},{"prompt":"Suggest a way to solve the following problem in Python: extracting the last element from a given list.","completion":"A convenient way to extract the last element from a given list in Python is to use negative indexing. This allows you to access the last element of a list by using the index -1. For example, the following code will return the last element of the list \\"my_list\\": my_last_element = my_list[-1]"},{"prompt":"Compute the result of 2 + 6 in JavaScript.","completion":"let result = 2 + 6; console.log(result); // Outputs 8;"},{"prompt":"Write a SQL query that orders the entries in the table \\"tasks\\" by their creation date.","completion":"SELECT * FROM tasks ORDER BY creation_date;"},{"prompt":"Create a HTML page that takes your name as input and welcomes you on page load.","completion":"<html> <body> <script> function onPageLoad() { var name = prompt('Please enter your name: '); alert('Welcome ' + name + '!'); } onPageLoad(); <\/script> </body> </html>"},{"prompt":"Create a model in scikit-learn to predict the label of a given input data. Input Data: [3.0, -4.0, 2.0, 0.8] Label: Positive","completion":"from sklearn import svm # define model model = svm.SVC(kernel='linear', C=1.0) # define inputs X = [[3.0, -4.0, 2.0, 0.8]] y = ['Positive'] # fit model model.fit(X, y)"},{"prompt":"Construct an IPython code cell to display the content of a given pandas DataFrame. DataFrame: Name Age Alice 26 Bob 32 Carol 12","completion":"import pandas as pd df = pd.DataFrame({'Name': ['Alice', 'Bob', 'Carol'], 'Age': [26, 32, 12]}) df"},{"prompt":"Modify the following react code to make it render an h2 tag. import React, {Component} from \\"react\\"; export default class App extends Component { render() { return ( <div> <h1>Hello React!</h1> </div> ) } }","completion":"import React, {Component} from \\"react\\"; export default class App extends Component { render() { return ( <div> <h1>Hello React!</h1> <h2>Nice to meet you!</h2> </div> ) } }"},{"prompt":"Write a jQuery code to hide the first element of an HTML list. <ul> <li>Item One</li> <li>Item Two</li> <li>Item Three</li> </ul>","completion":"('ul li:first-of-type').hide();"},{"prompt":"Fix the bug in the following code to sort a given list of numbers in descending order. nums = [2, 3, 1, 4]","completion":"nums = [2, 3, 1, 4] nums.sort(reverse=True) print(nums) # Output: [4, 3, 2, 1]"},{"prompt":"Take the string ‘hello world’ and convert it to uppercase.","completion":"string = 'hello world' print(string.upper()) # Output: 'HELLO WORLD'"},{"prompt":"Parse the given XML code and extract the value of the first attribute of the first element. <root> <item attr1=\\"value1\\" attr2=\\"value2\\"> <value>Logged</value> </item> </root>","completion":"import xml.etree.ElementTree as ET tree = ET.parse('test.xml') root = tree.getroot() first_attr = root[0].attrib['attr1'] print(first_attr) # Output: 'value1'"},{"prompt":"Create a script to convert JSON to an array. {\\"name\\": \\"John Doe\\", \\"age\\": 30}","completion":"import json json_data = \\"{\\"name\\": \\"John Doe\\", \\"age\\": 30}\\" array = json.loads(json_data) print(array) # Output: {'name': 'John Doe', 'age': 30}"},{"prompt":"Write a JavaScript code snippet to log the integer 3 to the web console.","completion":"console.log(3);"},{"prompt":"Write a Java program to read in a string and print its length.","completion":"import java.util.Scanner; public class StringLength { public static void main(String[] args) { Scanner scanner = new Scanner(System.in); String inputString = scanner.nextLine(); System.out.println(\\"Length of the string is: \\"+ inputString.length()); } }"},{"prompt":"Java, write a program to read in an array of 5 integers and output their sum. [2, 5, 9, 8, 6]","completion":"import java.util.Scanner; public class ArraySum { public static void main(String[] args) { int[] array = {2, 5, 9, 8, 6}; int sum = 0; for (int i = 0; i < array.length; i++) { sum = sum + array[i]; } System.out.println(\\"The sum of the array is: \\"+sum); } }"},{"prompt":"Create a function which converts a string representation of number in English to a numerical value. \\"one thousand two hundred and thirty four","completion":"\\"\\"\\" Create a function which converts a string representation of number in English to a numerical value. \\"\\"\\" def convert_english_number(number_string): word_values = {\\"one\\":1,\\"two\\":2,\\"three\\":3,\\"four\\":4,\\"five\\":5,\\"six\\":6,\\"seven\\":7,\\"eight\\":8,\\"nine\\":9,\\"ten\\":10,\\"eleven\\":11,\\"twelve\\":12,\\"thirteen\\":13,\\"fourteen\\":14,\\"fifteen\\":15,\\"sixteen\\":16,\\"seventeen\\":17,\\"eighteen\\":18,\\"nineteen\\":19,\\"twenty\\":20,\\"thirty\\":30,\\"forty\\":40,\\"fifty\\":50,\\"sixty\\":60,\\"seventy\\":70,\\"eighty\\":80,\\"ninety\\":90} word_list = number_string.split() final_num = 0 i=0 while i<len(word_list): if word_list[i] in word_values.keys(): final_num += word_values[word_list[i]] elif word_list[i]==\\"hundred\\": final_num = final_num*100 if(i+1<len(word_list) and word_list[i+1]==\\"hundred\\"): final_num += word_values[word_list[i]]*100 i+=1 return final_num if __name__ == '__main__': print(convert_english_number(\\"one thousand two hundred and thirty four\\"))"},{"prompt":"Create an algorithm to find the optimal sum from a set of given numbers such that the sum is equal to a given target. Target: 10 Numbers: [1,4,5,3,6]","completion":"\\"\\"\\" Create an algorithm to find the optimal sum from a set of given numbers such that the sum is equal to a given target. \\"\\"\\" def optimal_sum(target, numbers): if (target == 0): return True n = len(numbers) subset = [True] + [False]*target for i in range(n): for j in range(target,numbers[i]-1,-1): subset[j] = subset[j] or subset[j-numbers[i]] return subset[target] if __name__ == '__main__': target = 10 numbers = [1,4,5,3,6] print(optimal_sum(target, numbers))"},{"prompt":"Generate a loop to read each word from a given sentence and display them as a list. Sentence: \\"Python is a great programming language","completion":"\\"\\"\\" Generate a loop to read each word from a given sentence and display them as a list. \\"\\"\\" sentence = \\"Python is a great programming language\\" words = sentence.split() word_list= [] for word in words: word_list.append(word) print(word_list)"},{"prompt":"Create a function which receives two strings and checks if the characters in the first string appear in the same order as in the second string. String 1: \\"Hello World\\" String 2: \\"World Hello","completion":"\\"\\"\\" Create a function which receives two strings and checks if the characters in the first string appear in the same order as in the second string. \\"\\"\\" def check_order(str1,str2): stack=[] j=0 for i in range(len(str2)): if str2[i]==str1[j]: stack.append(str2[i]) j+=1 if stack==str1: return True return False if __name__ == '__main__': str1 = \\"Hello World\\" str2 = \\"World Hello\\" print(check_order(str1,str2))"},{"prompt":"Use features of the Python language to implement 3-way partitioning of a given array. Array: [9,6,7,4,1,6,3]","completion":"\\"\\"\\" Use features of the Python language to implement 3-way partitioning of a given array. \\"\\"\\" def threeWayPartition(array, pivot): less = [] equal = [] greater = [] for i in array: if i < pivot: less.append(i) elif i == pivot: equal.append(i) else: greater.append(i) return less + equal + greater if __name__ == '__main__': array = [9,6,7,4,1,6,3] pivot = 6 print(threeWayPartition(array, pivot))"},{"prompt":"Create a data structure to store all of the prime numbers up to 1 million.","completion":"\\"\\"\\" Create a data structure to store all of the prime numbers up to 1 million. \\"\\"\\" import math def sieveOfEratosthenes(n): prime_numbers = [True]*(n+1) prime_numbers[0] = False prime_numbers[1] = False for i in range(2, int(math.sqrt(n)+1)): if (prime_numbers[i]): for j in range(i*i, n+1, i): prime_numbers[j] = False prime_numbers_list = [] for k in range(n+1): if prime_numbers[k]: prime_numbers_list.append(k) return prime_numbers_list if __name__ == '__main__': n = 1000000 prime_numbers_list = sieveOfEratosthenes(n) print(prime_numbers_list)"},{"prompt":"Create a function to edit a given string, replacing all the vowels with a given character. String: \\"Hello world\\" Character: 'x'","completion":"\\"\\"\\" Create a function to edit a given string, replacing all the vowels with a given character. \\"\\"\\" def replace_vowels(string, replacement_character): vowels = ['a', 'e', 'i', 'o', 'u'] new_str = \\"\\" for char in string: if char in vowels: new_str += replacement_character else: new_str += char return new_str if __name__ == '__main__': string = \\"Hello world\\" replacement_character = 'x' print(replace_vowels(string, replacement_character))"},{"prompt":"Generate a loop to find the largest sub-array in a given array with contiguous elements and its sum. Array: [-2, 6, -3, 5, -2, 3, 4, -2]","completion":"\\"\\"\\" Generate a loop to find the largest sub-array in a given array with contiguous elements and its sum. \\"\\"\\" def largest_subarray_sum(array): best_sum = 0 current_sum = 0 current_start_index = 0 best_start_index = -1 best_end_index = -1 for i in range(len(array)): current_sum += array[i] if current_sum > best_sum: best_sum = current_sum best_start_index = current_start_index best_end_index = i if current_sum < 0: current_sum = 0 current_start_index = i + 1 return (best_sum, best_start_index, best_end_index) if __name__ == '__main__': array = [-2, 6, -3, 5, -2, 3, 4, -2] print(largest_subarray_sum(array))"},{"prompt":"Compile the following code to JavaScript and return the compiled code. function myFunc(a, b) { return a + b; }","completion":"function myFunc(a, b) { return a + b; } //Compiled Version const myFunc = (a, b) => a + b;"},{"prompt":"Print the Fibonacci sequence up to the 5th element.","completion":"0, 1, 1, 2, 3"},{"prompt":"Create a function that takes a string and checks if the string contains any special characters. Hello World","completion":"def has_special_characters(s): return not all(char.isalnum() for char in s)"},{"prompt":"We have a list of numbers and a given sum. Write a program to determine if any two numbers from the list sum up to the given sum. [1,2,3,4], 6","completion":"def two_sum(nums, target): for i in range(len(nums) - 1): for j in range(i+1, len(nums)): if nums[i] + nums[j] == target: return (i, j) return -1"},{"prompt":"Create a function that takes in a string and returns an array of the words which are longer than 5 characters. \\"Welcome to the world of programming","completion":"def get_long_words(s): words = s.split(\\" \\") result = [] for word in words: if len(word) > 5: result.append(word) return result"},{"prompt":"Name at least three sorting algorithms that can be implemented in PHP.","completion":"1. Bubble Sort. 2. Selection Sort. 3. Insertion Sort."},{"prompt":"Describe two ways to insert elements into a hashmap in Python.","completion":"1. The simplest way is to use the Square Bracket ([]) Notation. For example, hashmap[key] = value allows you to insert key-value pair into a hashmap. 2. The other way to insert elements into a hashmap is by using the update() method. This method takes in a dictionary object as an argument and updates the existing hashmap with values from the dictionary."},{"prompt":"w would you use PostgreSQL to delete a row with a given ID from a table?","completion":"DELETE FROM table_name WHERE id = <value>;"},{"prompt":"Describe the features of the K Nearest Neighbors (KNN) classification algorithm.","completion":"K Nearest Neighbors (KNN) classification is a supervised machine learning algorithm used for solving classification problems. The main feature of the KNN algorithm is that it defines the class of a data sample based on the classes of its closest K neighbors, determined using a distance measure. It is a non-parametric and lazy learner algorithm, meaning it does not make any assumptions about the data distribution and is not prone to overfitting. It is also easy to implement and not computationally expensive."},{"prompt":"Provide an example of an if-else statement in C++.","completion":"int x = 5; if (x > 0) { std::cout << \\"x is positive\\"; } else { std::cout << \\"x is negative or zero\\"; }"},{"prompt":"w could you use Machine learning to classify the sentiment of a given text?","completion":"One way to use Machine learning to classify the sentiment of a given text is to use a supervised Machine learning algorithm such as Support Vector Machines to build a classifier. The classifier can be trained on a labeled dataset which contains texts with corresponding labels like 'positive' or 'negative'. The trained classifier can then be used to predict the sentiment of a new text."},{"prompt":"Write a function in Python to format a given date according to the format \\"Day-Name, Month Name, Day, Year\\". \\"2019-06-27","completion":"def format_date(date): date_list = date.split('-') formatted_date = date_list[2] + '-' + calendar.month_name[int(date_list[1])] + '-' + date_list[0] return formatted_date"},{"prompt":"Write a class in Python to store the objects of student and their grades.","completion":"# Class to store student and grades class StudentGrades: def __init__(self, student_name): self.student_name = student_name self.grades = {} def add_grade(self, course_name, grade): self.grades[course_name] = grade def get_total_grade(self): total_grade = 0 for grade in self.grades.values(): total_grade += grade return total_grade"},{"prompt":"dentify the language into which the given text is translated. Text: いつもありがとう。","completion":"The given text is translated into Japanese language."},{"prompt":"Create an object in JavaScript for calculating the area of rectangular with length and width.","completion":"// Object to calculate the area of rectangular with length and width const rectangular = { length: 0, width: 0, area: function() { return this.length * this.width; } };"},{"prompt":"Classify the following words as noun, verb, adverb or adjective. Words: slowly, frog, kick","completion":"Adverb: slowly Noun: frog Verb: kick"},{"prompt":"Generate an array of 5 random hexadecimal numbers.","completion":"import random hex_arr = [] for i in range(5): rand_hex = random.randint(0, 255) hex_arr.append(hex(rand_hex)) print(hex_arr)"},{"prompt":"Count the number of lines of code in the following code snippet. def add(num1, num2): return num1 + num2","completion":"3"},{"prompt":"Find the sum of three numbers and add five to it. a = 4, b = 7, c = 10","completion":"sum = a + b + c result = sum + 5"},{"prompt":"Create a 2D array with three rows and two columns and assign different value to each element.","completion":"arr = [[1,2], [3,4], [5,6]]"},{"prompt":"Compare the values of x and y, and print out \\"x is greater than y\\" if x is greater. x = 5, y = 3","completion":"if x > y: print(\\"x is greater than y\\")"},{"prompt":"Calculate the base-2 logarithm of 32.","completion":"log2(32) = 5"},{"prompt":"Find the count of words in the following string. text = \\"This is a sample tex","completion":"len(text.split()) # 4"},{"prompt":"Check if the input string contains both number and alphabets and return true if it does. str = \\"hello123","completion":"if re.search('[a-zA-Z]', str) and re.search('[0-9]', str): print(True) else: print(False)"},{"prompt":"Create a PostgreSQL query to fetch all the rows from the table ‘Users’ where the users’ age is greater than 24. Table name: Users Columns: Id, age, name","completion":"SELECT * FROM Users WHERE age > 24;"},{"prompt":"Write a fragment in HTML to display the values of an array in a table. array = [\\"Banana\\", \\"Apple\\", \\"Pineapple\\", \\"Mango\\"]","completion":"<table> <tr> <th>Fruits</th> </tr> <tr> <td>Banana</td> </tr> <tr> <td>Apple</td> </tr> <tr> <td>Pineapple</td> </tr> <tr> <td>Mango</td> </tr> </table>"},{"prompt":"Write an SQL query to find a user with the name ‘John Smith’. Table name: Users Columns: Id, name","completion":"SELECT * FROM Users WHERE name = 'John Smith';"},{"prompt":"Create a class in Java that assigns a value to a given variable. String variable = \\"Hello world","completion":"public class VariableAssignment { private String variable; public VariableAssignment(String variable) { this.variable = variable; } public String getVariable() { return variable; } public void setVariable(String variable) { this.variable = variable; } }"},{"prompt":"Create a list in JavaScript containing the names of the five most populous countries in the world.","completion":"let topFiveCountries = ['China', 'India', 'United States', 'Indonesia', 'Brazil'];"},{"prompt":"Create an API endpoint in ExpressJS that receives a username and returns the user’s information. User with the username \\"johnsmith","completion":"app.get('/user/:username', async (req, res) => { let username = req.params.username; let userInfo = await User.findOne({ username }); res.json(userInfo); });"},{"prompt":"Write an SQL query to select all products where the price is less than 100 dollars. Table name: Products Columns: Id, name, price","completion":"SELECT * FROM Products WHERE price < 100;"},{"prompt":"Write a method in Java for checking if a String is a palindrome.","completion":"public static boolean isPalindrome(String str) { int n = str.length(); for (int i = 0; i < n/2; i++){ if (str.charAt(i) != str.charAt(n-i-1)) return false; } return true; }"},{"prompt":"Create a function in Java that takes two numbers as arguments and prints their product. 10 and 8","completion":"public static void printProduct(int n1, int n2){ System.out.println(n1 * n2); }"},{"prompt":"Sort an array of integers using a heapsort algorithm. [3, 6, 2, 9, 1]","completion":"def heapsort(A): # step 1: create the heap heapify(A) # step 2: sort the heap for size in range(len(A), 1, -1): A[0], A[size - 1] = A[size - 1], A[0] sift_down(A, 0, size - 1) # step 3: return the sorted result return A"},{"prompt":"Write a function in JavaScript that takes a given array and prints its elements in reverse order. [1, 2, 3, 4]","completion":"function reverseArray(arr) { let reversedArr = []; let index = arr.length - 1; while (index >= 0) { reversedArr.push(arr[index]); index--; } return reversedArr; }"},{"prompt":"Create a SQL query that selects the second and third largest values in a table.","completion":"SELECT MAX(value) AS max2 FROM mytable WHERE value < (SELECT MAX(value) FROM mytable); SELECT MAX(value) AS max3 FROM mytable WHERE value < (SELECT MAX(value) FROM mytable WHERE value < (SELECT MAX(value) FROM mytable));"},{"prompt":"Generate a program in Python that prints all days of the week","completion":"#list of Weekdays weekdays = [\\"Monday\\", \\"Tuesday\\", \\"Wednesday\\", \\"Thursday\\", \\"Friday\\", \\"Saturday\\", \\"Sunday\\"] #print Weekdays for weekday in weekdays: print(weekday)"},{"prompt":"mplement a function in Java that takes a character and a string as arguments and determines whether the character is present in the string or not. 'c' and \\"programming","completion":"public static boolean charInString(char c, String str) { for (int i = 0; i < str.length(); i++) if (str.charAt(i) == c) return true; return false; }"},{"prompt":"Create a CSS program that formats the text in a paragraph so that it has the following characteristics: font size is 2em, font weight is bold, font color is orange.","completion":"p { font-size: 2em; font-weight: bold; color: orange; }"},{"prompt":"Generate a program in JavaScript that reads a given string from user input and prints the characters of the string in reverse order.","completion":"function reverseString(str) { return str.split('').reverse().join(''); }"},{"prompt":"Create a function to delete a specific row from a table named 'Orders'. Primary Key of the order: 1234","completion":"def delete_row(table, order_key): query = 'DELETE FROM {} WHERE order_key = ?'.format(table) try: cursor.execute(query, (order_key,)) cursor.commit() except: cursor.rollback() print('Error occurred while deleting order')"},{"prompt":"Write a code to count the number of occurrences of a given word in an array of strings. words = ['apple', 'banana', 'apple', 'kiwi', 'apple'] target_word = 'apple'","completion":"def count_word(words, target_word): counter = 0 for word in words: if word == target_word: counter += 1 return counter"},{"prompt":"Create a code to swap two elements in a given array. array = [1, 4, 5, 8]","completion":"def swap_elements(array, index1, index2): temp = array[index1] array[index1] = array[index2] array[index2] = temp"},{"prompt":"Create a new array that is a copy of the given input array, consisting of all elements smaller than 5. [4, 8, 9, 7, 5, 1, 10]","completion":"new_array = [item for item in given_array if item < 5] # [4, 1]"},{"prompt":"Create a recursive function that takes two parameters, a number and a base and returns the result as a string. 14, 16","completion":"def convert_to_base(num, base): \\"\\"\\" Function to convert num to a given base \\"\\"\\" converted_string = \\"\\" # Base Case if num < base: if num < 10: return str(num) else: return chr(num - 10 + ord('A')) rem = num % base if rem < 10: converted_string = str(rem) + converted_string else: converted_string = chr(rem - 10 + ord('A')) + converted_string num = num // base return convert_to_base(num, base) + converted_string"},{"prompt":"Design a machine learning algorithm to classify the given dataset. Dataset of images of cats and dog","completion":"\\"\\"\\" Design a machine learning algorithm to classify the given dataset \\"\\"\\" import numpy as np import pandas as pd import seaborn as sns import matplotlib.pyplot as plt #Prepare data data = pd.read_csv('path/to/dataset') #Preprocess data X = data.drop('label', axis=1) y = data['label'] #Split into training and test set from sklearn.model_selection import train_test_split X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.2, random_state = 0) #Feature scaling from sklearn.preprocessing import StandardScaler sc = StandardScaler() X_train = sc.fit_transform(X_train) X_test = sc.transform(X_test) #Train the model from sklearn.linear_model import LogisticRegression model = LogisticRegression() model.fit(X_train, y_train) #Evaluate the model from sklearn.metrics import accuracy_score y_pred = model.predict(X_test) accuracy = accuracy_score(y_test, y_pred) print(accuracy)"},{"prompt":"Design a solution using Java to calculate the mean of all the numbers in a given array. [4, 7, 11, 15, 18, 21]","completion":"public static double mean(int[] array) { double sum = 0; int length = array.length; // loop through each number and calculate the sum for (int num : array) sum += num; // calculate the mean and return it return sum/ length; }"},{"prompt":"Create a Rails application with a user sign up with name, email and password.","completion":"rails new AppName cd AppName # Add devise for user auth rails g devise:install # Generate a model for the user rails g devise user username email password # Create a database and migrate rake db:create db:migrate # Add routes for the login & signup Rails.application.routes.draw do devise_for :users end"},{"prompt":"Create a webpage using HTML and CSS that has a navigation bar with a logo, five links to different webpages, and a footer.","completion":"<!DOCTYPE html> <html> <head> <title>My Webpage</title> <meta charset=\\"utf-8\\"> <style> body { background-color: #f1f1f1; } .navbar { overflow: hidden; background-color: #444; } .navbar a { float: left; display: block; color: white; text-align: center; padding: 14px 20px; text-decoration: none; } .navbar a:hover { background-color: #555; color: white; } .main { padding: 16px; margin-top: 30px; height: 1500px; background-color: #f1f1f1; } .footer { color: grey; padding: 8px; text-align: center; background-color: #f1f1f1; } .logo { float: left; height: 50px; width: 50px; } </style> </head> <body> <div class=\\"navbar\\"> <img class=\\"logo\\" src=\\"logo.png\\" alt=\\"logo\\" /> <a href=\\"home.html\\">Home</a> <a href=\\"contact.html\\">Contact</a> <a href=\\"about.html\\">About</a> <a href=\\"products.html\\">Products</a> <a href=\\"services.html\\">Services</a> </div> <div class=\\"main\\"> // Content will be here </div> <div class=\\"footer\\"> Copyright &copy; Company 2020 </div> </body> </html>"},{"prompt":"Create a method called \`combineName\` that takes in two strings and combines them together into a full name. firstName = 'John' lastName = 'Smith'","completion":"def combineName(firstName, lastName): \\"\\"\\" A method that takes in two strings and combines them into a full name. Args: firstName (str): first name lastName (str): last name Returns: fullName (str): combined full name \\"\\"\\" fullName = firstName + \\" \\" + lastName return fullName if __name__ == '__main__': firstName = 'John' lastName = 'Smith' print(combineName(firstName, lastName))"},{"prompt":"Fix the following code to prevent errors from crashing the program. def foo(a): print(a) foo(\\"hi\\") foo(1)","completion":"def foo(a): \\"\\"\\" A function that prints a value. Args: a (any): value to print Returns: nothing \\"\\"\\" if isinstance(a, (int, float, str)): print(a) else: print(\\"Error: must be a string, int, or float\\") if __name__ == '__main__': foo(\\"hi\\") foo(1)"},{"prompt":"Describe what a software bug is.","completion":"A software bug is a mistake, error or an unexpected behavior or result in a computer program or system that causes it to produce an incorrect or unexpected result, or to behave in unintended ways. It is generally caused by errors in the source code or the semantic understanding of the code that is written. A software bug can occur at any level of the software development process, from the design stage to the compilation stage, and can be caused by incorrect specifications, poor coding, incorrect debugging or incorrect implementation."},{"prompt":"Create a function that returns a randomly selected element from a list. list = [1, 2, 3, 4, 5]","completion":"import random def get_random_element(list): \\"\\"\\" A function to return a randomly selected element from a list. Args: list (list): a list Returns: element (int): a randomly selected element \\"\\"\\" index = random.randint(0, len(list)-1) element = list[index] return element if __name__ == '__main__': list = [1, 2, 3, 4, 5] print(get_random_element(list))"},{"prompt":"Code a method in Java to print out the elements of a 2D array. [[1,2,3], [4,5,6], [7,8,9]]","completion":"public class TwoDArray{ public static void print2DArray(int[][] arr){ for (int[] row : arr){ for (int element : row){ System.out.print(element+\\" \\"); } System.out.println(); } } public static void main(String[] args) { int[][] arr = { {1,2,3}, {4,5,6}, {7,8,9} }; print2DArray(arr); } }"},{"prompt":"Code a method in Java to sort an array. [2, 9, 4, 6, 5, 1]","completion":"public class SortExample{ public static void insertionSort(int[] arr){ int n = arr.length; for (int i=1; i<n; i++){ int key = arr[i]; int j = i - 1; while ( j>=0 && arr[j] > key){ arr[j+1] = arr[j]; j--; } arr[j+1] = key; } } public static void main(String[] args) { int[] arr = {2, 9, 4, 6, 5, 1}; insertionSort(arr); for (int x : arr){ System.out.print(x+\\" \\"); } } }"},{"prompt":"Generate a random string of length 10 made up of characters ‘a’ to ‘d’.","completion":"import random rand_string = '' for i in range(10): rand_string += random.choice(['a', 'b', 'c', 'd']) print(rand_string)"},{"prompt":"Code a function to flatten a dictionary. {\\"a\\": 1, \\"b\\": {\\"c\\": 2, \\"d\\": 3}}","completion":"def flatten_dict(d): flattened_dict = {} for key, val in d.items(): if type(val) is dict: # if val is a dict for k, v in val.items(): flattened_dict[key + \\"_\\" + k] = v else: flattened_dict[key] = val return flattened_dict if __name__ == '__main__': d = {\\"a\\": 1, \\"b\\": {\\"c\\": 2, \\"d\\": 3}} print(flatten_dict(d))"},{"prompt":"Code an algorithm to implement merge sort [5, 2, 4, 6, 1, 7, 8]","completion":"def merge_sort(arr): if len(arr) >1: mid = len(arr) // 2 left_half = arr[:mid] right_half = arr[mid:] merge_sort(left_half) merge_sort(right_half) i = 0 j = 0 k = 0 while i < len(left_half) and j < len(right_half): if left_half[i] < right_half[j]: arr[k] = left_half[i] i += 1 else: arr[k] = right_half[j] j += 1 k += 1 while i < len(left_half): arr[k] = left_half[i] i += 1 k += 1 while j < len(right_half): arr[k] = right_half[j] j += 1 k += 1 if __name__ == '__main__': arr = [5, 2, 4, 6, 1, 7, 8] merge_sort(arr) print(arr)"},{"prompt":"Find out the biggest number from the list [7, 9, 1, 3, 4]","completion":"my_list = [7, 9, 1, 3, 4] max = max(my_list) print(max)"},{"prompt":"Given a list of strings, write a Python function to expand each element into a set of characters. ['hello', 'world']","completion":"def expand_list(strings): new_list = [] for string in strings: for character in string: new_list.append(character) return new_list"},{"prompt":"Create a JavaScript class to represent an Employee object","completion":"class Employee { constructor(name, age, salary) { this.name = name; this.age = age; this.salary = salary; } }"},{"prompt":"Create a Java method to print all elements in an array in reverse order.","completion":"public static void printReverse(int[] array) { for (int i = array.length - 1; i >= 0; i--) { System.out.println(array[i]); } }"},{"prompt":"Write a SQL query to find all rows in a table with a column value of 'John'.","completion":"SELECT * FROM table WHERE column = 'John';"},{"prompt":"Given a tree, write a function that finds the deepest node in the tree.","completion":"def findDeepestNode(root): if root is None: return None queue = [] queue.append(root) while len(queue) > 0: res = queue[0] queue.pop() if res.left is not None: queue.append(res.left) if res.right is not None: queue.append(res.right) return res"},{"prompt":"Design a Bubble Sort algorithm for a list of numbers.","completion":"def bubbleSort(arr): n = len(arr) for i in range(n): for j in range(0, n-i-1): if arr[j] > arr[j+1]: arr[j], arr[j+1] = arr[j+1], arr[j] return arr"},{"prompt":"Design a Greedy Algorithm to solve the sum-subset problem.","completion":"def subsetsum(arr, target): arr.sort() n = len(arr) sum = 0 result = [] for i in range(n): if ( sum + arr[i] <= target): result.append(arr[i]) sum = sum + arr[i] return result"},{"prompt":"Create a PHP form to register a user.","completion":"<!doctype html> <html> <head> <title>User Registration Form</title> <meta name=\\"viewport\\" content=\\"width=device-width, initial-scale=1.0\\"> <style type=\\"text/css\\"> #form-div { background-color: #ffffff; padding: 10px 20px; border: #e0dfdf 1px solid; } #form-div h2 { padding-bottom: 10px; } #form-div input, #form-div select { padding: 5px; } #form-div input[type=text] { width: 300px; } </style> </head> <body> <h2>User Registration Form</h2> <div id=\\"form-div\\"> <form action=\\"\\" method=\\"post\\"> <label for=\\"name\\">Name</label> <input type=\\"text\\" name=\\"name\\" /> <label for=\\"email\\">Email Address</label> <input type=\\"text\\" name=\\"email\\" /> <label for=\\"password\\">Password</label> <input type=\\"password\\" name=\\"password\\" /> <label for=\\"password_repeat\\">Repeat Password</label> <input type=\\"password\\" name=\\"password_repeat\\" /> <input type=\\"submit\\" value=\\"Register\\" /> </form> </div> </body> </html>"},{"prompt":"Output the result of a line of code snippet. list_1 = [1, 2, 3] list_2 = [4, 5, 6] list_1 + list_2","completion":"[1, 2, 3, 4, 5, 6]"},{"prompt":"Transform the given code snippet into a different programming language. let x = 3","completion":"x = 3"},{"prompt":"Remove duplicates from the given list and sort it in ascending order lst = [1, 2, 3, 1, 4, 2]","completion":"sorted(set(lst)) # Output: [1, 2, 3, 4]"},{"prompt":"Create a function to remove all non alphabetical characters from thestring string = \\"Hello, world!","completion":"def clean_string(string): output = \\"\\" for char in string: if char.isalpha(): output += char return output clean_string(string) # Output: Helloworld"},{"prompt":"Separate the given list into two lists for even and odd numbers lst = [1, 2, 3, 4, 5]","completion":"even_lst = [] odd_lst = [] for num in lst: if num % 2 == 0: even_lst.append(num) else: odd_lst.append(num)"},{"prompt":"Generate all possible combinations of strings that can be formed using the given characters chars = [\\"a\\", \\"b\\", \\"c\\"]","completion":"import itertools combinations = [''.join(i) for i in itertools.product(chars)] # Output: [\\"a\\", \\"b\\", \\"c\\", \\"ab\\", \\"ac\\", \\"ba\\", \\"bc\\", \\"ca\\", \\"cb\\", \\"abc\\", \\"acb\\", \\"bac\\", \\"bca\\", \\"cab\\", \\"cba\\"]"},{"prompt":"Replace all characters in the given string with the given character string = \\"Hello World\\" char = \\"x","completion":"def replace_chars(string, char): output = \\"\\" for c in string: output += char return output replace_chars(string, char) # Output: xxxxx xxxxx"},{"prompt":"Modify the given program so that it can output the average of numbers a,b, and c. a = 2 b = 5 c = 7","completion":"def average(a, b, c): return (a + b + c) / 3 a = 2 b = 5 c = 7 average = average(a, b, c) print(\\"Average of a, b and c is:\\", average)"},{"prompt":"Create an algorithm to print out the unique characters in a given string. word = \\"Hello World","completion":"def unique_chars(word): unique_characters = set() for char in word: if char not in unique_characters: unique_characters.add(char) return unique_characters word = \\"Hello World\\" unique_characters = unique_chars(word) print(\\"Unique characters in \\", word, \\"are:\\", unique_characters)"},{"prompt":"Create a MySQL query to update the salary field of the employee Table - employee Field - salary","completion":"UPDATE employee SET salary = 2000 WHERE employee_id = 1"},{"prompt":"Create a React component to render a pie chart","completion":"import React from 'react'; import {Pie} from 'react-chartjs-2'; const data = { labels: [ 'Red', 'Green', 'Yellow' ], datasets: [{ data: [300, 50, 100], backgroundColor: [ '#FF6384', '#36A2EB', '#FFCE56' ], hoverBackgroundColor: [ '#FF6384', '#36A2EB', '#FFCE56' ] }] }; export const PieChartComponent = () => { return ( <div> <h2>Pie Chart</h2> <Pie data={data} /> </div> ); }"},{"prompt":"Build a function to identify a duplicate element in a list list = [2,4,8,7,2,5]","completion":"def find_duplicate(list): visited = set() for num in list: if num in visited: return num else: visited.add(num) return None list = [2,4,8,7,2,5] print(find_duplicate(list)) # Output: 2"},{"prompt":"Combine the two strings into one and save it as a variable called full_name. first_name = 'John' last_name = 'Smith'","completion":"first_name = 'John' last_name = 'Smith' full_name = first_name + ' ' + last_name"},{"prompt":"Calculate the number of days from January 1, 2021 to June 30, 2021.","completion":"The number of days from January 1, 2021 to June 30, 2021 is 152 days."},{"prompt":"Given the function, predict the output. def foo(a, b): return a + b print(foo(3, 5))","completion":"The output of the function will be 8."},{"prompt":"Create a for loop that prints the square of each number from 1 to 5.","completion":"for num in range(1, 6): print(num**2)"},{"prompt":"Using regular expressions, remove any duplicate words from the following sentence. sentence = \\"I I am going to the the store","completion":"import re sentence = \\"I I am going to the the store\\" result = re.sub(r'b(w+)( 1b)+', r'1', sentence) print(result) # I am going to the store"},{"prompt":"Output a list with all the numbers from 0 to 100 that are divisible by 8.","completion":"result = [x for x in range(101) if x % 8 == 0] print(result)# [0, 8, 16, 24, 32, 40, 48, 56, 64, 72, 80, 88, 96, 100]"},{"prompt":"Construct an SQL query to find the name of all employees in department ID 7.","completion":"SELECT name FROM Employees WHERE departmentID = 7;"},{"prompt":"Design a Java program to find the maximum of 3 numbers. 1, 2, 5","completion":"public class Maximum { public static int getMax(int num1, int num2, int num3) { int max = num1; if (num2 > max) { max = num2; } if (num3 > max) { max = num3; } return max; } public static void main(String[] args) { int max = getMax(1,2,5); System.out.println(\\"Maximum is: \\" + max); } }"},{"prompt":"Develop a Ruby method to compare two strings and return the number of matching characters. \\"cook\\",\\"book","completion":"def count_match_chars(str1, str2) count = 0 str1.each_char.with_index do |char, index| count += 1 if char == str2[index] end count end puts count_match_chars('cook', 'book') #2"},{"prompt":"Design a Data Structure in Javascript to store a list of tasks.","completion":"class TaskList { constructor() { this.tasks = [] } add_task(task) { this.tasks.push(task); } remove_task(task) { const i = this.tasks.indexOf(task); if (i !== -1) { this.tasks.splice(i, 1); } } count_tasks() { return this.tasks.length; } }"},{"prompt":"Create a PHP program to print out the frequency of word occurrences in an array. ['foo', 'bar', 'baz', 'foo', 'bar']","completion":"<?php array_input = array('foo','bar','baz','foo','bar'); result = array_count_values(array_input); foreach(result as key=>value){ echo \\"key has value occurrence(s).n\\"; } // Output: foo has 2 occurrence(s). // bar has 2 occurrence(s). // baz has 1 occurrence(s). ?>"},{"prompt":"Create an R program to find the intersecting element of two lists. x = c(14,5,13) y = c(5,11,9)","completion":"#Function for finding common element between two lists common_element <- function(x, y){ intersect_list <- intersect(x, y) return(intersect_list) } x <- c(14,5,13) y <- c(5,11,9) #Calling the above function common_element(x, y) #5"},{"prompt":"Generate an Objective-C code to check if a given string is palindrome or not. \\"racecar","completion":"#import<Foundation/Foundation.h> @implementation CheckString -(BOOL)isStringPalindrome:(NSString*)inputString { BOOL isPalindrome = true; int lastIndex = [inputString length] - 1; for (int i = 0; i < [inputString length]/2; i++) { //compare character one by one if ([inputString characterAtIndex:i] != [inputString characterAtIndex:lastIndex]) { isPalindrome = false; break; } // decrement lastIndex for next iteration lastIndex--; } return isPalindrome; } @end CheckString *cs = [[CheckString alloc]init]; NSString *sampleString = @\\"racecar\\"; if ([cs isStringPalindrome:sampleString]) { NSLog(@\\"String is Palindrome\\"); }else{ NSLog(@\\"String is not a Palindrome\\"); }"},{"prompt":"Write a Haskell program to calculate the sum of list elements. [2,3,7,9]","completion":"sumlist :: [Integer] -> Integer sumlist [] = 0 sumlist (x:xs) = x + sumlist xs -- Driver Code main = do print (sumlist [2,3,7,9]) -- Output: 21"},{"prompt":"Write a shell script that takes input from the user, reverses the string, and prints it on the terminal.","completion":"#!/bin/bash echo -n \\"Enter a string: \\" read str rev_str=\\"\\" len={#str} # loop for (( i=len-1; i>=0; i-- )) do rev_str={rev_str}{str:i:1} done # display echo \\"rev_str\\""},{"prompt":"Write a function in JavaScript that returns the maximum number from an array of numbers. [3, 6, 8, 2, 9, 4, 10]","completion":"function getMaxNum(arr){ return Math.max.apply(null, arr); } let maxNum = getMaxNum([3, 6, 8, 2, 9, 4, 10]); console.log(maxNum); // 10"},{"prompt":"Write an Object-Oriented Python program to find the area of a triangle given the base and the height.","completion":"class Triangle: def __init__(self, base, height): self.base = base self.height = height def calculate_area(self): area = (self.base * self.height) / 2 return area # Create triangle triangle = Triangle(10, 5) # Find the area area = triangle.calculate_area() # Print the area print(area)"},{"prompt":"Edit the code to print “Welcome to Python Programming” five times. print(\\"Hello Python\\")","completion":"for i in range(5): print(\\"Welcome to Python Programming\\")"},{"prompt":"Create a HTML form that takes 3 inputs: first name, last name, and age.","completion":"<form> <label>First Name:</label> <input type=\\"text\\" name=\\"firstname\\" /><br> <label>Last Name:</label> <input type=\\"text\\" name=\\"lastname\\" /><br> <label>Age:</label> <input type=\\"text\\" name=\\"age\\" /><br> <input type=\\"submit\\" value=\\"Submit\\" /> </form>"},{"prompt":"Write a SQL query to get the top 10 books by rating.","completion":"SELECT * FROM books ORDER BY rating DESC LIMIT 10;"},{"prompt":"Design a function that uses a for loop to print all odd numbers from 1 to 10.","completion":"def print_odd_numbers(): for i in range(1, 11): if i % 2 != 0: print(i) print_odd_numbers()"},{"prompt":"Design a program in Python that will count the words in a sentence. This is a sample sentence.","completion":"def word_count(sentence): words = sentence.split(' ') return len(words) print(word_count('This is a sample sentence.'))"},{"prompt":"w can you create a Pandas DataFrame using a given list of dictionaries? [{\\"animal\\": \\"cat\\"}, {\\"animal\\": \\"dog\\"}, {\\"animal\\": \\"fish\\"}]","completion":"import pandas as pd data = [{\\"animal\\": \\"cat\\"}, {\\"animal\\": \\"dog\\"}, {\\"animal\\": \\"fish\\"}] df = pd.DataFrame(data) print(df)"},{"prompt":"Edit the given code to reverse a given array in JavaScript. let arr = [1, 2, 3, 4, 5];","completion":"let arr = [1, 2, 3, 4, 5]; arr.reverse(); console.log(arr);"},{"prompt":"w would you use Recursion to solve the Fibonacci Sequence in Python?","completion":"def fibonacci(n): if n <= 1: return n else: return(fibonacci(n-1) + fibonacci(n-2)) print(fibonacci(10))"},{"prompt":"Construct a function that adds two numbers written in reverse order in JavaScript. 893 342","completion":"function reversedAddition(reverseOrder1, reverseOrder2) { let firstNum = parseInt(reverseOrder1.toString().split('').reverse().join('')); let secondNum = parseInt(reverseOrder2.toString().split('').reverse().join('')); let answer = firstNum + secondNum; return answer; } console.log(reversedAddition(893, 342))"},{"prompt":"w can you move an element from one array to another in JavaScript? let array1 = [1, 2, 3]; let array2 = [4, 5, 6];","completion":"let array1 = [1, 2, 3]; let array2 = [4, 5, 6]; let el = array1.pop(); array2.push(el); console.log(array2);"},{"prompt":"Design a function to get the number of elements in a JSON array in Python. [{\\"name\\":\\"John\\"},{\\"name\\":\\"Bob\\"},{\\"name\\":\\"Alice\\"}]","completion":"def get_num_elements(data): count = 0 for item in data: count += 1 return count data = [{\\"name\\":\\"John\\"},{\\"name\\":\\"Bob\\"},{\\"name\\":\\"Alice\\"}] print(get_num_elements(data))"},{"prompt":"What is the most efficient way to count the number of characters in a string in C++?","completion":"#include <iostream> #include <string> using namespace std; int main() { string my_string = \\"Count characters in this string.\\"; int count = 0; for (char c : my_string) count++; cout << \\"Number of characters in the string : \\" << count; return 0; }"},{"prompt":"Construct a function that will remove all special characters in a given string in JavaScript. sample!%string!*","completion":"function removeSpecialChars(str) { return str.replace(/[^ws]/gi, ''); } console.log(removeSpecialChars('sample!%string!*'));"},{"prompt":"Develop a program in Python to implement a Simple Linear Regression model.","completion":"import numpy as np import matplotlib.pyplot as plt # generate dataset x = np.random.rand(100, 1) y = 4 + 3 * x + np.random.rand(100, 1) # linear regression x_b = np.c_[np.ones((100, 1)), x] theta_best = np.linalg.inv(x_b.T.dot(x_b)).dot(x_b.T).dot(y) # prediction x_new = np.array([[0], [1]]) x_new_b = np.c_[np.ones((2, 1)), x_new] y_predict = x_new_b.dot(theta_best) # plot plt.plot(x, y, \\"b.\\") plt.plot(x_new, y_predict, \\"r-\\") plt.axis([0, 1, 0, 15]) plt.show()"},{"prompt":"Develop a SQL query to find all the records that have modified within a given time range.","completion":"SELECT * FROM Table WHERE ModifiedTime BETWEEN '<start-time>' AND '<end-time>';"},{"prompt":"Make the existing JavaScript function asynchronous. function handleData(data, cb) { if (data.type === 'A') { const filteredData = data.filter(x => x.name === 'hello') const processedData = filteredData.map(x => x.value) const result = processedData.length cb(result) }","completion":"async function handleData(data, cb) { if (data.type === 'A') { const filteredData = data.filter(x => x.name === 'hello') const processedData = filteredData.map(x => x.value) const result = processedData.length cb(result) } }"},{"prompt":"Write a function to swap the entries in a list. [10, 20, 30, 40]","completion":"def swap(List): temp = List[0] List[0] = List[3] List[3] = temp return List List = [10, 20, 30, 40] print(swap(List))"},{"prompt":"Change the following program to use a try/except/finally block to handle errors. def read_file(file): with open(file) as f: for line in f: print(line)","completion":"try: def read_file(file): with open(file) as f: for line in f: print(line) except IOError: print(\\"Error: Could not read file\\") finally: print(\\"Closing file\\") f.close()"},{"prompt":"What data structure should be used to store a customer’s name, address, and phone number?","completion":"A dictionary or set can be used to store a customer’s name, address, and phone number. The customer's name would be used as the key and the associated customer information such as address and phone number would be stored as the value."},{"prompt":"Suggest a function to find the second highest element in a list. [10, 20, 30, 40]","completion":"def second_highest(List): List.sort() return List[-2] List = [10, 20, 30, 40] print(second_highest(List))"},{"prompt":"What data structure would be suitable to represent a sparse matrix with thousands of columns and rows?","completion":"A dictionary of dictionaries or a linked list could be used to represent a sparse matrix with thousands of columns and rows. The outer dictionary would serve as an index table to refer to each row of the matrix while the inner dictionary contains key-value pairs of column index and the corresponding item or element in the specified row."},{"prompt":"Suggest a sorting algorithm for an array that contains both duplicates and unique elements. [8, 4, 3, 5, 9, 8, 10]","completion":"A radix sort would be an appropriate sorting algorithm for an array that contains both duplicates and unique elements. Radix sorts start by sorting the array based on the least significant digit, and then sort based on the next digit, and so on."},{"prompt":"Select all rows in a pandas dataframe where at least one value exists in the column named ‘name’.","completion":"selected_rows = df[df.name.notnull()]"},{"prompt":"Write an SQL query to pick distinct elements from a table named 'students'.","completion":"SELECT DISTINCT * FROM students;"},{"prompt":"Create a function that returns the longest substring of the string given. string = \\"Hello world!","completion":"def longest_substring(string): curr_len = 1 max_len = 1 prev_index = 0 n = len(string) visited = [-1] * 256 visited[ord(string[0])] = 0 for i in range(1,n): prev_index = visited[ord(string[i])] if prev_index == -1 or (i - curr_len > prev_index): curr_len+=1 else: if curr_len > max_len: max_len = curr_len curr_len = i - prev_index visited[ord(string[i])] = i if curr_len > max_len: max_len = curr_len return max_len"},{"prompt":"Write a Python program to create a copy of a given set. my_set = {1, 2, 3, 4, 5}","completion":"def clone_set(my_set): new_set = set() for item in my_set: new_set.add(item) return new_set"},{"prompt":"Create a function to search the given list to find a key value and return its position. arr = ['a', 'b', 'c', 'd'] key = 'a'","completion":"def search(arr, key): for i in range(len(arr)): if arr[i] == key: return i return -1"},{"prompt":"Given a list of integers, write a program to convert it into a list of strings. integers = [1, 2, 3, 4]","completion":"def convert_to_string(integers): string_list = [] for item in integers: string_list.append(str(item)) return string_list"},{"prompt":"Edit the Python code snippet to remove the syntax error. def calculate_area(length, width): area = length * width return “The area is” + are","completion":"def calculate_area(length, width): area = length * width return \\"The area is \\" + str(area)"},{"prompt":"Write a Python program to randomly sample a list without replacement. list = [30, 40, 50, 60, 70, 80]","completion":"import random def sample_list(list): list_copy = list.copy() sampled_list = [] while list_copy: element = random.choice(list_copy) sampled_list.append(element) list_copy.remove(element) return sampled_list"},{"prompt":"You need to edit a Python code snippet to add a loop and make it print the square of the numbers from 1 to 10.","completion":"for i in range(1, 11): square = i * i print(square)"},{"prompt":"Create a data structure in Python that stores the details of a shoe product. Name: \\"Nike Air Max 720\\" Price: 219.99 Size: 8 Color: White","completion":"class ShoeProduct: def __init__(self, name, price, size, color): self.name = name self.price = price self.size = size self.color = color"},{"prompt":"Create an HTML page with a form that has two inputs: Name and Email.","completion":"<html> <head> <title>Submission Form</title> </head> <body> <form> <label for=\\"name\\">Name: </label> <input type=\\"text\\" name=\\"name\\" id=\\"name\\" /> <label for=\\"email\\">Email: </label> <input type=\\"email\\" name=\\"email\\" id=\\"email\\" /> <input type=\\"submit\\" value=\\"Submit\\" /> </form> </body> </html>"},{"prompt":"Write a SQL query that finds the TOTAL sales of each product in a given month. Table name: sales Columns: product_id, quantity, order_date","completion":"SELECT product_id, SUM(quantity) AS total_sales FROM sales WHERE MONTH(order_date)='<month>' GROUP BY product_id;"},{"prompt":"Create a JavaScript object that stores the properties of an employee. Name: John Doe Age: 25 Position: Accou","completion":"let employee = { name: 'John Doe', age: 25, position: 'Accountant' };"},{"prompt":"Create a CSS style to display text in italics.","completion":"p { font-style: italic; }"},{"prompt":"Create a swift class that describes a flower.","completion":"class Flower { var name: String var petals: Int var petalColor: String var pollenColor: String init(name: String, petals: Int, petalColor: String, pollenColor: String) { self.name = name self.petals = petals self.petalColor = petalColor self.pollenColor = pollenColor } }"},{"prompt":"Fill in the below code to extract specific data from the given JSON object. const jsonObj = { 'name': 'John Doe', 'locations': ['Los Angeles', 'New York', 'Las Vegas'], 'qualifications': {'degree': 'Master', 'university': 'Stanford'} }","completion":"const name = jsonObj['name']; const locations = jsonObj['locations']; const degree = jsonObj['qualifications']['degree']; const university = jsonObj['qualifications']['university'];"},{"prompt":"Write a Django code to print the name of all the users in the database.","completion":"from django.contrib.auth.models import User users = User.objects.all() for user in users: print(user.username)"},{"prompt":"Using jQuery, design an effect to fade out an element when clicked on.","completion":"(function() { ('#myElement').on('click', function(e) { (this).fadeOut(300); }); });"},{"prompt":"Write a bash script to replace all occurrences of the letter 'a' with the letter 'b' in 'myfile.txt'.","completion":"#!/bin/bash while read line; do echo line | sed -e \\"s/a/b/g\\" >> myfile.txt done < myfile.txt"},{"prompt":"Using HTML and CSS, develop a two-column layout that has two different shades of the same color.","completion":"<div style=\\"height: 100%; width: 100%; display: flex; flex-direction: row; background-color: #e8e8e8;\\"> <div style=\\"flex: 1 1 auto; background-color: #d3d3d3; padding: 20px 0;\\"></div> <div style=\\"flex: 1 1 auto; background-color: #cfcfcf; padding: 20px 0;\\"></div> </div>"},{"prompt":"Using HTML/CSS and JavaScript, construct a web page that generates a random password.","completion":"<!DOCTYPE html> <html> <head> <title>Random Password Generator</title> <script src=\\"generate.js\\"><\/script> <style> body { background-color: lightblue; } #container { margin: 0 auto; width: 500px; background-color: white; padding: 30px; } #password { font-size: 20px; font-weight: bold; } </style> </head> <body> <div id=\\"container\\"> <h1>Random Password Generator</h1> <h2>Your Password:</h2> <div id=\\"password\\"></div> <button onclick=\\"generatePassword()\\">Generate</button> </div> </body> </html> // JavaScript code in a file called 'generate.js' // function generatePassword() { let password = Math.random().toString(36).substring(2, 10); document.getElementById(\\"password\\").innerHTML = password; }"},{"prompt":"Create a function in Java to check if a given array contains duplicates. int[] arr = {1, 2, 3, 2, 4, 5};","completion":"public static boolean hasDuplicates(int[] arr) { for (int i = 0; i < arr.length; i++) { for (int j = i + 1; j < arr.length; j++) { if (arr[i] == arr[j]) return true; } } return false; }"},{"prompt":"Write an HTML code for a form to submit data.","completion":"<form action=\\"script.php\\" method=\\"post\\"> <input type=\\"text\\" name=\\"name\\" placeholder=\\"Name\\"> <input type=\\"email\\" name=\\"email\\" placeholder=\\"Email\\"> <input type=\\"submit\\" value=\\"Submit\\"> </form>"},{"prompt":"Write a jQuery code to find and display the longest word from a given string. var str = \\"This is a sample string.","completion":"<script type=\\"text/javascript\\"> (document).ready(function(){ var str = \\"This is a sample string.\\"; var words = str.split(\\" \\"); var longestWord = words.sort(function (a, b) { return b.length - a.length; })[0]; alert(\\"The longest word is: \\"+longestWord); }); <\/script>"},{"prompt":"Translate this piece of JavaScript into Python. let val = 10; if (val > 5) { console.log(\\"val is greater than 5\\"); }","completion":"val = 10 if val > 5: print(\\"val is greater than 5\\")"},{"prompt":"Given the following array, remove all duplicates and return a new array with the remaining elements. arr = [1, 2, 4, 3, 3, 2]","completion":"new_arr = list(set(arr)) # [1, 2, 3, 4]"},{"prompt":"Find the number of triplets in this array which sum up to zero. arr = [-1, 0, 1, 2, 3, 4]","completion":"The number of triplets in this array which sum up to zero is 1. The triplets are [-1, 0, 1]."},{"prompt":"Bring the following two variables into the same format Variable one: 12,34 Variable Two: 21.103","completion":"Variable one: 12.34 Variable two: 21.103"},{"prompt":"Write a function in C++ to reverse a C-style String. // str is a c-style string char str[] = \\"Hello World!","completion":"void ReverseString(char *str) { int length = 0; char temp; // calculate the length of string while (*str != 0) { length++; str++; } // the end of string str--; // swap first and last characters for (int i = 0; i < length/2; i++) { temp = *str; *str = *(str - length + 1); *(str -length + 1) = temp; str--; } }"},{"prompt":"Write a HTML code to design a card with the heading \\"Welcome!\\".","completion":"<div class=\\"card\\"> <div class=\\"card-header\\"> <h3>Welcome!</h3> </div> <div class=\\"card-body\\"> </div> </div>"},{"prompt":"Write a SQL query to update the value of column b in the table called a. Table name: a Columns: a, b Current state of table a: a | b 1 | 10 2 | 11 3 | 12","completion":"UPDATE a SET b = 20 WHERE a = 3;"},{"prompt":"Read the given input, and write a Python code to create a dictionary which contains unique elements as keys and their corresponding count as values. Input: ['a',\\"a\\",'b',1,1,1,'c']","completion":"my_list = ['a',\\"a\\",'b',1,1,1,'c'] my_dict = {} for i in my_list: my_dict[i] = my_dict.get(i, 0) + 1 print(my_dict) # Output: {'a': 2, 'b': 1, 1: 3, 'c': 1}"},{"prompt":"Using variable A, write a code snippet in Java to iterate through ArrayList and delete odd values. // ArrayList A ArrayList<Integer> A = new ArrayList<>(Arrays.asList(1,2,3,4,5,6));","completion":"for(int i=0; i<A.size(); i++) { if(A.get(i) %2 != 0) { A.remove(i); i--; } }"},{"prompt":"Write a HTML code to show a table with 2 columns and 4 rows.","completion":"<table> <tr> <th>Column 1</th> <th>Column 2</th> </tr> <tr> <td>Row 1</td> <td>Row 1</td> </tr> <tr> <td>Row 2</td> <td>Row 2</td> </tr> <tr> <td>Row 3</td> <td>Row 3</td> </tr> <tr> <td>Row 4</td> <td>Row 4</td> </tr> </table>"},{"prompt":"Create a function in Python to evaluate the given numpy array and return the maximum absolute difference of any two elements. // Array A import numpy as np A = np.array([1, 4, 5, -3])","completion":"def max_difference(A): return max(abs(np.max(A) - np.min(A)), abs(A[-1] - A[0]))"},{"prompt":"Write a CSS code to show a black colored button with the text \\"Greet\\".","completion":".button { background-color: black; color: white; border-radius: 5px; padding: 10px; } <button class=\\"button\\">Greet</button>"},{"prompt":"Create a function in Python to modify the given list and remove all strings with length less than three. mylist = ['Apple', 'Cat', 'Hello', 'Hi']","completion":"def remove_short(mylist): mylist = [x for x in mylist if len(x) >= 3] return mylist print(remove_short(mylist)) # Output: ['Apple', 'Hello']"},{"prompt":"Write a function in JavaScript that takes in a number x and returns the pythagorean triplet whose sum is x. // Number x int x = 12;","completion":"function getTripletsFromSum (x) { var triplet = []; for (var i = 1; i < x; i++) for (var j = i; j < x; j++) for (var k = j; k < x; k++) if (i*i + j*j === k*k && i + j + k === x) triplet.push(i, j, k); return triplet; } console.log(getTripletsFromSum(12)); # Output: [3,4,5]"},{"prompt":"Given an array of strings, sort the strings alphabetically. array = [\\"Banana\\", \\"Apple\\", \\"Orange\\"]","completion":"def sort_strings(array): return sorted(array)"},{"prompt":"Write a query that sorts data in a database.","completion":"SELECT * FROM table_name ORDER BY column_name ASC"},{"prompt":"Write a SQL query which returns rows that have duplicate values in one or more columns.","completion":"SELECT * FROM table_name GROUP BY col1, col2, ... HAVING COUNT(*) > 1"},{"prompt":"Describe a way to implement quicksort.","completion":"Quicksort is an efficient sorting algorithm that works by selecting a \\"pivot\\" element from the array and partitioning the other elements into two sub-arrays based on whether they are less than or greater than the pivot element. Quicksort then recursively sorts the sub-arrays in the same way. The algorithm runs in O(nlog(n)) time and is one of the most widely used sorting algorithms."},{"prompt":"Transform the C code into an equivalent Python program. int main() { int i, j; for (i = 0; i < 3; i++) for (j = 0; j < 4; j++) printf(\\"%d %dn\\", i, j); return 0; }","completion":"for i in range(3): for j in range(4): print(i, j)"},{"prompt":"Generate a code to throttle a stream of messages that exceeds a set limit of messages within a certain time window. limit = 100 time_window = 5 second","completion":"import time def throttle_messages(limit, window): count = 0 start = time.time() while count < limit: next_message = yield count += 1 end = time.time() if (end - start) > window: count = 0 start = end yield"},{"prompt":"Generate a code to find the kth smallest number in an unsorted list given three inputs (list, k and n). list = [12, 3, 5, 7, 19] k = 3 n = len(list)","completion":"def find_kth_smallest_number(list, n, k): list.sort() # kth smallest element return list[k-1]"},{"prompt":"Create a python generator that prints fibonacci numbers from n to 2*n-1. n = 10","completion":"def fibonacci_generator(n): a, b = 0, 1 while a < 2 * n - 1: yield a a, b = b, a + b"},{"prompt":"Generate a code to implement a binary search in an array with upto 1 million elements.","completion":"def binary_search(arr, x): l = 0 r = len(arr) - 1 while l <= r: mid = l + (r - l) // 2 if arr[mid] == x: return mid elif arr[mid] < x: l = mid + 1 else: r = mid - 1 return -1"},{"prompt":"Find the sum of two integers without using + or - signs. a = 7 b = 5","completion":"def add(a, b): # Iterate till there is no carry while (b != 0): # Carry now contains common # set bits of x and y carry = a & b # Sum of bits of x and y where at # least one of the bits is not set a = a ^ b # Carry is shifted by one so that # adding it to x gives the required sum b = carry << 1 return a"},{"prompt":"Given an array of integers, find the maximum possible sum of a subarray within the array.","completion":"def maxSubArraySum(arr): maxsum = arr[0] for i in range(len(arr)): newSum = 0 for j in range(1, len(arr)): newSum += arr[j] if(newSum > maxsum): maxsum = newSum return maxsum"},{"prompt":"What does the 'break' keyword do in a loop structure in Python and how is it used?","completion":"The 'break' keyword is used to break out of a loop prematurely. It causes an immediate exit from the loop, bypassing any remaining code in the loop. It is generally used inside a conditional statement, such as an 'if' statement, as it can be used to stop the loop from executing when a certain condition is satisfied. For example: for number in range(10): if number == 5: break print(number) This code will print the numbers 0 through 4 and will exit the loop once it reaches the number 5. If the 'break' statement is not used the loop will continue and print all the numbers up to 9."},{"prompt":"Create a function in Java to generate Fibonacci numbers up to n.","completion":"public class Fibonacci { public static int fibonacci(int number){ if(number == 1 || number == 2){ return 1; } return fibonacci(number-1) + fibonacci(number -2); //tail recursion } public static void printFibonacci(int number){ for(int i = 1; i <= number; i++){ System.out.print(fibonacci(i) +\\" \\"); } } }"},{"prompt":"Code an algorithm to find the closest pair of elements in a given array with respect to a given target number. arr = [10, 22, 28, 29, 30, 40], target = 44","completion":"def closest_pair(arr, target): min_difference = 999999 min_pair = (-1, -1) # Iterate through all elements for i in range(len(arr)): # Loop through rest of elements for j in range(i + 1, len(arr)): diff = abs(arr[i] + arr[j] - target) # Check for maximum difference if diff < min_difference: min_difference = diff min_pair = (i, j) return min_pair"},{"prompt":"Create a function in Python that takes a list and returns the first two elements that adds up to 0. [1, 5, 2, -7, 3]","completion":"def zero_sum_pair(list): # loop through the list for i in range(len(list)): for j in range(i + 1, len(list)): if list[i] + list[j] == 0: return [list[i], list[j]] return None"},{"prompt":"Write a query in SQL to list the products from a given supplier.","completion":"SELECT * FROM Products WHERE SupplierId = 'SupplierId'"},{"prompt":"w can you optimized the following program's runtime? def my_function(my_list): output = [] for i in range(len(my_list)): output.append(my_list[i] * 2) return outpu","completion":"def my_function(my_list): output = [] for i in range(0, len(my_list), 2): output.append(my_list[i] * 2) return output By looping over the list in steps of two, the function will only have to go through half of the elements, thus optimizing the runtime."},{"prompt":"Given a Dataframe, select the two columns as specified and store into a new separate Dataframe. import pandas as pd data = {'Name':['Tom', 'nick', 'krish', 'jack'], 'Age':[20, 21, 19, 18] } df = pd.DataFrame(data) cols = ['Name', 'Age']","completion":"import pandas as pd data = {'Name':['Tom', 'nick', 'krish', 'jack'], 'Age':[20, 21, 19, 18] } df = pd.DataFrame(data) cols = ['Name', 'Age'] # Creating new Dataframe df_new = df[cols] print(df_new)"},{"prompt":"Create a for loop for the list. my_list = [1, 2, 3, 4]","completion":"my_list = [1, 2, 3, 4] for item in my_list: print(item)"},{"prompt":"Construct a syntax tree representing the following sentence. Bob likes apples.","completion":"S ┌───┴───┐ NP VP ┌─┴─┐ │ Bob V NP │ │ V N │ ┌─┴─┐ likes apples"},{"prompt":"Write a for loop for the following dictionary. my_dict = {'first': 'one', 'second': 'two', 'third': 'three'}","completion":"my_dict = {'first': 'one', 'second': 'two', 'third': 'three'} for key, value in my_dict.items(): print(key, value)"},{"prompt":"w can you combine these two lists without duplication? list_one = ['a', 'b', 'c'] list_two = ['c', 'd', 'e']","completion":"combined_list = set(list_one + list_two) print(list(combined_list)) # ['a', 'b', 'c', 'd', 'e']"},{"prompt":"Create a new array containing the square of each element in the given array. my_array = [2, 3, 4, 5]","completion":"new_array = [] for x in my_array: new_array.append(x * x) print(new_array) # [4, 9, 16, 25]"},{"prompt":"Create a new object with the three properties of an employee specified in the given object. employee = { 'name': 'John', 'salary': 6000 }","completion":"new_object = { 'name': employee['name'], 'salary': employee['salary'], 'age': 0 }"},{"prompt":"Print the following sentence in reverse order. \\"This is a coding challenge.","completion":"print(\\"challenge. coding a is This\\")"},{"prompt":"Write a code that prints each word in a given string on a separate line.","completion":"\\"\\"\\" Write a code that prints each word in a given string on a separate line \\"\\"\\" def print_words(string): words = string.split() for word in words: print(word) if __name__ == '__main__': string = \\"This is a coding challenge\\" print_words(string)"},{"prompt":"Complete the following code to delete the item at a given index from a list. index = 4 list_items = [2, 3, 4, 5, 6, 7, 8]","completion":"\\"\\"\\" Complete the following code to delete the item at a given index from a list \\"\\"\\" index = 4 list_items = [2, 3, 4, 5, 6, 7, 8] # remove the item at index 4 del list_items[index] # print the list print(list_items)"},{"prompt":"Create an HTML page with an input box and a button. When the user clicks the button, it should print out a constant text.","completion":"\\"\\"\\" Create an HTML page with an input box and a button. When the user clicks the button, it should print out a constant text \\"\\"\\" <html> <head> <title>Input Box</title> </head> <body> <input type=\\"text\\" id=\\"input\\"></input> <button onclick=\\"printText()\\">Click Here</button> <script> function printText(){ document.write(\\"This is a constant text\\"); } <\/script> </html>"},{"prompt":"Print only the odd numbers from the given list. list_items = [2, 3, 4, 5, 6, 7, 8]","completion":"\\"\\"\\" Print only the odd numbers from the given list \\"\\"\\" list_items = [2, 3, 4, 5, 6, 7, 8] for item in list_items: if item % 2 != 0: print(item)"},{"prompt":"Classify the following object as having either a simple, complex or a composite data type. Dictionary","completion":"Complex data type."},{"prompt":"Create a for loop to iterate through a given list and print the list elements. list_items = [2, 3, 4, 5, 6, 7, 8]","completion":"\\"\\"\\" Create a for loop to iterate through a given list and print the list elements \\"\\"\\" list_items = [2, 3, 4, 5, 6, 7, 8] for item in list_items: print(item)"},{"prompt":"Create an HTML page with a heading \\"Welcome to My Site\\".","completion":"<html> <head> <title>Welcome to My Site</title> </head> <body> <h1>Welcome to My Site</h1> </body> </html>"},{"prompt":"dentify a code snippet from the following four options. def calculate_sum(numbers): result = 0 for num in numbers: result += num return result for option in ['A', 'B', 'C', 'D']: print(option)","completion":"A is not a valid code snippet. B is not a valid code snippet. C is not a valid code snippet. D is not a valid code snippet. The correct code snippet is: def calculate_sum(numbers): result = 0 for num in numbers: result += num return result"},{"prompt":"Given two strings, find out if one is a permutation of the other. string1 = \\"cat\\" string2 = \\"ac","completion":"def check_permutation(string1, string2): if len(string1) != len(string2): # The strings can't be permutations if they are different lengths return False # Convert the strings to lists list1 = list(string1) list2 = list(string2) # Sort the lists to make comparison easier list1.sort() list2.sort() # Compare the elements in the sorted lists for i in range(len(list1)): if list1[i] != list2[i]: return False return True # Example print(check_permutation(\\"cat\\", \\"act\\")) # Output: True"},{"prompt":"Using the following list of countries and their population, write a program that prints the name and population of the most populous country. countries = [{'name': 'India', 'population': 1367030000}, {'name': 'China', 'population': 1406918015}, {'name': 'United States', 'population': 327000000}]","completion":"def find_most_populous_country(countries): max_population = 0 most_populous_country = None for country in countries: if country['population'] > max_population: max_population = country['population'] most_populous_country = country return f'The most populous country is {most_populous_country[\\"name\\"]} with a population of {most_populous_country[\\"population\\"]}' print(find_most_populous_country(countries)) # Output: The most populous country is China with a population of 1406918015"},{"prompt":"Print a pyramid of stars that has 5 levels.","completion":"for i in range(5): for j in range(i+1): print(\\"*\\", end=\\" \\") print(\\"\\")"},{"prompt":"Use the following code to print each letter of the string \\"Hello World\\" on a separate line. string = \\"Hello World","completion":"string = \\"Hello World\\" for letter in string: print(letter)"},{"prompt":"Parse the following HTML text and print out all of the elements and the content inside them. <html><div><h1>This is a test</h1><p>This is a paragraph</p></div></html>","completion":"from bs4 import BeautifulSoup html = '<html><div><h1>This is a test</h1><p>This is a paragraph</p></div></html>' soup = BeautifulSoup(html, 'html.parser') # Print out all the elements for tag in soup.find_all(): print(f'Tag: {tag.name}') # Print out the content inside the tags for element in soup.find_all(): print(element.text) # Output: Tag: html Tag: div Tag: h1 Tag: p This is a test This is a paragraph"},{"prompt":"Edit the existing Python code to convert Fahrenheit (F) degrees to Celsius (C) degrees. def convert(F): return F + 32","completion":"def convert(F): return (F-32)*5/9"},{"prompt":"Correct the syntax error in the following HTML structure. <div> <h1>My Web Page</h> <div/>","completion":"<div> <h1>My Web Page</h1> </div>"},{"prompt":"Write an SQL statement to delete all rows from a table named 'employees'.","completion":"DELETE FROM employees;"},{"prompt":"Write an SQL query to sort the table 'employees' based on their age in descending order.","completion":"SELECT * FROM employees ORDER BY age DESC;"},{"prompt":"Write a C++ code to implement quick sort algorithm.","completion":"void quickSort(int arr[], int left, int right) { int i = left, j = right; int tmp; int pivot = arr[(left + right) / 2]; /* partition */ while (i <= j) { while (arr[i] < pivot) i++; while (arr[j] > pivot) j--; if (i <= j) { tmp = arr[i]; arr[i] = arr[j]; arr[j] = tmp; i++; j--; } }; /* recursion */ if (left < j) quickSort(arr, left, j); if (i < right) quickSort(arr, i, right); }"},{"prompt":"Write an R code to get the names of all uncorrelated columns in a data frame.","completion":"# Get all column names all_columns <- names(data_frame) # Create an empty vector uncorrelated_columns <- c() # Iterate each column name in the data_frame for(column_name in all_columns) { # Store the correlations of each column in a vector correlations <- cor(data_frame[column_name], data_frame[-column_name]) # If the value of a correlation it is below 0.8 if(any(correlations < 0.8)) { # Add column name to empty vector uncorrelated_columns <- c(uncorrelated_columns, column_name) } }"},{"prompt":"Write a CSS code to style links in a page.","completion":"a { text-decoration: none; font-weight: bold; color: #0F8CC2; } a:visited { color: #00FFDC; } a:hover { color: #FF0089; } a:active { color: #C30000; }"},{"prompt":"Train a machine learning model to predict the stock price of a company based on historical data. Historical data for the company Apple Inc.","completion":"import pandas as pd import numpy as np import matplotlib.pyplot as plt from sklearn.linear_model import LinearRegression # Read the dataset dataset = pd.read_csv('Apple_Historical_Data.csv') # Get target and predictors X = dataset.iloc[:, :-1].values y = dataset.iloc[:, -1].values # Train the Linear Regression model lr_model = LinearRegression() lr_model.fit(X, y) # Predict stock price prediction = lr_model.predict(X)"},{"prompt":"Write a C++ code to perform selection sort on a given array of numbers. [2, 6, 4, 1, 7, 9, 8]","completion":"void selectionSort(int arr[], int n) { int i, j, min_idx; // One by one move boundary of unsorted subarray for (i = 0; i < n-1; i++) { // Find the minimum element in unsorted array min_idx = i; for (j = i+1; j < n; j++) { if (arr[j] < arr[min_idx]) { min_idx = j; } } // Swap the found minimum element with the first // element swap(&arr[min_idx], &arr[i]); } } // Output // [1, 2, 4, 6, 7, 8, 9]"},{"prompt":"Write a JavaScript program to accept user input and store it in a variable.","completion":"const userInput = prompt(\\"Please enter some text:\\");"},{"prompt":"Create a C++ program to merge two arrays of different lengths.","completion":"#include <iostream> using namespace std; void mergeArrays(int arr1[], int arr2[], int n1, int n2, int arr3[]) { int i = 0, j = 0, k = 0; while (i<n1 && j <n2) { if (arr1[i] < arr2[j]) arr3[k++] = arr1[i++]; else arr3[k++] = arr2[j++]; } while (i < n1) arr3[k++] = arr1[i++]; while (j < n2) arr3[k++] = arr2[j++]; } // Driver Code int main() { int arr1[] = {1, 3, 5, 7}; int n1 = sizeof(arr1) / sizeof(arr1[0]); int arr2[] = {2, 4, 6, 8}; int n2 = sizeof(arr2) / sizeof(arr2[0]); int arr3[n1+n2]; mergeArrays(arr1, arr2, n1, n2, arr3); for (int i=0; i < n1+n2; i++) cout << arr3[i] << \\" \\"; return 0; }"},{"prompt":"Create an HTML form in which a user can input text and a button to submit.","completion":"<html> <body> <form> <input type=\\"text\\" name=\\"input\\"> <input type=\\"submit\\" value=\\"Submit\\"> </form> </body> </html>"},{"prompt":"Create a GPT-2 model to generate text given a seed phrase.","completion":"from transformers import GPT2Tokenizer, GPT2LMHeadModel tokenizer = GPT2Tokenizer.from_pretrained('gpt2') model = GPT2LMHeadModel.from_pretrained('gpt2') def generate_text(seed_phrase): input_ids = torch.tensor(tokenizer.encode(seed_phrase)).unsqueeze(0) output_ids = model.generate( input_ids=input_ids, max_length=100, do_sample=True ) return tokenizer.decode(output_ids[0])"},{"prompt":"Create a HTML page with a paragraph and a button to toggle the paragraph's text color between red and blue.","completion":"<html> <head> <title>Color Toggle</title> <script> let isRed = true; let toggleButton = document.getElementById('toggle-button'); toggleButton.addEventListener('click', () => { let paragraph = document.getElementsByTagName('p')[0]; paragraph.style.color = isRed ? 'blue' : 'red'; isRed = !isRed; }); <\/script> </head> <body> <p>This is a paragraph.</p> <button id='toggle-button'>Toggle color</button> </body> </html>"},{"prompt":"Create a class in java, that has two fields and two constructors. Field1: String; Field2:","completion":"public class MyClass { String field1; int field2; public MyClass(String field1, int field2) { this.field1 = field1; this.field2 = field2; } public MyClass() { this.field1 = \\"\\"; this.field2 = 0; } }"},{"prompt":"JavaScript, how do you loop through the properties of an object?","completion":"In JavaScript, an object can be looped through by using either a for-in loop or by using the Object.keys() method. The for-in loop will iterate through the properties of the object and can be used to access the values associated with the properties. The Object.keys() method returns an array of the object's own property names and thus will loop through all the enumerable properties of the object."},{"prompt":"Write a Bash script to quickly calculate the mean for a set of numbers 5 10 15 20","completion":"#!/bin/bash #Create array from set of numbers arr=(5 10 15 20) #Initialize sum and count sum=0 count=0 #Loop through the array and sum up the values for item in {arr[@]}; do let sum=sum+item let count=count+1 done #Calculate mean echo (echo sum/count | bc -l)"},{"prompt":"mplement a LRU cache in Java","completion":"import java.util.HashMap; public class LRUCache { // Custom Doubly Linked List static class CacheNode { CacheNode prev; CacheNode next; int key; int value; } // Map containing the Keys private HashMap<Integer, CacheNode> map = new HashMap<Integer, CacheNode>(); // Maximum number of elements in the cache private int capacity; // Current size private int size; // Head of the DLL private CacheNode head; // Tail of the DLL private CacheNode tail; public LRUCache(int capacity) { this.capacity = capacity; this.size = 0; } // Lookup a key in the cache public int get(int key) { // Return -1 if no such key exists if (!map.containsKey(key)) { return -1; } // Get the node CacheNode node = map.get(key); // Delete the node removeNode(node); // Put it at the head addAtHead(node); // Return its value return node.value; } // Add a new node to the cache public void put(int key, int value) { CacheNode node = new CacheNode(); node.key = key; node.value = value; // Check if the node is already present if (map.containsKey(key)) { CacheNode oldNode = map.get(key); removeNode(oldNode); addAtHead(node); map.put(key, node); } else { // Add at the front of the list if (size == capacity) { // Delete the last node map.remove(tail.key); removeNode(tail); } addAtHead(node); map.put(key, node); } } // Remove a node from the list public void removeNode(CacheNode node) { if (node.prev != null) { node.prev.next = node.next; } else { head = node.next; } if (node.next != null) { node.next.prev = node.prev; } else { tail = node.prev; } size--; } // Put a node at the front of the list public void addAtHead(CacheNode node) { node.next = null; node.prev = null; if (head == null) { head = node; tail = node; } else { node.next = head; head.prev = node; head = node; } size++; } }"},{"prompt":"Write a function in Python that takes in a list and returns the second largest element list_of_numbers = [5, 10, 15, 20]","completion":"def second_largest(list_of_numbers): max_num = max(list_of_numbers) sec_max_num = None for num in list_of_numbers: if num != max_num and (sec_max_num is None or sec_max_num < num): sec_max_num = num return sec_max_num"},{"prompt":"Encrypt the following string using a substitution cipher thisisasupersecurestring","completion":"dnklkfaxvgpsvpytjimnzt"},{"prompt":"Write an algorithm to calculate the maximum subarray sum list_of_numbers = [-2, 3, 1, -4]","completion":"def max_subarray_sum(list_of_numbers): max_so_far = 0 max_ending_here = 0 for i in range(0,len(list_of_numbers)): max_ending_here = max_ending_here + list_of_numbers[i] if (max_ending_here < 0): max_ending_here = 0 elif (max_so_far < max_ending_here): max_so_far = max_ending_here return max_so_far"},{"prompt":"Generate HTML for a button with the text \\"Click Here!\\".","completion":"<button>Click Here!</button>"},{"prompt":"Given a list of phone numbers, write a code to find the one with the highest digits. phone_numbers = [\\"+440123456789\\", \\"+45987654321\\", \\"+441234567890\\"]","completion":"highest = 0 highest_phone = None for number in phone_numbers: number_digits = ''.join(filter(str.isdigit, number)) if int(number_digits) > highest: highest_phone = number highest = int(number_digits) print(f\\"The phone number with highest digits is {highest_phone}.\\")"},{"prompt":"Formulate an SQL query to find the most expensive product in a given database.","completion":"SELECT MAX(price) FROM products;"},{"prompt":"Construct a code to replace all instances of 'A' with 'Z' in a given string. string = \\"This is a string A with multiple A'","completion":"def replace_letter_A(string): string = string.replace('A', 'Z') return string print(replace_letter_A(string))"},{"prompt":"Rewrite the following code using List Comprehension to print the maximum number from a list of integers. numbers = [3, 2, 5, 4, 6]","completion":"max_num = max([num for num in numbers]) print(max_num)"},{"prompt":"Write a code to detect if a string is a palindrome or not. Output true if it is a palindrome, output false if it is not. \\"racecar","completion":"true"},{"prompt":"Write a code to accept a string and return the last character. \\"Hello World","completion":"return string[string.length-1]"},{"prompt":"You are given the following code. Write an 'assert' statement that checks if the email address is all lowercase or not. email = \\"THIS_IS_TEST@EMAIL.COM","completion":"assert email.lower() == email, \\"Email address should be all lowercase\\""},{"prompt":"Edit the following code to check if the resulting output of the division is an integer. a = 15 b = 4 output = a/b","completion":"if b != 0: output = a/b assert output.is_integer(), \\"Result of division is not an integer\\""},{"prompt":"Create a class in Python that implements an algorithm for sorting a list of numbers. list = [3, 2, 5, 1, 4]","completion":"class SortNum(): def selection_sort(self, list): for i in range(len(list)): min_idx = i for j in range(i + 1, len(list)): if list[min_idx] > list[j]: min_idx = j list[i], list[min_idx] = list[min_idx], list[i] return list"},{"prompt":"Sum the numbers in the following array and print the result. array = [[1, 2, 3], [4, 5, 6], [7, 8, 9]]","completion":"total = 0 for row in array: for element in row: total += element print(total)"},{"prompt":"Create a list of objects of the following class and print the objects as dictionary. class Car: def __init__(self, make, model, year): self.make = make self.model = model self.year = year","completion":"cars = [] cars.append(Car(\\"Ford\\", \\"Mustang\\", 2019)) cars.append(Car(\\"Toyota\\", \\"Corolla\\", 2020)) for car in cars: print(car.__dict__)"},{"prompt":"Create a Django view to handle GET requests for displaying a list of products. appname/models.py class Product(models.Model): name = models.CharField(max_length=200) description = models.TextField() price = models.DecimalField(max_digits=10, decimal_places=2)","completion":"# Create a Django view to handle GET requests. def product_list_view(request): # Get the list of products products = Product.objects.all() # Return the list of products context = { 'products': products } return render(request, 'product_list.html', context)"},{"prompt":"Return the index of the first occurrence of an element in the given array. arr = [2, 3, 3, 1, 5, 2]","completion":"def first_occurrence(arr, element): for i in range(len(arr)): if arr[i] == element: return i return -1"},{"prompt":"Print the first element that occurs in the list and is divisible by 5. list = [2, 3, 5, 10, 15, 30]","completion":"for element in list: if element % 5 == 0: print(element) break"},{"prompt":"Write a MySQL query to find the names and salaries of all employees who have salaries greater than 80,000.","completion":"SELECT name, salary FROM Employees WHERE salary > 80000;"},{"prompt":"Write a CSS class to create a link which shows on hover.","completion":".show-on-hover { display: none; &:hover { display: block; } }"},{"prompt":"Create a SQL query to select all columns in a table but exclude the contents of a specific column.","completion":"SELECT * FROM Table_Name WHERE column_name IS NULL;"},{"prompt":"Write a CSS selector to style all buttons with the class 'submit'.","completion":".submit { /* CSS properties here */ }"},{"prompt":"Create an AWS service to host a website.","completion":"Using AWS Amazon EC2 and S3 services, you can host a website. You can use EC2 to set up a web server, and S3 can be used to store static website content such as HTML, CSS, and images."},{"prompt":"Create a Java program to print out Armstrong numbers in a given range.","completion":"public static void armstrongInRange(int lower, int upper) { int num, originalNum, remainder, n = 0; // Calculates the number of digits a number has for(originalNum = lower + 1; originalNum < upper; originalNum++) { num = originalNum; while(num != 0) { num /= 10; n++; } num = originalNum; int sum = 0; // Calculates the sum of the nth power of the digits while(num != 0) { remainder = num % 10; sum += Math.pow(remainder, n); num /= 10; } // Checks if the sum is equal to the original number if(sum == originalNum) System.out.print(originalNum + \\" \\"); } }"},{"prompt":"You need to program a function to calculate the dot product of two arrays. array1=[1, 2, 3] array2=[-1, 0, 4]","completion":"7"},{"prompt":"You need to write a function to remove all the elements with a given value from a given array. array1=[1, 1, 2, 3, 4, 5, 1] value=1","completion":"[2, 3, 4, 5]"},{"prompt":"You need to write a program that takes a list of words as an input and returns the longest word in the list. word_list=[\\"cat\\", \\"dog\\", \\"elephant\\", \\"ants\\"]","completion":"elephant"},{"prompt":"You need to write a program that takes a given string and checks if it is a valid IP address. string1=\\"255.255.0.10","completion":"true"},{"prompt":"You need to write a program to print out the prime numbers between a given range of numbers. start=1 end=50","completion":"2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47"},{"prompt":"You need to write a program to delete a given node from a singly linked list. head = [1, 2, 3, 4, 5] node_data = 3","completion":"[1, 2, 4, 5]"},{"prompt":"Execute this line of code and tell me what is the value of \`y\`? int x = 5; int y = 3*x+2;","completion":"y = 17"},{"prompt":"What am I trying to do with this code? i = 0 while i < 5: print(i) i += 1","completion":"You are trying to print the numbers 0 to 4 (inclusive) by using a while loop."},{"prompt":"What is wrong with this code? str1 = 'This is a string' str2 = str1 str2 += ' with a suffix'","completion":"The variable str1 is not updated and remains as 'This is a string' when you add a suffix to str2. This means that the values of str1 and str2 are no longer the same."},{"prompt":"What should I add in this function to generate a random number? def generate_random(): # Your code here","completion":"import random def generate_random(): return random.randint(0,100)"},{"prompt":"Using Python, write code to check if a list contains duplicates or not. list = [10, 20, 30, 40, 50]","completion":"def has_duplicates(list): seen = set() for item in list: if item in seen: return True seen.add(item) return False"},{"prompt":"w can I get the last element of this list? list = [1, 2, 3, 4, 5]","completion":"The last element of the list can be accessed using the index -1 or using the list method pop(): last_element = list[-1] or last_element = list.pop()"},{"prompt":"Create a JSON object that contains person data.","completion":"person = { \\"name\\": \\"John Smith\\", \\"age\\": 32, \\"address\\": { \\"street\\": \\"123 Main Street\\", \\"city\\": \\"Chicago\\", \\"state\\": \\"IL\\" }, \\"hobbies\\": [\\"golf\\", \\"reading\\", \\"fishing\\"] }"},{"prompt":"What is the time complexity for this for loop? nums = [1,2,3,4,5] for num in nums: print(num)","completion":"The time complexity for this loop is O(n) where n is the length of the list."},{"prompt":"Describe the difference between lists and tuples","completion":"The main difference between lists and tuples is that lists are mutable, meaning they can be changed, while tuples are immutable and cannot be changed. Lists are used when the data is expected to change, while tuples are used when the data is expected to stay the same. In addition, a list can contain any type of data, while a tuple can only contain one type of data. Lastly, a list uses square brackets, while a tuple uses parentheses."},{"prompt":"Write a SQL query to list the names of all students registered for Maths 101.","completion":"SELECT S.name FROM Student S INNER JOIN Course C ON S.course_id = C.course_id WHERE C.course_name = 'Maths 101';"},{"prompt":"Using the following list of prime numbers, calculate their sum. [2, 3, 5, 7, 11, 13]","completion":"The sum of the numbers in the list is 51."},{"prompt":"Construct a JSON object to represent the following shoes array. [ { \\"name\\": \\"Nike Air Zoom\\", \\"color\\": \\"Black\\", \\"size\\": 10.5 }, { \\"name\\": \\"Skechers GoWalk\\", \\"color\\": \\"Grey\\", \\"size\\": 11 } ]","completion":"{ \\"shoes\\": [ { \\"name\\": \\"Nike Air Zoom\\", \\"color\\": \\"Black\\", \\"size\\": 10.5 }, { \\"name\\": \\"Skechers GoWalk\\", \\"color\\": \\"Grey\\", \\"size\\": 11 } ] }"},{"prompt":"Using the given data, find the average monthly temperature in Fahrenheit. June: 78.1, July: 87.8, August: 90","completion":"The average monthly temperature in Fahrenheit is 84.9."},{"prompt":"Construct a class in Python that can calculate the volume of a cube given its side length.","completion":"class Cube(object): def __init__(self, side_length): self.side_length = side_length def calculate_volume(self): return self.side_length * self.side_length * self.side_length"},{"prompt":"Using the given array of objects, find the object with the highest age. [{name: \\"John\\", age: 25}, {name: \\"Jack\\", age: 50}, {name: \\"Jill\\", age: 30}]","completion":"The object with the highest age is {name: \\"Jack\\", age: 50}."},{"prompt":"Explain the following PHP code. string1 = \\"Hello\\"; string2 = \\"World\\"; echo string1 . \\" \\" . string2;","completion":"The above PHP code first initializes two string variables, string1 and string2, with the strings \\"Hello\\" and \\"World\\" respectively. Then, it uses the string concatenation operator (.) to combine the two strings together, separated by a space, and prints the result using the echo function. The result of the above code will be \\"Hello World\\"."},{"prompt":"Turn the statement into a valid predicate in first-order logic. \\"All animals are mammal","completion":"∀x(Animal(x) → Mammal(x))"},{"prompt":"Write an HTML tag to create a table with three columns and two rows.","completion":"<table> <tr> <td></td> <td></td> <td></td> </tr> <tr> <td></td> <td></td> <td></td> </tr> </table>"},{"prompt":"Generate pseudocode to solve the Fibonacci sequence.","completion":"Function Fibonacci(n) Declare f0, f1, fn f0 = 0 f1 = 1 if n = 0 fn = f0 else if n = 1 fn = f1 else for i = 2 to n fn = f0 + f1 f0 = f1 f1 = fn end for return fn End Function"},{"prompt":"Create a SQL query to get a list of the top 5 email domains from a customer table.","completion":"SELECT TOP 5 SUBSTRING(Email, LEN(Email) - CHARINDEX('@', REVERSE(Email)) + 2, LEN(Email)) AS Domain FROM Customers GROUP BY SUBSTRING(Email, LEN(Email) - CHARINDEX('@', REVERSE(Email)) + 2, LEN(Email)) ORDER BY Domain DESC"},{"prompt":"Create a PHP function to print the first 1000 prime numbers.","completion":"<?php function printPrimes() { n = 2; while (1000--) { isPrime = 1; for (i = 2 ; i <= sqrt(n); i++) { if (n % i == 0) { isPrime = 0; break; } } if (isPrime) echo \\"n \\"; n++; } } printPrimes(); ?>"},{"prompt":"Create a Ruby function to generate a number between 0 and 1.","completion":"def random_number rand end puts random_number"},{"prompt":"Design a key-value database with Python for storing course information. The database should contain the following fields: Course Name, Course ID, Course Description and Course Instructor.","completion":"import sqlite3 conn = sqlite3.connect('database.db') c = conn.cursor() # Create table c.execute('CREATE TABLE Course (course_name TEXT, course_id TEXT, course_description TEXT, course_instructor TEXT)') # Save (commit) the changes conn.commit() # Close the connection conn.close()"},{"prompt":"mplement an algorithm in Java to count the number of ones in a binary number","completion":"public static int countOnes(int num) { int count = 0; while (num != 0) { num = num & (num - 1); count++; } return count; }"},{"prompt":"Create a function in C++ to calculate the sum of range","completion":"int sumRange(int start, int stop) { int sum = 0; for (int i = start; i <= stop; i++) sum += i; return sum; }"},{"prompt":"Write a SQL query to get the top 10 customers with highest overall spending","completion":"SELECT c.customer_id, c.name, SUM(o.price) as total_spending FROM customers c JOIN orders o ON c.customer_id = o.customer_id GROUP BY c.customer_id, c.name ORDER BY total_spending DESC LIMIT 10;"},{"prompt":"Design a MySQL query to find out the youngest employee","completion":"SELECT e.first_name, e.last_name, e.birth_date FROM Employees e ORDER BY e.birth_date ASC LIMIT 1;"},{"prompt":"Create a function in Python to break down the number into its digits","completion":"def break_down(n): digit_list = [int(x) for x in str(n)] return digit_list"},{"prompt":"Write an SQL query to display all employees who work in the R&D department.","completion":"SELECT * FROM employees WHERE department = 'R&D';"},{"prompt":"Using JavaScript, convert the following JSON object into a string. JObj = { “name” : “John”, “age” : 42 }","completion":"const JString = JSON.stringify(JObj); console.log(JString); // { “name” : “John”, “age” : 42 }"},{"prompt":"mplement a function in PHP to display all even numbers between 2 and the given number n.","completion":"function displayEvenNumbers(n) { for(i = 2; i <= n; i++) { if(i % 2 == 0) { echo i.\\" \\"; } } }"},{"prompt":"Write a query in MySQL to display the top 3 highest salaries.","completion":"SELECT salary FROM employees ORDER BY salary DESC LIMIT 3"},{"prompt":"Create a class in Java called Student with 3 instance variables - firstName, lastName, and age.","completion":"public class Student{ String firstName; String lastName; int age; //constructor Student(String firstName, String lastName, int age){ this.firstName = firstName; this.lastName = lastName; this.age = age; } }"},{"prompt":"Using CSS, change the text color of all elements with class “main-heading” to red.","completion":".main-heading { color: red; }"},{"prompt":"Create an animation using CSS that moves an element from left to right on an infinite loop.","completion":"@keyframes moveLeftToRight { 0% { left: 0px; } 100% { left: 100%; } } .animation-element { position: relative; animation: moveLeftToRight infinite linear; }"},{"prompt":"Edit the following function to allow it to accept negative numbers. function isPositive(num) { return num >= 0; }","completion":"function isPositive(num) { return num > 0; }"},{"prompt":"Write a Python program to find all numbers from 1 to the given number n which are divisible by 6.","completion":"def findDivisibleBySix(n): result = [] for i in range(1, n+1): if i % 6 == 0: result.append(i) return result"},{"prompt":"Write a SQL statement that selects the name, age and gender of every student in the database with age greater than 18.","completion":"SELECT name, age, gender FROM students WHERE age > 18;"},{"prompt":"Convert a date in the format \\"MM/dd/yyyy\\" to a timestamp. 04/23/2021","completion":"import time def convert_date_to_timestamp(d): return time.mktime(time.strptime(d, \\"%m/%d/%Y\\"))"},{"prompt":"Generate a five digit random string.","completion":"import random def generate_rand_str(): return ''.join(random.choices(string.ascii_letters + string.digits, k=5))"},{"prompt":"Create a JavaScript class that represents a person and ouputs their name and age to the console.","completion":"class Person { constructor(name, age) { this.name = name; this.age = age; } outputInfo() { console.log(\`Name: {this.name}, Age: {this.age}\`); } }"},{"prompt":"Find all the prime numbers within a given range. 2, 20","completion":"def get_primes_in_range(a, b): primes = [] for num in range(a, b + 1): if all(num % i != 0 for i in range(2, num)): primes.append(num) return primes"},{"prompt":"Create a HTML table element with 4 columns and 5 rows.","completion":"<table> <tr> <th>Column1</th> <th>Column2</th> <th>Column3</th> <th>Column4</th> </tr> <tr> <td>Row1</td> <td>Row1</td> <td>Row1</td> <td>Row1</td> </tr> <tr> <td>Row2</td> <td>Row2</td> <td>Row2</td> <td>Row2</td> </tr> <tr> <td>Row3</td> <td>Row3</td> <td>Row3</td> <td>Row3</td> </tr> <tr> <td>Row4</td> <td>Row4</td> <td>Row4</td> <td>Row4</td> </tr> <tr> <td>Row5</td> <td>Row5</td> <td>Row5</td> <td>Row5</td> </tr> </table>"},{"prompt":"Design a recursanve function in Python that prints a given string in reverse. hello","completion":"def print_string_reverse(str): if not str: return else: print_string_reverse(str[1:]) print(str[0], end='')"},{"prompt":"Find the string between two substrings. String: This is a string Start substring: is End substring:","completion":"\\" is \\""},{"prompt":"Parse the following XML data and print the value of the 'id' key as a string. <root> <id>123</id> <name>John Doe</name> </root>","completion":"String value = '123'"},{"prompt":"Determine the syntactic structure of the following sentence. Sentence: She felt so excited that her application got approval.","completion":"Subject (she) + Verb (felt) + Adverb (so) + Adjective (excited) + Conjunction (that) + Subject (her application) + Verb (got) + Object (approval)."},{"prompt":"Use the regular expression to extract the words ending with 'sion'. String: fusion, explosion, elisio","completion":"(fusion|explosion|elision)"},{"prompt":"Construct a JSON object from the given key-value pair. Key-Value Pair: name:John Doe","completion":"{ \\"name\\": \\"John Doe\\" }"},{"prompt":"Construct an array from the given set of numbers. Set of numbers: [4, 8, 12, 16, 20]","completion":"int [] arr = {4, 8, 12, 16, 20};"},{"prompt":"Edit the given code to add a new element to the list. list = [1, 2, 3]","completion":"list = [1, 2, 3] list.append(4) # Adding new element"},{"prompt":"Create an HTML page containing two buttons.","completion":"<!DOCTYPE html> <html> <head> <title>Buttons</title> </head> <body> <input type=\\"button\\" value=\\"Button 1\\" /> <input type=\\"button\\" value=\\"Button 2\\" /> </body> </html>"},{"prompt":"Create a class called \\"Animal\\" containing three attributes - name, type and age.","completion":"class Animal: def __init__(self, name, type, age): self.name = name self.type = type self.age = age"},{"prompt":"Write VBA for a search interface to pull information from one tab of an excel sheet to a different tab","completion":"Sub search_interface() Dim sh As Worksheet, sh2 As Worksheet Set sh = ThisWorkbook.Sheets(\\"Sheet1\\") Set sh2 = ThisWorkbook.Sheets(\\"Sheet2\\") For Each row In sh.Rows If row.Cells(1, 1) = \\"Search Term\\" Then Exit For End If If row.Cells(1, 1) = sh2.Cells(1, 2) Then For col = 1 To 4 sh2.Cells(2, col).Value = row.Cells(1, col).Value Next col End If Next row End Sub"},{"prompt":"Generate code to calculate the average age of a group of people. [[\\"Person\\", \\"Age\\"], [\\"Jim\\",26], [\\"John\\", 39], [\\"Tracy\\",19]]","completion":"def average_age(people): total_age = 0 for p, a in people: total_age += a return total_age/len(people)"},{"prompt":"Create a Matlab program to find the sum a given series The given series is 1 + 1/4 + 1/9 + ...","completion":"sum_series = 0; for i = 1:100 sum_series = sum_series + 1/i^2; end fprintf('The sum if the series is: %fn',sum_series);"},{"prompt":"Define an iterator class in Python.","completion":"class myIterator: def __init__(self, data): self.data = data self.index = 0 def __iter__(self): return self def __next__(self): if self.index >= len(self.data): raise StopIteration item = self.data[self.index] self.index += 1 return item"},{"prompt":"Create a class in Python that can be used as a context manager.","completion":"class myContextManager: def __init__(self, name): self.name = name print(\\"Context Manager initialized.\\") def __enter__(self): print(\\"Entering context.\\") return self def __exit__(self, type, value, traceback): print(f\\"Exiting context: {self.name}\\")"},{"prompt":"Write a function to check whether a linked list contains a given value.","completion":"def contains(value, head): current_node = head while current_node is not None: if current_node.value == value: return True current_node = current_node.next return False"},{"prompt":"Consolidate the following array into a dictionary arr = [(\\"apple\\", 1), (\\"banana\\", 2), (\\"orange\\", 3)]","completion":"dict(arr) # Result: {'apple': 1, 'banana': 2, 'orange': 3}"},{"prompt":"Write a Python program to implement Find-Max algorithm. arr = [10, 7, 8, 11, 15]","completion":"def FindMax(arr): curr_max = arr[0] curr_index = 0 for i in range(len(arr)): if arr[i] > curr_max: curr_max = arr[i] curr_index = i return curr_max, curr_index if __name__ == \\"__main__\\": arr = [10, 7, 8, 11, 15] curr_max, curr_index = FindMax(arr) print(\\"Max element:\\", curr_max) print(\\"Index of max element:\\", curr_index)"},{"prompt":"Define a function in Python that calculates the sum of the sum of the elements of a nested list.","completion":"def nestedListSum(nested_list): total = 0 for sub_list in nested_list: total += sum(sub_list) return total"},{"prompt":"Write a Python program to compare two dictionaries by key.","completion":"def compare_dicts_by_key(dic1, dic2): if len(dic1) != len(dic2): return False for key in dic1: if key not in dic2 or dic1[key] != dic2[key]: return False return True"},{"prompt":"Generate a list of random alphanumeric strings of length 25.","completion":"import random import string def random_strings_list(length): alphanumeric_chars = string.ascii_letters + string.digits strings_list = [] for _ in range(length): random_string = ''.join(random.choices(alphanumeric_chars, k=25)) strings_list.append(random_string) return strings_list"},{"prompt":"Write a Python program to format the following list of IP addresses. ip_addresses = [\\"192.168.1.1\\", \\"255.255.255.255\\",\\"8.8.8.8\\"]","completion":"def format_IP_addresses(ip_addresses): return [str(IPAddress(ip)) for ip in ip_addresses]"},{"prompt":"Create a list in Python that contains the first 10 multiples of 3.","completion":"multiples_list = [3, 6, 9, 12, 15, 18, 21, 24, 27, 30]"},{"prompt":"Given the following array in JavaScript, write a statement that finds the largest number. const numbers = [3, 5, 2, 10, 7, 4]","completion":"const largestNumber = Math.max(...numbers);"},{"prompt":"What is the difference between a string in Python and a list?","completion":"In Python, strings are immutable which means they can not be changed once created. On the other hand, a list is mutable, meaning the elements can be altered after the list is created. Additionally, strings are sequences of characters, whereas lists are sequences of any type of data."},{"prompt":"Given two arrays in Java, how would you merge them into one array? int[] array1 = {1, 2, 3}; int[] array2 = {4, 5, 6};","completion":"int[] mergedArray = new int[array1.length + array2.length]; System.arraycopy(array1, 0, mergedArray, 0, array1.length); System.arraycopy(array2, 0, mergedArray, array1.length, array2.length);"},{"prompt":"Write a SQL statement to fetch the maximum age from the table \\"employee\\".","completion":"SELECT MAX(Age) FROM Employee;"},{"prompt":"Given a Node.js object, how can you check if a property exists in the object?","completion":"if (Object.prototype.hasOwnProperty.call(object, 'property')) { // property exists }"},{"prompt":"Write a React component that accepts an array of strings and renders a bulleted list. const data = [\\"dog\\", \\"cat\\", \\"bird\\"]","completion":"class BulletList extends React.Component { render() { const {data} = this.props return ( <ul> {data.map(item => <li>{item}</li>)} </ul> ); } }"},{"prompt":"Create a PHP class with three protected fields \\"User Name\\", \\"Password\\", and \\"Email","completion":"class User { protected username; protected password; protected email; }"},{"prompt":"Write a SQL query that returns the number of orders shipped on each day. SELECT * FROM ORDERS","completion":"SELECT ShippedDate, COUNT(*) FROM ORDERS GROUP BY ShippedDate;"},{"prompt":"Given a JavaScript object, how can you remove a key from the object?","completion":"delete object[\\"key\\"];"},{"prompt":"Create a React component for a Postcard element to display on a webpage. The postcard should contain a paragraph element containing the text \\"Hello from Paris!\\", an image of the Eiffel Tower, and a \\"Return to Homepage\\" button below the image.","completion":"import React from 'react'; function Postcard() { return ( <div> <p>Hello from Paris!</p> <img src=\\"eiffel-tower.jpg\\" alt=\\"Eiffel Tower\\" /> <button type=\\"button\\">Return to Homepage</button> </div> ) } export default Postcard;"},{"prompt":"Write a TypeScript script to sort an array of names in alphabetical order. The following array of names: [\\"John\\", \\"James\\", \\"Karl\\", \\"Jane\\", \\"Jill\\"]","completion":"let sortArrayByName = (array: string[]) => { array.sort(function (x, y) { if (x < y) { return -1; } if (x > y) { return 1; } return 0; }); return array; }; let names = [\\"John\\", \\"James\\", \\"Karl\\", \\"Jane\\", \\"Jill\\"]; sortArrayByName(names); console.log(names);"},{"prompt":"Write a SQL query for finding the customers with orders of total price of more than 100.","completion":"SELECT customers.name FROM customers JOIN orders ON customers.id = orders.customer_id GROUP BY customers.id HAVING SUM(orders.price) > 100;"},{"prompt":"Write an HTML code snippet to create an email link for \\"support@example.com","completion":"<a href=\\"mailto:support@example.com\\">support@example.com</a>"},{"prompt":"Create a list of 20 words ordered alphabetically in HTML.","completion":"<ul> <li>Apples</li> <li>Bananas</li> <li>Cherries</li> <li>Dates</li> <li>Eggplants</li> <li>Figs</li> <li>Grapes</li> <li>Honeydews</li> <li>Ice cream</li> <li>Jelly beans</li> <li>Kiwis</li> <li>Lemons</li> <li>Mangoes</li> <li>Nectarine</li> <li>Oranges</li> <li>Pears</li> <li>Quinces</li> <li>Raspberries</li> <li>Strawberries</li> <li>Tangerines</li> </ul>"},{"prompt":"Create a function to generate random numbers from 0-99.","completion":"import random def random_number(): return random.randint(0,99)"},{"prompt":"Create a function to check whether a given value is in an array. arr = [1,2,3,4] x = 2","completion":"def is_value_in_arr(arr, x): if x in arr: return True else: return False"},{"prompt":"JavaScript, create a function that returns the length of a string.","completion":"function stringLength(str){ return str.length; }"},{"prompt":"Create a function to generate Fibonacci numbers less than 100.","completion":"def generateFibonacci(num): a = 0 b = 1 fib_sequence = [] while a < num: fib_sequence.append(a) a, b = b, a + b return fib_sequence"},{"prompt":"Suggest a way to create a linked list in python.","completion":"class Node: def __init__(self, data): self.data = data self.next = None class LinkedList: def __init__(self): self.head = None def append(self, data): new_node = Node(data) if not self.head: self.head = new_node return current = self.head while current.next: current = current.next current.next = new_node"},{"prompt":"Create a class that prints out the following message: \\"Welcome to the world of programming!","completion":"class WelcomeMessage: def __init__(self): print(\\"Welcome to the world of programming!\\")"},{"prompt":"Create a binary heap sort algorithm in Java.","completion":"public class Heapsort { public void sort(int arr[]) { int n = arr.length; // Build heap (rearrange array) for (int i = n / 2 - 1; i >= 0; i--) heapify(arr, n, i); // One by one extract an element from heap for (int i=n-1; i>=0; i--) { // Move current root to end int temp = arr[0]; arr[0] = arr[i]; arr[i] = temp; // call max heapify on the reduced heap heapify(arr, i, 0); } } // To heapify a subtree rooted with node i which is // an index in arr[]. n is size of heap void heapify(int arr[], int n, int i) { int largest = i; // Initialize largest as root int l = 2*i + 1; // left = 2*i + 1 int r = 2*i + 2; // right = 2*i + 2 // If left child is larger than root if (l < n && arr[l] > arr[largest]) largest = l; // If right child is larger than largest so far if (r < n && arr[r] > arr[largest]) largest = r; // If largest is not root if (largest != i) { int swap = arr[i]; arr[i] = arr[largest]; arr[largest] = swap; // Recursively heapify the affected sub-tree heapify(arr, n, largest); } } }"},{"prompt":"w would you create an API endpoint that returns a list of users?","completion":"import flask app = flask.Flask(__name__) @app.route(\\"/users\\", methods=(\\"GET\\",)) def get_users(): users = [ {\\"name\\": \\"John Smith\\", \\"age\\": 45}, {\\"name\\": \\"Tim Jones\\", \\"age\\": 34}, {\\"name\\": \\"Alice Jackson\\", \\"age\\": 24} ] return flask.jsonify(users)"},{"prompt":"Write code to output the sum of the numbers 1-100.","completion":"def sum_nums(n): total = 0 for i in range(1,n+1): total += i return total print(sum_nums(100))"},{"prompt":"Write a script that inputs a list and converts the list of strings into a dictionary. list = [\\"ABC\\", \\"XYZ\\", \\"PQR\\"]","completion":"dict = { \\"ABC\\": \\"ABC\\", \\"XYZ\\": \\"XYZ\\", \\"PQR\\": \\"PQR\\"}"},{"prompt":"Generate a link of the page given below. Page URL: www.example.com/product/apple","completion":"<a href=\\"www.example.com/product/apple\\">www.example.com/product/apple</a>"},{"prompt":"Extract all instances of a specific word in the given text. Text: The quick brown fox jumps over the lazy dog. Word: j","completion":"[\\"jump\\", \\"jumps\\"]"},{"prompt":"Create an HTML structure that mimics the mockup given below. Mockup: header | ____ | | | | | | | | |-----|","completion":"<header> <div></div> <div></div> <div></div> <div></div> <div></div> </header>"},{"prompt":"Write a Python function that generates a key-value pair for the given array. arr = [1, 2, 3, 4]","completion":"def generate_key_value(arr): key_val_pairs = {k:v for k,v in enumerate(arr)} return key_val_pairs print(generate_key_value(arr)) Output: {0: 1, 1: 2, 2: 3, 3: 4}"},{"prompt":"Create a MongoDB query that retrieves all the documents whose 'name' field contains the given string. String: H","completion":"db.collection.find({name: /.*Hi.*/})"},{"prompt":"Create a C program that prints all distinct combinations of characters from two given strings. Strings: ab and cd","completion":"#include <stdio.h> #include <string.h> int main(){ char str1[] = \\"ab\\"; char str2[] = \\"cd\\"; int i, j; for(i=0; i<strlen(str1); i++){ for(j=0; j<strlen(str2); j++){ printf(\\"%c%c \\", str1[i], str2[j]); } } printf(\\"n\\"); return 0; } Output: ac ad bc bd"},{"prompt":"Write an SQL query that updates the 'price' field for all documents in the collection to 200.","completion":"UPDATE collection SET price = 200;"},{"prompt":"You are given a text and the task is to output each individual word in the text along with its character count. Text: How are you doing?","completion":"How: 3 are: 3 you: 3 doing: 6 ? :1"},{"prompt":"Develop an Angular application that displays the current date and time.","completion":"import { Component } from '@angular/core'; @Component({ selector: 'app-root', template: \` <h1>{{ dateTime | date:'dd/MM/yyyy HH:mm:ss' }}</h1> \` }) export class AppComponent { dateTime = new Date(); }"},{"prompt":"Using HTML and CSS, create a web page that lists all of the fruits in the given array. fruits = [\\"apple\\", \\"orange\\", \\"banana\\", \\"pear\\", \\"mango\\"]","completion":"<html> <head> <title>Fruit List</title> </head> <body> <ul> <li>Apple</li> <li>Orange</li> <li>Banana</li> <li>Pear</li> <li>Mango</li> </ul> </body> </html>"},{"prompt":"Compute the sum of a given array using a Python function. arr = [1, 2, 3, 4]","completion":"def compute_sum(arr): sum = 0 for num in arr: sum += num return sum print(compute_sum(arr)) Output: 10"},{"prompt":"Write a code to print the largest element of an array if the array contains all negative numbers. arr = [-10, -20, -50, -30]","completion":"def largest_negative_number(arr): largest = float('-inf') for i in range(len(arr)): if arr[i] > largest: largest = arr[i] return largest # Driver Code arr = [-10, -20, -50, -30] print(largest_negative_number(arr))"},{"prompt":"Write a function to merge two sorted lists into one sorted list. list1 = [3, 5, 7] list2 = [1, 4, 6]","completion":"def merge_lists(list1, list2): final_list = [] i, j = 0, 0 while i < len(list1) and j < len(list2): if list1[i] < list2[j]: final_list.append(list1[i]) i += 1 else: final_list.append(list2[j]) j += 1 while i < len(list1): final_list.append(list1[i]) i += 1 while j < len(list2): final_list.append(list2[j]) j += 1 return final_list print(merge_lists(list1, list2))"},{"prompt":"Given an input of numbers, sort the numbers in descending order. arr = [6, 2, 5, 3, 9]","completion":"def sort_numbers_desc(arr): for i in range(len(arr)): max_element = arr[i] max_index = i for j in range(i+1, len(arr)): if arr[j] > max_element: max_element = arr[j] max_index = j arr[i], arr[max_index] = arr[max_index], arr[i] return arr print(sort_numbers_desc(arr))"},{"prompt":"Create a function that prints the binary representation of a number. number = 5","completion":"def print_binary(number): binary_string = \\"\\" while number != 0: remainder = number % 2 binary_string = str(remainder) + binary_string number = number // 2 return binary_string print(print_binary(number))"},{"prompt":"Write code to remove duplicates and maintain the order of elements in a given list. list = [3, 1, 7, 5, 3, 8, 7]","completion":"def remove_duplicates(list): new_list = [] for element in list: if element not in new_list: new_list.append(element) return new_list print(remove_duplicates(list))"},{"prompt":"Explain how to calculate the mean value of a function defined from 0 to infinity.","completion":"The mean value of a function can be calculated by integrating the function from 0 to infinity and dividing the integral by infinity. Mathematically, this is expressed as: mean = ∫∞0f(x)dx/∞"},{"prompt":"Write a regular expression to extract the city names from the following string. address: #38 number street, new york city, san jose, C","completion":"import re address_string = \\"#38 number street, new york city, san jose, CA\\" pattern = r'(?:,|^)([sw]*)(?:,|)' result = re.findall(pattern, address_string) print(result) // ['new york city', 'san jose']"},{"prompt":"Suggest a better algorithm than Bubble sort for sorting a large array.","completion":"Merge sort is an efficient sorting algorithm that uses divide and conquer approach. It divides the array into two halves, recursively sorts them and then merges them. Merge sort has a time complexity of O(nlog(n)) and is efficient for large arrays."},{"prompt":"Explain the use of *args and **kwargs in Python.","completion":"*args and **kwargs are special syntax in Python used to pass a variable number of arguments to a function. *args denotes positional arguments, while **kwargs represents keyword arguments. The syntax allows functions to take arbitrary number of arguments and provide flexibility for functions to handle different arguments."},{"prompt":"dentify the error in the code given below. # Sum of elements in a list my_list = [1, 2, 3] sum = 0 for i in range(my_list): sum += i print(sum)","completion":"The error is in line 6 while using the range function. The range function expects the start and end parameters to be int type, but in this case the parameter passed to the range function is a list. This should be changed to range(len(my_list)) so that the code will iterate over the elements of the list instead."},{"prompt":"Write a code to shuffle a list randomly in Python","completion":"import random my_list = [1, 2, 3, 4, 5] random.shuffle(my_list) print(my_list)"},{"prompt":"Given two string, how would you find the longest common substring?","completion":"The longest common substring can be found by traversing the two strings simultaneously and comparing the characters. If the characters match, we will increase the substring length by 1 and check for the next characters. In the case of a mismatch, the substring length is set back to 0. We will find the largest value of the substring length at the end of traversal and that value gives us the longest common substring."},{"prompt":"Suggest a data structure for storing a collection of countries and their corresponding population.","completion":"A dictionary would be a suitable data structure to store a collection of countries and their corresponding population. The country name could be used as the key and the population could be used as the value. For example: countries_population = { 'United States': 329_467_000, 'Canada': 36_323_167, 'China': 1_393_783_836, 'India': 1_380_004_385 }"},{"prompt":"Write a JSON parser to read the following data and output it in a 3-column table. {\\"name\\": \\"John Doe\\", \\"age\\": 29, \\"address\\": \\"123 Main Street\\"}","completion":"name | age | address -----|-----|--------- John Doe|29|123 Main Street"},{"prompt":"Create a shell script to list all available printer models.","completion":"#!/bin/bash lpr -P"},{"prompt":"Write a SQL query to count how many students are in each grade.","completion":"SELECT grade, COUNT(*) FROM students GROUP BY grade;"},{"prompt":"Ask the assistant to print a multiplication table for the number 5.","completion":"1 x 5 = 5 2 x 5 = 10 3 x 5 = 15 4 x 5 = 20 5 x 5 = 25 6 x 5 = 30 7 x 5 = 35 8 x 5 = 40 9 x 5 = 45 10 x 5 = 50"},{"prompt":"Use JavaScript and HTML to create a form with 3 input fields and a submit button.","completion":"<html> <head> <script> // JavaScript code <\/script> </head> <body> <form> <input type=\\"text\\" name=\\"field1\\" /> <input type=\\"text\\" name=\\"field2\\" /> <input type=\\"text\\" name=\\"field3\\" /> <input type=\\"submit\\" name=\\"submit\\" value=\\"Submit\\" /> </form> </body> </html>"},{"prompt":"Write a CSS selector to select the horizontal navigation bar with ID \\"nav-bar\\".","completion":"#navbar { ... }"},{"prompt":"Classify whether the following statement is an input or an output. Print the sum of the two numbers.","completion":"Input"},{"prompt":"Design a JavaScript function to filter out the prime numbers from an array. [1, 2, 3, 4, 5, 6]","completion":"function isPrime(n) { if (n === 2) return true; if (n % 2 === 0) return false; for (let i = 3; i <= Math.sqrt(n); i += 2) { if (n % i === 0) return false; } return true; } function primeFilter(array) { let result = []; for (let i = 0; i < array.length; i++) { if (isPrime(array[i])) { result.push(array[i]); } } return result; }"},{"prompt":"Create a Python script that calculates the surface area of a cylinder.","completion":"def surface_area_cylinder(radius, height): pi = 3.14 return 2*pi*radius*(radius + height)"},{"prompt":"Suggest improvements to the following code to optimize its performance. requests = [] for i in range(100000000): requests.append(i)","completion":"requests = [] for i in range(100000000): requests.append(i) # use list comprehension to generate the list in one line requests = [i for i in range(100000000)]"},{"prompt":"Suggest a better data structure that can be used to store a large amount of data in a way that querying data is fast.","completion":"A better data structure to store a large amount of data in a way that querying is fast would be a Hash Table. Hash Tables store data in an associative array, allowing for fast searches and retrieval of data."},{"prompt":"Write a code to delete the 4th element from the list. mylist = [1, 2, 3, 4, 5]","completion":"mylist = [1, 2, 3, 4, 5] del mylist[3] print(mylist)"},{"prompt":"Write a code to append a character at the start and end of a given string. word = \\"hello","completion":"word = \\"hello\\" word = '' + word + '' print(word)"},{"prompt":"Determine the maximum number of nodes in a height-balanced binary tree of height h. h = 4","completion":"The maximum number of nodes in a height-balanced binary tree of height 4 is 15. This can be determined by using the formula 2^(h+1) - 1."},{"prompt":"What is the time complexity of inserting a value into a singly linked list?","completion":"The time complexity of inserting a value into a singly linked list is O(1), as it is a constant time operation."},{"prompt":"Suggest a method to convert a given array into a min-heap.","completion":"Heapify is one of the methods to convert a given array into a min-heap. This process involves repeatedly swapping the root element with its smallest child (if it exists) to satisfy the min-heap property."},{"prompt":"w would you parse a URL into its individual components?","completion":"A URL can be parsed into its individual components by using string manipulation and built-in methods such as \`\`split()\`\` and \`\`replace()\`\`. The components generally include the protocol, host name, path, query string and fragment."},{"prompt":"Modify the following code to return the product of all numbers in a given list. def product_list(numbers): # Initialize the result result = 1 # Iterate over the input numbers for x in numbers: result = result * x # Return the result return resul","completion":"def product_list(numbers): # Initialize the result result = 1 # Iterate over the input numbers for x in numbers: result *= x # Return the result return result"},{"prompt":"Change the following code to make it easier to read a=3;b='aa';b*=a;print(b)","completion":"a = 3 b = 'aa' b = b * a print(b)"},{"prompt":"Understand the parameters used in the following code and explain their purpose. def doSomething(x, y, z): p","completion":"The parameters x, y and z are used in this function to represent arbitrary values. They can represent integers, floats, strings, lists, dictionaries, objects, etc. Depending on the specific implementation of this function, the parameters can take any meaning, representing any value. For example, it could be a function that performs an arithmetic operation, in which case x, y and z will represent the three numbers in the operation, or a function that processes a list, in which case x, y and z will represent the start index, end index and the list respectively."},{"prompt":"Change the following code to reduce its running time for i in range(0, len(nums)): if nums[i] == target: return","completion":"def find_target(nums, target): for i, num in enumerate(nums): if num == target: return i return -1 if __name__ == '__main__': nums = [2, 3, 5, 7] target = 5 index = -1 for i in range(0, len(nums)): if nums[i] == target: index = i break if (index == -1): print(\\"Target not found!\\") else: print(\\"Target found at index:\\", index)"},{"prompt":"Can you modify the program so that it prints out all words in the sentence along with their count? \\"The quick brown fox jumped over the lazy dog.","completion":"def print_words_with_count(sentence): word_count = {} words = sentence.split() for word in words: if word not in word_count: word_count[word] = 1 else: word_count[word] += 1 for word, count in word_count.items(): print(\\"Word: %s Count: %d\\" % (word, count))"},{"prompt":"Modify the program to support calculating Fibonacci numbers up to the nth number.","completion":"def FibonacciSeries(n): if n <= 0: return [0] elif n == 1: return [0,1] else: series = [0,1] for i in range(2, n): curr_num = series[i-1] + series[i-2] series.append(curr_num) return series"},{"prompt":"Generate a program to reverse a string and remove all the white spaces from the string. \\" The quick brown fox jumped over the lazy dog.","completion":"def reverse_and_trim(s): s = s.strip() s = s.replace(\\" \\", \\"\\") return s[::-1]"},{"prompt":"Generate a SQL query for finding the names of all employees in the company.","completion":"SELECT name FROM Employee;"},{"prompt":"Edit this HTML code to highlight odd rows of this table. <table> <tr> <th>Name</th> <th>Age</th> </tr> <tr> <td>John</td> <td>30</td> </tr> <tr> <td>Anna</td> <td>20</td> </tr> <tr> <td>Mark</td> <td>25</td> </tr> <tr> <td>Amy</td> <td>28</td> </tr> </table>","completion":"<table> <tr> <th>Name</th> <th>Age</th> </tr> <tr style=\\"background-color: lightgrey;\\"> <td>John</td> <td>30</td> </tr> <tr> <td>Anna</td> <td>20</td> </tr> <tr style=\\"background-color: lightgrey;\\"> <td>Mark</td> <td>25</td> </tr> <tr> <td>Amy</td> <td>28</td> </tr> </table>"},{"prompt":"Generate a code to capitalize the first letter of each word of a given sentence. text = \\"This is a sample sentence.","completion":"def capitalize_first_letter(text): words = text.split(' ') capitalized_words = [word[0].upper() + word[1:] for word in words] return ' '.join(capitalized_words) text = \\"This is a sample sentence.\\" capitalized_text = capitalize_first_letter(text) print(capitalized_text) # Output: This Is A Sample Sentence."},{"prompt":"Create a Tableau script to retrieve data from an Amazon RDS instance.","completion":"import pyodbc conn = pyodbc.connect( DRIVER='Amazon Redshift ODBC Driver', SERVER=<your instance URL>, PORT=<port number>, DATABASE=<database name>, UID=<username>, PWD=<password>) cursor = conn.cursor() query = <your SQL query> cursor.execute(query) data = cursor.fetchall() print(data)"},{"prompt":"Write a C++ program to sort an array in ascending and descending order. int arr[] = {2, 3, 1, 5, 4}","completion":"#include<iostream> using namespace std; // Function to sort an array in ascending order void asc_sort(int arr[], int n) { int temp; for (int i = 0; i < n; i++) { for (int j = i + 1; j < n; j++) { if (arr[i] > arr[j]) { temp = arr[i]; arr[i] = arr[j]; arr[j] = temp; } } } } // Function to sort an array in descending order void desc_sort(int arr[], int n) { int temp; for (int i = 0; i < n; i++) { for (int j = i + 1; j < n; j++) { if (arr[i] < arr[j]) { temp = arr[i]; arr[i] = arr[j]; arr[j] = temp; } } } } int main() { int arr[] = {2, 3, 1, 5, 4}; int n = 5; asc_sort(arr, n); cout << \\"Array in Ascending Order: \\"; for (int i=0; i<n; i++) cout << arr[i] << \\" \\"; cout << endl; desc_sort(arr, n); cout << \\"Array in Descending Order: \\"; for (int i=0; i<n; i++) cout << arr[i] << \\" \\"; return 0; } # Output: Array in Ascending Order: 1 2 3 4 5 Array in Descending Order: 5 4 3 2 1"},{"prompt":"mplement a function to insert an element into a binary search tree. tree = 5 / 2 8","completion":"def insert(self,val): if not self.root: self.root = Node(val) else: current = self.root while True: if val < current.val: if current.left: current = current.left else: current.left = Node(val) break elif val > current.val: if current.right: current = current.right else: current.right = Node(val) break else: break"},{"prompt":"Write code to count the number of times a given pattern has occured in a given string. Text: “This is a test string to practice coding. This string contains the pattern “is”","completion":"def countOccurrence(txt, pattern): count = 0 for i in range(len(txt)): if txt[i:i+len(pattern)] == pattern: count += 1 return count"},{"prompt":"Write a Ruby script that converts a given number in degree Celsius to Fahrenheit. 52","completion":"celsius = 52 fahrenheit = (celsius * 9/5) + 32 puts \\"The temperature in fahrenheit is #{fahrenheit} degrees\\""},{"prompt":"You need to read a text and detect if the sentence contains any curse words or not. Output true if there is a curse word, output false if there is not. When I saw the movie, I was so angry that I wanted to scream.","completion":"false"},{"prompt":"Create a function in Java that takes in an array of numbers and calculates the sum of the elements. [1, 2, 3, 4, 5]","completion":"public class Sum { public static int getSum(int[] arr) { int sum = 0; for(int i=0; i < arr.length; i++) sum += arr[i]; return sum; } }"},{"prompt":"You have to read a set of numbers and report the number of positive numbers. [-1, -43, 2, 6, 0, 18]","completion":"int count_positive(int arr[], int size) { int count = 0; for (int i = 0; i < size; i++) if (arr[i] > 0) count++; return count; } int arr[] = {-1,-43,2,6,0,18}; int n = sizeof(arr)/sizeof(arr[0]); count_positive(arr, n);"},{"prompt":"Generate random numbers 0 to 1000.","completion":"import random for i in range(10): print(random.randint(0, 1000))"},{"prompt":"Match the strings \\"string1\\" and \\"string2\\" using regex. string1=\\"Hello World\\" string2=\\"Hello*World","completion":"import re string1 = \\"Hello World\\" string2 = \\"Hello*World\\" pattern = re.compile(string2.replace('*', '.')) match = pattern.search(string1) if match: print('Matched!')"},{"prompt":"Create a linked list with the following elements: 5, 6, 7, 8.","completion":"class Node: def __init__(self, data): self.data = data self.next = None class LinkedList: def __init__(self): self.head = None def append(self, data): new_node = Node(data) if self.head == None: self.head = new_node else: curr = self.head while curr.next != None: curr = curr.next curr.next = new_node list = LinkedList() list.append(5) list.append(6) list.append(7) list.append(8)"},{"prompt":"Given two strings str1 and str2, write a function in JavaScript to check if str1 is a substring of str2.","completion":"function isSubstring(str1, str2){ if(str2.indexOf(str1) !== -1){ return true; } else{ return false; } }"},{"prompt":"Edit the following PHP code to return the modular exponentiation of two numbers. function mod_exp(base, exponent, modulus){ return base^exponent % modulus; }","completion":"function mod_exp(base, exponent, modulus){ var result = 1; for (var i = 0; i < exponent; i++){ result = (result * base) % modulus; } return result; }"},{"prompt":"Construct a HTML page for a registration form.","completion":"<html> <head> <title>Registration Form</title> </head> <body> <h1>Registration Form</h1> <form action=\\"register.php\\" method=\\"POST\\"> <div class=\\"form-row\\"> <label>Username:</label> <input type=\\"text\\" name=\\"username\\" required> </div> <div class=\\"form-row\\"> <label>Email:</label> <input type=\\"email\\" name=\\"email\\" required> </div> <div class=\\"form-row\\"> <label>Password:</label> <input type=\\"password\\" name=\\"password\\" required> </div> <div class=\\"form-row\\"> <input type=\\"submit\\" value=\\"Register\\"> </div> </form> </body> </html>"},{"prompt":"mplement a search() function that uses binary search to find a given element in an array.","completion":"def search(arr, target): left, right = 0, len(arr) - 1 while left <= right: mid = (left + right) // 2 if arr[mid] == target: return mid elif arr[mid] > target: right = mid - 1 else: left = mid + 1 return -1"},{"prompt":"Suggest a way to the generate a random number between 0 and 1 in JavaScript.","completion":"function getRandom() { return Math.random(); }"},{"prompt":"Using C++, unroll the following loop and vectorize the code. for (int i = 0; i < 10; ++i) x[i] = y[i] + z[i];","completion":"__m256 x_vec = _mm256_loadu_ps(x + 0); __m256 y_vec = _mm256_loadu_ps(y + 0); __m256 z_vec =_mm256_loadu_ps(z + 0); x_vec = _mm256_add_ps(y_vec, z_vec); _mm256_storeu_ps(x + 0, x_vec);"},{"prompt":"Generate a random sample with size n from a given pandas DataFrame.","completion":"import pandas as pd def sample_df(df,n): return df.sample(n)"},{"prompt":"Create a function to retrieve a random element from a given list in Java.","completion":"public static Object getRandomElement(List<?> list) { Random rand = new Random(); int randIndex = rand.nextInt(list.size()); return list.get(randIndex); }"},{"prompt":"Build a SQL query to calculate the biggest salary in the table “Employees”.","completion":"SELECT MAX(salary) FROM Employees;"},{"prompt":"Create a bash shell script that will print “I love programming in Bash!”.","completion":"#!/bin/bash echo \\"I love programming in Bash!\\""},{"prompt":"Generate a HTML code that will create an alert message with the text “You pressed the button!”","completion":"<html> <head> <script> function alert_button(){ alert(\\"You pressed the button!\\"); } <\/script> </head> <body> <button onclick=\\"alert_button()\\">Click Here</button> </body> </html>"},{"prompt":"Generate a CSS code for creating a flex container with columns of equal width.","completion":".flex-container { display: flex; flex-flow: row wrap; justify-content: space-between; } .flex-item { flex: 1 0 auto; padding: 5px; }"},{"prompt":"Suggest a completion for the following JavaScript code to determine if a number is an odd number. function isOddNumber(","completion":"function isOddNumber(num) { return num % 2 !== 0; }"},{"prompt":"Create a program in Scala to calculate the average price of all products in the table “Products”.","completion":"import scala.io.Source val products = Source.fromFile(\\"products.txt\\").getLines.toList val avgPrice = products.map(p => p.split(\\",\\")(4).toDouble).sum/products.length println(s\\"The average price is: avgPrice\\")"},{"prompt":"Create a HTML form to submit a text entry and view it after submission.","completion":"<html> <head> <script> function submitForm(){ var formData = document.getElementById(\\"textEntry\\").value; alert(\\"You said: \\"+ formData); } <\/script> </head> <body> <form> <input type=\\"text\\" id=\\"textEntry\\"> <input type=\\"button\\" value=\\"Submit\\" onclick=\\"submitForm()\\"> </form> </body> </html>"},{"prompt":"Write a Node.js module that accepts two strings and checks if the first string contains the second string. \\"Hello World\\", \\"ello","completion":"const containsSubstring = (string, substr) => { return string.indexOf(substr) !== -1; } module.exports = containsSubstring;"},{"prompt":"Generate a JavaScript code that prints all the numbers from 1 to 30.","completion":"for(let i=1; i<=30; i++){ console.log(i); }"},{"prompt":"Reformat a given JSON string between quotes to a properly indented and formatted output. \\"{\\"menu\\":{\\"id\\":\\"file\\",\\"value\\":\\"File\\",\\"popup\\":{\\"menuitem\\":[{\\"value\\":\\"New\\", \\"onclick\\":\\"CreateNewDoc()\\"},{\\"value\\":\\"Open\\", \\"onclick\\":\\"OpenDoc()\\"},{\\"value\\":\\"Close\\", \\"onclick\\":\\"CloseDoc()\\"}]}}}","completion":"{ \\"menu\\": { \\"id\\": \\"file\\", \\"value\\": \\"File\\", \\"popup\\": { \\"menuitem\\": [ { \\"value\\": \\"New\\", \\"onclick\\": \\"CreateNewDoc()\\" }, { \\"value\\": \\"Open\\", \\"onclick\\": \\"OpenDoc()\\" }, { \\"value\\": \\"Close\\", \\"onclick\\": \\"CloseDoc()\\" } ] } } }"},{"prompt":"Create an HTML <span> element with a given CSS class name. class=\\"impor","completion":"<span class=\\"important\\"></span>"},{"prompt":"Write a Python program to add the items of two given lists and create a new list. [1, 2, 3], [4, 5, 6]","completion":"newList = [x + y for x, y in zip([1, 2, 3], [4, 5, 6])]"},{"prompt":"Set an environment variable in Bash that holds the value of the given string. MyPassword","completion":"export MY_PASSWORD='MyPassword'"},{"prompt":"Write a regex expression to match the given input. abbccd","completion":"^(a|b|c){2}d"},{"prompt":"Create a Javascript function that calculates the median value of an array of numbers. [2, 7, 12, 15]","completion":"function calculateMedian(arr) { arr.sort(function(a, b){return a-b}); if (arr.length % 2 !== 0) { return arr[Math.floor(arr.length / 2)]; } else { return (arr[arr.length / 2 - 1] + arr[arr.length / 2]) / 2; } }"},{"prompt":"Write a Java program to display the area of a given circle. radius = 7","completion":"public class Circle { public static void main(String[] args) { double radius = 7.0; double circArea = Math.PI * (radius * radius); System.out.println(\\"The area of the circle with radius\\" + radius + \\" is: \\" + circArea); } }"},{"prompt":"Use jQuery to hide all the elements with the given CSS class. hidde","completion":"('.hidden').hide();"},{"prompt":"Create an array with 3 strings, \\"John\\", \\"Sam\\" and \\"Anna\\".","completion":"string names[] = {\\"John\\", \\"Sam\\", \\"Anna\\"};"},{"prompt":"Design a JavaScript function that will accept two numbers and return their sum.","completion":"function add(a, b) { return a + b; }"},{"prompt":"Adjust the following SQL query so that it will return the results sorted in an ascending order. SELECT name, age FROM users;","completion":"SELECT name, age FROM users ORDER BY age ASC;"},{"prompt":"Create a PHP class called \\"Car\\" with public member variables.","completion":"class Car { public make; public model; public color; public year; public function __construct(make, model, color, year) { this->make = make; this->model = model; this->color = color; this->year = year; } }"},{"prompt":"Create a loop in JavaScript to iterate through all names in an array and print them in a sentence. names = [\\"John\\", \\"Jack\\", \\"Jane\\", \\"Jill\\"]","completion":"for(let i = 0; i < names.length; i++) { console.log(\\"Hello, my name is \\" + names[i] + \\".\\") }"},{"prompt":"Develop an algorithm in Python to find the average of four numbers. [2, 4, 8, 5]","completion":"def avg(numbers): sum = 0 for num in numbers: sum += num return sum/len(numbers) average = avg([2, 4, 8, 5]) print(average)"},{"prompt":"Convert the following HTML table into a valid JSON format. <table> <tr> <th>Name</th> <th>Age</th> <th>Country</th> </tr> <tr> <td>John</td> <td>23</td> <td>USA</td> </tr> <tr> <td>Jack</td> <td>25</td> <td>Canada</td> </tr> <tr> <td>Jane</td> <td>20</td> <td>Australia</td> </tr> </table>","completion":"[ { \\"Name\\": \\"John\\", \\"Age\\": 23, \\"Country\\": \\"USA\\" }, { \\"Name\\": \\"Jack\\", \\"Age\\": 25, \\"Country\\": \\"Canada\\" }, { \\"Name\\": \\"Jane\\", \\"Age\\": 20, \\"Country\\": \\"Australia\\" } ]"},{"prompt":"Write a basic JavaScript program to request a user's name and display a greeting message with the user's name.","completion":"let name = prompt(\\"What is your name?\\"); console.log(\`Hello {name}, how are you doing today?\`);"},{"prompt":"Modify the code to convert any temperature from Celsius to Fahrenheit def CtoF(x): #TODO","completion":"def CtoF(x): F = (9/5 * x) + 32 return F"},{"prompt":"Write a function that switches the odd elements and the even elements in a list def switch_list(mylist): #TODO","completion":"def switch_list(mylist): for i in range(0, len(mylist), 2): temp = mylist[i] mylist[i] = mylist[i + 1] mylist[i + 1] = temp return mylist"},{"prompt":"Create a function that join two strings into one","completion":"def join_strings(string1, string2): return string1 + string2"},{"prompt":"Given a list of strings, remove all strings in the list myList = [\\"item1\\", \\"item2\\", \\"item3\\"]","completion":"def remove_all_strings(myList): myList.clear() return myList"},{"prompt":"Update the code to return a different string depending on the value of the variable test var test = 3 def change(test): #TODO","completion":"def change(test): if test==1: return \\"One\\" elif test==2: return \\"Two\\" elif test==3: return \\"Three\\" else: return \\"Not Found\\""},{"prompt":"Edit the code to add an if statement that returns the string \\"even\\" if the value of the variable is even, or the string \\"odd\\" if the value of the variable is odd. var number = 5 def even_odd(number): #TODO","completion":"def even_odd(number): if number % 2 == 0: return \\"even\\" else: return \\"odd\\""},{"prompt":"What type of complexity will the following two sorting algorithms have? selection sort: O(n^2) bubble sort: O(n^2)","completion":"The selection sort algorithm will have a complexity of O(n^2). The bubble sort algorithm will also have a complexity of O(n^2)."},{"prompt":"Design and implement a function that takes two lists of integers as parameters and returns the minimum difference between two elements of the two lists. list1 = [2, 4, 7, 13] list2 = [3, 8, 9, 14]","completion":"def min_difference(list1, list2): # Initialize the minimum difference to a large number min_diff = float('inf') for a in list1: for b in list2: # Update min_diff only if the difference # between a and b is smaller than min_diff min_diff = min(min_diff, abs(a - b)) return min_diff"},{"prompt":"Find the longest substring with non-repeating characters","completion":"def longest_substring(string): # Initialize the max length and the substring max_length = 0 substring = '' # Create an empty set to store previously seen characters char_set = set() # Iterate over the string for char in string: # If the character hasn't already been seen, if char not in char_set: # add it to the set char_set.add(char) # and extend the substring substring += char else: # if the character has already been seen # check whether the current substring is longer than the current max length if len(substring) > max_length: max_length = len(substring) # Clear the set and the substring char_set.clear() substring = '' # Check the last substring if len(substring) > max_length: max_length = len(substring) return max_length"},{"prompt":"Create a for loop in Python to iterate over all items in a list. my_list = [1, 2, 3, 4, 5]","completion":"for item in my_list: print(item)"},{"prompt":"Describe in code what is supervised learning.","completion":"Supervised learning is a type of machine learning that uses labeled data to train algorithms to predict outcomes. It involves using labeled data points as input and output to teach the machine how to predict outcomes. The algorithm is “supervised” because it has a pre-defined set of examples to learn from, making it easier to predict future outcomes."},{"prompt":"Construct a C# program to display Fibonacci series.","completion":"using System; class Fibonacci { static void Main() { int n1 = 0, n2 = 1, n3, i, number; Console.Write(\\"Enter the number of elements: \\"); number = int.Parse(Console.ReadLine()); Console.Write(n1 + \\" \\" + n2 + \\" \\"); for (i = 2; i < number; ++i) { n3 = n1 + n2; Console.Write(n3 + \\" \\"); n1 = n2; n2 = n3; } } }"},{"prompt":"Rewrite this SQL query to select the top three records from a table named 'sales'. SELECT * FROM sale","completion":"SELECT * FROM sales ORDER BY id DESC LIMIT 3"},{"prompt":"Construct a function convert a given number to binary format. Input Number: 15","completion":"def convert_to_binary(num): binary = \\"{0:b}\\".format(num) return binary # Convert 15 to binary binary_value = convert_to_binary(15) print(binary_value) # prints \\"1111\\""},{"prompt":"Design a program to partition an array into two subarrays such that the difference between the sum of the two subarrays is minimum. Input Array: [1, 6, 5, 11, 3]","completion":"def min_partition_array(arr): total = 0 for i in arr: total += i sum1, sum2 = 0, total n = len(arr) flag = [[False for i in range(total + 1)] for j in range(n + 1)] flag[0][0] = True for i in range(1, n + 1): for j in range(total + 1): if arr[i - 1] <= j: flag[i][j] = flag[i - 1][j] or flag[i - 1][j - arr[i - 1]] else: flag[i][j] = flag[i - 1][j] for j in range(0, int(total / 2) + 1): if flag[n][j]: sum1 = j sum2 = total - j break return sum1, sum2 # Partition [1, 6, 5, 11, 3] subarr1, subarr2 = min_partition_array([1, 6, 5, 11, 3]) print ((subarr1, subarr2)) # prints (8, 9)"},{"prompt":"Edit the program such that it prints the elements in a deck of cards in a specific format.","completion":"# Symbols for the different ranks ranks = [\\"2\\", \\"3\\", \\"4\\", \\"5\\", \\"6\\", \\"7\\", \\"8\\", \\"9\\", \\"10\\", \\"Jack\\", \\"Queen\\", \\"King\\", \\"Ace\\"] # Symbols for the different suits suits = [\\"Clubs\\", \\"Diamonds\\", \\"Hearts\\", \\"Spades\\"] # Create a deck of cards as a 2D array deck = [] for i in range(len(ranks)): for j in range(len(suits)): deck.append([ranks[i], suits[j]]) # Print the elements in the deck array for i in range(len(deck)): rank = deck[i][0] suit = deck[i][1] print(\\"Card %d: %s of %s\\" % (i+1, rank, suit))"},{"prompt":"Suggest a method to remove the pair of parentheses ( ) and the words inside them from the following python string. my_string = 'This is (a sample) string with (parentheses)'","completion":"import re my_string = 'This is (a sample) string with (parentheses)' op = re.sub(r'([^)]*)', '', my_string) print(op)"},{"prompt":"Create a Python class for a car with two methods.","completion":"class Car: def __init__(self, color, model): self.color = color self.model = model def start(self): print(\\"Starting car\\") def stop(self): print(\\"Stopping car\\")"},{"prompt":"Given the following HTML code, write a CSS rule to change the font size to 12px. <p class=”text”>Test</p>","completion":".text { font-size: 12px; }"},{"prompt":"Create a SQL query that combines two tables \`\`A\`\` and \`\`B\`\`. Table A id name 1 car 2 bike Table B id owner 1 Sam 2 Joh","completion":"SELECT A.id, A.name,B.owner FROM A JOIN B ON A.id = B.id;"},{"prompt":"Write a loop in Python to find all numbers below 100 that are divisible by 7.","completion":"for i in range(1,100): if i % 7 == 0: print(i, end=\\" \\")"},{"prompt":"Suggest a suitable type of machine learning algorithm for the following task. Identifying the sentiment of a movie review.","completion":"A suitable machine learning algorithm for this task is a supervised learning algorithm, such as a Naive Bayes classifier."},{"prompt":"Create a function to divide two numbers and return an integer result.","completion":"def div(x, y): if y == 0: raise ValueError('Cannot divide by zero') else: return x // y"},{"prompt":"Create a function that will take a string as an input and returns the number of upper case letters in it.","completion":"def countUpperCase(string): # Initialize counter variable count = 0 # Loop through characters in string for c in string: # If character is upper case increment counter if c.isupper(): count += 1 return count"},{"prompt":"Write a SQL query to count the number of records with a field of \\"user_id\\" in the table called \\"users\\".","completion":"SELECT COUNT(*) as count_user_id FROM users;"},{"prompt":"Use the reduce() method to sum the values of an array of numbers in JavaScript. const numbers = [1, 2, 3, 4, 5];","completion":"let sum = numbers.reduce((total, num) => total + num); console.log(sum); // 15"},{"prompt":"Compile the example program that prints \\"Hello, World!\\" in C++.","completion":"g++ -o example example.cpp"},{"prompt":"List all the table names in a PostgreSQL database.","completion":"SELECT table_name FROM information_schema.tables WHERE table_schema NOT IN ('pg_catalog', 'information_schema');"},{"prompt":"Select the email addresses the start with the letter \\"p\\" from the table \\"users\\".","completion":"SELECT email FROM users WHERE email LIKE 'p%';"},{"prompt":"Write a function to parse a query string into its components in JavaScript. query = \\"name=John&age=30","completion":"function parseQueryString(query) { let components = query.split(\\"&\\"); let data = {}; for (let c of components) { let pair = c.split(\\"=\\"); data[pair[0]] = pair[1]; } return data; } console.log(parseQueryString(query)); // {name: 'John', age: '30'}"},{"prompt":"Create a variable and assign a value to it in Java.","completion":"String name = \\"John\\";"},{"prompt":"Create a list containing the even numbers from #1 to #10.","completion":"[2, 4, 6, 8, 10]"},{"prompt":"Edit the error in this code. def my_function(x, y, z): a = x + 5y - z","completion":"def my_function(x, y, z): a = x + 5*y - z"},{"prompt":"Create a web page with HTML/CSS that consists of three circles of different colors and different sizes.","completion":"<html> <head> <style> div { width: 100px; height: 100px; border-radius: 50%; } #circle1 { background-color: red; } #circle2 { background-color: green; width: 80px; height: 80px; } #circle3 { background-color: blue; width: 60px; height: 60px; } </style> </head> <body> <div id=\\"circle1\\"></div> <div id=\\"circle2\\"></div> <div id=\\"circle3\\"></div> </body> </html>"},{"prompt":"Create a script that prints the duplicate elements from a given list of numbers. my_list = [1, 2, 3, 2, 3, 4, 5]","completion":"my_list = [1, 2, 3, 2, 3, 4, 5] duplicated_nums = [] for i in my_list: if my_list.count(i) > 1: duplicated_nums.append(i) print(list(set(duplicated_nums))) # The output will be [2, 3]"},{"prompt":"Change this list of words into a list of strings. my_list = [\\"apple\\", \\"banana\\", \\"orange\\"]","completion":"my_list = [\\"apple\\", \\"banana\\", \\"orange\\"] my_list = list(map(str, my_list)) # The output will be['apple', 'banana', 'orange']"},{"prompt":"What is the sum of all the even numbers in the range 1-100 inclusive?","completion":"2550 # The output will be 2550"},{"prompt":"Write a JavaScript program that asks the user to enter a number and then prints the sum of the cube of the digits of the number.","completion":"let number = Number(prompt(\\"Enter a number:\\")); let sum = 0; while (number > 0) { let last_digit = number % 10; sum = sum + last_digit**3; number = (number - last_digit)/10; } console.log(sum); # The output will be the sum of the cube of the digits"},{"prompt":"Generate an HTML page on the browser with the text \\"Hello world.","completion":"<html> <head> </head> <body> Hello world. </body> </html>"},{"prompt":"What is the Big O notation for a linear search?","completion":"The Big O notation for a linear search is O(n), where n is the number of elements in the given list."},{"prompt":"Given a binary tree, write a function to serialize and deserialize the tree.","completion":"def serialize(root): if not root: return \\"None\\" serializedTree = root.val serializedTree += \\",\\" + serialize(root.left) serializedTree += \\",\\" + serialize(root.right) return serializedTree def deserialize(serializedTree): q = deque(serializedTree.split(',')) def recur(q): val = q.popleft() if val == 'None': return None count = TreeNode(val) count.left = recur(q) count.right = recur(q) return count return recur(q)"},{"prompt":"What are the prerequisites for learning Python?","completion":"The prerequisites for learning Python are basic knowledge of Computer Science concepts, knowledge of some programming language like C/C++, understanding of Object-Oriented Programming, and familiarity with some text editors like Notepad++, Visual Studio Code, etc."},{"prompt":"Create a function which takes in a string and returns a dictionary that counts its character frequency.","completion":"def char_frequency(string): counts = {} for char in string: if counts.get(char) == None: counts[char] = 1 else: counts[char] += 1 return counts"},{"prompt":"w would you flatten a two dimensional list?","completion":"One way to flatten a two dimensional list is to use the itertools.chain() method. This method takes an iterable of iterables and returns a single iterable that contains all the elements of the original iterables."},{"prompt":"Explain why function scope is important in Python.","completion":"Function scope is important in Python because it allows for the scoping of data to the specific environment in which the function was invoked. This is critical for ensuring that code runs correctly and that variables are isolated to the environment in which the associated function was called. Scoping also helps promote the common programming practice of modularity and encapsulation, as it allows you to create \\"black-boxes\\" that separate the internal implementation of a function from the external environment. Scoping also helps to ensure that only the variables and data which are intended to be used within a function are actually used within it, as any variables which are out of scope will be inaccessible."},{"prompt":"What is the most efficient way to search for an element in a list?","completion":"The most efficient way to search for an element in a list is by using a binary search, which is a divide and conquer search algorithm that halves the search space after each iteration. Binary search is generally more efficient than linear search, as it has a time complexity of O(log n)."},{"prompt":"What do you need to do to print the element at the index 5 in an array?","completion":"To print the element at the index 5 in an array, you need to use the index accessor brackets, passing the index of the element that needs to be printed as an argument. For example, if the array is named \`arr\`, you can print the element at index 5 by writing \`cout << arr[5]\`;."},{"prompt":"Name a data structure that allows efficient insertion and deletion of elements at the beginning, middle and end.","completion":"A doubly-linked list is a data structure that allows efficient insertion and deletion of elements at the beginning, middle and end. It consists of nodes, which contain data and two references (or links) each pointing to the previous and/or next node in the linked list. By traversing the list via these links it is possible to insert and delete elements anywhere in the list in constant time."},{"prompt":"w can a mathematical function be represented in programming?","completion":"A mathematical function can be represented in programming by defining a function that takes in relevant inputs and returns the output of the mathematical function. For example, the Pythagorean theorem can be represented by a function that takes two parameters, the length of the two sides of a right triangle, and returns the length of the hypotenuse of the triangle."},{"prompt":"Explain the effect of calling the following JavaScript function on the list provided. list = [4,8,2,7]; function sort_ascending(list) { list.sort(function(a, b){return a-b}); }","completion":"The effect of calling the given JavaScript function on the list provided is that the list is re-arranged in ascending order. The sort() function sorts the elements in the list in ascending order according to each element's position relative to other elements in the list. The function has been provided a custom sorting function compares the two elements a and b in the list and return a negative, 0, or positive value, depending on whether a is less than, equal to, or greater than b. This is used to determine the order in which the elements are sorted."},{"prompt":"w can you find the maximum element in an array using the reduce() method?","completion":"The reduce() method can be used to find the maximum element in an array by applying a function to each element of the array that checks if the current element is greater than the previously seen maximum. This function can be used as the argument to the reduce() method and it will return the maximum value seen in the array."},{"prompt":"Name a function in Python which can be used to convert a list to a dictionary.","completion":"The function in Python which can be used to convert a list to a dictionary is the dict() function. This function takes in an iterable such as a list as an argument and returns a dictionary with the elements of the iterable as the keys and their index as the values."},{"prompt":"Create a Java class that defines a circle with two double data fields, radius and area.","completion":"public class Circle { private double radius; private double area; public Circle(double radius) { this.radius = radius; this.area = Math.PI * Math.pow(this.radius, 2); } public double getRadius() { return this.radius; } public double getArea() { return this.area; } }"},{"prompt":"Create an API using Django Rest Framework to retrieve data from a PostgreSQL database table.","completion":"import django from django.contrib.auth.models import User, Group from django.contrib import admin from rest_framework import viewsets, routers from myapp.models import MyModel class MyModelViewSet(viewsets.ModelViewSet): queryset = MyModel.objects.all().filter(is_active=True) serializer_class = MyModelSerializer router = routers.DefaultRouter() router.register(r'mymodel', MyModelViewSet)"},{"prompt":"Create a web page that prints out the return value of the following function call in the browser. function addTwoNumbers(a,b){ return a+b; }","completion":"<!DOCTYPE html> <html lang=\\"en\\"> <head> <meta charset=\\"UTF-8\\"> <title>My Page</title> </head> <body> <p>The result of addTwoNumbers(1,2) is <span id=\\"result\\"></span></p> <script> function addTwoNumbers(a,b){ return a+b; } var result = addTwoNumbers(1,2); document.getElementById(\\"result\\").innerHTML = result; <\/script> </body> </html>"},{"prompt":"mplement a function in Python that makes a copy of a list. my_list = [1, 2, 3, 4]","completion":"def copy_list(lst): new_lst = lst[:] return new_lst my_list = [1, 2, 3, 4] print(copy_list(my_list))"},{"prompt":"Write a CSS rule to set the background color to blue for all elements inside the page's body.","completion":"body { background-color: blue; }"},{"prompt":"mplement a function in Python that sorts a list in ascending order using Bubble Sort algorithm. my_list = [4, 6, 3, 9, 1]","completion":"def bubble_sort(list): for i in range(len(list)): for j in range(i+1, len(list)): if list[i] > list[j]: list[i], list[j] = list[j], list[i] return list my_list = [4, 6, 3, 9, 1] print(bubble_sort(my_list))"},{"prompt":"Update a MySQL table to increase the salary of all employees by 10%. Employess table contains the following columns: - id: Integer - name: Text - salary: Number","completion":"UPDATE Employees SET salary = salary * 1.1;"},{"prompt":"Create a function that takes in two numbers, a numerator and a denominator, and returns the result of the division expressed as a float. Numerator = 10, Denominator = 20","completion":"def float_division(num, denom): return float(num)/denom print float_division(Numerator, Denominator) Output: 0.5"},{"prompt":"Clean up the following function so that there are no redundant parentheses: def foo ( ( a ) , (b) ): return a + b","completion":"def foo(a,b): return a + b"},{"prompt":"Analyze the following code and tell us what it does. def my_function(x): while x > 10: x += 1 return x","completion":"The function takes an integer argument and checks if it is greater than 10. If the argument is greater than 10, the function increments the argument by 1. Finally, the function returns the modified argument."},{"prompt":"You need to design a calculator class with methods to perform basic calculations (add, subtract, multiply, divide, etc.).","completion":"class Calculator: def __init__(self): # initializing the calculator pass def add(self, a, b): return a + b def subtract(self, a, b): return a - b def multiply(self, a, b): return a * b def divide(self, a, b): return a / b"},{"prompt":"Given an array, arrange the elements in order. arr = [3, 7, 2, 1, 5]","completion":"arr.sort() Output: arr = [1, 2, 3, 5, 7]"},{"prompt":"Create a program to print out all prime numbers below 100.","completion":"# Function to print prime numbers def prime_numbers_below_100(): for num in range(2, 100): prime = True for i in range(2, num//2 + 1): if num % i == 0: prime = False break if prime: print(num, end=\\" \\") print(\\"Prime numbers below 100 are:\\") prime_numbers_below_100()"},{"prompt":"Design a data structure to store an undo history of size k.","completion":"class HistoryDataStruct: def __init__(self, k): self.history_size = k self.history = [] # list of (undo command, state of only that undo command) of size k self.current_state = None # Current state of the data structure def save_states(self, state): self.history.append((state, self.current_state)) if len(self.history) > self.history_size: self.history.pop(0) self.current_state = state def undo(self): command, prev_state = self.history[-1] self.history.pop(-1) self.current_state = prev_state return command"},{"prompt":"Construct a for-loop for calculating the factorial of a given number. Number: 5","completion":"def factorial(x): fact = 1 for i in range(1,x+1): fact = fact*i return fact print(factorial(5))"},{"prompt":"Construct a SQL query to select the names of all people aged 21 years or older. Table Schema: table_person(p_id int, p_name varchar, p_age int)","completion":"SELECT p_name FROM table_person WHERE p_age >= 21"},{"prompt":"Construct a regular expression for validating that a string only contains the letters a-z and A-Z.","completion":"^[a-zA-Z]+"},{"prompt":"JavaScript construct a function to obtain the number of digits in an integer","completion":"function getNumOfDigits(num) { return num.toString().length; }"},{"prompt":"Create a Fibonacci sequence of 5 numbers using Python.","completion":"fib_sequence = [0, 1, 1, 2, 3]"},{"prompt":"Create a linear regression model in R from the given datasets. Datasets: Advertising.csv","completion":"model = lm(sales ~ ., data = Advertising)"},{"prompt":"Define a function in Python to print a pattern of right-angled triangles of different sizes","completion":"def rightangle_triangles_pattern(n): pattern = \\"\\" for i in range(1,n+1): for j in range(1,i+1): pattern = pattern + \\" * \\" pattern = pattern + \\"n\\" print(pattern) rightangle_triangles_pattern(5)"},{"prompt":"Write an SQL query to return the names of workers whose salary is within the top 25% among all workers. Table Schema: table_workers(id int, name varchar, salary int)","completion":"SELECT name FROM table_workers WHERE salary >= (SELECT PERCENTILE_DISC(0.25) WITHIN GROUP (ORDER BY salary) FROM table_workers)"},{"prompt":"Extract the common key words from the given two strings using a Python script. String 1: This programming language is easy to learn String 2: Comparing to other languages, this language is simpler","completion":"common_key_words = [\\"language\\", \\"easy\\", \\"learn\\", \\"comparing\\", \\"other\\", \\"simpler\\"]"},{"prompt":"Design a UI layout in HTML and CSS for an About Us page.","completion":"<!DOCTYPE html> <html> <head> <title> About Us </title> <style> body { font-family: Arial; } .container { width: 90%; margin: auto; padding: 10px; } .about-us-header { font-size: 20px; } .about-us-content { font-size: 16px; } </style> </head> <body> <div class=\\"container\\"> <div class=\\"about-us-header\\"> <h1>About Us</h1> </div> <div class=\\"about-us-content\\"> <p> We are a team of experienced web developers and designers dedicated to providing you with high-quality web services. </p> </div> </div> </body> </html>"},{"prompt":"Construct a for-loop for finding all prime numbers between 1 and 50 in Python.","completion":"for num in range(1, 51): if num > 1: for i in range(2, num): if (num % i) == 0: break else: print(num)"},{"prompt":"Create a switch statement for printing out the day for a given number","completion":"switch (day) { case 1: console.log(\\"Monday\\"); break; case 2: console.log(\\"Tuesday\\"); break; case 3: console.log(\\"Wednesday\\"); break; ..... case 7: console.log(\\"Sunday\\"); break; default: console.log(\\"Invalid input\\"); break; }"},{"prompt":"Create a function in Python to rearrange the characters of each word in a given string. string = \\"Welcome to the world of Pytho","completion":"def rearrangeWord(string): temp_string = string.split(\\" \\") rearranged_string = [word[::-1] for word in temp_string] return \\" \\".join(rearranged_string) print(rearrangeWord(string))"},{"prompt":"You need to develop a Java function to get the count of a given character in a given string. string = \\"Hello World\\" character = 'l'","completion":"public static int CountChar(String string, char character) { int count = 0; for (int i=0; i<string.length(); i++) { if (string.charAt(i) == character) count++; } return count; }"},{"prompt":"Develop a script in Perl to sort an array. arr = (11, 12, 4, 15, 6)","completion":"@sorted_arr = sort {b <=> a} @arr; print \\"@sorted_arrn\\";"},{"prompt":"Write an SQL query to insert a new record with values 'name': 'Jack', 'age': 25, 'address': 'New York' into a table named 'Employees'.","completion":"INSERT INTO Employees (name, age, address) VALUES ('Jack', 25, 'NewYork');"},{"prompt":"Correct the indentation in the code below. def my_function(num): res=num*2 print(res)","completion":"def my_function(num): res = num * 2 print(res)"},{"prompt":"Given a string, remove all consecutive duplicates in the string. string = \\"aabbccddeeff","completion":"# Function to remove all consecutive duplicates in the string def remove_duplicates(string): # Empty string to store the result result = '' # Iterate over the string and keep track of the previous character seen prev = '' for char in string: # If the current character is not the same as the previous, then add it to the result if char != prev: result += char # Change the previous character seen to the current character prev = char # Return the result string return result # Test the function by printing the string without consecutive duplicates print(remove_duplicates(string))"},{"prompt":"Reverse the order of the given array without using inbuilt functions. nums = [12, 23, 34, 45]","completion":"# Function to reverse the order of the given array def reverse_array(nums): # Variable to store the result result = [] # Iterate over the provided array starting from the last element for i in range(len(nums) -1, -1, -1): # Append each number to the result array result.append(nums[i]) # Return the result array return result # Test the function by printing the array in reverse order print(reverse_array(nums))"},{"prompt":"Randomly rearrange the elements of the given array. nums = [12, 23, 34, 45]","completion":"# Function to randomly rearrange the elements of the given array import random def shuffle_array(nums): # Initialize a result array result = nums.copy() # Iterate over the array for i in range(len(nums)): # Generate a random index between 0 and the current index j = random.randrange(0, i + 1) # Swap elements at the current and random indices result[i], result[j] = result[j], result[i] # Return the result array return result # Test the function by printing the shuffled array print(shuffle_array(nums))"},{"prompt":"Write a code to find the longest substring of given string with length greater than or equal to 2 without repeating letters. string = \\"abcdexyeffgghh","completion":"# Function to find the longest substring of given string with length greater than or equal to 2 without repeating letters def find_longest_substring(string): # Variable to store the starting index of the substring start_index = 0 # Hashset to store characters in string visited = set() # Variables to store the length and the result substring length = 0 result = \\"\\" # Iterate over the string for i in range(len(string)): # If the character is already in the hashset, then remove characters until this character from the hashset if string[i] in visited: visited.remove(string[start_index]) start_index += 1 # Add the current character to the hashset visited.add(string[i]) # Update length and result if length is greater than before if length < i - start_index + 1: length = i - start_index + 1 result = string[start_index:i+1] # Return the result substring return result # Test the function print(find_longest_substring(string))"},{"prompt":"Generate a random user agent string.","completion":"import random user_agents = [ 'Mozilla/5.0 (Linux; Android 7.0; SM-G935P Build/NRD90M) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/63.0.3239.83 Mobile Safari/537.36', 'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/535.2 (KHTML, like Gecko) Chrome/15.0.874.121 Safari/535.2', 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_6) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/13.0 Safari/605.1.15', 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.102 Safari/537.36' ] def generate_user_agent(): return random.choice(user_agents) if __name__ == '__main__': print(generate_user_agent())"},{"prompt":"Convert the Python list below to a nested dictionary of countries and their populations. List = [[\\"United_Kingdom\\", 66_000_000],[\\"United_States\\", 323_000_000]]","completion":"countries = { \\"United_Kingdom\\": 66_000_000, \\"United_States\\": 323_000_000 }"},{"prompt":"Write a code to replace all the \\"A\\"s in the string with a \\"#\\". sentence = \\"Hello WAAorld","completion":"def replace_A(sentence): return sentence.replace('A','#') if __name__ == '__main__': print(replace_A(sentence))"},{"prompt":"Write a code to update the content on the web page with current time and date.","completion":"import datetime def update_web_page_time_date(): # Get the current time and date current_time = datetime.datetime.now().strftime(\\"%H:%M:%S %d-%m-%Y\\") # Update the content of the web page with open(\\"index.html\\", \\"w\\") as fh: fh.write(\\"<p>The current time and date is: {}<p>\\".format(current_time)) if __name__ == '__main__': update_web_page_time_date()"},{"prompt":"Write a code to add two numbers given as input. a = 1 b = 5","completion":"def add(a,b): return a + b if __name__ == '__main__': print(add(a,b))"},{"prompt":"Explain the difference between a parameter and an argument in Python.","completion":"A parameter is a variable in a method definition. When a method is called, the arguments are the data you pass into the method's parameters. Parameters are specified after the method name, inside the parentheses. They are used to pass values to a method. An argument is the actual value of this variable that gets passed to the method. Arguments are the data you pass into the method's parameters when you call the method. Parameters are like empty vessels that are waiting to be filled as a result of calling the method. Arguments are like the values that are placed inside the vessels. In a nutshell, Parameters are variable in the declaration of function. Arguments are the actual values of these variables that get passed to function."},{"prompt":"Find the first 5 numbers in the Fibonacci sequence.","completion":"The first 5 numbers in the Fibonacci sequence are 0, 1, 1, 2, 3."},{"prompt":"Given a pandas dataframe, identify the columns and rows of the table. import pandas as pd data = {'fruit': ['apple', 'banana', 'mango'], 'price': [2.99, 4.99, 5.99], 'quantity': [3, 5, 7]} df = pd.DataFrame(data)","completion":"The columns of the table are: fruit, price, and quantity. The rows of the table are: apple, banana, and mango."},{"prompt":"Explain the following Python statement. sorted_list = sorted(input_list)","completion":"This statement uses the sorted() function to sort the elements in the list 'input_list' in ascending order. The elements in the list will be compared using their default ordering and then sorted accordingly. The sorted list is returned and stored in a new list called 'sorted_list'."},{"prompt":"Given a string of characters, write a function in Python that returns only the uppercase characters. \\"Hello, World!","completion":"def get_upper(string): \\"\\"\\"Return only uppercase characters from given string.\\"\\"\\" return ''.join([c for c in string if c.isupper()])"},{"prompt":"Write a function in Python that takes a sentence and removes all spaces. \\"Hello, World!","completion":"def remove_spaces(sentence): \\"\\"\\"Remove all spaces from a given sentence.\\"\\"\\" return sentence.replace(\\" \\", \\"\\")"},{"prompt":"Write a function in Python that takes a string and splits it into a list of words. \\"Hello, World!","completion":"def split_string(text): \\"\\"\\"Split a given string into a list of words.\\"\\"\\" return text.split()"},{"prompt":"Write a function in Python that takes a 2D array and returns the product of all elements in it. [[1, 2],[3, 4]]","completion":"def product_of_elements(arr): \\"\\"\\"Return product of all elements in a given 2D array.\\"\\"\\" product = 1 for row in arr: for ele in row: product *= ele return product"},{"prompt":"Write a function in Python that takes two strings and returns a single string with the characters in alternating order. \\"Hello\\", \\"World!","completion":"def alternate_string(str1, str2): \\"\\"\\"Return a string with characters in alternating order from two given strings.\\"\\"\\" result = \\"\\" for i in range(min(len(str1), len(str2))): result += str1[i] + str2[i] result += str1[i + 1:] + str2[i + 1:] return result"},{"prompt":"Write a function in Python that takes an integer and returns a boolean value specifying whether the number is a prime number or not. 9","completion":"def is_prime(num): \\"\\"\\"Check if a number is a prime number.\\"\\"\\" if num <= 1: return False for i in range(2,num): if num % i == 0: return False return True"},{"prompt":"Write a function in Python that takes a list of strings and checks whether the list is empty or not. [\\"Hello\\", \\"World\\"]","completion":"def is_list_empty(list_str): \\"\\"\\"Check if a list is empty or not.\\"\\"\\" return len(list_str) == 0"},{"prompt":"Write a function in Python that takes a list of strings and checks if they are all the same length. [\\"Hello\\", \\"World\\"]","completion":"def is_all_same_length(list_str): \\"\\"\\"Check if all strings in a list are of same length.\\"\\"\\" return len(set(map(len, list_str))) == 1"},{"prompt":"Write a Python class to implement a linked list.","completion":"class Node: def __init__(self, data): self.data = data self.next = None class LinkedList: def __init__(self): self.head = None def push(self, data): node = Node(data) node.next = self.head self.head = node def pop(self): data = self.head.data self.head = self.head.next return data"},{"prompt":"Write a function that determines if a given substring is present in a string or not.","completion":"def is_substring_present(string, sub_string): for i in range(len(string)): if string[i : (i + len(sub_string))] == sub_string: return True return False"},{"prompt":"Edit the following code to return the elements in the reversed order. def reverse_list(lst): for i in range(0, len(lst)): temp = lst[i] lst[i] = lst[len(lst)-1-i] lst[len(lst)-1-i] = temp return l","completion":"def reverse_list(lst): for i in range(0, len(lst)//2): temp = lst[i] lst[i] = lst[len(lst)-1-i] lst[len(lst)-1-i] = temp return lst"},{"prompt":"What data structure can be used to convert the following list into a dictionary? [\\"apple\\", \\"pear\\", \\"mango\\", 100, 0.25, False]","completion":"The data structure that can be used to convert the given list into a dictionary is a list of tuples. The tuples will comprise of the key and the value in the dictionary, e.g. (\\"apple\\", \\"pear\\"), (100, 0.25), (False, True). This can then be converted into a dictionary by using the dict() constructor."},{"prompt":"Generate a random password with at least 8 characters that contain both upper and lowercase letters and numbers.","completion":"import string import random def generate_password(): char_set = string.ascii_uppercase + string.ascii_lowercase + string.digits return ''.join(random.sample(char_set, 8))"},{"prompt":"Write a function that takes two arguments, a number and a list, and returns the indices in the list that add up the number.","completion":"def two_sum(num, lst): indices = [] for i in range(len(lst)): for j in range(i+1, len(lst)): if lst[i] + lst[j] == num: indices.append([i,j]) return indices"},{"prompt":"Given an array of integers, create a program that finds the longest subarray with a sum of 0.","completion":"def longest_sum_zero(arr): left = 0 max_len = 0 sum = 0 hash_map = dict() for right in range(len(arr)): sum += arr[right] if sum == 0: max_len = max(max_len, right - left + 1) if sum in hash_map: left = max(left, hash_map[sum] + 1) max_len = max(max_len, right - left + 1) hash_map[sum] = right return max_len"},{"prompt":"Return the index of the value if it is present in the list or -1 if it is not present.","completion":"def search(lst, val): for i in range(len(lst)): if lst[i] == val: return i return -1"},{"prompt":"Count the number of characters in a sentence that begin with a consonant.","completion":"def count_consonants(sentence): consonants = 'bcdfghjklmnpqrstvwxyz' count = 0 for ch in sentence: if ch.lower() in consonants: count += 1 return count"},{"prompt":"Classify the following word as a noun, verb, adjective or adverb. Quickly","completion":"Adverb."},{"prompt":"Given a list of numbers, write a program which partitions the list into two parts, such that the sum of the elements in the first part exceeds the sum of the elements in the second part.","completion":"def partition(lst): left_sum, right_sum = 0, sum(lst) for i in range(len(lst)-1): left_sum += lst[i] right_sum -= lst[i] if left_sum > right_sum: return lst[:i+1], lst[i+1:] return None"},{"prompt":"Calculate the sum of all numbers in the given array that are multiples of the given number. numbers=[2, 4, 6, 8, 10, 12] num=3","completion":"def sum_multiples(lst, n): return sum([i for i in lst if i % n == 0])"},{"prompt":"Design a function which takes a parameter and returns the sum of its cube of its digits","completion":"def sum_of_cube_of_digits(num): sum = 0 while (num > 0): digit = num % 10 sum += digit**3 num //= 10 return sum"},{"prompt":"w can you sort a list of dictionaries by values of the dictionary in Python?","completion":"def sort_dict_by_values(dict_list): return sorted(dict_list, key=lambda k: k['value'])"},{"prompt":"Write code to implement a priority queue in Python.","completion":"class PriorityQueue: def __init__(self): self.queue = [] # Create the enqueue(data) method to add data inside the queue def enqueue(self, data): self.queue.append(data) # Create the dequeue() method to remove data from the queue def dequeue(self): if self.queue: min_item = min(self.queue) self.queue.remove(min_item) return min_item else: return None"},{"prompt":"w can you print a string character by character in Python?","completion":"def char_by_char(string): for char in string: print(char)"},{"prompt":"Suggest a completion for the following code which will print the sum of all digits in the given number. num = 10121 total = 0 while num > 0","completion":"num = 10121 total = 0 while num > 0: digit = num%10 total += digit num //= 10 print(total)"},{"prompt":"w can you generate a random array of 10 integers between 1 and 100?","completion":"import random def generate_random_array(): array = [] for i in range(10): array.append(random.randint(1,100)) return array"},{"prompt":"Write a JavaScript code snipplet that append the contents of one array to another array. let arr1 = [1,2,3]; let arr2 = [4,5,6];","completion":"let arr1 = [1,2,3]; let arr2 = [4,5,6]; arr2.push(...arr1); // arr2 is [4,5,6,1,2,3]"},{"prompt":"Write a code snipplet that computes the sum of numbers between 1 and 100.","completion":"let sum = 0; for(let i = 1; i <= 100; i++) { sum += i; }"},{"prompt":"Write an SQL query to group the results of a SELECT statement according to the value of a specific column. SELECT name, age FROM employees;","completion":"SELECT name, age FROM employees GROUP BY age;"},{"prompt":"Write a Python function to convert a dictionary into a list of tuples. dictionary = { \\"name\\": \\"John\\", \\"age\\": 36 }","completion":"def dict_to_tuple(dictionary): return [(key, value) for key, value in dictionary.items()]"},{"prompt":"Explain what an object-oriented programming language is.","completion":"Object-oriented programming (OOP) is a programming language model in which programs are organized around objects rather than actions and data rather than logic. OOP languages allows the programmer to think in terms of classes and objects which makes it easier to maintain and modify existing code. In an OOP language, objects are collections of related variables and methods, and classes are templates of objects. Classes allow objects of the same type to be created with the same properties, while still allowing flexibility as new objects can be created with different properties."},{"prompt":"Write an R script that performs linear regression to predict a response variable.","completion":"# load the data data <- read.csv(\\"data.csv\\") # fit the model model <- lm(formula = response ~ predictor, data = data) # view the results summary(model)"},{"prompt":"dentify and explain the purpose of a Turing Test.","completion":"A Turing Test is a measurement of a machine's ability to exhibit intelligent behaviour equivalent to, or indistinguishable from, that of a human. The test was proposed by Alan Turing in 1950 as a way of determining whether a machine is capable of intelligent thought. The Turing Test consists of a human evaluator interacting with both a human subject and a machine by asking questions and judging the responses. If the evaluator cannot determine the difference between the machine and the human subject, then the machine has passed the test. The purpose of the Turing Test is to provide a reliable method for determining if a machine is able to think and act intelligently."},{"prompt":"Convert the following English sentence into a Python function definition: \\"Prints a string on the screen\\".","completion":"def printString(string): print(string)"},{"prompt":"Describe how the for loop works in Python?","completion":"A for loop in Python is a type of looping construct that is used to iterate over a sequence of objects including strings, lists, tuples, dictionaries, and sets. A for loop has three components, the iterator (variable), sequence, and statements. With each iteration, the iterator is assigned the value of the next element in the sequence and the statements are executed. When all the elements in the sequence have been exhausted, the loop terminates."},{"prompt":"Write a JavaScript function to generate a random strong password with length 8-10.","completion":"function generatePassword(){ var charSet = \\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789!@#%^&*()_+-=\\"; var passwordLength = Math.floor(Math.random() * (10 - 8 + 1)) + 8; var password = ''; for(let i = 0; i < passwordLength; i++){ var randomChar = charSet[Math.floor(Math.random() * charSet.length)]; password += randomChar; } return password; }"},{"prompt":"Write a C program to implement a simple calculator that adds two numbers.","completion":"#include <stdio.h> int main() { double x, y, sum; printf(\\"Enter two numbers: \\"); scanf(\\"%lf%lf\\", &x, &y); sum = x + y; printf(\\"Sum of the entered numbers: %lf\\", sum); return 0; }"},{"prompt":"Explain how Python List Comprehensions work?","completion":"Python List Comprehensions allow users to quickly build a list from another list or an iterable. List Comprehensions use a syntax that consists of an expression followed by a ‘for’ statement and then zero or more ‘for’ or ‘if’ clauses. The expression is evaluated once for each item in the list. List Comprehensions can be used to perform filtering and mapping operations over the lists, or any other iterable. The output is a new list that can be formed from items in the original list, or any of its combinations."},{"prompt":"Write a MySQL query to display the name and total salary of employees who earn more than the average salary of department 10. Table \\"Employees\\": Name | Department | Salary ------ | ---------- | ------ John | 10 | 20000 David | 10 | 32000 Anne | 10 | 15000 Jane | 11 | 26000","completion":"SELECT Name, SUM(Salary) AS Total_Salary FROM Employees WHERE Department = 10 AND Salary > ( SELECT AVG(Salary) FROM Employees WHERE Department = 10 ) GROUP BY Name;"},{"prompt":"Write a SQL query to find the mean and median of all salaries of employees. Table \\"Employees\\": Name | Salary ---- | ------ John | 20000 David| 32000 Anne | 15000 Jane | 26000","completion":"SELECT AVG(Salary) as Mean, PERCENTILE_DISC(0.5) WITHIN GROUP(ORDER BY Salary) OVER() as Median FROM Employees"},{"prompt":"Write a script to delete elements that appear twice or more from a list. [3,6,3,7,2,6]","completion":"def delete_duplicate(lst): new_lst = [] for i in lst: if i not in new_lst: new_lst.append(i) return new_lst lst = [3,6,3,7,2,6] new_lst = delete_duplicate(lst) print(new_lst)"},{"prompt":"Name a data structure to store a large set of strings efficiently.","completion":"The best data structure to store a large set of strings efficiently is a hash table. A hash table uses a hash function to map a set of strings to unique indices in an array, which allows for constant time lookups and operations."},{"prompt":"w can a string be encoded in base64?","completion":"A string can be encoded in base64 by using the string's bytes as input to the base64 encoding algorithm. The base64 encoding algorithm works by taking 3 bytes of input data and converting them into 4 bytes of output data. Each of these 4 bytes represent 6 bits of the original string, which is represented by 4 characters in the base64 string."},{"prompt":"Generate the following string from a list. [1, 2, 3, 4]","completion":"def generate_string(lst): s = \\"\\" for i in lst: s+=str(i) return s lst = [1, 2, 3, 4] s = generate_string(lst) print(s)"},{"prompt":"Construct a loop to display each character in a string one at a time. Hello World!","completion":"def display_char(s): for char in s: print(char) s = \\"Hello World!\\" display_char(s)"},{"prompt":"Design an algorithm to check for missing numbers in an array of size n.","completion":"def find_missing(nums): count = 1 for num in nums: if not count in nums: return count count += 1 return None"},{"prompt":"Create an algorithm to find the longest substring of a given string with distinct characters. Given string = \\"abcabcabc","completion":"def find_longest_substring(string): max_length = 0 for i in range(len(string)): seen_chars = set() length = 0 for j in range(i, len(string)): if string[j] not in seen_chars: seen_chars.add(string[j]) length += 1 else: break max_length = max(max_length, length) return max_length"},{"prompt":"Create a C++ program that finds the most common element in the given input array. Given array = [2, 4, 8, 3, 4, 4, 6, 2, 4, 9]","completion":"#include <bits/stdc++.h> using namespace std; int most_common(int arr[], int n) { unordered_map<int, int> hash; // store the counts of all elements for (int i = 0; i < n; i++) hash[arr[i]]++; // traverse through the map and // find out the maximum frequency int max = 0, res = -1; for (auto i : hash) { if (max < i.second) { res = i.first; max = i.second; } } return res; } int main() { int arr[] = { 2, 4, 8, 3, 4, 4, 6, 2, 4, 9 }; int n = sizeof(arr) / sizeof(arr[0]); cout << most_common(arr, n) << endl; return 0; }"},{"prompt":"Create a regular expression to match a valid phone number (ex. 123-456-7890).","completion":"d{3}-d{3}-d{4}"},{"prompt":"Design a function for creating an array with n elements and each element with the value of 0.","completion":"def createArray(n): return [0] * n"},{"prompt":"What is the maximum depth of a binary tree of size n?","completion":"The maximum depth of a binary tree of size n is log2(n)."},{"prompt":"Convert a given array of numbers into a square matrix. Given array = [1, 2, 3, 4]","completion":"def arrayToMatrix(array): n = int(len(array)**0.5) matrix = [] for i in range(n): matrix.append(array[i*n:(i+1)*n]) return matrix"},{"prompt":"Write a code snippet that prints out the number of times each character appears in a given string. Given string = \\"welcome","completion":"def char_frequency(string): freq = {} for c in string: if c in freq: freq[c] += 1 else: freq[c] = 1 for c, count in freq.items(): print('{0} : {1}'.format(c, count))"},{"prompt":"Design an algorithm that prints all the permutations of a given string.","completion":"def generate_permutations(string): if len(string) == 1: return [string] all_perms = [] for i, c in enumerate(string): other_chars = string[:i] + string[i+1:] other_perms = generate_permutations(other_chars) for perm in other_perms: all_perms.append(c + perm) return all_perms"},{"prompt":"Write a Java program for binary search.","completion":"public static int binarySearch(int[] arr, int target) { int left = 0; int right = arr.length - 1; while (left <= right) { int mid = left + (right - left)/2; if (arr[mid] == target) { return mid; } else if (arr[mid] < target) { left = mid + 1; } else { right = mid - 1; } } return -1; }"},{"prompt":"Create a web page with the headline \\"Welcome to Python programming\\".","completion":"<!DOCTYPE html> <html> <head> <title>Welcome to Python Programming</title> </head> <body> <h1>Welcome to Python Programming</h1> </body> </html>"},{"prompt":"Write a function that takes a list as a parameter and returns only the unique elements in the given list. [2, 4, 5, 2, 4, 8]","completion":"def get_unique_elements(lst): return list(set(lst)) unique_list = get_unique_elements([2, 4, 5, 2, 4, 8]) print(unique_list) # output the list with only unique elements"},{"prompt":"Create a variable that contains a tuple of integers.","completion":"my_tuple = (1, 2, 3, 4, 5)"},{"prompt":"Create a matrix of zeros with shape 4x3 using the NumPy library.","completion":"import numpy as np matrix = np.zeros((4,3)) print(matrix) # Output the matrix of zeros"},{"prompt":"Write a code to send a message \\"Hello World!\\" using the Twilio API.","completion":"from twilio.rest import Client # Your Account SID from twilio.com/console account_sid = \\"XXXXXXXXXXXXXXXXXXXXXXX\\" # Your Auth Token from twilio.com/console auth_token = \\"XXXXXXXXXXXXXXXXXXXXXXX\\" client = Client(account_sid, auth_token) message = client.messages.create( to=\\"+123456789\\", from_=\\"+0987654321\\", body=\\"Hello World!\\") print(message.sid) # Output the message id"},{"prompt":"Construct a for loop that prints out every third element of a given array. Array: [1, 2, 3, 4, 5, 6, 7]","completion":"for i in range(0, len(array), 3): print(array[i])"},{"prompt":"Develop a function to calculate the total amount of the order for an online store. ProductA: 15 ProductB: 10 PriceForProductA: 5 PriceForProductB: 10","completion":"def calculate_total_amount(products, prices): total_amount = 0 for i in range(len(products)): total_amount = total_amount + (products[i] * prices[i]) return total_amount"},{"prompt":"Calculate the roots of a quadratic equation given its coefficients. Coefficients: 4, 3, 1","completion":"# Calculate the roots of the given equation def quadratic_roots(a, b, c): # Calculate the discriminant discriminant = b**2 - 4*a*c # Calculate root1 and root2 root1 = (-b + discriminant**0.5)/(2*a) root2 = (-b - discriminant**0.5)/(2*a) return root1, root2"},{"prompt":"Convert the following floating-point number to its binary representation. Number: 12.25","completion":"1100.01"},{"prompt":"Create a Python dictionary to store employee details. Name: John Doe Age: 25 Role: Sales Manager","completion":"employee = { 'name': 'John Doe', 'age': 25, 'role': 'Sales Manager', }"},{"prompt":"Create an HTML page to display the employee details. Employee Name: Oliver Smith Age: 35 Role: Marketing Executive","completion":"<html> <head> <title>Employee Details</title> </head> <body> <h1>Employee Details</h1> <p>Name: Oliver Smith</p> <p>Age: 35</p> <p>Role: Marketing Executive</p> </body> </html>"},{"prompt":"Create a Hashtable in Java to store a list of key-value pair.","completion":"import java.util.Hashtable; public class HashtableExample { public static void main(String args[]) { Hashtable<Integer, String> ht = new Hashtable<Integer, String>(); ht.put(1, \\"Code\\"); ht.put(2, \\"Learn\\"); ht.put(3, \\"Project\\"); ht.put(4, \\"University\\"); System.out.println(\\"Hashtable: \\" + ht); } }"},{"prompt":"Using JavaScript, create an algorithm to check if an array of numbers is sorted in ascending order.","completion":"function isSortedAscending(arr) { for (let i = 0; i < (arr.length - 1); i++) { if (arr[i] > arr[i + 1]) { return false; } } return true; }"},{"prompt":"Write a PHP program to convert a string to a URL safe string.","completion":"<?php function toUrlSafeString(str) { str = strtolower(str); str = preg_replace('/s/', '-', str); str = preg_replace('/W/', '', str); return str; }"},{"prompt":"Write a code to print all numbers between a given range in the format shown below Start = 1; End = 8;","completion":"for i in range(1, 9): print(i, end=' ')"},{"prompt":"Create a function to perform insertion sorting list = [5, 3, 8, 7, 1]","completion":"def insertion_sort(list): for i in range(1, len(list)): key = list[i] j = i -1 while j >=0 and list[j] > key: list[j+1] = list[j] j -= 1 list[j+1] = key return list"},{"prompt":"Write a code to compute the XOR of two bits A = 1; B = 0;","completion":"def xor(A, B): if (A == B): return 0 else: return 1"},{"prompt":"Write a function to implement the sequential search algorithm arr = [8, 2, 5, 6, 9]","completion":"def sequential_search(arr, x): for i in range(len(arr)): if arr[i] == x: return i return -1"},{"prompt":"Rewrite this program to use an embedded loop instead of recursion: def fibonacci(num): if num == 0: return 0 elif num == 1: return 1 else: return fibonacci(num-1) + fibonacci(num-2)","completion":"def fibonacci(num): first = 0 second = 1 for i in range(num): temp = first first = second second = temp + second return first"},{"prompt":"You are given a string and you want to sort all characters in the string alphabetically.","completion":"sorted_string = ''.join(sorted(string))"},{"prompt":"Create a SQL table with the following schema: id (integer), name (string), city (string).","completion":"CREATE TABLE myTable ( id INTEGER, name VARCHAR(255), city VARCHAR(255) );"},{"prompt":"You are given a string and you want to count the number of words in it.","completion":"def word_count(str): return len(str.split(' '))"},{"prompt":"Given a matrix of size NxM, make a code that prints the transpose of the matrix. [[12,7],[4,5],[3,8]]","completion":"[[12,4,3],[7,5,8]]"},{"prompt":"Construct a code to detect if a character is an uppercase letter or not.","completion":"def is_uppercase(char): if (char >= 'A' and char <= 'Z'): return True else: return False"},{"prompt":"Use regular expression to match two strings.","completion":"import re def match_strings(string1, string2): if re.search(string1, string2): print(\\"Match Found\\") else: print('No Match Found')"},{"prompt":"Generate a code to create a Pyramid of stars with the given height.","completion":"def print_pyramid(height): for row in range(1, height + 1): for col in range(1, row + 1): print('*', end=\\" \\") print('n')"},{"prompt":"mplement an algorithm with the input that calculates the greatest common factor of two numbers. 8, 32","completion":"def greatestCommonFactor(num1, num2): while num2 != 0: temp = num2 num2 = num1 % num2 num1 = temp return num1 gcf = greatestCommonFactor(8, 32) print(gcf) # Output: 8"},{"prompt":"Construct a SQL command that selects a row from a table by its ID. table name: Employee","completion":"SELECT * FROM Employee WHERE id = '5';"},{"prompt":"Override the equals method for a Java class named Point. class Point { int x; int y; }","completion":"public class Point { int x; int y; @Override public boolean equals(Object obj) { if (obj instanceof Point) { Point other = (Point) obj; return x == other.x && y == other.y; } return false; } }"},{"prompt":"Provide the big-O complexity for a binary search Algorithm.","completion":"The big-O complexity of a binary search Algorithm is O(log n). This is because the algorithm halves the input size with every iteration, so it only takes log n iterations to finish."},{"prompt":"Write a function to print the value at a given index in a given Array. testArray = [1, 2, 3, 4, 5] index = 2","completion":"def printIndex(testArray, index): print(testArray[index]) testArray = [1, 2, 3, 4, 5] index = 2 printIndex(testArray, index) # Output: 3"},{"prompt":"Construct a SQL query to get the sum of all the purchased item from a given table. table name: Purchase","completion":"SELECT SUM(amount) FROM Purchases;"},{"prompt":"Write a function in Python that takes two numbers and swaps the values of the two numbers.","completion":"def swap(x, y): temp = x x = y y = temp x = 10 y = 5 swap(x, y) print(\\"x =\\", x, \\"y =\\", y) # Output: x = 5 y = 10"},{"prompt":"Write a MIPS code that adds two numbers and stores the result in a given memory address. num1 = 10 num2 = 15 memory address = t0","completion":"addi t1, zero, 10 #store num1 in t1 addi t2, zero, 15 #store num2 in t2 add t0, t1, t2 #add num1 and num2 and store result in t0 sw t0, (memory address) #store result in specified memory address"},{"prompt":"Write an SQL Query to print a list of all employees who have a higher salary than their managers.","completion":"SELECT e1.name AS Employee, e2.name AS Manager, e1.salary AS Employee_Salary, e2.salary AS Manager_Salary FROM employee e1 JOIN employee e2 ON e1.managerid = e2.employeeid WHERE e1.salary > e2.salary;"},{"prompt":"Write a PHP function to delete a record from a database table. Table Name: details Key: user_id value : 10","completion":"// Delete user with user_id 10 from table details function deleteRecord(table, key, value) { query = \\"DELETE FROM table WHERE key = ?\\"; conn = connectToDatabase(); if(conn->prepare(query)->execute([value])) { return true; } else { return false; } }"},{"prompt":"Write a CSS style to give a border of 3 pixels to the HTML element.","completion":"html { border: 3px solid black; }"},{"prompt":"Write Swift code to get the sum of all the numbers from 1 to 1000.","completion":"func sumUpToNumber(number: Int) -> Int { var sum = 0 for i in 1...number { sum += i } return sum } let sum = sumUpToNumber(number: 1000) print(sum)"},{"prompt":"Write a Ruby script to delete duplicates from an array. [1,2,2,3,3,4,5]","completion":"def delete_duplicates(arr) arr.uniq end arr = [1,2,2,3,3,4,5] new_arr = delete_duplicates(arr) p new_arr # => [1, 2, 3, 4, 5]"},{"prompt":"Create the following function that parses a valid IP address from a string and returns the address string without delimiters and periods. String = ‘192.168.137.8’","completion":"def parse_ip_address(ip_string): ip_list = ip_string.split(\\".\\") ip_str = \\"\\".join(ip_list) return ip_str if __name__ == '__main__': ip_str = parse_ip_address(\\"192.168.137.8\\") print(ip_str)"},{"prompt":"Create a function to format a given phone number “(123) 456-7890” and output a string with canonical format of “+11234567890”. Phone number: (123) 456-7890","completion":"def format_phone_number(number): parts = number.split('-') digits = [] for part in parts: for char in part: if char.isdigit(): digits.append(char) return '+1' + ''.join(digits) if __name__ == '__main__': number = '(123) 456-7890' canon_number = format_phone_number(number) print(canon_number)"},{"prompt":"Produce a SQL command that retrieves the maximum and minimum values of an attribute from a table. Table name = 'mytable' Attribute name = 'myattribute'","completion":"SELECT MAX(myattribute), MIN(myattribute) FROM mytable"},{"prompt":"Create two sets and find the intersection between them. Set A: [1, 2, 3, 4] Set B: [2, 4, 6, 8]","completion":"set_a = set([1, 2, 3, 4]) set_b = set([2, 4, 6, 8]) intersection = set_a.intersection(set_b) # intersection is the set {2, 4}"},{"prompt":"Given a single linked list, reverse it in place. Head -> 1 -> 2 -> 3 -> 4 -> 5 -> None","completion":"Node* reverse(Node* head) { Node* current = head; Node* prev = NULL; Node* next = NULL; if (current == NULL) return NULL; while (current != NULL) { next = current->next; current->next = prev; prev = current; current = next; } head = prev; return head; }"},{"prompt":"Using Pandas, count how many rows have a value of \\"United States\\" in the \\"Country\\" column. Data: Country State United States New York Canada Ontario United Kingdom London United States Califor","completion":"import pandas as pd df = pd.DataFrame({'Country':['United States', 'Canada', 'United Kingdom', 'United States'], 'State':['New York', 'Ontario', 'London', 'California']}) count = df[df['Country'] == 'United States'].shape[0] print(count) # Output: 2"},{"prompt":"Extract a list of all the keys from a given dictionary. dict = {'Name': 'John', 'Age': 10, 'Gender': 'Male'}","completion":"key_list = list(dict.keys()) # Output: ['Name', 'Age', 'Gender']"},{"prompt":"Create a regular expression to match phone numbers in the following format: 0000000000","completion":"import re regex = '^d{10}'"},{"prompt":"Given an array of positive integers, remove all the duplicates. List1 = [1, 2, 3, 3, 4, 4, 2]","completion":"List1 = list(set(List1)) # Output: List1 = [1, 2, 3, 4]"},{"prompt":"Create a method to build a dictionary that contains all even numbers from the given list. [2, 3, 7, 8, 10, 11]","completion":"def build_even_dict(numbers): even_dict = {key: value for key, value in enumerate(numbers) if value % 2 == 0} return even_dict"},{"prompt":"Make an array containing all elements of the given list that are even. [43,55,12,23,44]","completion":"even_array = [i for i in [43, 55, 12, 23, 44] if i % 2 == 0]"},{"prompt":"Write a JavaScript code to print out the multiplication table of 3.","completion":"for (let i = 1; i <= 10; i++) { console.log(\`3x{i}={3*i}\`); }"},{"prompt":"Create a class in Java for a rectangle shape with length and breadth as attributes.","completion":"public class Rectangle { int length; int breadth; Rectangle(int l, int b) { length = l; breadth = b; } int calculateArea() { return length * breadth; } }"},{"prompt":"Make a function in Python which calculates the covariance between two given lists. list1: [1, 2, 3, 4, 5] list2: [3, 4, 2, 4, 5]","completion":"def cov(list1, list2): mean1 = sum(list1)/len(list1) mean2 = sum(list2)/len(list2) total = 0 for i in range(len(list1)): total += (list1[i] - mean1)*(list2[i] - mean2) return total/len(list1)"},{"prompt":"Write a formula in Excel to calculate the total cost of a trip given the cost and quantity. Cost of hotel: 50 Quantity of rooms: 2","completion":"=50*2"},{"prompt":"Write a CSS style to make a <div> element of width 500px and height 400px.","completion":"div { width: 500px; height: 400px; }"},{"prompt":"Generate a SQL query to retrieve all records from the USERS table where the gender is 'Male'.","completion":"SELECT * FROM USERS WHERE gender = 'Male';"},{"prompt":"Create a method in JavaScript that takes a comma-separated list of values as an argument and returns an array containing those values.","completion":"function createArray(string) { return string.split(','); }"},{"prompt":"Write an assembly language code to find the sum of two values stored in memory.","completion":"LOAD value1 ADD value2 STORE result"},{"prompt":"What is the purpose of this JavaScript code? const studentNames = [\\"John\\", \\"Paul\\", \\"Ringo\\", \\"George\\"]; let nameString = studentNames.reduce((string, name) => { return string + name + \\",\\"; }, 'All students: ');","completion":"The purpose of this JavaScript code is to create a comma-separated string from an array of strings. The code uses the reduce function to concatenate the strings in the array with a comma and create a new string beginning with the string 'All students: '. The resulting string is stored in the nameString variable."},{"prompt":"Modify the following code to return the sum of an array let numbers = [1, 2, 3]","completion":"let numbers = [1, 2, 3] function sumArray(arr) { let total = 0; for(let i = 0; i < arr.length; i++) { total += arr[i]; } return total; } console.log(sumArray(numbers));"},{"prompt":"ere's some Python code that finds the smallest number in a list. Edit it to find the greatest number in a list. # list of numbers list = [20, 10, 4, 45, 99] # printing the smallest number print(min(list))","completion":"# list of numbers list = [20, 10, 4, 45, 99] # printing the greatest number print(max(list))"},{"prompt":"Write a for loop that prints out the series: 0, 4, 8, 12","completion":"for i in range(0, 13, 4): print(i)"},{"prompt":"Convert the following string to an array of characters in Java. String str = \\"Hello World!","completion":"char[] array = str.toCharArray();"},{"prompt":"Modify the following program to print the number of occurrences of the character e in string s. String s = \\"Hello World!","completion":"String s = \\"Hello World!\\"; int count = 0; for (int i=0; i < s.length(); i++) { if (s.charAt(i) == 'e') { count++; } } System.out.println(\\"The number of occurrences of character 'e' in the string is: \\" + count);"},{"prompt":"Write a function that finds the sum of two digits in C.","completion":"int sum(int x, int y) { return x + y; }"},{"prompt":"What data structure can be used to store words of the same length?","completion":"A data structure that can be used to store words of the same length is a Trie. A Trie is a tree-based data structure which stores characters of strings as nodes in a tree. The advantage of using a Trie for storing words of the same length is that it is an efficient data structure for retrieving words quickly. Furthermore, its storage space is optimized as it uses only the required amount of memory for storing words, regardless of the length of the words."},{"prompt":"So you need to design a class for a Linked List.","completion":"class ListNode: def __init__(self, data): self.data = data self.next = None class LinkedList: def __init__(self): self.head = None def is_empty(self): return self.head == None # Other method implementations go here"},{"prompt":"You need to read a code and check if it uses the best practices for writing code. Output true if it does, false if it does not. def quick_sort(arr): if len(arr) < 2: return arr else: pivot = arr[0] less = [i for i in arr[1:] if i <= pivot] greater = [i for i in arr[1:] if i > pivot] return quick_sort(less) + [pivot] + quick_sort(greater)","completion":"true"},{"prompt":"Create a dictionary using comprehension technique in Python. original_dict = {'a':1, 'b':2, 'c':3, 'd':4}","completion":"new_dict = {key: value ** 2 for key, value in original_dict.items()}"},{"prompt":"Create a list of all numbers that are divisible by 5 between 0 and 25.","completion":"list_divisible_by_5 = [x for x in range(0, 26) if x%5 == 0]"},{"prompt":"Generate a random array of size n in Python. Size of array: 5","completion":"import numpy as np size = 5 # Create an array of size 5 arr = np.random.randint(100, size = (size)) print (arr)"},{"prompt":"Create a loop to print the numbers in reverse order from 5 to 2.","completion":"for i in range(5, 1, -1): print(i)"},{"prompt":"Given two parameters a and b, return a substring starting from index a and ending at index b. String: \\"Neural networks are powerful algorithms\\" Parameters: a = 0, b = 7","completion":"Neural n"},{"prompt":"Using Python, write a piece of code to convert Celsius temperatures to Fahrenheit. Celsius: 20","completion":"Fahrenheit = 68"},{"prompt":"Given a linked list, swap the positions of the two nodes in the list. Linked List: 1->2->3->4->5","completion":"Linked List: 1->4->3->2->5"},{"prompt":"Write a method to print the first n numbers in the Fibonacci series. n = 5","completion":"1 1 2 3 5"},{"prompt":"Given a string, you need to write a regular expression that finds all the words that start with a caret (^) symbol. String: \\"^awesome ^data ^scoring","completion":"^awesomes|^datas|^scorings"},{"prompt":"Construct a SQL query to group students by the grade they got, and calculate the average score.","completion":"SELECT grade, AVG(score) FROM students GROUP BY grade"},{"prompt":"Find the most common word in the following paragraph and replace it with a synonym. The quick brown fox jumps over the lazy dog.","completion":"The nimble brown fox leaps over the sluggish dog."},{"prompt":"Compute the GCD of two numbers without using any built-in functions from your language. Number1: 9 Number2: 6","completion":"3"},{"prompt":"Create a user-defined function that prints out a message when called. message = \\"Hello, World","completion":"def print_message(message): print(message) print_message('Hello, World')"},{"prompt":"Create a Ruby script to output the first 20 fibonacci numbers.","completion":"def fibonacci(limit) n1, n2 = 0, 1 puts \\"Fibonacci series upto #{limit}\\" while n1 <= limit print \\"#{n1}, \\" n1, n2 = n2, n1 + n2 end end fibonacci(20)"},{"prompt":"Reduce the following equation by applying the distributive property. 3x(y + 4)","completion":"3xy + 12x"},{"prompt":"Calculate the result of the following expression: 63 × 42","completion":"2646"},{"prompt":"Using CSS, apply the following style to a paragraph element. Make the font size 200%, the font color red, and the font family 'Montserrat'.","completion":"p { font-size: 200%; color: red; font-family: 'Montserrat'; }"},{"prompt":"Create a function using Ruby that takes in a string, and returns a new string that only consists of the vowels from the original string. \\"Testing123","completion":"def only_vowels(str) str.gsub(/[^aeiou]/i, '') end"},{"prompt":"Write a function in PHP that takes in two arrays, and returns a new array that contains only elements present in both arrays. [1, 3, 4], [2, 4, 6]","completion":"function intersect_arrays(arr1, arr2) { return array_intersect(arr1, arr2); }"},{"prompt":"Create a random password generator in Python that outputs 10 characters of random alphanumeric characters.","completion":"import random import string def random_password_generator(): charsds = string.ascii_letters + string.digits password = ''.join(random.choice(charsds) for i in range(10)) return password print(random_password_generator())"},{"prompt":"Return the maximum number from a given array of integers. [6,4,7,1,3]","completion":"arr = [6,4,7,1,3] #Find max number def find_max(arr): max_num = arr[0] for num in arr: if num > max_num: max_num = num return max_num result = find_max(arr) print(\\"The maximum number is:\\", result)"},{"prompt":"Write a code in Python to convert the following string to an integer. \\"12345","completion":"string = \\"12345\\" number = int(string) print(number)"},{"prompt":"Write a Python code to count the number of uppercase characters in the given string. \\"Hello World","completion":"string = \\"Hello World\\" count = 0 for char in string: if char.isupper(): count += 1 print(\\"The number of uppercase characters are:\\", count)"},{"prompt":"Suggest a better way to compare two strings in Python.","completion":"Using Python's Standard Library function \`difflib.SequenceMatcher\` is a more efficient way to compare two strings. This function uses an algorithm to compute the longest common subsequence between the two strings which is then used to calculate the similarity score of the given strings."},{"prompt":"w could we access the third element of a list in Python?","completion":"The third element of a list can be accessed using the index value 2, as Python indexing starts from 0. For example, if x is a list containing the elements [1, 2, 3], x[2] will return the third element of the list i.e. 3."},{"prompt":"Write an SQL statement that creates a table named 'students' with four columns: \\"name\\", \\"id\\", \\"major\\" and \\"age\\".","completion":"CREATE TABLE students ( name VARCHAR(50) NOT NULL, id INT NOT NULL, major VARCHAR(50) NOT NULL, age INT NOT NULL );"},{"prompt":"Write a C++ program that takes two 2D arrays and compares them for equality. arr1 = [[1,2], [2,4]] arr2 = [[1,2], [2,4]]","completion":"#include <iostream> #include <array> bool areEqual (std::array<std::array<int,2>,2> first, std::array<std::array<int,2>,2> second ) { if( first.size() != second.size() ) return false; for(int i = 0; i < first.size(); i++) { for(int j = 0; j < first[i].size(); j++) { if( first[i][j] != second[i][j] ) return false; } } return true; } int main() { std::array<std::array<int,2>,2> arr1 = {{{1,2}, {2,4}}}, arr2 = {{{1,2}, {2,4}}}; std::cout << isEqual(arr1, arr2); }"},{"prompt":"Write a PHP function that takes a string and returns the same string with all vowels replaced with the letter 'x'.","completion":"function replaceVowels(string) { vowels = array(\\"a\\", \\"e\\", \\"i\\", \\"o\\", \\"u\\"); string = str_replace(vowels, \\"x\\", string); return string; }"},{"prompt":"Write an SQL query to list all customers who are over the age of 25.","completion":"SELECT * FROM customers WHERE age > 25;"},{"prompt":"Create a C++ program that prints out the number of days in a given month and year. Month: 10 Year: 2020","completion":"\\"\\"\\" Print the number of days in a given month and year using C++ \\"\\"\\" #include<iostream> int main() { int month, year; std::cout << \\"Enter month: \\"; std::cin >> month; std::cout << \\"Enter year: \\"; std::cin >> year; int numDays; if (month == 1 || month == 3 || month == 5 || month == 7 || month == 8 || month == 10 || month == 12) { numDays = 31; } else if (month == 4 || month == 6 || month == 9 || month == 11) { numDays = 30; } else if (month == 2) { if (year % 4 == 0) { if (year % 100 == 0) { if (year % 400 == 0) { numDays = 29; } else { numDays = 28; } } else { numDays = 29; } } else { numDays = 28; } } std::cout << \\"Number of days: \\" << numDays << std::endl; return 0; }"},{"prompt":"Develop a function in Java that takes two integers as its arguments and prints out the maximum of the two. A = 25 B = 27","completion":"/** * Develop a function in Java that takes two integers as its arguments and prints out the maximum of the two. */ public class maximum { public static int maximum(int a, int b){ if(a > b){ return a; } else { return b; } } public static void main(String[] args) { int a = 25; int b = 27; int max = maximum(a, b); System.out.println(\\"Maximum of the two numbers is: \\" + max); } }"},{"prompt":"Generate a best-fit line for data points {(2,4), (4,7), (6,8), (7,11)} in Python.","completion":"\\"\\"\\" Generate a best fit line for data points in Python \\"\\"\\" import numpy as np data = [(2,4), (4,7), (6,8), (7, 11)] x = np.array([x[0] for x in data]) y = np.array([y[1] for y in data]) m, c = np.polyfit(x, y, 1) print(\\"Best-fit line equation: y = {:.2f}x + {:.2f}\\".format(m,c))"},{"prompt":"Develop an algorithm in Python that detects any outliers in an array. A = [1, 5, 2, 10, 8, 5, 9, 15]","completion":"\\"\\"\\" Develop an algorithm in Python that detects any outliers in an array \\"\\"\\" #define function to detect outliers def detect_outliers(data): outliers = [] threshold = 3 mean = sum(data)/len(data) std = np.std(data) for i in data: z_score = (i - mean)/std if np.abs(z_score) > threshold: outliers.append(i) return outliers #call the function to find outliers A = [1, 5, 2, 10, 8, 5, 9, 15] print(\\"outliers: \\", detect_outliers(A))"},{"prompt":"Create a function in Node.js that prints out the numbers between 0 and a given limit. limit = 10","completion":"\\"\\"\\" Create a function in Node.js that prints out the numbers between 0 and a given limit. \\"\\"\\" function printNumbers(limit){ for(let i = 0; i <= limit; i++) { console.log(i); } } printNumbers(10);"},{"prompt":"Design a module in JavaScript that allows a user to reverse a provided array. A = [1,2,3,4,5]","completion":"\\"\\"\\" Design a module in JavaScript that allows a user to reverse a provided array \\"\\"\\" //implement reverse function function reverseArray(array){ let start = 0; let end = array.length-1; while (start < end){ let temp = array[start]; array[start] = array[end]; array[end] = temp; start++; end--; } return array; } //Reverse an array let A = [1,2,3,4,5]; let B = reverseArray(A); console.log(B);"},{"prompt":"Develop an algorithm in JavaScript that determines whether a given year is a leap year or not. Year = 2100","completion":"\\"\\"\\" Develop an algorithm in JavaScript that determines whether a given year is a leap year or not \\"\\"\\" function isLeapYear(year) { if (year % 4 === 0) { if (year % 100 === 0) { if (year % 400 === 0) { return true; } else { return false; } } else { return true; } } else { return false; } } let year = 2100; console.log(isLeapYear(year));"},{"prompt":"Create a code in C# that takes an array of numbers and prints out the second smallest number in the array. A = [9, 8, 12, 4, 7, 10]","completion":"\\"\\"\\" Create a code in C# that takes an array of numbers and prints out the second smallest number in the array. \\"\\"\\" public static void Main() { int[] A = { 9, 8, 12, 4, 7, 10 }; int secondMin = A[0]; if(A[1] < secondMin) { secondMin = A[1]; } for(int i = 2; i < A.Length; i++) { if(A[i] < secondMin) { secondMin = A[i]; } } Console.WriteLine(\\"Second smallest number is: \\" + secondMin); }"},{"prompt":"Write a script in Python that takes a list of strings and prints out the first letter of each string in uppercase. A = [\\"apple\\", \\"banana\\", \\"grapes\\"]","completion":"\\"\\"\\" Write a script in Python that takes a list of strings and prints out the first letter of each string in uppercase \\"\\"\\" # create the function def uppercase_first_letters(list_of_strings): for string in list_of_strings: print(string[0].upper()) # call the function with the list A = [\\"apple\\", \\"banana\\", \\"grapes\\"] uppercase_first_letters(A)"},{"prompt":"Design a module in JavaScript that sorts an array of integers starting from the smallest number. A = [9, 8, 12, 4, 7, 10]","completion":"\\"\\"\\" Design a module in JavaScript that sorts an array of integers starting from the smallest number. \\"\\"\\" // Create the sorting function function sortArray(array){ // Keep track of the index of the minimum value. let index; //loop through the array starting from the beginning. for(let i = 0; i < array.length; i++){ //set the min value to the current i value. let min = array[i]; //set the index to i index = i; //loop through the array starting from i + 1. for(let j = i + 1; j < array.length; j++){ //if the value of array[j] is less then the min value //then set the min to this value and set the index to j if (array[j] < min){ min = array[j]; index = j; } } //if there was a new min then swap it at the current i position. if(i != index){ let temp = array[i]; array[i] = array[index]; array[index] = temp; } } //return the sorted array return array; } //Call the function for sorting let A = [9, 8, 12, 4, 7, 10]; let B = sortArray(A); console.log(B);"},{"prompt":"Create a script in Java that builds a string based on a given character repeated n number of times. Character = '*' Number = 5","completion":"\\"\\"\\" Create a script in Java that builds a string based on a given character repeated n number of times. \\"\\"\\" public class StringBuilder { public static String buildString(char c, int n){ StringBuilder sb = new StringBuilder(); for(int i = 0; i < n; i++){ sb.append(c); } return sb.toString(); } public static void main(String[] args) { char c = '*'; int n = 5; System.out.println(buildString(c, n)); } }"},{"prompt":"Develop a function in Python that takes two arguments, a base number and an exponent number, and prints out the result of the power operation. Base = 5 Exponent = 3","completion":"\\"\\"\\" Develop a function in Python that takes two arguments, a base number and an exponent number, and prints out the result of the power operation. \\"\\"\\" def power(base, exponent): result = base**exponent; return result; base = 5 exponent = 3 print(power(base, exponent))"},{"prompt":"Write a code that takes a list of integers and output the frequencies of odd and even numbers within the list. list_of_ints = [7, 21, 22, 23, 24, 25]","completion":"def find_odd_even_frequencies(list_of_ints): count_odd = 0 count_even = 0 for num in list_of_ints: if num % 2 == 0: count_even += 1 else: count_odd += 1 return {\\"odd\\": count_odd, \\"even\\": count_even} result = find_odd_even_frequencies(list_of_ints) print(result) // Output: {'odd': 3, 'even': 3}"},{"prompt":"Write a function in Python that returns the greatest common divisor (GCD) of two numbers. n1 = 18, n2 = 15","completion":"def greatest_common_divisor(n1, n2): while n2 > 0: n1, n2 = n2, n1 % n2 return n1 result = greatest_common_divisor(18, 15) print(result) // Output: 3"},{"prompt":"You are given a list of float numbers. Write a code to sort them in ascending order. arr = [2.5, 3.2, 2.1, 4.6, 1.6]","completion":"def bubbleSort(arr): n = len(arr) for i in range(n): for j in range(0, n-i-1): if arr[j] > arr[j+1] : arr[j], arr[j+1] = arr[j+1], arr[j] return arr sorted_arr = bubbleSort(arr) print(sorted_arr) // Output: [1.6, 2.1, 2.5, 3.2, 4.6]"},{"prompt":"Given an array of integers, write a method to return the indices of the two numbers such that they add up to a specific target. nums = [2, 5, 11, 15], target = 9","completion":"def twoSum(nums, target): result = [] for i in range(len(nums)): for j in range(i+1, len(nums)): if nums[i]+nums[j] == target: result.append(i) result.append(j) return result indices = twoSum(nums, 9) print(indices) // Output: [0, 2]"},{"prompt":"Write a code that generates a random password of 8 characters including numerical and alphabetic characters.","completion":"import string import random def generate_password(): alpha_list = list(string.ascii_letters) + list(string.digits) return ''.join([random.choice(alpha_list) for _ in range(8)]) random_password = generate_password() print(random_password) // Output: 4U4K5U6L"},{"prompt":"Write a SQL query to list all the customers in the customer table in descending order for the most recent order.","completion":"SELECT c.customer_name, MAX(o.order_date) FROM customer c LEFT JOIN orders o ON c.customer_id = o.order_id GROUP BY c.customer_name ORDER BY o.order_date DESC;"},{"prompt":"Format the following text using Markdown. The purpose of this project is to create a user-friendly program for calculating the area of a circle.","completion":"# The Purpose of this Project The purpose of this project is to create a user-friendly program for calculating the **area of a circle**."},{"prompt":"Generate a regular expression to check for the presence of word ‘apple’","completion":"^(.*bappleb.*)"},{"prompt":"Format the following code using a linter func multiply(a,b) { return a*b }","completion":"def multiply(a, b): \\"\\"\\"Returns the product of the two parameters.\\"\\"\\" return a * b"},{"prompt":"Generate a valid SQL query to delete all the records from ‘Employee’ Table","completion":"DELETE FROM Employee;"},{"prompt":"Generate a correct code to compare two date objects","completion":"def compare_dates(date1, date2): if date1 > date2: return 1 elif date1 == date2: return 0; else: return -1"},{"prompt":"Write a function to filter a list of strings based on a search term","completion":"def filter_by_search_term(strings, search_term): return [string for string in strings if search_term in string]"},{"prompt":"Update the function to print ‘Hello World!’ def print_hello(): print('Hello')","completion":"def print_hello(): print('Hello World!')"},{"prompt":"Update the following code snippet to ensure that the values in the dictionary are unique. mydict = {\\"a\\":1, \\"b\\":2, \\"c\\":3, \\"d\\":4, \\"e\\":5}","completion":"mydict = {} for key, value in mydict.items(): if value not in mydict.values(): mydict[key]=value"},{"prompt":"Create a regular expression to match numbers with exactly three decimal places.","completion":"^d*.d{3}"},{"prompt":"Create a function in Python to convert time from 12 hour to 24 hour format.","completion":"def convert12to24(time12h): # Check if last two elements of time is AM and first two are 12 if time12h[-2:] == \\"AM\\" and time12h[:2] == \\"12\\": return \\"00\\" + time12h[2:-2] # If last two elements of time is AM elif time12h[-2:] == \\"AM\\": return time12h[:-2] # If last two elements of time is PM and first two are 12 elif time12h[-2:] == \\"PM\\" and time12h[:2] == \\"12\\": return time12h[:-2] else: # add 12 to hours and remove AM return str(int(time12h[:2]) + 12) + time12h[2:8]"},{"prompt":"Update the following function to only print the even numbers in a given list def print_list(list): for i in list: print(i)","completion":"def print_list(list): for i in list: if i%2==0: print(i)"},{"prompt":"Create a JavaScript program to sort a given list in ascending order.","completion":"function sortList(arr) { return arr.sort((a, b) => a - b); }"},{"prompt":"What is the function of the ‘enumerate’ keyword in Python?","completion":"The 'enumerate' keyword is used to iterate over an iterable and keep track of the index along the way. Its syntax is \\"enumerate(iterable, start=0)\\". Each iteration yields a tuple containing the index of the element and the element itself. This is most commonly used for loops that need to track the index of the elements in the iterable. For example, the loop below will print out all the elements and their respective indices in a list: my_list = [\\"A\\",\\"B\\",\\"C\\"] for index, element in enumerate(my_list): print(index, element) # Output: # 0 A # 1 B # 2 C"},{"prompt":"Given a n x n matrix where each element is 0 or 1, how can you find the area of the largest square sub-matrix composed of only ‘1s’?","completion":"The simplest way to find the area of the largest square sub-matrix composed entirely of '1's is to use a dynamic programming approach. The algorithm works by iterating through all the elements in the matrix. At each cell, it checks if the current element is a '1' and if the other elements around it form a square sub-matrix of size at least one containing '1's, and if so it updates the answer accordingly. The code for finding the area of the largest square sub-matrix composed of only '1's may look like this: # n is the size of the matrix def maximum_square_submatrix(matrix, n): # answer stores the maximum size of the square ans = 0 # dp array of size n+1 x n+1 dp = [[0 for _ in range(n+1)] for _ in range(n+1)] for i in range(1, n+1): for j in range(1, n+1): # if the element is 1 if matrix[i-1][j-1] == 1: # find the minimum of the elements on its left, top and diagonal dp[i][j] = 1 + min(dp[i-1][j], dp[i][j-1], dp[i-1][j-1]) # update the answer ans = max(ans, dp[i][j]) # return the answer return ans * ans"},{"prompt":"Create a dictionary from the given list that contains unique elements. lst = [1, 2, 3, 3, 3, 4, 5, 6, 6]","completion":"mydict = {x: None for x in set(lst)} print(mydict) # Output: # {1: None, 2: None, 3: None, 4: None, 5: None, 6: None}"},{"prompt":"What is the difference between deep copy and shallow copy in Python?","completion":"A shallow copy of an object creates a new reference to the existing object, while a deep copy creates a new object with a different reference but with the same values. In a shallow copy, changes made to the copied object will be reflected in the original object, whereas with a deep copy, the changes are independent. For example, if a list is shallow copied, the copied list will share the same elements as the original list, while a deep copy will contain independent copies of the original list's elements."},{"prompt":"Using the following dictionary, print the value for the element 'age'. person = { 'name': 'John Smith', 'age': 32, 'address': '123 Main St.' }","completion":"age = person['age'] print(\\"The value for the element 'age' is:\\", age) # Output: The value for the element 'age' is: 32"},{"prompt":"Parse the following HTML using the BeautifulSoup library in Python. html = '<h1>This is a heading</h1><p>This is a paragraph.</p>'","completion":"from bs4 import BeautifulSoup soup = BeautifulSoup(html, 'html.parser') heading = soup.h1.string paragraph = soup.p.string print(\\"Heading:\\", heading) print(\\"Paragraph:\\", paragraph) # Output: Heading: This is a heading Paragraph: This is a paragraph."},{"prompt":"Change the following string to an upper case. str = 'this is an example of a string'","completion":"str_upper = str.upper() print(str_upper) # Output: THIS IS AN EXAMPLE OF A STRING"},{"prompt":"Formulate a SQL query to get all the employee names from the 'employees' table.","completion":"SELECT name FROM employees;"},{"prompt":"Create a TensorFlow model to recognize handwritten numbers.","completion":"\\"\\"\\" Create a TensorFlow model to recognize handwritten numbers \\"\\"\\" import tensorflow as tf # Load in the data set mnist = tf.keras.datasets.mnist (x_train, y_train), (x_test, y_test) = mnist.load_data() # Pre-process the data x_train, x_test = x_train / 255.0, x_test / 255.0 # Create the model model = tf.keras.models.Sequential([ tf.keras.layers.Flatten(input_shape=(28, 28)), tf.keras.layers.Dense(128, activation='relu'), tf.keras.layers.Dropout(0.2), tf.keras.layers.Dense(10) ]) # Compile the model model.compile(optimizer='adam', loss=tf.keras.losses.SparseCategoricalCrossentropy(from_logits=True), metrics=['accuracy']) # Train the model model.fit(x_train, y_train, epochs=5) # Evaluate the model model.evaluate(x_test, y_test, verbose=2)"},{"prompt":"Write a code to find the first 4 terms of the Fibonacci sequence in Java.","completion":"public class Fibonacci { public static int[] getFibonacciNumbers(int numTerms) { int[] sequence = new int[numTerms]; int firstTerm = 0, secondTerm = 1; sequence[0] = firstTerm; sequence[1] = secondTerm; for (int i = 2; i < numTerms; i++) { sequence[i] = firstTerm + secondTerm; int temp = secondTerm; secondTerm = firstTerm + secondTerm; firstTerm = temp; } return sequence; } public static void main(String[] args) { int numTerms = 4; int[] sequence = getFibonacciNumbers(numTerms); System.out.println(\\"The first \\" + numTerms + \\" Fibonacci Numbers are:\\"); for (int i = 0; i < numTerms; i++) { System.out.println(sequence[i]); } } }"},{"prompt":"Write an SQL query to find the counts of all employees grouped by their job titles.","completion":"SELECT job_title, COUNT(*) FROM employees GROUP BY job_title;"},{"prompt":"Write a code to calculate the roots of a quadratic equation in Python.","completion":"import math def calculate_roots(a, b, c): # calculate the discriminant d = (b**2) - (4*a*c) # find two solutions sol1 = (-b-math.sqrt(d))/(2*a) sol2 = (-b+math.sqrt(d))/(2*a) print('The solutions are {0} and {1}'.format(sol1,sol2))"},{"prompt":"Create a new PostgreSQL table named 'employees' with appropriate columns for employee information.","completion":"CREATE TABLE employees ( id SERIAL PRIMARY KEY, first_name VARCHAR(50) NOT NULL, last_name VARCHAR(50) NOT NULL, job_title VARCHAR(100) NOT NULL, age INTEGER NOT NULL, salary DECIMAL NOT NULL );"},{"prompt":"Edit a JavaScript function to perform an action based on another action in the code. function myFunction(arr) { return arr.reverse(); }","completion":"function myFunction(arr) { arr.reverse(); return arr; }"},{"prompt":"Create a React class component that renders a h2 tag with the text \\"Welcome!\\".","completion":"import React from 'react'; class Welcome extends React.Component { render() { return <h2>Welcome!</h2> } } export default Welcome;"},{"prompt":"Create a for-loop in JavaScript that iterates through numbers from 1 to 10 and prints out the current number.","completion":"for (let i = 1; i <= 10; i++) { console.log(i); }"},{"prompt":"Using Angular, create a service to get the current date.","completion":"import { Injectable } from '@angular/core'; import { DatePipe } from '@angular/common'; @Injectable({ providedIn: 'root' }) export class DateService { constructor(private datePipe: DatePipe) { } getCurrentDate(): string { return this.datePipe.transform(new Date(), 'yyyy-MM-dd'); } }"},{"prompt":"Create a JavaScript object with a property \\"name\\" and a value of your choice.","completion":"let person = { name: \\"John Doe\\" };"},{"prompt":"Using Ruby, Create a method that converts a number to its equivalent in Roman numerals.","completion":"def to_roman(n) Roman_mapping = { 1000 => \\"M\\", 900 => \\"CM\\", 500 => \\"D\\", 400 => \\"CD\\", 100 => \\"C\\", 90 => \\"XC\\", 50 => \\"L\\", 40 => \\"XL\\", 10 => \\"X\\", 9 => \\"IX\\", 5 => \\"V\\", 4 => \\"IV\\", 1 => \\"I\\" } result = \\"\\" Roman_mapping.each do |number, letter| result << letter*(n/number) n = n % number end result end"},{"prompt":"Using HTML, create a form with a textbox and a submit button.","completion":"<form> <input type=\\"text\\" name=\\"name\\" placeholder=\\"Enter your name\\"> <input type=\\"submit\\" value=\\"Submit\\"> </form>"},{"prompt":"Using Django, create a view to render a template.","completion":"from django.shortcuts import render def view(request): return render(request, 'template.html')"},{"prompt":"w do you write a for loop in Visual Basic?","completion":"For <variable> = <startValue> to <endValue> ' Insert code here Next <variable>"},{"prompt":"Write a line of code that prints the text \\"Hello, World!","completion":"print(\\"Hello, World!\\")"},{"prompt":"Create a function in Python to find all elements of a given list whose sum is equal to a given number. list = [5, 7, 9, 4] number = 18","completion":"def find_elements(list, number): result = [] for i in range(len(list)): for j in range(i + 1, len(list)): if list[i] + list[j] == number: result.append([list[i], list[j]]) return result # Driver code list = [5, 7, 9, 4] n = 18 print(find_elements(list, n))"},{"prompt":"Write a line of MySQL query that selects all rows from a table called 'employees' where the salary is greater than 55000.","completion":"SELECT * FROM employees WHERE salary > 55000;"},{"prompt":"Write a single line of code to convert a string to a date in Python.","completion":"date = datetime.strptime('01/01/2019', '%d/%m/%Y')"},{"prompt":"Write a code to split a string into words and store them into a list. mystring = \\"This is a sample string","completion":"mystring = \\"This is a sample string\\" wordList = mystring.split()"},{"prompt":"PHP, append a new element to an array. myArray = ['apple','melon','banana']","completion":"myArray = array('apple','melon','banana'); array_push(myArray, 'orange'); print_r(myArray);"},{"prompt":"C#, write a code snippet to print all numbers between 1 and 10 (inclusive).","completion":"for (int i = 1; i <= 10; i++) { Console.Write(i + \\" \\"); } Console.WriteLine();"},{"prompt":"Write a code snippet to create an object of type Car in Python.","completion":"class Car(): def __init__(self): self.make = \\"\\" self.model = \\"\\" self.year = 0 self.color = \\"\\" car = Car()"},{"prompt":"Write a code to find out if a given number is prime in JavaScript. number = 29","completion":"function isPrime(number) { for (i=2; i <= Math.sqrt(number); i++) { if (number % i == 0) { return false; } } return true; } let number = 29 console.log(isPrime(number))"},{"prompt":"Create a database in MySQL with the name \\"sample db\\".","completion":"CREATE DATABASE sample_db;"},{"prompt":"Write a code in C# to fetch the current date.","completion":"DateTime now = DateTime.Now; Console.WriteLine(now.ToString(\\"dd-MM-yyyy\\"));"},{"prompt":"Create a Python script to compact a given list of elements. my_list = [1,1,2,3,3,3,4,4,4,4,5]","completion":"def compact_list(lst): # Define a new list to hold the compacted elements new_list = [] current = None # Iterate through lst for item in lst: if item != current: current = item new_list.append(current) # Return the new list return new_list # Call the function with the given list my_list = [1,1,2,3,3,3,4,4,4,4,5] print(compact_list(my_list)) # [1,2,3,4,5]"},{"prompt":"dentify any inefficient coding practices used in the following snippet. def find_largest(number_list): #Define variable for holding the biggest number largest = 0 for num in number_list: if num > largest: largest = num return large","completion":"The code works, however the variable \`largest\` is not properly initialized. Instead of setting it to 0, it should be set to the first element in the list - \`number_list[0]\`. This will improve the efficiency of the code, as it will not have to perform unnecessary comparisons."},{"prompt":"Complete the following snippet with proper code that will return the highest value in a given list. my_list = [1,2,3,4,5]","completion":"def find_highest(lst): current_max = lst[0] # Iterate through list for item in lst: if item > current_max: current_max = item # Return the max value return current_max # Call the function with the given list my_list = [1,2,3,4,5] print(find_highest(my_list)) # 5"},{"prompt":"Create a class in Python that will allow us to initialize and store a given list of numbers.","completion":"class NumbersList: def __init__(self, numbers_list): self.numbers_list = numbers_list def get_list(self): return self.numbers_list def set_list(self, numbers_list): self.numbers_list = numbers_list"},{"prompt":"Find the index of the largest element in the array [2, 3, 5, 7, 25, 30].","completion":"arr = [2, 3, 5, 7, 25, 30] largest_element = max(arr) index = arr.index(largest_element) print(index) # Output: 4"},{"prompt":"Create a JSON object that has keys \\"name\\" and \\"age\\" and assign the values \\"John\\" and 20 respectively.","completion":"my_json = { 'name': 'John', 'age': 20 }"},{"prompt":"Write a Python function that takes in an argument 'arr' which is an array of integers and prints the arithmetic mean of the array. arr = [2, 8, 10, 22, 4]","completion":"def mean(arr): sum = 0 for num in arr: sum += num mean = sum/len(arr) print(mean) mean(arr) # Output: 10.0"},{"prompt":"Write a JavaScript code snippet to create a new array from an existing array where each element is doubled. ages = [10, 20, 30, 40]","completion":"let doubledAges = ages.map(age => age * 2);"},{"prompt":"Find the most frequent integer in the list: [3, 5, 2, 3, 1, 5, 3, 3, 2].","completion":"my_list = [3, 5, 2, 3, 1, 5, 3, 3, 2] max_freq = 0 max_num = 0 # Use a dictionary to store the frequence of each number dict = { i : my_list.count(i) for i in my_list } for num, freq in dict.items(): if freq > max_freq: max_freq = freq max_num = num print(max_num) # Output: 3"},{"prompt":"Write a function in C++ which takes in an array and its size and swaps the first and last elements of the array. alist = [10, 20, 30, 40]","completion":"#include<iostream> using namespace std; // Function to swap the first and last elements of an array void swapFnL(int arr[], int size) { int temp; temp = arr[0]; arr[0] = arr[size-1]; arr[size-1] = temp; } int main() { int arr[] = {10, 20, 30, 40}; int size = sizeof(arr)/sizeof(arr[0]); swapFnL(arr, size); for(int i=0; i<size; i++) cout<< arr[i] << \\" \\"; return 0; }"},{"prompt":"Write a MySQL query to select the product name and price for products whose name start with \\"A\\".","completion":"SELECT product_name, price FROM products WHERE product_name LIKE 'A%';"},{"prompt":"dentify the correct syntax for creating a class with name 'Car' in Python.","completion":"class Car: pass"},{"prompt":"w would you format the following date in mm/dd/yyyy format using Java? 5 January 2020","completion":"import java.text.SimpleDateFormat; import java.util.Date; SimpleDateFormat sdf = new SimpleDateFormat(\\"MM/dd/yyyy\\"); String date_string = sdf.format(new Date(2020, 0, 5)); System.out.println(date_string); # Output: \\"01/05/2020\\""},{"prompt":"Write a JavaScript function to convert a given string to title case (every word must start with a capital letter).","completion":"function toTitleCase(str) { let new_str = str.toLowerCase().replace(/b[a-z]/g, char => char.toUpperCase()); return new_str; }"},{"prompt":"Write an HTML code to create a button that changes the background color of the page when clicked.","completion":"<button onclick=\\"document.body.style.background='#FFF'\\">Change Background</button>"},{"prompt":"Write a SQL query that returns the maximum price of a product from the products table.","completion":"SELECT MAX(price) FROM Products;"},{"prompt":"Write a Python program to print out the longest word entered by the user. string = \\"Happiness is the best thing","completion":"def find_longest_word(string): # split the string word_list = string.split() # sort the list word_list.sort(key = len) # return the last word # which will be the longest return word_list[-1] # driver code string = \\"Happiness is the best thing\\" print(find_longest_word(string)) # Output: Happiness"},{"prompt":"Write an HTML code to create a hyperlink back to the homepage.","completion":"<a href=\\"index.html\\">Home</a>"},{"prompt":"Create a JavaScript program to compute the mathematical expression \\"9 + x^3 - 7\\" where x is user input. x = 7","completion":"let x = 7; let expression = 9 + (x*x*x) - 7; console.log(expression); // Output: 570"},{"prompt":"Create a Python function which accepts two numbers then return an array with the Fibonacci sequence starting by the two numbers. start_1: 1 start_2: 2","completion":"def fib_array(start_1, start_2): arr = [start_1, start_2] while True: next_num = arr[-1] + arr[-2] if next_num > 100: break arr.append(next_num) return arr"},{"prompt":"Create an HTML form with one input field which requests the user's name.","completion":"<form action=\\"\\" method=\\"get\\"> <label for=\\"name\\">Name:</label> <input type=\\"text\\" id=\\"name\\" name=\\"name\\" required> <input type=\\"submit\\" value=\\"Submit\\"> </form>"},{"prompt":"Write a CSS code that changes the font-family of all the text elements of an HTML document to 'Segoe UI'.","completion":"* { font-family: 'Segoe UI'; }"},{"prompt":"Write a few lines of code in Python that prints out name followed by age. name: John age: 25","completion":"name = \\"John\\" age = 25 print(name + \\" \\" + str(age))"},{"prompt":"You need write a code in JavaScript for a web page with an alert box showing a message 'Thank You for Visiting'.","completion":"alert('Thank You for Visiting');"},{"prompt":"You need to write an HTML code to create a navigation bar with three menu items, 'Home', 'About' and 'Contact'","completion":"<nav> <ul> <li><a href=\\"index.html\\">Home</a></li> <li><a href=\\"about.html\\">About</a></li> <li><a href=\\"contact.html\\">Contact</a></li> </ul> </nav>"},{"prompt":"Create a Ruby statement to create an array consisting of all numbers between 1 and 10 which are divisible by 3.","completion":"arr = (1..10).to_a.select { |x| (x % 3).zero? }"},{"prompt":"You need to write a for loop in Python that takes two arguments, N and K and prints out the numbers from 0 to N which are divisible by K. N: 15 K: 4","completion":"for i in range(0, N+1): if i % K == 0: print(i)"},{"prompt":"Write a JavaScript code to convert all the strings in a given array to upper case. arr: [\\"this\\", \\"is\\", \\"an\\", \\"example\\"]","completion":"var upperCaseArray = arr.map(function(element) { return element.toUpperCase(); });"},{"prompt":"Create a SQL query to select the first 3 rows of a table named 'users'.","completion":"SELECT * FROM users LIMIT 3;"},{"prompt":"Create a Ruby code to remove all items that starts with the letter 'a' from a given array. arr: [apple, banana, avocado, orange]","completion":"arr = arr.reject {|element| element.start_with?('a') }"},{"prompt":"You need to write an HTML page with two forms, one for registering a new user and the other for logging in an existing user.","completion":"<h1>Welcome to the Sign Up/Login Page</h1> <h2>Sign Up</h2> <form action=\\"signup.php\\" method=\\"post\\"> <label for=\\"username\\">Username:</label> <input type=\\"text\\" name=\\"username\\" required> <br> <label for=\\"password\\">Password:</label> <input type=\\"password\\" name=\\"password\\" required> <br> <input type=\\"submit\\" value=\\"Sign Up\\"> </form> <h2>Log In</h2> <form action=\\"login.php\\" method=\\"post\\"> <label for=\\"username\\">Username:</label> <input type=\\"text\\" name=\\"username\\" required> <br> <label for=\\"password\\">Password:</label> <input type=\\"password\\" name=\\"password\\" required> <br> <input type=\\"submit\\" value=\\"Log In\\"> </form>"},{"prompt":"Write a JavaScript code that counts the number of tokens that are present in a given document. document: \\"This is a sentence with five toke","completion":"let tokenCount = 0; let words = document.split(\\" \\"); words.forEach(word => { tokenCount++; }); console.log(tokenCount); // Output: 5"},{"prompt":"Create a GraphQL query for retrieving data about a list of userID's. userIDs: [1, 2, 3, 4, 5]","completion":"query getUsers(userIDs: [Int!]!) { users(userID_in: userIDs) { userID name email age } }"},{"prompt":"Write a SQL statement to return all books whose title contains the word \\"math\\".","completion":"SELECT * FROM books WHERE title LIKE '%math%';"},{"prompt":"Given the below data, find the sum of all the numbers in the array. data = [5, 15, 7, 20]","completion":"Sum = 47"},{"prompt":"mplement a function to print each element of a given array in reverse. array = [2, 4, 6, 8]","completion":"def print_reversed_array(array): for i in range(len(array)-1, -1, -1): print(array[i])"},{"prompt":"Write a Java program to find out the longest word from a sentence. String sentence = \\"This is a sample sentence","completion":"public class LongestWord { // Function to find longest word in the sentence static String findLongestWord(String str) { String longestWord = \\"\\"; String[] words = str.split(\\" \\"); for (int i = 0; i < words.length; i++) { if (words[i].length() > longestWord.length()) { longestWord = words[i]; } } return longestWord; } public static void main(String[] args) { String str = \\"This is a sample sentence\\"; System.out.println(findLongestWord(str)); } }"},{"prompt":"Create an Oracle SQL statement for finding the average cost of a product.","completion":"SELECT AVG(cost) FROM product;"},{"prompt":"Create a JavaScript function to filter an array of strings. strings = [\\"apple\\", \\"banana\\", \\"coconut\\", \\"dragon fruit\\"]","completion":"function filterStrings(strings) { return strings.filter(string => string.length < 7); }"},{"prompt":"Suggest a MySql query to check if a given table contains a record with specified column values. Table: \\"customers\\" Columns: [name, age] Record: [\\"John\\", 33]","completion":"SELECT * FROM customers WHERE name = 'John' AND age = 33;"},{"prompt":"Write a React component to display a list of items in an unordered list. const listItems = [\\"Apples\\", \\"Bananas\\", \\"Cherrie","completion":"import React from 'react'; const ListItems = props => { const items = props.listItems.map(item => ( <li key={item}>{item}</li> )); return ( <ul> {items} </ul> ); }; export default ListItems;"},{"prompt":"Construct a logic circuit that implements a three input AND gate.","completion":"[Logic Circuit for Three Input AND Gate]"},{"prompt":"Sort a numerical array from smallest to largest in C++. [4, 2, 5, 1, 3]","completion":"#include <iostream> #include <vector> #include <algorithm> using namespace std; int main() { vector<int> arr = {4, 2, 5, 1, 3}; sort(arr.begin(), arr.end()); for(int i : arr) cout << i << \\" \\"; return 0; }"},{"prompt":"Write a script in Python for drawing a rectangle on the screen.","completion":"import pygame # Initialize the game engine pygame.init() # Define the colors BLACK = (0, 0, 0) WHITE = (255, 255, 255) # Set the window size size = (400, 500) screen = pygame.display.set_mode(size) # Iterate over the list of rectangles rects = [pygame.Rect(75, 150, 150, 50), pygame.Rect(200, 150, 150, 50)] # Iterate over the list of rectangles for rect in rects: pygame.draw.rect(screen, WHITE, rect) # Update the display pygame.display.flip()"},{"prompt":"Construct a for loop to print out each character of a given string in a new line. String: Hello world","completion":"for char in \\"Hello world\\": print(char)"},{"prompt":"Write a code to get the number of unique elements in a given list.","completion":"def count_unique_elements(lst): unique_elements = set(lst) return len(unique_elements) print (count_unique_elements([1,2,3,2,3,4,5])) # Output: 5"},{"prompt":"Create a program to guess a secret number between 1 and 100.","completion":"# secret number secret_number = 42 # user guess guess = 0 # guessing loop while guess != secret_number: # ask user to enter a guess guess = int(input(\\"Guess a number between 1 and 100: \\")) # provide hints if guess < secret_number: print(\\"Too low. Try something higher.\\") elif guess > secret_number: print(\\"Too high. Try something lower.\\") else: print(\\"You guessed it! The secret number was {}\\".format(secret_number))"},{"prompt":"Construct a code that finds the area of a given circle.","completion":"def area(radius): return 3.14 * radius * radius print(area(5)) # Output: 78.5"},{"prompt":"Edit the given code to print out the largest even number in the given list. lst = [1, 8, 9, 10, 6]","completion":"lst = [1, 8, 9, 10, 6] even_nums = [] for num in lst: if num % 2 == 0: even_nums.append(num) if even_nums: print(max(even_nums)) else: print(\\"No even numbers in the list.\\") # Output: 10"},{"prompt":"Generate a code to convert a given number to its English word equivalent.","completion":"# dictionary to convert numbers to words number_words = {0 : 'zero', 1: 'one', 2 : 'two', 3 : 'three', 4 : 'four', 5 : 'five', 6 : 'six', 7 : 'seven', 8 : 'eight', 9 : 'nine', 10 : 'ten'} # convert number to string def convert_to_words(n): if n in number_words: return number_words[n] return \\"\\" # Driver code print(convert_to_words(5)) # Output: five"},{"prompt":"Provide an input to the following code so that it prints out the sum of all numbers between 1 and 5.","completion":"# initialise sum sum = 0 # loop over given range for i in range(1, 6): sum += i print(sum) # Output: 15"},{"prompt":"Write a Python function to convert temperatures from Fahrenheit to Celsius.","completion":"def fahrenheit_to_celsius(f): return (f - 32) * 5 / 9"},{"prompt":"Create a Python dictionary to store information about a student. The student should have the following attributes: name, age, grades, and graduation year.","completion":"student = { 'name': '', 'age': 0, 'grades': [], 'graduation_year': 0 }"},{"prompt":"Write a Python function to add an item to a given list.","completion":"def add_item(items, item): items.append(item) return items"},{"prompt":"Write a Python function to compute the total amount of a given grocery bill after taxes. items = [('apple', 1.49), ('banana', 0.99), ('bread', 4.99)]","completion":"def compute_total_after_taxes(items): tax = 0.07 total = 0 for item in items: price = item[1] tax_amount = price * tax total += price + tax_amount return round(total, 2)"},{"prompt":"Write a Python function to create a dictionary from two given lists. The first list should be the keys and the second list should be the values.","completion":"def create_dict(keys, values): return dict(zip(keys, values))"},{"prompt":"Create a function in Python to calculate the sum of the square of all numbers from 1 to n.","completion":"def sum_squares(n): total = 0 for x in range(1,n+1): total += x * x return total"},{"prompt":"Design a C++ program to get the frequency of a subarray in an array. arr = [1,2,2,2,2,2,3,4,5], subarr = [2,2]","completion":"int getFrequency(int arr[], int n, int subarr[], int m) { int count = 0; for (int i = 0; i <= (n - m); i++) { int j; for (j = 0; j < m; j++) { if (arr[i + j] != subarr[j]) break; } if (j == m) count++; } return count; }"},{"prompt":"Design a C program to check if a year is leap year or not.","completion":"# include<stdio.h> int main() { int year; printf(\\"Enter a year: \\"); scanf(\\"%d\\",&year); if (year%400 == 0) printf(\\"%d is a leap year\\", year); else if (year%100 == 0) printf(\\"%d is not a leap year\\", year); else if (year%4 == 0) printf(\\"%d is a leap year\\", year); else printf(\\"%d is not a leap year\\", year); return 0; }"},{"prompt":"Construct an object with 3 properties of different data types.","completion":"object = {\\"name\\": \\"John Doe\\", \\"age\\": 18, \\"isActive\\": False}"},{"prompt":"Write a code to delete all empty values in a given dictionary. my_dict = {'a': '', 'b': False, 'c': 0, 'd': None}","completion":"def delete_empty_values(d): new_dict = {key: value for key, value in d.items() if value != 0 and value != False and value != None and value != ''} return new_dict my_dict = delete_empty_values(my_dict) print(my_dict) # Output -> {'b': False}"},{"prompt":"Compare two strings using Java","completion":"public static int compare(String s1, String s2) { return s1.compareTo(s2); }"},{"prompt":"Write a web page in HTML to view a list of books","completion":"<html> <head> <title>List of Books</title> </head> <body> <h1>List of Books</h1> <ul> <li>The Alchemist</li> <li>Life of Pi</li> <li>The Great Gatsby</li> <li>The Catcher in the Rye</li> <li>Harry Potter and the Sorcerer's Stone</li> </ul> </body> </html>"},{"prompt":"Design a neural network architecture in TensorFlow to predict the sentiment of a movie review","completion":"model = tf.keras.Sequential([ tf.keras.layers.Embedding(input_dim=vocabulary_size, output_dim=embedding_dim), tf.keras.layers.GlobalAveragePooling1D(), tf.keras.layers.Dense(24, activation='relu'), tf.keras.layers.Dense(1, activation='sigmoid') ]) model.compile(loss='binary_crossentropy',optimizer='adam',metrics=['accuracy'])"},{"prompt":"What is the name of the machine learning algorithm used to find patterns in data?","completion":"The machine learning algorithm used to find patterns in data is called clustering."},{"prompt":"Convert the following code written in Java to C++. String s = \\"It's raining today\\";","completion":"std::string s = \\"It's raining today\\";"},{"prompt":"Write a Regex expression to match a string containing the words \\"hello\\" and \\"world\\".","completion":"bhellob.*bworldb"},{"prompt":"w can you delete a row in an SQL database?","completion":"You can delete a row in an SQL database using the DELETE statement. The syntax for this statement is DELETE FROM table_name WHERE condition;"},{"prompt":"Modify the following SQL query to also return the age of the people. SELECT name FROM people;","completion":"SELECT name, age FROM people;"},{"prompt":"dentify three patterns in the following list of numbers: 1, 4, 6, 10, the 15.","completion":"The three patterns identified in the list of numbers are: an increasing sequence (1, 4, 6, 10, 15), odd numbers (1, 3, 5, 10, 15), and composite numbers (4, 6, 10, 15)."},{"prompt":"What is the purpose of a user interface (UI)?","completion":"The purpose of a user interface (UI) is to provide an efficient and user-friendly interface for interacting with a device or application. It includes visual components like forms, menus, buttons and other tools that allow users to input information, perform tasks and receive output."},{"prompt":"Explain what is hyperparameter tuning and provide a basic example.","completion":"Hyperparameter tuning is the process of selecting the optimal hyperparameters of a machine learning algorithm. Hyperparameters are static values that define the behaviors and characteristics of the algorithm, such as learning rate, activation functions and regularization terms. An example of hyperparameter tuning is selecting the optimal learning rate for a neural network so that it converges faster and produces better results."},{"prompt":"Generate a simple python function to concatenate two lists.","completion":"def concatenate_lists(list1, list2): return list1 + list2"},{"prompt":"Query a MongoDB to get all documents with a certain field value.","completion":"def query_mongo(collection, field_name, field_value): query = {field_name: field_value} documents = collection.find(query) return list(documents)"},{"prompt":"Create a database table using SQL to store user preferences.","completion":"CREATE TABLE user_preferences ( user_id INTEGER, preference VARCHAR (50) );"},{"prompt":"Write a python function to detect if two lists contain the same items in different order.","completion":"def compare_lists(list1, list2): return sorted(list1) == sorted(list2)"},{"prompt":"Write a SQL query to get the products that have been purchased in the last month","completion":"SELECT * FROM products WHERE purchase_date > (NOW() - INTERVAL 1 MONTH)"},{"prompt":"Create an HTML page displaying the results from a given query.","completion":"<html> <head> <title>Query Results</title> </head> <body> <table> <thead> <tr> <th>Field1</th> <th>Field2</th> <th>Field3</th> </tr> </thead> <tbody> <?php query_result = execute_query(); while(row = query_result->fetch_assoc()){ echo '<tr> <td>'.row['field1'].'</td> <td>'.row['field2'].'</td> <td>'.row['field3'].'</td> </tr>'; } ?> </tbody> </table> </body> </html>"},{"prompt":"Create a Go program to read an integer value from the command line and calculate its square.","completion":"package main import ( \\"fmt\\" \\"os\\" \\"strconv\\" ) func main() { if len(os.Args) < 2 { fmt.Println(\\"Usage : go run main.go <num>\\") os.Exit(1) } num, _ := strconv.Atoi(os.Args[1]) sq := num * num fmt.Println(\\"Square of \\", os.Args[1], \\"is\\", sq) }"},{"prompt":"Code a function that takes a dictionary as a parameter and prints out the key-value pairs.","completion":"def print_dict(dictionary): for key, value in dictionary.items(): print(f\\"{key}: {value}\\")"},{"prompt":"Output the second maximum number in a list. [9, 4, 57, 28, 24, 10]","completion":"28"},{"prompt":"Separate the given array of numbers into two new arrays, where one array contains even numbers and the other array contains odd numbers. [9, 4, 57, 28, 24, 10]","completion":"even_array = [4, 28, 24, 10] odd_array = [9, 57]"},{"prompt":"Create a program to print out a given message in reverse. Hello World!","completion":"!dlroW olleH"},{"prompt":"Print the words in the given string that are longer than 5 characters. \\"This is a test string for a coding challenge","completion":"This string challenge"},{"prompt":"Count the number of sub strings of length 3 that are present in the sentence. This is an example sentence","completion":"7"},{"prompt":"Create a program to find the maximum difference between two elements in an array. [9,4,57,28,24,10]","completion":"53"},{"prompt":"Generate the first 8 Fibonacci numbers after a starting number of 0.","completion":"[0, 1, 1, 2, 3, 5, 8, 13]"},{"prompt":"Create a function to determine if two strings are symmetrical.","completion":"def is_symmetrical(str1, str2): for i in range(0, len(str1)): if str1[i] != str2[-i-1]: return False return True"},{"prompt":"Write a code segment that manipulates a Fibonacci sequence until the sum is greater than a given number. 10","completion":"def fibonacci_sum(number): fib_list = [0,1] while True: next_number = fib_list[-1] + fib_list[-2] if next_number > number: break fib_list.append(next_number) return sum(fib_list[:-1])"},{"prompt":"Write a method to calculate the average of three numbers in Python.","completion":"def avg(num1, num2, num3): return (num1 + num2 + num3) / 3"},{"prompt":"Create a shell script that prints out the day of the week based on the current day.","completion":"#!/bin/bash today=(date +\\"%A\\") echo \\"Today is today\\""},{"prompt":"Code a function in R which concatenates two strings of a given length and returns the resulting string. let string1 = \\"Hello\\"; let string2 = \\"World\\"; let length = 10;","completion":"concat_strings <- function(string1, string2, length) { return( substr(paste0(string1,string2), 1, length) ) }"},{"prompt":"Design a function that takes an array of length n as an argument, and returns an array of the same length, where the output array consists of the elements of the input array in reverse order. [1, 2, 3, 4, 5]","completion":"def reverse_array(arr): return arr[::-1]"},{"prompt":"Create an HTML form with a text field for user to enter an email address and a submit button.","completion":"<form action=\\"\\" method=\\"post\\"> <input type=\\"text\\" name=\\"email\\" placeholder=\\"Enter your email address\\"> <input type=\\"submit\\" value=\\"Submit\\"> </form>"},{"prompt":"Design a Python program to print all numbers between 0 and 100 that are divisible by 3 and 5.","completion":"for i in range(101): if i % 3 == 0 and i % 5 == 0: print(i)"},{"prompt":"Design an HTML page to display a timer with minutes and seconds.","completion":"<!DOCTYPE html> <html> <head> <title>Timer</title> </head> <body> <h1>Timer</h1> <p> <span id=\\"minutes\\">00</span>:<span id=\\"seconds\\">00</span> </p> <script> let minutes = 0; let seconds = 0; setInterval(function(){ seconds++; if (seconds >= 60) { minutes++; seconds = 0; } document.getElementById(\\"minutes\\").innerHTML = minutes; document.getElementById(\\"seconds\\").innerHTML = seconds; }, 1000); <\/script> </body> </html>"},{"prompt":"Create a Java program to compare two strings and check if they are equal or not. String s1 = \\"Hello\\"; String s2 = \\"World\\";","completion":"public static boolean compareStrings(String s1, String s2) { return s1.equals(s2); }"},{"prompt":"Design a SQL query to get the salary of employee who has the maximum salary in each department.","completion":"SELECT emp.name, emp.salary FROM employees emp JOIN (SELECT dept, MAX(salary) max_salary FROM employees GROUP BY dept) temp ON emp.dept = temp.dept AND emp.salary = temp.max_salary;"},{"prompt":"Create a function to calculate the exponent of a given number x raised to power y.","completion":"def exponent(x,y): if(y == 0): return 1 elif (int(y % 2) == 0): y = int(y / 2) return exponent(x, y) * exponent(x, y) else: return (x * exponent(x, int(y / 2)) * exponent(x, int(y / 2))) exponent(5,3) # Output: 125"},{"prompt":"Write a query in MySQL to find the most popular item in a store","completion":"SELECT item_name, COUNT(*) AS NumberOfOrders FROM orders GROUP BY item_name ORDER BY NumberOfOrders DESC LIMIT 1"},{"prompt":"Compute the number of days since January 1st, 1971 until the given date. May 3rd, 2012","completion":"\\"\\"\\" Calculate the number of days since January 1st, 1971 until the given date \\"\\"\\" import datetime as dt def num_days(date_str): datetime_object = dt.datetime.strptime(date_str, \\"%B %d, %Y\\").date() ref_date = dt.datetime(1971, 1, 1).date() return (datetime_object - ref_date).days if __name__ == '__main__': print(num_days('May 3rd, 2012'))"},{"prompt":"Write a code to select records from a database where the country name is identical to the input. Austral","completion":"\\"\\"\\" Select records from the database where the country name is identical to the input \\"\\"\\" import sqlite3 country = 'Australia' conn = sqlite3.connect('database.db') c = conn.cursor() query = \\"SELECT * FROM countries WHERE name = ?\\" c.execute(query, (country,)) data = c.fetchall() conn.close()"},{"prompt":"Devise a function that converts a number represented in the binary system to a decimal number. 1100","completion":"\\"\\"\\" Devise a function that converts a number represented in the binary system to a decimal number \\"\\"\\" def binary_to_decimal(number): decimal = 0 power = 0 while number != 0: last_digit = number % 10 decimal += last_digit * pow(2, power) power += 1 number //= 10 return decimal"},{"prompt":"Design a program that prints out the multiplication table up to 12 x 12.","completion":"\\"\\"\\" Design a program that prints out the multiplication table up to 12 x 12 \\"\\"\\" for i in range(1, 13): for j in range(1, 13): print('{} x {} = {}'.format(i, j, i * j)) print(\\"\\")"},{"prompt":"Find the maximum element in a given array (unsorted) using a linear search approach. [10, 5, 15, 80, 25]","completion":"\\"\\"\\" Find the maximum element in a given array (unsorted) using a linear search approach \\"\\"\\" def linear_search_max(arr): max_element = arr[0] for elem in arr[1:]: if elem > max_element: max_element = elem return max_element if __name__ == '__main__': arr = [10, 5, 15, 80, 25] max_element = linear_search_max(arr) print(max_element)"},{"prompt":"Rewrite this code in a more efficient way making use of the built-in sort functions. my_list = [3, 2, 1] for i in range(len(my_list)): for j in range(len(my_list)-1): if my_list[j] > my_list[j+1]: my_list[j], my_list[j+1] = my_list[j+1], my_list[j]","completion":"\\"\\"\\" Rewrite this code in a more efficient way making use of the built-in sort functions \\"\\"\\" my_list = [3, 2, 1] my_list.sort()"},{"prompt":"What programming language did Microsoft use to create its Edge browser?","completion":"Microsoft used their own programming language called ChakraCore to create the Edge browser. ChakraCore is a JavaScript engine which is optimized for Edge. It is based on the Chakra engine which was originally developed to power Microsoft's Internet Explorer browser."},{"prompt":"Create a Python dictionary with the key-value: \\"Alice\\": 28","completion":"example_dict = {'Alice': 28}"},{"prompt":"Create a table using JavaScript with three columns, \\"Name\\", \\"Age\\", and \\"Country\\".","completion":"<table id=\\"exampleTable\\"> <tr> <th>Name</th> <th>Age</th> <th>Country</th> </tr> </table> <script> const exampleTable = document.getElementById('exampleTable'); const rows = []; const columns = [\\"Name\\", \\"Age\\", \\"Country\\"]; columns.forEach((columnName) => { const newRow = document.createElement('tr'); newRow.innerHTML = \`<td>{columnName}</td>\`; rows.push(newRow); }); exampleTable.append(...rows); <\/script>"},{"prompt":"Find the difference between two given Unix timestamps. 1587797520, 1587798320","completion":"difference = 1587798320 - 1587797520 = 800 seconds"},{"prompt":"Create an HTML form with one text field and one submit button.","completion":"<form> <label for=\\"name\\">Name:</label> <input type=\\"text\\" name=\\"name\\" id=\\"name\\"> <input type=\\"submit\\" value=\\"Submit\\"> </form>"},{"prompt":"Create part of an Angular component that shows a message \\"Welcome to our website!","completion":"<p>Welcome to our website!</p>"},{"prompt":"mplement an algorithm to find the power of a number. Base: 2, Exponent: 3","completion":"def power(base, exponent): result = 1 while exponent > 0: result *= base exponent -= 1 return result result = power(2, 3) print(result) # 8"},{"prompt":"Generate a SQL query to find all the table names in a database.","completion":"SELECT TABLE_NAME FROM information_schema.tables WHERE table_schema = '<database_name>';"},{"prompt":"Create a shell script to print the version of a given program. Program: jav","completion":"#!/bin/bash echo (java -version 2>&1)"},{"prompt":"Write a Pandas code to drop all rows with missing values from a given dataframe. Dataframe name: df","completion":"df.dropna(inplace=True)"},{"prompt":"Write a Java program to print the Fibonacci sequence starting from given number. Starting Number: 10","completion":"public class Fibonacci { public static void main(String[] args) { int n1 = 10, n2 = 0, n3, i; System.out.print(n1 + \\" \\"); for (i = 1; i <= 8; ++i) { n3 = n1 + n2; System.out.print(n3 + \\" \\"); n1 = n2; n2 = n3; } } }"},{"prompt":"Given a 2D array of integers, write a Java method to find the sum of an hourglass pattern. The 2D array of integers are: [[1, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0], [1, 1, 1, 0, 0, 0], [0, 0, 2, 4, 4, 0], [0, 0, 0, 2, 0, 0], [0, 0, 1, 2, 4, 0]]","completion":"public static int findSumOfHourglass(int[][] arr){ int sum = 0; for(int i = 0; i < arr.length - 2; i++){ for(int j = 0; j < arr[i].length - 2; j++){ int tempSum = arr[i][j] + arr[i][j+1] + arr[i][j+2] + arr[i+1][j+1] + arr[i+2][j] + arr[i+2][j+1] + arr[i+2][j+2]; if(sum < tempSum) sum = tempSum; } } return sum; }"},{"prompt":"w do you create a new dataframe from existing two pandas dataframes?","completion":"You can create a new dataframe by using the concat() or merge() functions of pandas. With concat(), you can create a new dataframe by stacking the existing two dataframes on top/bottom of one another. With merge(), you can combine two dataframes by joining them on a key of your choice."},{"prompt":"w do you connect to PostgreSQL database using Java?","completion":"You can connect to PostgreSQL database using Java by using the JDBC driver. First, import the PostgreSQL JDBC driver class. Then, create an instance of the driver using a connection string and username and password. Finally, use the DriverManager class's getConnection() method to obtain a java.sql.Connection object that represents a database connection."},{"prompt":"w do you use the Set structure in Java?","completion":"The Set interface in Java provides an unsorted, unordered collection of objects that cannot contain duplicates. The Set interface is part of the Java Collection Framework and provides methods such as add(), remove() and contains() which allow you to manipulate the set. The Set interface is implemented by the HashSet class and the TreeSet class. The HashSet class is used for unordered collections of objects, while the TreeSet class is used for sorted collections."},{"prompt":"Write a MySQL query to count the number of students enrolled in a course called \\"Coding 101\\".","completion":"SELECT COUNT(*) FROM students WHERE course = 'Coding 101';"},{"prompt":"Define a function that takes a string and prints it in reverse order.","completion":"def print_reverse(str): for i in range(len(str)-1, -1, -1): print(str[i], end=\\"\\") print()"},{"prompt":"Create a list of the top 5 programming languages currently in use.","completion":"1. Java 2. Python 3. C++ 4. JavaScript 5. C#"},{"prompt":"Given two linked lists, write a Java program to merge them. The two linked lists are: List1 (1 -> 4 -> 5 -> 8 -> 10) List2 (2 -> 3 -> 6 -> 7 -> 9)","completion":"public static ListNode mergeLinkedLists(ListNode head1, ListNode head2) { if(head1 == null) return head2; if(head2 == null) return head1; ListNode mergedList; if(head1.val < head2.val) { mergedList = head1; mergedList.next = mergeLinkedLists(head1.next, head2); } else { mergedList = head2; mergedList.next = mergeLinkedLists(head1, head2.next); } return mergedList; }"},{"prompt":"Write an HTML code to create a form with input fields for name, age and email address.","completion":"<form> Name: <input type=\\"text\\" name=\\"name\\"><br> Age: <input type=\\"number\\" name=\\"age\\"><br> Email: <input type=\\"email\\" name=\\"email\\"><br> <input type=\\"submit\\" value=\\"Submit\\"> </form>"},{"prompt":"Generate a code in Java to compute the average of 5 numbers. Compute the average of 8, 5, 10, 3 and 9","completion":"public class Average { public static void main(String args[]) { double nums[] = {8, 5, 10, 3, 9}; double result = 0; int i; for (i=0; i<5; ++i) { result = result + nums[i]; } System.out.println(\\"Average is \\" + result / 5); } }"},{"prompt":"Generate a correct C++ code to delete the second item from an array. Delete the second item from the array [5, 3, 10, 8]","completion":"int array[4] = {5, 3, 10, 8}; for(int i = 1; i < 4; i++) array[i] = array[i+1]; //Decrement the size of array int n = sizeof(array)/sizeof(array[0]); n = n - 1;"},{"prompt":"Generate an SQL query to calculate the average age of all employees from the table 'employees'.","completion":"SELECT AVG(age) FROM employees;"},{"prompt":"Design an algorithm to swap two numbers in Python. Swap 10 and 20","completion":"def swapNumbers(a, b): temp = a a = b b = temp print(\\"After swapping: a =\\", a, \\" b =\\", b) # Driver program a = 10 b = 20 swapNumbers(a, b)"},{"prompt":"Create a program to convert kilometers to miles in C++. Convert 10 kilometers to mile","completion":"#include <iostream> using namespace std; float kms_to_miles(float kms) { return kms * 0.621; } int main() { float kms = 10; cout << kms << \\" kilometers is equal to \\" << kms_to_miles(kms) << \\" miles\\"; return 0; }"},{"prompt":"w many bytes are there in a megabyte?","completion":"A megabyte is equal to 1,048,576 bytes."},{"prompt":"Create a 3-dimensional array of ints in C#.","completion":"int[, ,] array3D = new int[x, y, z];"},{"prompt":"Design a function to calculate the sum of the squares of the numbers between 1 and n.","completion":"def sum_of_squares(n): sum_squares = 0 for i in range(1, n+1): sum_squares += i**2 return sum_squares"},{"prompt":"Rewrite the code below using Java def print_list(list): for item in list: print(item)","completion":"void printList(List<String> list) { for (String item : list) { System.out.println(item); } }"},{"prompt":"generate a JavaScript function to check whether a string is a palindrome.","completion":"function isPalindrome(str) { let start = 0; let end = str.length - 1; while (start < end) { if (str[start] !== str[end]) { return false; } start++; end--; } return true; }"},{"prompt":"Design a SQL query to find the first name of all employees of a company. Table \\"Employee\\" with columns: FirstName, LastName, Email, CompanyID","completion":"SELECT FirstName FROM Employee WHERE CompanyID = <user-provided-id>;"},{"prompt":"Write a JavaScript code snippet to test if a given variable is an array or not.","completion":"if (Array.isArray(variable)) { console.log('It is an array'); } else { console.log('It is not an array'); }"},{"prompt":"Suggest a code snippet in Python to delete the dictionary entry with a key called \\"name\\". sample_dic = {'id': 123, 'name': 'John Doe'}","completion":"del sample_dic['name']"},{"prompt":"Create a SQL statement to list all the entries with a rating greater than 3 from the table \\"movies\\".","completion":"SELECT * FROM movies WHERE rating > 3;"},{"prompt":"Create an SQL statement to select the title and description of all movies with a rating greater than 3.","completion":"SELECT title, description FROM movies WHERE rating > 3;"},{"prompt":"Write a function in JavaScript to capitalize all the words in a given phrase.","completion":"function capitalizeWords(str) { let words = str.split(' '); let capitalizedWords = words.map(word => word[0].toUpperCase() + word.slice(1)); return capitalizedWords.join(' '); }"},{"prompt":"Suggest a code snippet in C++ to calculate the sum of all the elements of a given array.","completion":"int sum = 0; for (int i=0; i<size; i++) sum += arr[i];"},{"prompt":"Describe the working of a recursive function.","completion":"A recursive function is a function that calls itself until a certain condition is met. It takes in an argument and performs some operation, then calls itself with a modified version of the argument until the condition is satisfied. The result of each call is combined in some fashion to form the final output. This allows the same method to be used to solve several different problems."},{"prompt":"Prepare a JSON object to store student details such as name, age, and address.","completion":"{ \\"studentDetails\\": { \\"name\\": \\"John Doe\\", \\"age\\": 25, \\"address\\": { \\"street\\": \\"XYZ Street\\", \\"city\\": \\"New York\\", \\"state\\": \\"NY\\" } } }"},{"prompt":"Describe linear search algorithm.","completion":"Linear search is a searching algorithm for finding an element within an array or a list. It sequentially checks each item of the list until a match is found or the end of the array is reached. If the key is found, the index position of the element is returned. If the element is not found, then the index is returned as -1."},{"prompt":"Write an SQL query to join two tables named 'books' and 'authors' on author_id.","completion":"SELECT books.book_title, authors.author_name FROM books INNER JOIN authors ON books.author_id = authors.author_id;"},{"prompt":"Construct an array of 10 elements in Java and initialize each element to 0.","completion":"int[] array = new int[10]; for (int i = 0; i < array.length; i++) { array[i] = 0; }"},{"prompt":"Create an HTML page that displays \\"Hello World!\\" when opened in a web browser.","completion":"<html> <head> <title>Hello World!</title> </head> <body> <h1>Hello World!</h1> </body> </html>"},{"prompt":"What is the unary operator in C++?","completion":"In C++, a unary operator is an operator that takes only a single operand to perform an action. Examples of unary operators include the negation operator (!), increment operator (++), decrement operator (--), and address-of operator (&)."},{"prompt":"Construct a class in Java that has two methods called 'sayHello' and 'sayGoodbye'.","completion":"class HelloGoodbye { public static void sayHello() { System.out.println(\\"Hello!\\"); } public static void sayGoodbye() { System.out.println(\\"Goodbye!\\"); } }"},{"prompt":"What are the advantages of using a graphical user interface?","completion":"The advantages of using a graphical user interface (GUI) include improved usability and accessibility, better visual communication of information, easier drag-and-drop capabilities, improved data visualization, and the ability to add graphics, sound and video to enhance user experience. GUI's also facilitate multi-tasking, allowing users to view and manipulate multiple windows and documents simultaneously."},{"prompt":"Write a script in Python for generating a histogram for a given set of data. [3, 5, 8, 1, 9, 12]","completion":"import matplotlib.pyplot as plt data = [3, 5, 8, 1, 9, 12] plt.hist(data, color='blue', ec='black') plt.title(\\"Histogram\\") plt.xlabel(\\"Values\\") plt.ylabel(\\"Frequency\\") plt.show()"},{"prompt":"Create a function in Javascript to return an array containing the numbers from 1 to 10.","completion":"function generateArray() { let arr = []; for (let i = 1; i <= 10; i++) { arr.push(i); } return arr; } console.log(generateArray()); Output: [1,2,3,4,5,6,7,8,9,10]"},{"prompt":"Create a function in PHP that reverses the order of an array. [3, 5, 8, 1, 9, 12]","completion":"function reverse_array(a) { n = count(a); temp=null; for (i=0; i<n/2; i++) { temp = a[i]; a[i] = a[n-i-1]; a[n-i-1] = temp; } return a; } print_r(reverse_array([3, 5, 8, 1, 9, 12])); Output: Array ( [0] => 12 [1] => 9 [2] => 1 [3] => 8 [4] => 5 [5] => 3 )"},{"prompt":"Given the class definition below, write a method to calculate the discount. class DiscountCalculator: def __init__(self, price, cash_coupon, percentage_coupon): self.price = price self.cash_coupon = cash_coupon self.percentage_coupon = percentage_coupo","completion":"def calculate_discount(self): discount = self.price - (self.cash_coupon + (self.price * self.percentage_coupon / 100)) return discount"},{"prompt":"Explain the concept behind the Python decorator.","completion":"Python decorator is a function which takes another function as argument and extends the behavior of that function without modifying its code. It allows developers to modify the behavior of a function, class or method at runtime without changing the code itself. Decorators are heavily used in frameworks like Flask and Django which are based on the MVC pattern. Decorators allow developers to easily modify and extend the code without having to rewrite it."},{"prompt":"Write a code to wrap a text in a box, with the given length and padding parameters. text = \\"Hello World!\\", length = 20, padding = 5","completion":"def wrap_in_box(text, length, padding): border = \\"\\" for i in range(length): border += \\"-\\" space = \\"\\" for i in range(padding): space += \\" \\" text = space + text + space if len(text) > length: text = text[:length-1] text = text.center(length) print(border) print(text) print(border)"},{"prompt":"Create an HTML code to produce a form which contains two text fields (username and password) and submit button.","completion":"<form> <label>Username:</label> <input type=\\"text\\" name=\\"username\\" required> <br/><br/> <label>Password:</label> <input type=\\"password\\" name=\\"password\\" required> <br/><br/> <input type=\\"submit\\" value=\\"Submit\\" > </form>"},{"prompt":"Debug a logic error in this JavaScript code that returns the wrong result. function multiply(a,b) { return a + b; }","completion":"function multiply(a,b) { return a * b; }"},{"prompt":"Create a Java program to implement a doubly linked list with the following operations: insert, delete, display.","completion":"class Node { int data; Node previous; Node next; public Node(int data) { this.data = data; this.previous = null; this.next = null; } } class DoublyLinkedList { Node head; // Inserts a new Node at front of the list public void push(int new_data) { Node new_node = new Node(new_data); new_node.next = head; new_node.previous = null; if (head != null) head.previous = new_node; head = new_node; } // Delete a node from the list void deleteNode(Node node_ptr) { // If node to be deleted is head node if (head == node_ptr) head = node_ptr.next; // Change next only if node to be deleted // is NOT the last node if (node_ptr.next != null) node_ptr.next.previous = node_ptr.previous; // Change prev only if node to be deleted // is NOT the first node if (node_ptr.previous != null) node_ptr.previous.next = node_ptr.next; } // Display linked list public void display() { Node last = null; System.out.println(\\"Doubly Linked List in forward n\\"); while (head != null) { System.out.print(head.data + \\" <=> \\"); last = head; head = head.next; } System.out.println(\\"nulln\\"); System.out.println(\\"Doubly Linked List in reverse n\\"); while (last != null) { System.out.print(last.data + \\" <=> \\"); last = last.previous; } System.out.println(\\"nulln\\"); } }"},{"prompt":"Create a JavaScript code to insert a given item at the specified position in an array. item = \\"hello world\\", position = 2","completion":"function insertAtPosition(item, position, array) { array.splice(position, 0, item); return array; }"},{"prompt":"Create a function that returns the maximum element of a given list. Given List: [3, 12, 2, 6, -9]","completion":"def max_val(list): max_val = list[0] for i in range(len(list)): if list[i] > max_val: max_val = list[i] return max_val"},{"prompt":"Design a code to search a given element x in a vector. vector: [3, 17, 5, 11], x: 5","completion":"def search_x(x, vector): for i in range(len(vector)): if vector[i] == x: return i return -1"},{"prompt":"Develop a code to sort a list in ascending or descending order. givenList: [5, -3, 2, 4, 0], sortOrder: \\"ascending","completion":"def sort_list(givenList, sortOrder): for i in range(len(givenList)): for j in range(i + 1, len(givenList)): if sortOrder == \\"ascending\\": if givenList[i] > givenList[j]: givenList[i], givenList[j] = givenList[j], givenList[i] elif sortOrder == \\"descending\\": if givenList[i] < givenList[j]: givenList[i], givenList[j] = givenList[j], givenList[i] return givenList"},{"prompt":"Construct a program which takes two numbers as input and returns the multiplication of these numbers. 8, 4","completion":"def multiplication(num1, num2): return num1 * num2"},{"prompt":"Develop a code to delete a given element from a list. [3, 6, 8, 14], element: 14","completion":"def delete_element(given_list, element): for i in range(len(given_list)): if given_list[i] == element: del given_list[i] break return given_list"},{"prompt":"Create a function in Java to convert a string of comma-separated values into an array. data = \\"Banana, Apple, Aprico","completion":"public static String[] convertStringToArray(String data) { String[] elements = data.split(\\",\\"); // Trim all the elements for (int i = 0; i < elements.length; i++) { elements[i] = elements[i].trim(); } return elements; }"},{"prompt":"Create an HTML page with a table containing the name and age of 5 people. Name Age John 25 Lisa 22 Emily 19 George 21 Samuel 20","completion":"<html> <head> <title>People Age Table</title> </head> <body> <table> <tr> <th>Name</th> <th>Age</th> </tr> <tr> <td>John</td> <td>25</td> </tr> <tr> <td>Lisa</td> <td>22</td> </tr> <tr> <td>Emily</td> <td>19</td> </tr> <tr> <td>George</td> <td>21</td> </tr> <tr> <td>Samuel</td> <td>20</td> </tr> </table> </body> </html>"},{"prompt":"Create a C++ program to concatenate two string variables. string1 = \\"Hello\\" string2 = \\"World","completion":"#include <iostream> #include <string> int main() { std::string string1 = \\"Hello\\"; std::string string2 = \\"World\\"; std::string concatenation = string1 + \\" \\" + string2; std::cout << concatenation; return 0; }"},{"prompt":"Write a SQL query to show the first 10 customers in an alphabetical order, sorted by their last name. Table Customers: id, first_name, last_name","completion":"SELECT first_name, last_name FROM Customers ORDER BY last_name ASC LIMIT 10"},{"prompt":"Write a JavaScript expression to remove all even numbers in an array.","completion":"function removeEvens(numbers) { return numbers.filter((num) => num % 2 !== 0); }"},{"prompt":"Create a class in Java that encapsulates a student's name and grade point average (GPA).","completion":"public class Student { private String name; private double gpa; public Student(String name, double gpa) { this.name = name; this.gpa = gpa; } public String getName() { return name; } public double getGPA() { return gpa; } }"},{"prompt":"given a sentence, Write a JavaScript program to find out whether the sentence contains all the vowels. let sentence = \\"This is an example sentence\\";","completion":"function findVowels(sentence) { let count = 0; let vowels = \\"aeiou\\"; for (let char of sentence.toLowerCase()) { if (vowels.indexOf(char) !== -1) { count++; } } return count === 5; }"},{"prompt":"Write a code to create a dictionary containing the frequency of each word in a given string. S = \\"hello world","completion":"def word_frequency(S): frequency = dict() words = S.split() for word in words: if word in frequency: frequency[word] += 1 else: frequency[word] = 1 return frequency print(word_frequency(S))"},{"prompt":"Given a 2 dimensional array, create a code to transpose the array.","completion":"def transpose_matrix(matrix): row = len(matrix) col = len(matrix[0]) transpose = [[0 for j in range(row)] for i in range(col)] for i in range(row): for j in range(col): transpose[j][i] = matrix[i][j] return transpose matrix = [[1, 2, 3], [4, 5, 6], [7, 8, 9]] print(transpose_matrix(matrix))"},{"prompt":"Write a code to create a function to rotate a given linked list.","completion":"\\"\\"\\" Create a function to rotate a given linked list \\"\\"\\" # Create a class node class Node: # Create a constructor to initialise the node object def __init__(self, data): self.data = data self.next = None class LinkedList: # Create a constructor to initialise the linked list def __init__(self): self.head = None # Create a function to rotate the linked list def rotate(self, index): if (index == 0): return prev = None curr = self.head while (index > 0): prev = curr curr = curr.next index -= 1 prev.next = None self.head = curr while (curr.next != None): curr = curr.next curr.next = self.head"},{"prompt":"Print the output of adding two integers in Java. int a = 10; int b = 20;","completion":"int a = 10; int b = 20; int c = a + b; System.out.println(c); // Outputs 30"},{"prompt":"Rewrite the following code to output the result in the command line using Node.js let sum = 10 + 20","completion":"let sum = 10 + 20; console.log(sum); // Outputs 30"},{"prompt":"Correct the following code in Java. public class HelloWorld { public static Void main(String[] args) { System.out.println(\\"Hello World!\\"): } }","completion":"public class HelloWorld { public static void main(String[] args) { System.out.println(\\"Hello World!\\"); } }"},{"prompt":"Generate an HTML page using the defined header and footer. Header: <head> <title>My Page</title> </head> Footer: <div id=\\"footer\\"> <p>Copyright © 2020 MyPage</p> </div>","completion":"<html> <head> <title>My Page</title> </head> <body> <div id=\\"content\\"> <h1>My Page</h1> </div> <div id=\\"footer\\"> <p>Copyright © 2020 MyPage</p> </div> </body> </html>"},{"prompt":"Compress the following string using LZW compression. Input: ‘ABBBCDCDEFFG’","completion":"The compressed string would be ‘A1B3C1D1E1F2G1’."},{"prompt":"Create a React component with \\"Employee\\" as the title and \\"Name\\" and \\"Age\\" as the heading.","completion":"import React, {Component} from 'react'; class Employee extends Component { render() { return ( <div> <h1>Employee</h1> <table> <thead> <tr> <th>Name</th> <th>Age</th> </tr> </thead> <tbody> <tr> <td></td> <td></td> </tr> </tbody> </table> </div> ); } } export default Employee;"},{"prompt":"mplement FTP server in Python","completion":"import ftplib def start_ftp_server(host, port, user, password): server = ftplib.FTP() server.connect(host, port) server.login(user, password) print('FTP Server started successfully') start_ftp_server('localhost', 21, 'testuser', 'testpass')"},{"prompt":"Write a method to find duplicate elements in an array of integers.","completion":"We can solve this problem using a HashSet. We traverse the array and insert the elements in the HashSet. If the element already exists in the HashSet, then it is a duplicate. public static boolean findDuplicate(int[] arr) { Set<Integer> set = new HashSet<Integer>(); for(int i = 0; i < arr.length; i++) { if(set.contains(arr[i])) { return true; } set.add(arr[i]); } return false; }"},{"prompt":"Convert the given input string to lower case keeping all other characters same. FEDCb","completion":"fedcba"},{"prompt":"Generate a random letter between a and z.","completion":"p"},{"prompt":"There is a string of code. Can you tell me if there are syntax errors in it? def foo(): print('bar","completion":"true"},{"prompt":"Using Java, write a program to find the sum of natural numbers from 1 to an input number. 10","completion":"public class Sum { public static void main(String[] args) { int num = 10; int sum = 0; for (int i = 1; i <= num; i++) { sum += i; } System.out.println(\\"Sum of natural numbers from 1 to \\" + num + \\" is \\" + sum); } }"},{"prompt":"Write a boolean expression for the statement \\"4 is greater than 5\\".","completion":"4 > 5"},{"prompt":"Write a loop in C++ to print out a list of numbers from 1 to 100.","completion":"#include <iostream> int main() { for(int i = 1; i <= 100; i++) { std::cout << i << ' '; } return 0; }"},{"prompt":"Write the SQL query to print out all the products in the product table.","completion":"SELECT * FROM product;"},{"prompt":"Create a javascript function for calculating the average of 1 to n-1 numbers in an array. [1, 2, 3, 4]","completion":"function calcAvg(arr) { let sum = 0; let arrLength = arr.length - 1; for(let i = 0; i < arrLength; i++) { sum += arr[i]; } return sum / arrLength; }"},{"prompt":"Generate a python statement to print out \\"Hello World\\".","completion":"print(\\"Hello World\\")"},{"prompt":"Write a CSS code to create a div container with a width of 500px and a label \\"Important\\".","completion":"<div style=\\"width: 500px;\\"> <span>Important</span> </div>"},{"prompt":"Given two strings, write a program to find the number of common characters. string_1 = \\"computer\\" string_2 = \\"science","completion":"def num_common_characters(str1, str2): char_count = {} for c in str1: if c in str2: if c not in char_count: char_count[c] = 1 else: char_count[c] += 1 return sum(char_count.values())"},{"prompt":"Given a JavaScript code, what are valid identifier names for its variables?","completion":"Valid identifier names for JavaScript variables must start with a letter, underscore (_), or dollar sign (); can contain alphanumeric characters and underscore; and must not contain spaces, start with a number or a keyword (such as \\"var\\"). Examples of valid variable names include \\"myVar\\", \\"_1stName\\", \\"name2\\"."},{"prompt":"Generate a JavaScript function to return the average of two numbers","completion":"function avgTwoNums(num1, num2) { const average = (num1 + num2) / 2; return average; }"},{"prompt":"dentify the type of input that is required for this Python function. def get_sum(a, b): # return the sum of two number","completion":"The type of input required for this Python function is two numerical values (for example, integers or floats)."},{"prompt":"Generate a Ruby program which returns the sum of all even numbers between 0 and 10","completion":"# Function to calculate the sum of all even numbers between 0 and 10 def sum_even sum = 0 (0..10).each do |even_number| if even_number % 2 == 0 sum += even_number end end sum end # Invoke the function sum_even"},{"prompt":"Write an HTML program to display a web page with a table, a heading, and a div","completion":"<html> <head> <title> Sample Table </title> </head> <body> <h1>My Sample Table</h1> <table> <thead> <tr> <th>Col1</th> <th>Col2</th> </tr> </thead> <tbody> <tr> <td>Row1Value1</td> <td>Row1Value2</td> </tr> </tbody> </table> <div>This is a sample div.</div> </body> </html>"},{"prompt":"Create a array of objects in JavaScript.","completion":"let arrayObjects = [ {name: 'Spike', age: 6}, {name: 'Spot', age: 4}, {name: 'Max', age: 2}, {name: 'Fluffy', age: 8} ];"},{"prompt":"Write a Node.js server program to handle HTTP requests to a web page.","completion":"const http = require('http'); const requestListener = function (req, res) { res.end('Hello World!'); }; const server = http.createServer(requestListener); server.listen(3000);"},{"prompt":"Create a CSS class to style an anchor tag.","completion":".styled-link { color: #00b3e6; text-decoration: none; font-weight: bold; }"},{"prompt":"Create a JSON object to represent a profile deleted from a social platform.","completion":"{ \\"deleted\\": true, \\"name\\": \\"John Doe\\", \\"email\\": \\"john.doe@example.com\\", \\"age\\": 32, \\"gender\\": \\"Male\\" }"},{"prompt":"Create a HTML form with an email input field.","completion":"<form> <label for=\\"email\\">Email:</label> <input type=\\"email\\" id=\\"email\\" placeholder=\\"Email\\"/> <input type=\\"submit\\" value=\\"Submit\\"/> </form>"},{"prompt":"Execute this JavaScript Promise chain and explain the output. new Promise((resolve, reject) => { setTimeout(() => { resolve(1); }, 1000); }).then((result) => { console.log(result); // 1 return new Promise((resolve, reject) => { setTimeout(() => { resolve(result * 2); }, 1000); }); }).then((result) => { console.log(result); // 2 return result * 2; }).then((result) => { console.log(result); // 4 });","completion":"This JavaScript promise chain prints out the following output: 1 2 4 The first console.log() logs the result of the first promise when it resolves, which is the number 1. The second console.log() logs the result of the second promise when it resolves, which is the number 2 (1 * 2). The third console.log() logs the result of the final promise when it resolves, which is the number 4 (2 * 2)."},{"prompt":"Write a Java code to read a string from the user and print it reversed.","completion":"import java.util.Scanner; public class ReverseString { public static void main(String[] args) { Scanner in = new Scanner(System.in); System.out.print(\\"Enter a string: \\"); String str = in.nextLine(); in.close(); char[] arr = str.toCharArray(); for (int i = arr.length - 1; i >= 0; i--) { System.out.print(arr[i]); } } }"},{"prompt":"Create a SQL query to select users born before 1989-02-17.","completion":"SELECT * FROM users WHERE date_of_birth < '1989-02-17';"},{"prompt":"Write a function in Java to generate all possible strings of length n drawn from 0–9.","completion":"import java.util.ArrayList; public class GenerateStrings { public static ArrayList<String> generateStrings(int n){ ArrayList<String> stringList = new ArrayList<>(); char[] string = new char[n]; generateStringUtil(string, n, 0, stringList); return stringList; } public static void generateStringUtil(char[] string, int n, int i, ArrayList<String> stringList){ if(i == n){ stringList.add(String.valueOf(string)); return; } for(int j = 0; j < 10; j++){ char c = (char) (j + '0'); string[i] = c; generateStringUtil(string, n, i+1, stringList); } } public static void main(String[] args) { ArrayList<String> strings = generateStrings(3); System.out.println(strings); } }"},{"prompt":"Generate a code to take in a list of sentences, totaling no more than 100 words and output the longest sentence. ['This sentence is the longest.', 'This sentence is the shortest.']","completion":"def get_longest_sentence(lst): longest_sentence = '' longest_len = 0 for s in lst: s_len = len(s) if s_len > longest_len: longest_sentence = s longest_len = s_len return longest_sentence if __name__ == '__main__': lst = ['This sentence is the longest.', 'This sentence is the shortest.'] longest_sentence = get_longest_sentence(lst) print(longest_sentence)"},{"prompt":"What MySQL query can be used to retrieve the most recent record in a table?","completion":"SELECT * FROM table_name ORDER BY id DESC LIMIT 1;"},{"prompt":"Create a SQL query to find the names and addresses of customers who have purchased a product that is priced more than 50. TABLE customers Columns: * customer_id * first_name * last_name * street * city * state * zip TABLE orders Columns: * order_id * customer_id * order_date TABLE order_items Columns: * order_item_id * order_id * product_id * quantity * price","completion":"SELECT c.first_name, c.last_name, c.street, c.city, c.state, c.zip FROM customers c INNER JOIN orders o ON c.customer_id = o.customer_id INNER JOIN order_items oi ON o.order_id = oi.order_id WHERE oi.price > 50"},{"prompt":"Describe the purpose and syntax of the 'forEach' method in Javascript.","completion":"The forEach() method in Javascript is used to iterate over each element in an array. It takes a callback function as an argument which is executed for each element of the array. The syntax of the forEach() method is as follows: array.forEach(function(element, index, array) { // code to be executed; });"},{"prompt":"Write an SQL query to find all customers who have not placed any orders. TABLE customers Columns: * customer_id * first_name * last_name TABLE orders Columns: * order_id * customer_id * order_date","completion":"SELECT c.customer_id, c.first_name, c.last_name FROM customers c LEFT JOIN orders o ON c.customer_id = o.customer_id WHERE o.customer_id IS NULL"},{"prompt":"Describe two ways to prevent SQL injection.","completion":"Two ways to prevent SQL injection are parameterized queries and escaping user input. Parameterized queries use placeholders to define the data that will be inserted into the query. This prevents any malicious data from being added as it will be treated as an ordinary string. Escaping user input is another way to prevent SQL injection. By escaping special characters, any malicious input can be prevented from running in the database."},{"prompt":"Create a JavaScript code snippet to store a string value in localStorage.","completion":"localStorage.setItem('key', 'value');"},{"prompt":"Write an SQL query to find the products which have not been ordered by any customers. TABLE products Columns: * product_id * name * description * price TABLE order_items Columns: * order_item_id * order_id * product_id","completion":"SELECT p.product_id, p.name, p.description, p.price FROM products p LEFT JOIN order_items oi ON p.product_id = oi.product_id WHERE oi.product_id IS NULL"},{"prompt":"Write a Python program to calculate the sum of all multiples of 3 and 5 between 1 and a given number.","completion":"def sum_multiples_of_3_and_5(n): sum = 0 for i in range(1, n+1): if i % 3 == 0 or i % 5 == 0: sum += i return sum"},{"prompt":"Write a CSS code snippet to set the default font size to 16px and color to green for all links.","completion":"a { font-size: 16px; color: green; }"},{"prompt":"Suggest a way to classify text documents into a certain number of topics.","completion":"One way to classify text documents into a certain number of topics is to use latent Dirichlet allocation (LDA). LDA is a generative statistical model that allows for documents to be modeled as a mixture of topics. It fits well when documents are short and there is a large number of topics to be identified. The model takes as input a corpus of documents, builds a bag-of-words for each document, and then assigns a probability distribution to each document for the topics present. In this way, documents can be classified according to the respective topic with the highest probability."},{"prompt":"Create a user-defined function in C# to find the roots of a second-order polynomial.","completion":"public static void FindRoots(double a, double b, double c) { double discriminant = b * b - 4 * a * c; // condition for real and different roots if (discriminant > 0) { double root1 = (-b + Math.Sqrt(discriminant)) / (2 * a); double root2 = (-b - Math.Sqrt(discriminant)) / (2 * a); Console.WriteLine(\\"The roots of the equation are {0} and {1}\\", root1, root2); } // condition for real and equal roots else if (discriminant == 0) { double root1 = -b / (2 * a); Console.WriteLine(\\"The root of the equation is {0}\\", root1); } // if roots are not real else { Console.WriteLine(\\"The equation has no real roots\\"); } }"},{"prompt":"Write an algorithm for sorting a single-linked list.","completion":"Algorithm for sorting a single-linked list: 1. Traverse the list and find the minimum value. 2. Save the pointer to this minimum element. 3. Move this minimum element to the start of the list and make it the head node. 4. Set the pointer to the last minimum element to point to the next element. 5. Repeat steps 1-4, until the end of the list is reached."},{"prompt":"Explain how garbage collection works in Java.","completion":"Garbage collection in Java works by periodically running a garbage collector to identify and reclaim memory occupied by objects that are no longer referenced. This process is done in order to free the memory for use by other objects and to prevent memory leaks. The Java Virtual Machine implements the garbage collection process by running a special type of thread, called the garbage collector, which scans for objects that are no longer referenced. When an object is no longer referenced, the garbage collector then reclaims the memory occupied by that object and makes it available for use elsewhere."},{"prompt":"Create a function in Java to convert a given timestamp into readable date and time. 1586714115","completion":"public static String convertTimeStampToDateTime(long timestamp) { Date date = new Date(timestamp * 1000L); SimpleDateFormat sdf = new SimpleDateFormat(\\"yyyy-MM-dd HH:mm:ss z\\"); return sdf.format(date); }"},{"prompt":"Write the code for counting the number of occurrences of a character in a given string. String: \\"Hello World\\" Character: 'l'","completion":"public static int countCharacterOccurrences(String s, char c) { int count = 0; for (int i = 0; i < s.length(); i++) { if (s.charAt(i) == c) count++; } return count; }"},{"prompt":"Suggest an algorithm to implement a stack with two queues.","completion":"Algorithm for implementing a stack with two queues: 1. Create two queues and enqueue the element to the first queue. 2. Dequeue an element from the first queue, and enqueue it again to the second queue. 3. Now, enqueue the next element from the first queue to the first queue. 4. Repeat steps 2 and 3, until all the elements are dequeued from the first queue. 5. Dequeue an element from the second queue, this will be the top of the stack."},{"prompt":"Convert a code written in Python 3 into code compatible with Python 2. input = int(input('Enter your number: '))","completion":"import sys if sys.version_info.major == 3: input = int(input('Enter your number: ')) else: input = int(raw_input('Enter your number: '))"},{"prompt":"Update the code to handle cases when the two numbers in the array are the same. def add_two_numbers(nums): return nums[0] + nums[1]","completion":"def add_two_numbers(nums): if nums[0] == nums[1]: return nums[0] else: return nums[0] + nums[1]"},{"prompt":"Break down the given code into its individual parts. def square_sum(x, y): return x*x + y*y","completion":"def square_sum(x, y): return x * x + y * y # Break down code # part 1 def square_sum(x, y): # part 2 return x * x + y * y # part 3 # return calculated value"},{"prompt":"Write a Python function which takes a number as an argument and print \\"even\\" if the number is even and print \\"odd\\" if the number is odd.","completion":"def print_even_odd(number): if number % 2 == 0: print(\\"even\\") else: print(\\"odd\\")"},{"prompt":"Add a parameter to the function to calculate the area of a triangle. def calculate_area(length, width): return length * width","completion":"def calculate_area(length, width, height): return 0.5 * (length * width + length * height + width * height)"},{"prompt":"Rewrite the code to be more concise and efficient. def find_min(arr): min_val = float('inf') for i in arr: if i < min_val: min_val = i return min_val","completion":"def find_min(arr): return min(arr)"},{"prompt":"Update the code so that it only prints out the lines which contain the word “print”. src_code = \\"\\"\\"if x == 1: print \\"hello\\" if y == 2: print \\"world\\" print \\"!","completion":"src_code = \\"\\"\\"if x == 1: print \\"hello\\" if y == 2: print \\"world\\" print \\"!\\" # updated code lines = src_code.splitlines() for line in lines: if \\"print\\" in line: print(line)"},{"prompt":"Update the code to ensure that an error is raised if the input is the wrong type. def age_calc(age): return age + 5","completion":"def age_calc(age): if not isinstance(age, int): raise TypeError(\\"Input for age calculation must be int\\") return age + 5"},{"prompt":"Compute a factorial of a given integer. 5","completion":"\\"\\"\\" Compute a factorial of a given integer \\"\\"\\" def factorial(n): if n == 0: return 1 else: return n * factorial(n-1) if __name__ == '__main__': n = int(input()) print(factorial(n))"},{"prompt":"Make a function which takes two numbers as arguments and returns their sum.","completion":"\\"\\"\\" Function which takes two numbers as arguments and returns their sum \\"\\"\\" def add_numbers(x, y): return x + y if __name__ == '__main__': x = int(input()) y = int(input()) print(add_numbers(x, y))"},{"prompt":"mplement a Wiki page title search using Python. Search string: \\"Machine Learning","completion":"\\"\\"\\" Implement a Wiki page title search using Python \\"\\"\\" import wikipedia def search_wiki_title(search_string): try: wikipedia.set_lang(\\"en\\") result = wikipedia.search(search_string)[0] except (wikipedia.exceptions.PageError, wikipedia.exceptions.DisambiguationError): result = None return result if __name__ == '__main__': search_string = input('Search string: ') result = search_wiki_title(search_string) print(result)"},{"prompt":"Write a function to find the average of given numbers using a list. nums = [2, 4, 6, 8]","completion":"\\"\\"\\" Write a function to find the average of given numbers using a list \\"\\"\\" def find_average(nums): return sum(nums) / len(nums) if __name__ == '__main__': nums = [2, 4, 6, 8] print(find_average(nums))"},{"prompt":"Parse an HTML table and extract all the rows. <table> <tr> <td>Row 1 - Column 1</td> <td>Row 1 - Column 2</td> </tr> <tr> <td>Row 2 - Column 1</td> <td>Row 2 - Column 2</td> </tr> </table>","completion":"\\"\\"\\" Parse an HTML table and extract all the rows. \\"\\"\\" import re def get_table_rows(html): pattern = re.compile('<tr>(.*?)</tr>', re.DOTALL) rows = re.findall(pattern, html) return rows if __name__ == '__main__': html = \\"\\"\\" <table> <tr> <td>Row 1 - Column 1</td> <td>Row 1 - Column 2</td> </tr> <tr> <td>Row 2 - Column 1</td> <td>Row 2 - Column 2</td> </tr> </table> \\"\\"\\" rows = get_table_rows(html) print(rows)"},{"prompt":"Create a function to do a binary search on a sorted list of integers. nums = [2, 4, 5, 7, 8, 9, 10, 14]","completion":"def binary_search(nums, target): left, right = 0, len(nums) - 1 while left <= right: mid = (left + right) // 2 if nums[mid] == target: return mid elif nums[mid] > target: right = mid - 1 else: left = mid + 1 return -1 # target is not found"},{"prompt":"Develop a for loop to write a program to print the first 5 prime numbers","completion":"count = 0 # to count the number of prime numbers for num in range(1,100): # all prime numbers are greater than 1 if num > 1: for i in range(2,num): if (num % i) == 0: break else: print(num) count += 1 if count == 5: break"},{"prompt":"What is a for loop?","completion":"A for loop is a programming structure used to repeat a specific set of instructions for a given number of times or until a specified condition is met. The syntax of a for loop is \\"for <variable> in <sequence>:\\" and the format is \\"for <variable> in range(<start_value>, <end_value>):\\" where the start and end value are optional. The code within the loop will be executed until the given condition is met, or the loop is terminated with a break command."},{"prompt":"Explain what the yield keyword does in Python.","completion":"The yield keyword in Python is used to create an iterator. When a function containing yield is called, it does not execute the code as a normal function would, instead it returns a generator object which is an iterator. Each time next() is called on the iterator, the yield statement is executed and returns a value. The execution of the function can be stopped at any point using the yield statement and the function can save the state of its variables when a yield statement is encountered, allowing it to be resumed after all the values have been generated."},{"prompt":"w does a try-except block work in Python?","completion":"A try-except block in Python allows a code block to be tested for errors. The code that could potentially cause an exception is placed in the try clause and the code that handles the exception is put in the except clause. If an error is encountered in the try clause, the program execution is transferred to the except clause for further handling. The except clause can also be used to handle multiple exceptions in the same block of code."},{"prompt":"Using SQL, write a query to find the total salary of employees in the Employee table Table: | EmployeeID | Name | Salary | |------------|-------|--------| | 1 | John | 1000 | | 2 | David | 2000 | | 3 | Mark | 1500 |","completion":"SELECT SUM(Salary) FROM Employee;"},{"prompt":"Create a for loop in Java to print out the integers from 10 to 1 in decreasing order.","completion":"for(int i=10; i>=1; i--) { System.out.println(i); }"},{"prompt":"f a pandas dataframe has five columns and four rows, what is the shape of the dataframe?","completion":"The shape of the pandas dataframe would be (4, 5)."},{"prompt":"Compute the following expression in Java. 5 + 10 * 3","completion":"int result = 5 + (10 * 3); System.out.println(result); // Output: 35"},{"prompt":"Write a class in Java that contains two method to add and subtract two numbers.","completion":"public class Calculator { public int add(int a, int b) { return a + b; } public int subtract(int a, int b) { return a - b; } }"},{"prompt":"Develop a class in Python to print the name and age of the user. Name:\\"John\\", Age:\\"25","completion":"class Hello: def __init__(self,name,age): self.name = name self.age = age def printNameAge(self): print(\\"Name:\\", self.name, \\"Age:\\", self.age) obj1 = Hello(\\"John\\", 25) obj1.printNameAge()"},{"prompt":"Alter the code to include a break statement in the loop. for i in range(0, 10): print(\\"The number is \\" + str(i))","completion":"for i in range(0, 10): print(\\"The number is \\" + str(i)) if i == 5: break"},{"prompt":"Change the HTML element to have a font size of 10px <p>Hello World!</p>","completion":"<p style=\\"font-size:10px;\\">Hello World!</p>"},{"prompt":"Create a script to count the number of alphabets, digits and special characters in a string. String = \\"Hello World 123%^&","completion":"string = \\"Hello World 123%^&\\" alphabets = 0 digits = 0 special_characters = 0 for i in range(0, len(string)): if ((string[i] >= 'a' and string[i] <= 'z') or (string[i] >= 'A' and string[i] <= 'Z')): alphabets = alphabets + 1 elif (string[i] >= '0' and string[i] <= '9'): digits = digits + 1 else: special_characters = special_characters + 1 print(\\"Alphabets:\\", alphabets) print(\\"Digits:\\", digits) print(\\"Special Characters:\\", special_characters)"},{"prompt":"Find physical address of the code. Code: 0x7fff2ceb5de5","completion":"The physical address of the code is 18446744071421161285."},{"prompt":"Preprocess a natural language text for text classification. Text: “The food I ate yesterday was really amazing. I loved the entire experience.”","completion":"text = \\"The food I ate yesterday was really amazing. I loved the entire experience.\\" # lowercase text = text.lower() # remove punctuation text = re.sub(r'[^ws]','',text) # remove digits text = re.sub(r'd+','',text) # Tokenization tokens = word_tokenize(text) # Stopword removal filtered_words = [word for word in tokens if word not in stopwords.words('english')] # Lemmatization lemmatizer = WordNetLemmatizer() lemmatized_word = [lemmatizer.lemmatize(word) for word in filtered_words] print(lemmatized_word)"},{"prompt":"Create a function to find out if a number is even","completion":"def isEven(n): if (n % 2 == 0): return True else: return False"},{"prompt":"Create a SQL table with 3 columns","completion":"CREATE TABLE table_name ( column1 datatype, column2 datatype, column3 datatype );"},{"prompt":"Parse the following JSON data and extract the \\"name\\" field. { \\"id\\": 12345, \\"name\\": \\"John Smith\\", \\"age\\": 30 }","completion":"import json data = '{ \\"id\\": 12345, \\"name\\": \\"John Smith\\", \\"age\\": 30 }' json_data = json.loads(data) name = json_data[\\"name\\"] print(name) # Output: John Smith"},{"prompt":"Provide the month that is 6 months after June.","completion":"December"},{"prompt":"Convert the following number from decimal to hexadecimal. 243","completion":"f3"},{"prompt":"Given the following list of strings: list_str = [\\"one\\", \\"two\\", \\"three\\", \\"four\\", \\"five\\"] Write a program that prints out the strings in uppercase.","completion":"for i in list_str: print(i.upper())"},{"prompt":"Write a basic routine that takes in a JSON string and outputs the longest word found inside. data = '{\\"John\\": 56, \\"Ann\\":64, \\"Victor\\": 23}'","completion":"def get_longest_word(json_string): \\"\\"\\"Return the longest word found inside the given json_string\\"\\"\\" words = [] data = json.loads(json_string) for key,val in data.items(): words.append(key) return max(words, key=len)"},{"prompt":"Generate a random unique ID and store it in a variable.","completion":"import uuid random_id = uuid.uuid4()"},{"prompt":"Reverse the given list using python. list_to_reverse = [2, 3, 5, 6, 8, 10, 11]","completion":"def reverse_list(input_list): \\"\\"\\"Return a reversed copy of the list\\"\\"\\" return input_list[::-1]"},{"prompt":"Create a string variable from a tuple. tuple_to_string = (\\"This\\", \\"is\\", \\"a\\", \\"tuple\\")","completion":"string_from_tuple = \\" \\".join(tuple_to_string)"},{"prompt":"Generate a List Comprehension that returns a list containing the first 5 prime numbers","completion":"[x for x in range(2, 11) if all(x % y != 0 for y in range(2,x))][:5]"},{"prompt":"Write a regular expression that matches the string \\"line break\\".","completion":"linesbreak"},{"prompt":"Write a loop that prints the numbers from 10 to 1, each on its own line.","completion":"for i in range(10, 0, -1): print(i)"},{"prompt":"Given a list of numbers, remove all duplicated entries. num_list = [12, 24, 12, 5, 8, 24]","completion":"no_duplicates = list(set(num_list))"},{"prompt":"Convert a given integer to its equivalent hexadecimal value. num = 67","completion":"hex_val = hex(num)"},{"prompt":"Design a try/except block that takes in a user-entered number and prints whether it is even or odd.","completion":"try: num = int(input(\\"Enter a number: \\")) if num % 2 == 0: print(str(num) + \\" is even.\\") else: print(str(num) + \\" is odd.\\") except ValueError: print(\\"Input must be an integer.\\")"},{"prompt":"Use PyTorch to write a function that predicts a class label based on five numerical features. X = [[0.1, 0.2, 0.3, 0.4, 0.5],[0.2, 0.3, 0.4, 0.5, 0.6]]","completion":"\\"\\"\\" A PyTorch function that predicts a class label based on five numerical features. \\"\\"\\" import torch import torch.nn as nn # Define the model class Model(nn.Module): def __init__(self): super(Model, self).__init__() self.fc1 = nn.Linear(5, 8) self.fc2 = nn.Linear(8, 4) self.fc3 = nn.Linear(4, 2) def forward(self, x): x = torch.relu(self.fc1(x)) x = torch.relu(self.fc2(x)) x = self.fc3(x) return x # Instantiate the model model = Model() # Input X = torch.tensor([[0.1, 0.2, 0.3, 0.4, 0.5],[0.2, 0.3, 0.4, 0.5, 0.6]]) # Get the prediction prediction = model(X)"},{"prompt":"Given a list of grocery items, write a code to generate 1 list containing only the fruits in the list. items =[\\"apple\\",\\"banana\\",\\"grapes\\",\\"rice\\",\\"onion\\"]","completion":"def filter_fruits(items): \\"\\"\\"This function takes a list of grocery items and generates a list containing only the fruits.\\"\\"\\" fruits = [] for item in items: if item in [\\"apple\\", \\"banana\\", \\"grapes\\"]: fruits.append(item) return fruits if __name__ == '__main__': items =[\\"apple\\",\\"banana\\",\\"grapes\\",\\"rice\\",\\"onion\\"] fruits = filter_fruits(items) print(fruits)"},{"prompt":"Generate a function to identify prime numbers between 0 and n.","completion":"def is_prime(n): \\"\\"\\"This function will check if a number is a prime number or not.\\"\\"\\" # Corner case if n <= 1: return False # Check from 2 to n-1 for i in range(2,n): if n % i == 0: return False return True if __name__ == '__main__': for n in range(2, 100): if is_prime(n): print(n)"},{"prompt":"Generate a C++ code to filter out an array containing odd numbers.","completion":"#include <iostream> // Function to filter out odd numbers void filter_odd(int arr[], int n) { int i, k; k = 0; // Traversing the given array // from first to last for (i = 0; i < n; i++) { // If arr[i] is even then // store it at current index if (arr[i] % 2 == 0) { arr[k++] = arr[i]; } } // Modifying original array // elements afterkth index while (k < n) { arr[k++] = 0; } // Print the array elements std::cout << \\"Modified array is : \\"; for (i = 0; i < n; i++) { std::cout << arr[i] << \\" \\"; } } // Driver Code int main() { int arr[] = { 1, 2, 3, 4, 5, 6, 7, 8, 9 }; int n = sizeof(arr) / sizeof(arr[0]); filter_odd(arr, n); return 0; }"},{"prompt":"Create a function that allows users to sign up for your feature using their username and password.","completion":"def sign_up(username, password): \\"\\"\\"This function will allow users to sign up for the feature using their username and password.\\"\\"\\" # Implement sign up feature # ... if __name__ == '__main__': username = \\"JohnDoe\\" password = \\"Passw0rd\\" sign_up(username, password) print(\\"Sign up successful!\\")"},{"prompt":"Write a code to filter out all even numbers from an array which contains both even and odd numbers. arr = [1, 2, 3, 4, 5, 6, 7, 8, 9]","completion":"def filter_even_numbers(arr): \\"\\"\\"This function takes an array and filters out all even numbers.\\"\\"\\" result = [] for num in arr: if num % 2 != 0: result.append(num) return result if __name__ == '__main__': arr = [1, 2, 3, 4, 5, 6, 7, 8, 9] result = filter_even_numbers(arr) print(result)"},{"prompt":"Create a Python class to work with complex numbers.","completion":"class ComplexNumber: \\"\\"\\"This class is used to work with complex numbers.\\"\\"\\" def __init__(self, real, imag): self.real = real self.imag = imag def __add__(self, other): \\"\\"\\"This method overloads the '+' operator to add complex numbers.\\"\\"\\" return ComplexNumber(self.real + other.real, self.imag + other.imag) def __sub__(self, other): \\"\\"\\"This method overloads the '-' operator to subtract complex numbers.\\"\\"\\" return ComplexNumber(self.real - other.real, self.imag - other.imag) def __mul__(self, other): \\"\\"\\"This method overloads the '*' operator to multiply complex numbers.\\"\\"\\" return ComplexNumber(self.real*other.real - self.imag*other.imag, self.real*other.imag + self.imag*other.real) def __str__(self): \\"\\"\\"This method overrides the __str__ method to print complex numbers in a readable format.\\"\\"\\" return self.real + self.imag + \\"i\\" if __name__ == '__main__': c1 = ComplexNumber(1, 2) c2 = ComplexNumber(2, 3) print(\\"Addition of c1 and c2 =\\", c1 + c2) print(\\"Subtration of c1 and c2 =\\", c1 - c2) print(\\"Multiplication of c1 and c2 =\\", c1 * c2)"},{"prompt":"Write a loop in C# to calculate the sum of all numbers between 1 and n. n = 100","completion":"int sum = 0; for(int i = 1; i <= 100; i++) { sum = sum + i; } Console.WriteLine(\\"Sum of all numbers between 1 and 100 = \\" + sum);"},{"prompt":"Write a find() method in JavaScript to find an item in an array. Array: [1, 2, 3, 4, 5], query: 3","completion":"let find = (array, query) => { for (let i = 0; i < array.length; i++) { if (array[i] === query) return i; } return -1; }; let index = find([1, 2, 3, 4, 5], 3); console.log(index);"},{"prompt":"Write a regular expression pattern to match all email addresses with the same top-level domain.","completion":"[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+.[a-zA-Z]{2,4}"},{"prompt":"Explain how recursion works.","completion":"Recursion is a process in which a function calls itself, either directly or indirectly. The execution of such a function consists of recurring steps each of which is called a recurrence step. The number of recurrence steps decreases with each step and the function terminates and returns a result when the number of steps reaches zero. Recursion is used to solve problems that can be broken down into smaller problems of the same type and can be used to simplify the coding process."},{"prompt":"Create a div element in HTML with the class \\"container\\".","completion":"<div class=\\"container\\"></div>"},{"prompt":"this C++ program, there is an error. Please identify and fix the mistake. int main() { cout << \\"Hello World!\\"; return 0","completion":"int main() { std::cout << \\"Hello World!\\" << std::endl; return 0; }"},{"prompt":"mplement a factorial function in Python.","completion":"def factorial(n): if n == 0: return 1 else: return n * factorial(n-1)"},{"prompt":"Make a HTML page that displays a table displaying numbers from 1 to 10.","completion":"<html> <body> <h1>Table showing numbers from 1 to 10</h1> <table> <tr> <th>Number</th> </tr> <tr> <td>1</td> </tr> <tr> <td>2</td> </tr> <tr> <td>3</td> </tr> <tr> <td>4</td> </tr> <tr> <td>5</td> </tr> <tr> <td>6</td> </tr> <tr> <td>7</td> </tr> <tr> <td>8</td> </tr> <tr> <td>9</td> </tr> <tr> <td>10</td> </tr> </table> </body> </html>"},{"prompt":"Generate a Fibonacci sequence with a given length. length = 10","completion":"def generate_fibonacci_sequence(length): sequence = [] current_val, next_val = 0,1 for i in range(length): sequence.append(current_val) current_val, next_val = next_val, current_val + next_val return sequence print(generate_fibonacci_sequence(length)) #Output: [0, 1, 1, 2, 3, 5, 8, 13, 21, 34]"},{"prompt":"Create a class that detects if a String contains a palindrome","completion":"class PalindromeChecker: def __init__(self, word): self.word = word def contains_palindrome(self): for i in range(len(self.word)): if self.word[i] == self.word[len(self.word) - 1 - i]: return True return False"},{"prompt":"Create a function in Python that adds a new item to the beginning of a list. my_list = [\\"Cats\\", \\"Dogs\\", \\"Fish\\"]","completion":"def insert_beginning(my_list, item): my_list = [item] + my_list return my_list"},{"prompt":"Write a conditional statement that prints \\"Welcome to my house\\" when the user enters a positive number and \\"Goodbye\\" when the user enters a negative number. number = 4","completion":"if (number > 0): print(\\"Welcome to my house\\") else: print(\\"Goodbye\\")"},{"prompt":"Write an HTML tag to create a paragraph element.","completion":"<p> </p>"},{"prompt":"Design a class in Java to represent a student, with their name and grade fields.","completion":"public class Student { String name; String grade; public Student(String name, String grade) { this.name = name; this.grade = grade; } public String getName() { return this.name; } public String getGrade() { return this.grade; } }"},{"prompt":"Write a Python code snippet that combines the elements of two lists into a single list. list_1 = [\\"Cat\\", \\"Dog\\", \\"Fish\\"] list_2 = [\\"Monkey\\", \\"Tiger\\", \\"Lion\\"]","completion":"single_list = list_1 + list_2"},{"prompt":"You need to design a database for a school where multiple students can have a tutor of a subject. What is the best way to design the database?","completion":"The best way to design the database is to create three tables: students, tutors and subjects. The students table would contain columns for each student's name, ID and contact details. The tutors table would contain the tutor's name, ID and contact details. The subjects table would contain the subject name, description and number of available tutors. The three tables would then be linked by a linking table, which would contain two columns - one for the student ID, one for the tutor ID - and an extra column to identify which subject the tutor-student pair is associated with."},{"prompt":"Design a search system in Python with two methods (or functions) one method \\"add\\" to add a keyword and value, the other \\"search\\" to search by a keyword return the corresponding value.","completion":"class SearchSystem: def __init__(self): self.data = {} def add(self, keyword, value): self.data[keyword] = value def search(self, keyword): if keyword in self.data: return self.data[keyword] return None"},{"prompt":"Create a JavaScript program to find the area of a triangle using Heron's formula given the three sides, a, b and c.","completion":"function areaOfTriangle(a, b, c) { let s = (a + b + c) / 2; let area = Math.sqrt(s * (s - a) * (s - b) * (s - c)); return area; }"},{"prompt":"Construct an algorithm to calculate the GCD of two numbers.","completion":"A possible algorithm is the Euclidean algorithm. It works by repeatedly dividing the larger number by the smaller number and replace the larger number with the remainder until the remainder becomes zero and the last non-zero remainder is the GCD. def gcd(a,b): if a == 0: return b if b == 0: return a if a > b: return gcd(a % b, b) else: return gcd(a, b % a)"},{"prompt":"You need to design a web page with a search bar that returns clickable results. Construct an algorithm to structure the web page.","completion":"The web page should have a simple structure with a search bar at the top, followed by a display area where the search results are shown. The search bar should have an input field where the text can be entered and a button to start the search. The algorithm should first detect the text entered in the search bar and then the search should be performed. After the search is complete, the results should be displayed in the display area. The results should be clickable so that more information can be opened when they are clicked."},{"prompt":"Write a code that takes a sentence as input and prints the longest word in that sentence. This is a test sentence","completion":"def longest_word(sentence): longest_word = \\"\\" words = sentence.split() for word in words: if len(word) > len(longest_word): longest_word = word return longest_word"},{"prompt":"Create a class in Python with methods \\"add\\" and \\"find\\" to add a value to a dictionary and find the value in it, respectively.","completion":"class Dictionary: def __init__(self): self.data = {} def add(self, key, value): self.data[key] = value def find(self, key): if key in self.data: return self.data[key] return None"},{"prompt":"Write a function to find the closest pair of points in a given array of points.","completion":"def find_closest_pair(points): min_dist = float('inf') closest_pair = None for i in range(len(points)): for j in range(i + 1, len(points)): dist = ((points[i][0] - points[j][0])**2 + (points[i][1] - points[j][1])**2)**0.5 if dist < min_dist: min_dist = dist closest_pair = (points[i], points[j]) return closest_pair"},{"prompt":"You have a list of employee records. Each record contains the employee's name, age, salary and department. Write an algorithm to sort the list by age in ascending order.","completion":"def sort_by_age(employees): sorted_records = [] while employees: record = employees.pop(0) inserted = False for i in range(len(sorted_records)): if record['age'] < sorted_records[i]['age']: sorted_records.insert(i, record) inserted = True break if not inserted: sorted_records.append(record) return sorted_records"},{"prompt":"Create a function to delete an item from a linked list given the head and the item.","completion":"def delete_item(head, item): curr = head prev = None while curr: if curr.val == item: if prev is None: head = curr.next else: prev.next = curr.next return head prev = curr curr = curr.next return head"},{"prompt":"Construct an algorithm to find all possible combinations of a string of characters.","completion":"A possible algorithm is to use a recursive approach. The algorithm would start from the beginning of the string and for each character, generate all possible combinations for the rest of the string. Then, for each combination, the character can either be included or excluded from the combination. Finally, return the list of all possible combinations. def find_combinations(string): if len(string) == 0: return [] result = [] for i in range(len(string)): prefix = string[i] suffix = string[i+1:] combinations = find_combinations(suffix) if len(combinations) == 0: result.append(prefix) else: for combination in combinations: result.append(prefix + combination) result.append(combination) return result"},{"prompt":"w many elements are in list1 after executing the following Python code? list1 = [1, 2, 3] list2 = [4, 5, 6] list1.extend(list2)","completion":"6"},{"prompt":"Write a function that finds the largest number in an array of integers.","completion":"def largest(arr): max = arr[0] for i in arr: if i > max: max = i return max"},{"prompt":"w many elements will the array arr have after executing the following Python code? arr = [1, 2, 3] arr.pop(1)","completion":"2"},{"prompt":"Add the two following numbers in C++. x = 4 y = 5","completion":"int x = 4, y = 5; int sum = x + y; std::cout<<sum;"},{"prompt":"mplement a function to calculate the total amount of money earned from a given array of stock prices. arr = [5, 7, 15.5, 6, 10, 11]","completion":"def calculateTotalEarnings(arr): totalEarnings = 0 for i in range(1, len(arr)): totalEarnings += max(arr[i] - arr[i - 1], 0) return totalEarnings arr = [5, 7, 15.5, 6, 10, 11] totalEarnings = calculateTotalEarnings(arr) print(\\"Total earnings: \\", totalEarnings) # Output # Total earnings: 9.5"},{"prompt":"Create a Python function that generates a random number between two specified numbers. lower_bound = 10 upper_bound = 20","completion":"def random_num(lower_bound, upper_bound): import random return random.randint(lower_bound, upper_bound) lower_bound = 10 upper_bound = 20 print(random_num(lower_bound, upper_bound)) # Output # [random number between 10 and 20]"},{"prompt":"Construct a regular expression pattern to match a single word with the format \\"XX-XXX-XXX\\".","completion":"pattern = r\\"^w{2}-w{3}-w{3}\\""},{"prompt":"Write a function that takes in a list of numbers and creates a new list with only the even numbers from the list. numbers = [2, 3, 4, 5, 6, 7, 8, 9]","completion":"def findEvenNumbers(numbers): even_list = [] for number in numbers: if number % 2 == 0: even_list.append(number) return even_list numbers = [2, 3, 4, 5, 6, 7, 8, 9] print(findEvenNumbers(numbers)) # Output # [2, 4, 6, 8]"},{"prompt":"Assume an array contains elements from 1 to 100. You need to find the missing element. arr = [1, 2, 4, 6, 7, 8, 10, 11, 12, 13, 15]","completion":"def findMissingNumber(arr): n = len(arr) + 1 total = n * (n+1) / 2 sum_of_elements = sum(arr) missing_element = total - sum_of_elements return int(missing_element) arr = [1, 2, 4, 6, 7, 8, 10, 11, 12, 13, 15] print(findMissingNumber(arr)) # Output # 3"},{"prompt":"Create a function that takes in a string and returns a new string in which all the characters are reversed. s = \\"Hello World","completion":"def reverseString(s): rev = s[::-1] return rev s = \\"Hello World\\" print(reverseString(s)) # Output # dlroW olleH"},{"prompt":"Produce a function that takes in an array of integers and returns an array with all the prime numbers in it. arr = [2, 11, 9, 5, 4, 7]","completion":"def findPrimeNumbers(arr): prime_list = [] for number in arr: isPrime = True for i in range(2, number): if number % i == 0: isPrime = False if isPrime: prime_list.append(number) return prime_list arr = [2, 11, 9, 5, 4, 7] print(findPrimeNumbers(arr)) # Output # [2, 11, 5, 7]"},{"prompt":"Create a JavaScript program to spread a given array into subarrays of the given size. arr = [1, 2, 3, 4, 5, 6] size = 3","completion":"function spreadArray(arr, size) { let subarrays = []; while (arr.length) { subarrays.push(arr.splice(0, size)); } return subarrays; } arr = [1, 2, 3, 4, 5, 6] size = 3 console.log(spreadArray(arr, size)); # Output # [[1, 2, 3], [4, 5, 6]]"},{"prompt":"Create a function that takes an array and returns true if it contains all the elements in an another array. array1 = [1, 2, 3, 4] array2 = [1, 2, 3]","completion":"def checkArray(array1, array2): for element in array2: if element not in array1: return False return True array1 = [1, 2, 3, 4] array2 = [1, 2, 3] print(checkArray(array1, array2)) # Output # True"},{"prompt":"Write a regular expressipon pattern to match the following date format \\"DD/MM/YYYY\\".","completion":"pattern = r\\"^(0[1-9]|[12][0-9]|3[01])[/](0[1-9]|1[012])[/](19[0-9][0-9]|20[0-9][0-9])\\""},{"prompt":"Change the given code to allow the user to input a number and print it twice.","completion":"num = int(input(\\"Enter a number: \\")) print(num * 2)"},{"prompt":"Write a SQL query to select the title and price of books with a rating of 5. SELECT title, price FROM books WHERE rating = 5;","completion":"SELECT title, price FROM books WHERE rating = 5;"},{"prompt":"Create an array of integers with values 0, 1, 2, 3, 4.","completion":"array = [0, 1, 2, 3, 4]"},{"prompt":"Create a Node.js web server with the Express module.","completion":"const express = require('express'); const app = express(); app.get('/', (req, res) => { res.send('Hello World!'); }); app.listen(3000, () => { console.log('Server is running on port 3000'); });"},{"prompt":"Change the following Python code to convert the list to a dictionary of key-value pairs. mylist = [1, 2, 3, 4, 5]","completion":"mydict = {} for i in range(len(mylist)): mydict[i] = mylist[i]"},{"prompt":"Write a Python function to check if an element is present in a given list or not.","completion":"def is_in_list(element, input_list): return element in input_list"},{"prompt":"Create an SQL query that returns the current date.","completion":"SELECT CURRENT_DATE;"},{"prompt":"Compare and contrast the features of the two programming languages: Python and Java.","completion":"Python and Java are both popular programming languages with different features that make them suitable for different tasks. Python is an interpreted, high-level, and general-purpose programming language that emphasizes code readability and has simple, easy-to-use syntax. Java, on the other hand, is an object-oriented, statically typed programming language that is heavily used in enterprise-level applications. Python is popular for its expressiveness and lack of boilerplate code, while Java provides a lot of technical support and stability. Additionally, Python is easier to learn and has a wide range of libraries and tools, while Java has powerful tools that allow developers to create more robust applications."},{"prompt":"Create a method that returns all elements in an array that are larger than the given value x. [2, 3, 5, 7, 11, 13] and x = 4","completion":"def elements_greater_than_x(arr, x): result = [] for el in arr: if el > x: result.append(el) return result"},{"prompt":"Rank the following algorithms based on time complexity: Quick Sort, Binary Search Tree, and Bubble Sort.","completion":"Quick Sort > Binary Search Tree > Bubble Sort. Quick Sort has the best time complexity of O(nlogn). Binary Search Tree has the time complexity of O(logn) for insertion and searching. Bubble Sort has the worst time complexity of O(n^2)."},{"prompt":"Convert the following integers into strings. 54 and 32","completion":"str1 = str(54) str2 = str(32)"},{"prompt":"Create an array of 10 non-repeating random integers.","completion":"import random arr = [] while len(arr) < 10: rand = random. randint(0, 10000) if rand not in arr: arr.append(rand) arr"},{"prompt":"Print the current system date and time in a readable format","completion":"import datetime date_time = datetime.datetime.now() print(date_time.strftime(\\"%A %d %B, %Y, %I:%M %p\\")) # Output: Tuesday 12 November, 2019, 11:17 PM"},{"prompt":"Write a JavaScript program that creates an array with all the numbers from 1 to 10.","completion":"const a = []; for (let i = 1; i <= 10; i++) { a.push(i); } console.log(a);"},{"prompt":"Create a table of data about each object in the list. my_list = [{\\"name\\": \\"John\\", \\"age\\": 20}, {\\"name\\": \\"Laura\\", \\"age\\": 30}, {\\"name\\": \\"Harry\\", \\"age\\": 25}]","completion":"name | age ------------ John | 20 Laura | 30 Harry | 25"},{"prompt":"Sort the items in the list alphabetically my_list = ['bird', 'cat', 'turtle', 'dog']","completion":"my_list.sort() print(my_list)"},{"prompt":"Create a dictionary for the attributes of each object in the list. my_list = [{\\"name\\": \\"John\\", \\"age\\": 20}, {\\"name\\": \\"Laura\\", \\"age\\": 30}, {\\"name\\": \\"Harry\\", \\"age\\": 25}]","completion":"my_dict = {} for item in my_list: my_dict[item['name']] = item['age'] print(my_dict)"},{"prompt":"Remove the duplicate words in the given string my_string = \\"this this is a a sentence","completion":"my_words = my_string.split(' ') my_words = list(dict.fromkeys(my_words)) new_string = \\" \\".join(my_words) print(new_string)"},{"prompt":"Create a function which returns a string of the given string in uppercase my_string = \\"this is a string","completion":"def to_uppercase(str): return str.upper() new_string = to_uppercase(my_string) print(new_string)"},{"prompt":"Create a function which takes two arguments, a string and a list, and prints out the list with each element preceded by the string my_string = \\"Example: \\" my_list = [\\"a\\", \\"b\\", \\"c\\"]","completion":"def prepend_list_items(str, lst): for item in lst: print(str + item) prepend_list_items(my_string, my_list)"},{"prompt":"Run a regression on the given dataset and print the coefficients","completion":"import numpy as np from sklearn.linear_model import LinearRegression # fit the model model = LinearRegression() model.fit(X, y) # print the coefficients coeff = model.coef_ print(coeff)"},{"prompt":"Create an HTML table from a list of dictionaries. [ {'name':'John','age':30, 'designation':'Software engineer'}, {'name':'Alex','age':35, 'designation':'Tech lead'}, {'name':'Jim','age':27, 'designation':'QA engineer'} ]","completion":"<table> <thead> <tr> <th>Name</th> <th>Age</th> <th>Designation</th> </tr> </thead> <tbody> <tr> <td>John</td> <td>30</td> <td>Software engineer</td> </tr> <tr> <td>Alex</td> <td>35</td> <td>Tech lead</td> </tr> <tr> <td>Jim</td> <td>27</td> <td>QA engineer</td> </tr> </tbody> </table>"},{"prompt":"Write a SQL query to find all customers who purchased more than 5 items from a specific store.","completion":"SELECT customers.customer_id, customers.name FROM customers INNER JOIN orders ON orders.customer_id = customers.customer_id WHERE orders.store_id = ? GROUP BY customers.customer_id HAVING COUNT(*) > 5;"},{"prompt":"Create a React component with the following features: - Has two inputs - On entering content in the first input, it will automatically update the content in the second input","completion":"class TwoInputsComponent extends React.Component { constructor(props) { super(props); this.state = { value1: '', value2: '' }; this.handleChange1 = this.handleChange1.bind(this); this.handleChange2 = this.handleChange2.bind(this); } handleChange1(e) { this.setState({ value1: e.target.value, value2: e.target.value }); } handleChange2(e) { this.setState({ value1: e.target.value, value2: e.target.value }); } render() { return ( <div> <input type=\\"text\\" value={this.state.value1} onChange={this.handleChange1} /> <input type=\\"text\\" value={this.state.value2} onChange={this.handleChange2} /> </div> ); } }"},{"prompt":"Analyze a given text and generate a dictionary of frequency of each word in the text. text = \\"This is a sample text to analyze the frequency of the word","completion":"def analyze_text(text): text = text.lower().split() freqDict = {} for word in text: if word in freqDict: freqDict[word] += 1 else: freqDict[word] = 1 return freqDict if __name__ == '__main__': text = \\"This is a sample text to analyze the frequency of the words\\" print(analyze_text(text)) Output: {'this': 1, 'is': 1, 'a': 1, 'sample': 1, 'text': 1, 'to': 1, 'analyze': 1, 'the': 1, 'frequency': 1, 'of': 1, 'words': 1}"},{"prompt":"Describe the programming language used for the given project Project: Building an e-commerce website using Django.","completion":"The programming language used for the project is Python with Django web framework. Django is an open source framework for developing web applications. It uses the Model-View-Template architecture pattern for developing web applications. It provides useful features like built-in admin interface, secure authentication and authorization, support for AJAX and Python libraries."},{"prompt":"w can we improve the following code? def multiply(x, y): z = 0 for i in range(y): z += x return z","completion":"We can improve the code by adding an additional parameter to multiply() to check for a zero value of y. This additional \\"check\\" parameter will immediately return 0 if the value of y is 0, reducing the time complexity. Additionally, we can also remove the for loop and replace it with a multiplication operator to speed up the process. The updated code would look like: def multiply(x, y, check = False): if check and y == 0 : return 0 return x*y"},{"prompt":"Construct a loop in Swift to find duplicate numbers in an array.","completion":"func FindDuplicates(arr: [Int]) -> [Int] { var seenNumbers = Set<Int>() var duplicateValues = [Int]() for number in arr { if seenNumbers.contains(number) { duplicateValues.append(number) } else { seenNumbers.insert(number) } } return duplicateValues }"},{"prompt":"Construct a generic BST in Swift","completion":"class Node<T> { var value: T weak var parent: Node? var left: Node? var right: Node? init(value: T) { self.value = value } } class BinarySearchTree<T: Comparable> { fileprivate var root: Node<T>? init(elements: [T]) { for element in elements { add(value: element) } } // Add additional functions here }"},{"prompt":"Verify the result of the following algorithm Array: [3, 2, 1] Algorithm: Sort the array in ascending order","completion":"The result of the algorithm is [1, 2, 3]. This can be verified by manually sorting the array in an ascending order."},{"prompt":"mplement a method in Java to reverse a number","completion":"public class ReverseNumber { public static int reverseNumber(int num) { int reversed = 0; while(num > 0) { reversed *= 10; reversed += num % 10; num /= 10; } return reversed; } }"},{"prompt":"Convert the following pseudocode into code that implements a binary search Input: Array, Item Set low to the first index of the array Set high to the last index of the array while low is less than or equal to high set mid to the average of low and high if the item is found at mid, then return mid else if the item is less than what is found at mid, set high to mid - 1 else set low to mid + 1 return null","completion":"def binarySearch(list, item): low = 0 high = len(list) - 1 while low <= high: mid = (low + high) // 2 guess = list[mid] if guess == item: return mid if guess > item: high = mid - 1 else: low = mid + 1 return None"},{"prompt":"Construct a simple MySQL query","completion":"SELECT * FROM table_name;"},{"prompt":"Construct a for loop in Javascript to measure the sum of the squares of integers from 2 to 6","completion":"let sum = 0; for (let i = 2; i <= 6; i++) { sum += i * i; } console.log(sum);"},{"prompt":"Generate HTML code for displaying a list of items","completion":"<ul> <li>Item 1</li> <li>Item 2</li> <li>Item 3</li> <li>Item 4</li> </ul>"},{"prompt":"w would you add the following list to a JSON document using Python? [1,2,3]","completion":"import json data = [1,2,3] with open('my-json-file.json', 'w') as outfile: json.dump(data, outfile)"},{"prompt":"Build an array in JavaScript containing the words: \\"cat\\", \\"dog\\", \\"fish\\", and \\"wolf\\".","completion":"let animals = [\\"cat\\", \\"dog\\", \\"fish\\", \\"wolf\\"];"},{"prompt":"w do you represent a database table and its columns in an object-oriented programming language?","completion":"Classes are typically used to represent a database table in an object-oriented programming language. Each of the database table's columns can be represented as fields in the class. The values for those fields can then be accessed though the class' accessor methods."},{"prompt":"What is multithreading in Java and why is it used?","completion":"Multithreading in Java is a process which allows multiple threads to run concurrently, allowing applications to utilize multiple CPU cores and execute operations simultaneously. It helps to improve the performance of applications by allowing them to complete operations quickly and efficiently."},{"prompt":"Create a SQL query to select the column \\"name\\" from the table \\"Customers\\" where the \\"address\\" column contains the value \\"London\\".","completion":"SELECT name FROM Customers WHERE address = \\"London\\";"},{"prompt":"w would you delete an item from a linked list in Java?","completion":"To delete an item from a linked list in Java, you would first need to traverse the list until you reach the item. Once you find the item, delete the reference to the node immediately before it by pointing the previous node's 'next' pointer to the node after the current one. Finally, delete the node by setting the node's pointer to null."},{"prompt":"Write an HTML form for a survey about a school.","completion":"<form action=\\"survey.php\\" method=\\"post\\"> <label>Name:</label> <input type=\\"text\\" name=\\"name\\"><br> <label>Age:</label> <input type=\\"number\\" name=\\"age\\"><br> <label>What did you think of your school experience?</label> <input type=\\"text\\" name=\\"experience\\"><br> <label>Would you recommend your school to a friend?</label> <input type=\\"yesno\\" name=\\"recommend\\"><br> <input type=\\"submit\\"> </form>"},{"prompt":"Write a CSS code snippet to make all the <b> tags bold.","completion":"b { font-weight: bold; }"},{"prompt":"Create a C++ program to input two numbers and print their sum.","completion":"#include <iostream> using namespace std; int main() { int num1, num2, sum; cout << \\"Enter two numbers: \\"; cin >> num1 >> num2; sum = num1 + num2; cout << \\"Sum = \\" << sum; return 0; }"},{"prompt":"Generate a function to check if parameter is equal to a specific string.","completion":"def is_equal(parameter, string): if parameter == string: return True else: return False"},{"prompt":"Write a SQL query to find all customers from France.","completion":"SELECT * FROM customers WHERE country = 'France';"},{"prompt":"Create a PHP program to store data submitted by an HTML form.","completion":"<?php if (_SERVER[\\"REQUEST_METHOD\\"] == \\"POST\\") { name = _POST['name']; age = _POST['age']; // Store data in database servername = \\"localhost\\"; username = \\"root\\"; password = \\"\\"; dbname = \\"myDB\\"; // Connect to database conn = new mysqli(servername, username, password, dbname); if (!conn) { die(\\"Connection failed: \\" . mysqli_connect_error()); } // Insert data sql = \\"INSERT INTO users (name, age) VALUES ('name', 'age')\\"; if (mysqli_query(conn, sql)) { echo \\"Data stored successfully\\"; } else { echo \\"Error: \\" . sql . \\"<br>\\" . mysqli_error(conn); } mysqli_close(conn); } ?>"},{"prompt":"Write a function in JavaScript to truncate a string to a given length.","completion":"function truncateString(str, num) { if (str.length <= num) { return str; } return str.slice(0, num) + \\"...\\"; }"},{"prompt":"Create a function in Javascript that accepts a string as an argument.","completion":"function myFunction(str) { // code here }"},{"prompt":"Print the number of elements present in a list in C. int list[20] = {1, 4, 6, 8, 9};","completion":"int listLength = sizeof(list) / sizeof(list[0]); printf(\\"Number of elements in the list: %d n\\", listLength);"},{"prompt":"Write code in Java for a user input prompt that states \\"Please enter a number\\".","completion":"Scanner input = new Scanner(System.in); System.out.println(\\"Please enter a number: \\"); int number = input.nextInt();"},{"prompt":"mplement a function in Python to convert a given RGB color to Hexadecimal format. rgb_color = [255, 232, 154]","completion":"def rgb_to_hex(rgb_color): hex_code = '' for color in rgb_color: hex_code += f'{color:02x}' return hex_code hex_code = rgb_to_hex(rgb_color) # hex_code = \\"ffe89a\\""},{"prompt":"Create a SQL query to select the records of the table with column value greater than 5.","completion":"SELECT * FROM mytable WHERE mycolumn > 5;"},{"prompt":"Write an assembly language program to check if two given numbers are equal or not.","completion":"MOV AX, 12 ; Move 12 to AX MOV BX, 12 ; Move 12 to BX CMP AX, BX ; Compare AX and BX JE Equal ; Jump if equal JNE NotEqual ; Jump if not equal Equal: ;Statements NotEqual: ;Statements"},{"prompt":"Generate C code that prints the result of multiplying two numbers. int num1 = 10 int num2 = 5","completion":"int num1 = 10; int num2 = 5; int result = num1 * num2; printf(\\"Result: %dn\\", result);"},{"prompt":"Write code to create a web server in Go.","completion":"package main import ( \\"net/http\\" \\"fmt\\" ) func main() { http.HandleFunc(\\"/\\", handlerFunc) http.ListenAndServe(\\":8080\\", nil) } func handlerFunc(w http.ResponseWriter, r *http.Request) { fmt.Fprintf(w, \\"<h1>Welcome to my Go web server!</h1>\\") }"},{"prompt":"Write a Rust program to take an array of integers and print the sum of the elements in the array.","completion":"fn main() { let numbers = [1, 4, 6, 8]; let sum = 0; for num in numbers.iter() { sum += num; } println!(\\"The sum of the elements in the array is {}\\", sum); }"},{"prompt":"Create a one-click web button with the following properties: font size of 20px; font color rgb(255, 0, 128); background-color #6790FF","completion":"<button style=\\"font-size: 20px; color: rgb(255, 0, 128); background-color: #6790FF;\\">Click Here</button>"},{"prompt":"Write a function to query a database table 'trips' and return a list of all trips made over the past three months.","completion":"def query_trips(): start_date = datetime.datetime.now() - datetime.timedelta(days=90) end_date = datetime.datetime.now() sql = 'SELECT * FROM trips WHERE date_of_trip >= %s AND date_of_trip <= %s' try: conn = connect_to_database() cur = conn.cursor() cur.execute(sql, (start_date, end_date)) trips = cur.fetchall() cur.close() conn.close() return trips except Exception as e: raise e"},{"prompt":"Design an algorithm to insert a new row into a table named 'products' with the following columns: title, description and price. title: \\"New product\\" description: \\"This is an amazing product, it can do anything!\\" price: 10","completion":"def insert_row_products(title, description, price): sql = 'INSERT INTO products (title, description, price) VALUES (%s, %s, %s)' try: conn = connect_to_database() cur = conn.cursor() cur.execute(sql, (title, description, price)) conn.commit() cur.close() conn.close() return True except Exception as e: raise e"},{"prompt":"Write an algorithm to add a new user (name, email, password, address) to a table called 'users'. name: John email: john@example.com password: 1234 address: 999 Main St.","completion":"def add_user(name, email, password, address): sql = 'INSERT INTO users (name, email, password, address) VALUES (%s, %s, %s, %s)' try: conn = connect_to_database() cur = conn.cursor() cur.execute(sql, (name, email, password, address)) conn.commit() cur.close() conn.close() return True except Exception as e: raise e"},{"prompt":"Edit the following snippet of code to make the program print 'Hello World!' print('Hello world)","completion":"print('Hello World!')"},{"prompt":"Write an algorithm to find the number of times a given number appears in an array [5, 2, 4, 2, 5, 2, 5], number: 5","completion":"def count_number(arr, number): count = 0 for num in arr: if num == number: count += 1 return count"},{"prompt":"Reverse a given string without using built-in library functions","completion":"def reverse_string(string): rev_string = '' for i in range(len(string) - 1, -1, -1): rev_string += string[i] return rev_string"},{"prompt":"Use the input provided to print out the name of the collection of items provided. my_list = [\\"apple\\", \\"banana\\", \\"orange\\"]","completion":"print(\\"my_list is a collection of:\\", my_list)"},{"prompt":"Write a for loop in Python which prints out the contents of the given stack. sample_stack = [\\"first\\", \\"second\\", \\"third\\"]","completion":"for item in sample_stack: print(item)"},{"prompt":"Edit the statement to make it a valid expression in Python. x = y =","completion":"x = y = 0"},{"prompt":"Write a script in Python for printing the given second level sub-dictionary. data = {'first': {'A': 1, 'B': 2}, 'second': {'C': 3, 'D': 4}}","completion":"second_dict = data.get('second') for key, value in second_dict.items(): print(key, value)"},{"prompt":"Using the input provided, write a program in JavaScript that finds the largest number in an array. my_array = [2, 3, 6, 1, 9]","completion":"let largestNumber = my_array[0]; for (let i = 1; i < my_array.length; i++) { if (largestNumber < my_array[i]) { largestNumber = my_array[i]; } } console.log(largestNumber);"},{"prompt":"Write a code in Java to sort given list items in ascending order. my_list = [9, 4, 7, 2, 6]","completion":"for (int i = 0; i < my_list.length; i++) { for (int j = i + 1; j < my_list.length; j++) { if (my_list[i] > my_list[j]) { int temp = my_list[i]; my_list[i] = my_list[j]; my_list[j] = temp; } } }"},{"prompt":"Using the input provided, write a code in Python to print the elements of a given dictionary along with the corresponding keys. my_dict = {'one':1, 'two':2, 'three':3}","completion":"for key, value in my_dict.items(): print(key + ':', value)"},{"prompt":"Create a program in C to find the biggest of three numbers.","completion":"int max(int a, int b, int c) { int big = a; if(b > big) big = b; if(c > big) big = c; return big; }"},{"prompt":"Using TensorFlow, define a neural network for classifying a set of language data as either English or Spanish. Training data of 1000 samples with 500 English sentences and 500 Spanish sentences.","completion":"model = tf.keras.Sequential() model.add(tf.keras.layers.Input(shape=(1000,))) model.add(tf.keras.layers.Dense(units=128, activation='relu')) model.add(tf.keras.layers.Dense(units=2, activation='softmax')) model.compile(optimizer='Adam', loss = 'categorical_crossentropy',metrics=['accuracy']) model.fit(X,y, epochs=10)"},{"prompt":"Write a JavaScript program to compute the difference between two dates in days. Two dates- \\"2021/07/26\\" and \\"2022/06/01","completion":"const dateOne = new Date(\\"2021/07/26\\"); const dateTwo = new Date(\\"2022/06/01\\"); const timeDifference = dateTwo.getTime() - dateOne.getTime(); const daysDifference = timeDifference / (1000 * 3600 * 24); console.log(daysDifference);"},{"prompt":"Create a React component for a navigation bar with a logo and two menu items named \\"Home\\" and \\"About\\".","completion":"import React from 'react'; const Navbar = () => { return ( <nav> <div className=\\"logo\\"> Logo </div> <ul> <li>Home</li> <li>About</li> </ul> </nav> ) } export default Navbar;"},{"prompt":"Design a class in Java for creating a 2D point.","completion":"public class Point { double x,y; public Point(double x, double y) { this.x = x; this.y = y; } public double getX() { return x; } public double getY() { return y; } public void setX(double x) { this.x = x; } public void setY(double y) { this.y = y; } public double distance(Point other) { return Math.sqrt(Math.pow(x - other.getX(), 2) + Math.pow(y - other.getY(), 2)); } }"},{"prompt":"Design a class in C# to store employee details.","completion":"public class Employee { public string Name; public int Age; public string Department; public int Salary; public Employee(string name, int age, string department, int salary) { Name = name; Age = age; Department = department; Salary = salary; } }"},{"prompt":"Using an AI platform, create a sentiment analysis model to predict a sentiment of a given sentence.","completion":"model = AIplatform.SentimentAnalysis() model.fit(X, y) prediction = model.predict(sentence)"},{"prompt":"Write a Bash script for creating a directory and its subdirectories.","completion":"#!/bin/bash DIR=\\"example\\" mkDIR -p \\"DIR/subdir1/subdir2\\""},{"prompt":"Create an example chatbot dialogue using the given context. Context: You're a pizza maker","completion":"User: Hi, I'm looking for a pizza Bot: Hi there! What kind of pizza are you looking for? User: I'd like a pepperoni pizza with extra cheese Bot: Sure, one pepperoni pizza with extra cheese coming right up! Anything else I can do for you?"},{"prompt":"Write a code to optimize the parsing of a given sentence using CKY parsing. Sentence: \\"The cat chased the dog around the corner of the house.","completion":"# Imports import nltk # CKY Parsing def cky_parse(sentence): \\"\\"\\"Given a sentence, apply CKY parsing to optimize the parsing of it\\"\\"\\" words = nltk.word_tokenize(sentence) # Create tree structure table = [[None for i in range(len(words))] for j in range(len(words))] for j in range(len(words)): for i in reversed(range(j)): parts_of_speech = nltk.pos_tag(words[i:j+1]) part_of_speech = tuple(tag for word,tag in parts_of_speech) if part_of_speech in grammar.productions(): table[i][j] = part_of_speech break return table"},{"prompt":"Create an animnation of a bouncing ball in the canvas using JavaScript.","completion":"let x = canvas.width/2; let y = canvas.height/2; let radius = 20; let dx = 3; let dy = -3; function draw() { ctx.clearRect(0, 0, canvas.width, canvas.height); ctx.beginPath(); ctx.arc(x, y, radius, 0, Math.PI*2); ctx.fillStyle = \\"#0095DD\\"; ctx.fill(); ctx.closePath(); if (x+radius > canvas.width || x-radius < 0) { dx = -dx; } if (y+radius > canvas.height || y-radius < 0) { dy = -dy; } x += dx; y += dy; requestAnimationFrame(draw); }"},{"prompt":"mplement a feature to add a record to a MySQL database table.","completion":"import mysql.connector # Establish a connection with the database mydb = mysql.connector.connect( host=\\"localhost\\", user=\\"username\\", password=\\"password\\", database=\\"databaseName\\" ) # Create a new record mycursor = mydb.cursor() sql = \\"INSERT INTO tableName (col1, col2, col3) VALUES (%s, %s, %s)\\" val = (\\"value1\\", \\"value2\\", \\"value3\\") mycursor.execute(sql, val) # Commit the changes to the database mydb.commit()"},{"prompt":"Create an example Word Cloud from the given text. Text: Machine Learning is an area of computer science that gives computers the ability to learn without explicit programming.","completion":"import matplotlib.pyplot as plt from wordcloud import WordCloud # Generate a word cloud image text = \\"Machine Learning is an area of computer science that gives computers the ability to learn without explicit programming.\\" wordcloud = WordCloud().generate(text) # Show the generated image plt.imshow(wordcloud, interpolation='bilinear') plt.axis(\\"off\\") plt.show()"},{"prompt":"Create a search engine to process natural language queries.","completion":"# Imports import nltk from nltk.tokenize import word_tokenize from nltk.tag import pos_tag # Tokenize the natural language query response = input(\\"What would you like to search for? \\") words = word_tokenize(response) tagged_words = pos_tag(words) # Process the query and search for relevant results search_results = [] for word in tagged_words: if word[1] == \\"NN\\": search_results.append(search_for_nn(word)) elif word[1] == \\"VBP\\": search_results.append(search_for_vbp(word)) else: search_results.append(\\"No results found.\\") # Print the results for result in search_results: print(result)"},{"prompt":"Write a code for sorting the given array of numbers in ascending order.","completion":"def sort_array(numbers): # Bubble sort algorithm for i in range(len(numbers)): for j in range(0, len(numbers)-i-1): if numbers[j] > numbers[j+1]: numbers[j], numbers[j+1] = numbers[j+1], numbers[j] return numbers"},{"prompt":"Create a program to detect spam emails.","completion":"import nltk from nltk.tokenize import word_tokenize # Create a list of \\"spammy\\" words spammy_words = ['free', 'discount', 'offer', 'win', 'prize', 'billion', 'million', 'cash'] # Define a function for detecting spam def detect_spam(email): # Tokenize the email words = word_tokenize(email) spam_score = 0 for word in words: if word.lower() in spammy_words: spam_score += 1 # Return the spam score return spam_score"},{"prompt":"Design and implement a genetic algorithm for finding the optimal solution for a given problem.","completion":"# Define the population size POPULATION_SIZE = 100 # Define the parameters for the genetic algorithm MUTATION_RATE = 0.2 CROSSOVER_RATE = 0.7 MAX_ITERATIONS = 10 # Create the initial population population = create_population(POPULATION_SIZE) # Run the genetic algorithm for iteration in range(MAX_ITERATIONS): # Select the fittest individuals to reproduce selected_pop = select_fittest(population) # Crossover two individuals to form a new population children_pop = crossover(selected_pop, CROSSOVER_RATE) # Mutate the new population mutate_pop = mutate(children_pop, MUTATION_RATE) # Replace the population with the mutated population population = mutate_pop # Return the optimal solution return best_solution(population)"},{"prompt":"Create an AI chatbot that can answer questions about the given topic \\"Covid-19\\". Topic: Covid-19","completion":"# Imports from chatterbot import ChatBot from chatterbot.trainers import ChatterBotCorpusTrainer # Create the AI Chatbot bot = ChatBot(\\"CovidBot\\") # Train the bot on the corpus trainer = ChatterBotCorpusTrainer(bot) trainer.train(\\"chatterbot.corpus.english.covid19\\") # Start the chatbot while True: user_input = input(\\"User: \\") if user_input == 'exit': break bot_response = bot.get_response(user_input) print(\\"CovidBot:\\",bot_response)"},{"prompt":"Suggest a method to optimize the following code. def find_max(arr): max = arr[0] for i in range(1, len(arr)): if arr[i] > max: max = arr[i] return max","completion":"def find_max(arr): max = arr[0] for i in range(1, len(arr)): max = max if max > arr[i] else arr[i] return max"},{"prompt":"Suggest a better way of writing the following code. a = 10 b = 25 if a > b: print(\\"a is greater than b\\") else: print(\\"b is greater than a\\")","completion":"a = 10 b = 25 if a < b: print(\\"b is greater than a\\") else: print(\\"a is greater than b\\")"},{"prompt":"w would you extend the following code to add the features \\"undo\\" and \\"redo\\"? def add_item(item, list): list.append(item)","completion":"def add_item(item, list): list.append(item) undo_list.append(item) ​ def undo_item(item, list): if len(list) > 0: last_item = list.pop() redo_list.append(last_item) def redo_item(item, list): if len(redo_list) > 0: last_item = redo_list.pop() list.append(last_item)"},{"prompt":"Create a bash script to detect if a given IP address is valid or not. 192.168.1.100","completion":"#!/bin/bash IP_ADDRESS=\\"1\\" if [[ IP_ADDRESS =~ ^[0-9]{1,3}.[0-9]{1,3}.[0-9]{1,3}.[0-9]{1,3} ]]; then echo \\"Valid IP Address\\" else echo \\"Invalid IP Address\\" fi"},{"prompt":"Explain the working of a function that takes a string as an argument, removes all the duplicate characters from it and returns the modified string","completion":"The given function takes a string as an argument, creates an empty string to store unique characters from the given string. It then iterates through the given string and checks if the character is already present in the new string. If the character is not present, it adds the character to the new string. After iterating through the entire string, the modified string which doesn’t contain any duplicate characters is returned."},{"prompt":"Describe the structure of JSON data","completion":"JSON (JavaScript Object Notation) data is structured in a hierarchical way. It consists of data stored in key-value pairs. The JSON object typically contains a set of key-value pairs, or nested objects. Data is organized and encoded in a way that makes it easier for programs to read and interpret the data stored in the JSON object. The structure of a JSON object may look like this: { \\"Key1\\": \\"Value1\\", \\"Key2\\": \\"Value2\\", \\"NestedObject\\": { \\"NestedKey1\\": \\"NestedValue1\\", \\"NestedKey2\\": \\"NestedValue2\\" } }"},{"prompt":"Categorize a piece of code as an imperative or functional programming paradigm sum = 0; for (i = 0; i < n; i++) { sum += arr[i]; }","completion":"Imperative programming paradigm."},{"prompt":"Develop a program to join two strings String1 = \\"Hello\\"; String2 = \\"World\\";","completion":"public class ConcatenateStrings { public static String concat(String s1, String s2) { StringBuilder sb = new StringBuilder(); sb.append(s1); sb.append(s2); return sb.toString(); } public static void main(String[] args) { String str1 = \\"Hello\\"; String str2 = \\"World\\"; System.out.println(concat(str1, str2)); } }"},{"prompt":"Generate a python program to solve the Tower of Hanoi problem with n discs","completion":"def TowerOfHanoi(n, from_rod, to_rod, aux_rod): if n == 1: print(\\"Move disk 1 from rod\\",from_rod,\\"to rod\\",to_rod) return TowerOfHanoi(n-1, from_rod, aux_rod, to_rod) print(\\"Move disk\\",n,\\"from rod\\",from_rod,\\"to rod\\",to_rod) TowerOfHanoi(n-1, aux_rod, to_rod, from_rod) # Driver code n = 3 TowerOfHanoi(n, 'A', 'C', 'B')"},{"prompt":"Given an array containing a string with duplicates, output an array with only unique strings. ['apple', 'apple', 'orange', 'kiwi', 'apple', 'banana', 'banana']","completion":"def remove_duplicates(arr): unique_arr = [] for item in arr: if item not in unique_arr: unique_arr.append(item) return unique_arr # Driver code arr = ['apple', 'apple', 'orange', 'kiwi', 'apple', 'banana', 'banana'] print (remove_duplicates(arr))"},{"prompt":"Develop a program to split a string by a specific delimiter String = \\"This-is-a-test\\" Delimiter = \\"-","completion":"def split(string, delimiter): return string.split(delimiter) # Driver code string = \\"This-is-a-test\\" delimiter = \\"-\\" print (split(string, delimiter))"},{"prompt":"Create a dataframe in pandas List of 7 employees, each with first name and last name.","completion":"import pandas as pd data = [{\\"first_name\\":\\"John\\", \\"last_name\\":\\"Doe\\"}, {\\"first_name\\":\\"Jane\\", \\"last_name\\":\\"Smith\\"}, {\\"first_name\\":\\"Tom\\", \\"last_name\\":\\"Johnson\\"}, {\\"first_name\\":\\"Sandy\\", \\"last_name\\":\\"Robinson\\"}, {\\"first_name\\":\\"Roger\\", \\"last_name\\":\\"McDonald\\"}, {\\"first_name\\":\\"Linda\\", \\"last_name\\":\\"Williams\\"}, {\\"first_name\\":\\"David\\", \\"last_name\\":\\"Miller\\"}] df = pd.DataFrame(data)"},{"prompt":"Design a basic calculator that returns the output of two number inputs Number inputs: 9, 12","completion":"def calculator(num1, num2): return num1 + num2"},{"prompt":"Modify the given code to sanitize the user input. string = raw_input(\\"Enter your text here: \\")","completion":"import re def sanitize(string): string = re.sub(r'[^ws]','',string) return string string = sanitize(raw_input(\\"Enter your text here: \\"))"},{"prompt":"Write code to print out the numbers from 0 to 10 using a for loop","completion":"for i in range(11): print(i)"},{"prompt":"Find the number of times the element 2 appears in the following array arr = [2, 3, 5, 7, 2, 6, 2]","completion":"count = 0 for num in arr: if num == 2: count += 1 print(count)"},{"prompt":"Sort this list of tuples in ascending order by the first value of the tuple tuple_list = [(3,4),(5,6),(7,1)]","completion":"sorted_list = sorted(tuple_list, key=lambda x: x[0])"},{"prompt":"Analyze the syntax of the sentence This sentence is an example of an imperative stateme","completion":"This sentence is an example of an imperative statement, which is an order or command given to someone to do something. The subject of the imperative sentence, \\"This sentence\\", is in the third person and the verb, \\"is\\", is in the present tense."},{"prompt":"Design a basic game of rock, paper, scissors","completion":"import random def game(): options = ['rock', 'paper', 'scissors'] player1 = random.choice(options) player2 = random.choice(options) if player1 == 'rock' and player2 == 'scissors': print(\\"Player 1 Wins!\\") elif player1 == 'paper' and player2 == 'rock': print(\\"Player 1 Wins!\\") elif player1 == 'scissors' and player2 == 'paper': print(\\"Player 1 Wins!\\") elif player1 == 'scissors' and player2 == 'rock': print(\\"Player 2 Wins!\\") elif player1 == 'rock' and player2 == 'paper': print(\\"Player 2 Wins!\\") elif player1 == 'paper' and player2 == 'scissors': print(\\"Player 2 Wins!\\") else: print(\\"It's a draw!\\")"},{"prompt":"Write a regular expression to match any sequence of digits (ex. 10, 01, 025 ZCZ)","completion":"pattern = r'^d+'"},{"prompt":"Write a Python code that prints out the following patterns:","completion":"# Pattern 1 for i in range(1, 10): for j in range(1, i + 1): print(\\"*\\", end=\\" \\") print(\\" \\") # Pattern 2 for i in range(10, 0, -1): for j in range(i, 0, -1): print(\\"*\\", end=\\" \\") print(\\" \\")"},{"prompt":"Create an HTML page with a heading and two paragraphs.","completion":"<!DOCTYPE html> <html> <head> <title>My Page</title> </head> <body> <h1>Welcome</h1> <p>This is the first paragraph in my page.</p> <p>This is the second paragraph in my page.</p> </body> </html>"},{"prompt":"Create a Java program to delete an element for a given position in an array. [1, 3, 5, 6, 8], position=2","completion":"public static int[] deleteElement(int[] arr, int pos) { int n = arr.length; int i; // Removing the element at a given position for (i = pos; i < n - 1; i++) arr[i] = arr[i+1]; // Returning the resulting array return arr; } public static void main(String[] args) { int[] arr = {1, 3, 5, 6, 8}; int pos = 2; int[] new_arr = deleteElement(arr, pos); System.out.println(\\"Array after deletion:\\"); for(int i=0; i<new_arr.length; i++) System.out.print(new_arr[i]+\\" \\"); }"},{"prompt":"Create a Python code for printing the following pattern.","completion":"# Pattern for i in range(1,6): for j in range(1,i+1): print(i,end=\\"\\") print(\\"\\")"},{"prompt":"Write a Python function to generate a random integer in the range of 1 to 10.","completion":"import random def random_int_1_10(): return random.randint(1, 10) if __name__ == '__main__': print(random_int_1_10())"},{"prompt":"Generate a unique 8 character string that contains a lowercase letter, an uppercase letter, a numerical digit, and a special character.","completion":"import string import random def random_password_string(): characters = string.ascii_letters + string.digits + string.punctuation password = ''.join(random.sample(characters, 8)) return password if __name__ == '__main__': print(random_password_string())"},{"prompt":"Write an algorithm to determine if an input string is a palindrome. racecar","completion":"def is_palindrome(string): string = string.lower() rev_string = string[::-1] if string == rev_string: return True return False if __name__ == '__main__': print(is_palindrome('racecar'))"},{"prompt":"Write a code to print the power of 2 up to the given limit. 8","completion":"def power_of_two(n): for i in range(0,n): print(2**i,end=\\" \\") if __name__ == '__main__': power_of_two(8)"},{"prompt":"Generate a random string of a given length using different uppercase, lowercase characters, and digits.","completion":"import string import random def random_string(length): characters = string.ascii_letters + string.digits return ''.join(random.choice(characters) for i in range(length)) if __name__ == '__main__': print(random_string(10))"},{"prompt":"Create a string parameter with a default value in golang.","completion":"myString := flag.String(\\"name\\", \\"Default Value\\", \\"description\\")"},{"prompt":"Write a query statement to find all employees who joined in the last 5 years.","completion":"SELECT * FROM Employees WHERE JoinDate BETWEEN DATEADD(year, -5, GETDATE()) AND GETDATE()"},{"prompt":"Create a bash script to print the length of the longest string in an array. array = [\\"Hello\\", \\"World\\", \\"Natasha\\"]","completion":"#!/bin/bash array=(\\"Hello\\" \\"World\\" \\"Natasha\\") array_elements={#array[@]} max_length=0 for i in \`seq 0 ((array_elements-1))\`; do length={#array[i]} if [ \\"length\\" -gt \\"max_length\\" ]; then max_length=length fi done echo \\"The length of the longest string is max_length\\""},{"prompt":"Train a logistic regression classifier on the given dataset. [Dataset details] This dataset contains information on Belgian bank customers, including their credit score and risk profile. It consists of 1000 rows and 5 columns. The columns are: - Age - Credit Score - Gender - Risk Profile - Statu","completion":"model = LogisticRegression() model.fit(X, y)"},{"prompt":"mplement a neural network in Keras to solve the given classification problem. [Problem description] Given a dataset of images containing cats and dogs, create a neural network in Keras to classify the images into one of the two categories.","completion":"model = Sequential() model.add(Conv2D(32, (3, 3), activation='relu', input_shape=(150, 150, 3))) model.add(MaxPooling2D((2, 2))) model.add(Conv2D(64, (3, 3), activation='relu')) model.add(MaxPooling2D((2, 2))) model.add(Conv2D(128, (3, 3), activation='relu')) model.add(MaxPooling2D((2, 2))) model.add(Conv2D(128, (3, 3), activation='relu')) model.add(MaxPooling2D((2, 2))) model.add(Flatten()) model.add(Dense(512, activation='relu')) model.add(Dense(1, activation='sigmoid')) model.compile(loss='binary_crossentropy', optimizer=RMSprop(lr=1e-4), metrics=['acc'])"},{"prompt":"Analyze the following data in R and identify the mean, median and mode of the data. [Data] [2, 3, 5, 6, 4, 1, 3, 6, 4]","completion":"The mean of the data is 3.77, the median is 4 and the mode is 3."},{"prompt":"Describe the following heuristic optimization algorithm. [Algorithm Name] Hill Climbing Algorithm","completion":"Hill climbing is a heuristic optimization algorithm that starts with a random solution and gradually iterates over it to find the best solution. In each iteration, the algorithm looks for its neighbors and checks if they are better than the current solution. If so, then the algorithm moves to its neighbor and repeats the same process iteratively. It will terminate when it reaches the local optimum solution."},{"prompt":"Write a SQL statement to insert a new record into the table. [Table Name] Employee","completion":"INSERT INTO Employees (column list) VALUES (value list);"},{"prompt":"Using HTML and JavaScript, implement a drag and drop feature.","completion":"<script> function dragStart(event){ event.dataTransfer.setData(\\"Text\\", event.target.id); event.dataTransfer.dropEffect = \\"move\\"; } function allowDrop(event) { event.preventDefault(); } function drop(event) { event.preventDefault(); var data = event.dataTransfer.getData(\\"Text\\"); event.target.appendChild(document.getElementById(data)); } <\/script> <div id=\\"drag1\\" draggable=\\"true\\" ondragstart=\\"dragStart(event)\\">Drag Me</div> <div id=\\"drop1\\" ondrop=\\"drop(event)\\" ondragover=\\"allowDrop(event)\\">Drop Here</div>"},{"prompt":"Write an assembly language program to check if a given number is least in its sequence.","completion":".model small .stack 100h .data num dw 5 .code start: mov ax, @data mov ax, num cmp ax, [num+2] ; compare current number with the next number jbe least ; if current number is lesser or equal jump to least ;code to print least number least: mov ah, 9 mov dx, offset num int 21h mov ah, 4Ch int 21h end start"},{"prompt":"Write a Bash script to check if a given password matches the given regular expression. Regular expression: ^[0-9][A-Z]+ Password: 123ABC","completion":"#!/bin/bash if [[ \\"1\\" =~ ^[0-9][A-Z]+ ]]; then echo \\"Password matches the regular expression\\" else echo \\"Password does not match the regular expression\\" fi"},{"prompt":"Using Haskell, implement a function to calculate the sum of numbers from 1 to the given number.","completion":"sumOfNums :: Integer -> Integer sumOfNums n = sum [1 .. n]"},{"prompt":"Write SQL query to select all rows where the date value is in past 5 days.","completion":"SELECT * FROM table_name WHERE date_col >= DATE_SUB(CURDATE(), INTERVAL 5 DAY);"},{"prompt":"Create a dictionary and explore its functionality by finding the keys in the dictionary. dictionary = {'name': 'John', 'age': 28}","completion":"dictionary = {'name': 'John', 'age': 28} # To find the keys in dictionary keys_in_dictionary = dictionary.keys() print(keys_in_dictionary) # Output: dict_keys(['name', 'age'])"},{"prompt":"Write a script in Python to take an age as an input and return a boolean which indicates if a person is a minor or not.","completion":"def is_minor(age): \\"\\"\\" Function to determine if a person is a minor or not \\"\\"\\" if age < 18: return True else: return False # Let's test it age = 18 print(is_minor(age)) # Output: False"},{"prompt":"Cut a string of characters at every fourth character. string = \\"Hello World!","completion":"# Create an empty string cut_string = \\"\\" # Loop over the string for i in range(0, len(string), 4): cut_string += string[i] print(cut_string) # Output: Hoeo!"},{"prompt":"Write a code to classify emails as spam or not-spam using Naive Bayes algorithms.","completion":"# Importing necessary libraries import pandas as pd import numpy as np from sklearn.feature_extraction.text import CountVectorizer from sklearn.naive_bayes import MultinomialNB # Loading the dataset df = pd.read_csv('emails.csv') # Feature engineering vectorizer = CountVectorizer() X = vectorizer.fit_transform(df['message']) y = df['label'] # Training the model nb = MultinomialNB() nb.fit(X,y) # Classification example_emails = [\\"You won the lottery!\\", \\"I need some help with my homework\\"] X_example = vectorizer.transform(example_emails) predicted_labels = nb.predict(X_example) print(predicted_labels) # Output: [spam, not-spam]"},{"prompt":"Create a function that takes two parameters and returns an array with those two numbers in it.","completion":"def create_array(param1, param2): \\"\\"\\"A function that takes two parameters and returns an array with those two numbers in it.\\"\\"\\" arr = [param1, param2] return arr # Let's test it arr = create_array(1, 5) print(arr) # Output: [1, 5]"},{"prompt":"Write a code to check for a valid zip code in US.","completion":"def is_valid_zip_code(zip_code): \\"\\"\\" Function to check whether the given zip code is valid in the US \\"\\"\\" valid_zip_code_pattern = re.compile(r\\"^[0-9]{5}(?:-[0-9]{4})?\\") if valid_zip_code_pattern.match(zip_code): return True return False # Let's test it zip_code = \\"12345\\" print(is_valid_zip_code(zip_code)) # Output: True"}]`),R={name:"App",components:{PoemCard:A},data(){return{searchQuery:"",visibleCount:4,poemsData:N,isLoading:!1}},computed:{filteredPoems(){const i=this.searchQuery.trim().toLowerCase();return i?this.poemsData.filter(e=>e.prompt&&e.prompt.toLowerCase().includes(i)||e.completion&&e.completion.toLowerCase().includes(i)):this.poemsData},displayedPoems(){return this.searchQuery.trim()?this.filteredPoems:this.filteredPoems.slice(0,this.visibleCount)},hasMorePoems(){return!this.searchQuery.trim()&&this.visibleCount<this.poemsData.length}},methods:{async loadMore(){this.isLoading=!0,await new Promise(i=>setTimeout(i,1e3)),this.visibleCount+=4,this.isLoading=!1}}},W={class:"search-container"},M={class:"card-container"},P={key:0,class:"empty-state"},O=["disabled"],j={key:0},D={key:1};function I(i,e,l,u,a,o){const h=g("PoemCard");return r(),n("section",null,[e[4]||(e[4]=t("div",{class:"top-banner"},[t("div",{class:"top-banner-title"},[t("div",{class:"top-banner-title-text"},"🤔prompts chat🧠")])],-1)),t("div",W,[e[3]||(e[3]=t("span",{class:"search-icon"},"🔍",-1)),b(t("input",{type:"text",class:"search-input","onUpdate:modelValue":e[0]||(e[0]=s=>a.searchQuery=s),placeholder:"Search..."},null,512),[[y,a.searchQuery]]),a.searchQuery?(r(),n("button",{key:0,class:"clear-search",onClick:e[1]||(e[1]=s=>a.searchQuery="")}," ✕ ")):m("",!0)]),t("div",M,[(r(!0),n(v,null,w(o.displayedPoems,(s,f)=>(r(),_(h,{key:f,poem:s},null,8,["poem"]))),128)),o.displayedPoems.length===0?(r(),n("div",P,' No results found for "'+p(a.searchQuery)+'". ',1)):m("",!0)]),o.hasMorePoems?(r(),n("button",{key:0,class:"load-more-button",disabled:a.isLoading,onClick:e[2]||(e[2]=(...s)=>o.loadMore&&o.loadMore(...s))},[a.isLoading?(r(),n("span",D,"Loading...")):(r(),n("span",j,"See more"))],8,O)):m("",!0)])}const q=d(R,[["render",I],["__scopeId","data-v-dac60b44"]]),J=JSON.parse('{"title":"","description":"","frontmatter":{"page":true},"headers":[],"relativePath":"grok/9.md","filePath":"grok/9.md"}'),F={name:"grok/9.md"},z=Object.assign(F,{setup(i){return(e,l)=>(r(),n("div",null,[x(q)]))}});export{J as __pageData,z as default};
