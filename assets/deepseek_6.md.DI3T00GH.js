import{_ as d,o as r,c as n,a as t,m as c,t as p,C as g,M as b,U as y,f as m,F as w,p as v,e as _,q as x}from"./chunks/framework.B1z0IdBH.js";const S={name:"PoemCard",props:{poem:{type:Object,required:!0}}},C={class:"poem-container"},T={class:"review"},k={class:"review-title"},E={class:"review-content"};function L(a,e,l,u,i,o){return r(),n("div",C,[t("div",T,[t("div",k,[e[0]||(e[0]=t("span",{class:"icon"},"question:",-1)),c(p(l.poem.prompt),1)]),e[2]||(e[2]=t("div",{class:"divider"},null,-1)),t("p",E,[e[1]||(e[1]=t("span",{class:"icon"},"answer:",-1)),c(p(l.poem.completion),1)])])])}const A=d(S,[["render",L],["__scopeId","data-v-27438c99"]]),N=JSON.parse(`[{"prompt":"Create a React component that accepts a string as a parameter and prints it in the console.","completion":"class StringPrinter extends React.Component{ render(){ console.log(this.props.string); return null; } }"},{"prompt":"Determine the most efficient way to sort a complex data structure using Java. [3, 4, 2, 7, 9, 1, 5]","completion":"public void swap(int[] arr, int i, int j) { int temp = arr[i]; arr[i] = arr[j]; arr[j] = temp; } public void quickSort(int[] arr, int start, int end) { if (start < end) { int partitionIndex = partition(arr, start, end); quickSort(arr, start, partitionIndex-1); quickSort(arr, partitionIndex+1, end); } } public int partition(int[] arr, int start, int end) { int pivot = arr[end]; int i = start-1; for (int j = start; j < end; j++) { if (arr[j] <= pivot) { i++; swap(arr, i, j); } } swap(arr, i+1, end); return i+1; }"},{"prompt":"mplement a search algorithm in C++ that takes in a list of integers and a target value and finds the index of the target if it exists in the list. List: [2, 4, 6, 8, 10], Target: 8","completion":"// C++ Program to implement Search #include <bits/stdc++.h> using namespace std; // function to implement search int search(vector <int> list, int x) { // traversing the list for (int i = 0; i<list.size(); i++) if (list.at(i) == x) return i; return -1; } // driver code int main() { vector <int> list({2, 4, 6, 8, 10}); int x = 8; int index = search(list, x); if (index != -1) cout << \\"Element found at index \\" << index; else cout << \\"Element not found\\"; return 0; }"},{"prompt":"Transform a given XML document into a JSON object using Python.","completion":"import xmltodict # open the XML document with open(\\"document.xml\\") as f: xml_data = f.read() # convert to json json_data = xmltodict.parse(xml_data) # print the JSON object print(json.dumps(json_data, indent=2))"},{"prompt":"mplement the longest common subsequence algorithm in C.","completion":"#include<stdio.h> #include<string.h> int lcs( char *X, char *Y, int m, int n ) { int L[m + 1][n + 1]; int i, j; /* Following steps build L[m + 1][n + 1] in bottom up fashion. Note that L[i][j] contains length of LCS of X[0..i-1] and Y[0..j-1] */ for (i = 0; i <= m; i++) { for (j = 0; j <= n; j++) { if (i == 0 || j == 0) L[i][j] = 0; else if (X[i - 1] == Y[j - 1]) L[i][j] = L[i - 1][j - 1] + 1; else L[i][j] = max(L[i - 1][j], L[i][j - 1]); } } /* L[m][n] contains length of LCS for X[0..n-1] and Y[0..m-1] */ return L[m][n]; } /* Driver program to test above function */ int main() { char X[20] = \\"ABCDEFG\\"; char Y[15] = \\"ABREGF\\"; int m = strlen(X); int n = strlen(Y); printf(\\"The length of the LCS is %d\\", lcs( X, Y, m, n ) ); return 0; }"},{"prompt":"Using regular expressions, extract all telephone numbers from a given string in JavaScript.","completion":"let string = \\"My telephone numbers are 123-456-7890 and 012-345-6789\\"; let regex = /d{3}-d{3}-d{4}/g; let numbers = string.match(regex); console.log(numbers);"},{"prompt":"Parse a given HTML document and find all elements with the given class name using JavaScript.","completion":"let list = document.getElementsByClassName(\\"classname\\"); let elements = []; for (let i = 0; i < list.length; i++) { elements.push(list[i]); } console.log(elements);"},{"prompt":"Create a function to represent a decimal number in its binary form.","completion":"def decimal_to_binary(num): result = \\"\\" while num > 0: remainder = num % 2 result = str(remainder) + result num = num // 2 return result"},{"prompt":"Write a code snippet to loop through an array and check if the element is a number or not. data = [1, 'a', 'b', 2]","completion":"for item in data: if type(item) == int: print(\\"Element is a number!\\") else: print(\\"Element is not a number!\\")"},{"prompt":"Explain what a cross-site scripting attack is.","completion":"Cross-site scripting (XSS) is a type of web application security vulnerability in which an attacker injects malicious code into webpages viewed by other users. The malicious code is typically a client-side script that is executed on the user's browser, such as JavaScript, HTML, and VBScript. This type of attack allows attackers to steal user data, execute unauthorized code, and gain full control of the affected web page."},{"prompt":"Write a code snippet that reverses a string in JavaScript.","completion":"function reverseString(str) { strArray = str.split(''); reversedStrArray = strArray.reverse(); return reversedStrArray.join(''); }"},{"prompt":"Write a Python function that prints the first n even numbers.","completion":"def print_even_numbers(n): for i in range(2, n*2, 2): print(i)"},{"prompt":"Create a JavaScript code snippet to check if an object contains a specified key.","completion":"function hasKey(obj, key) { if(obj.hasOwnProperty(key)) { return true; } return false; }"},{"prompt":"Given two data sets, one containing the user id (user_id) and first name (firstname) and another data set containing user_id and last name (lastname), write a Python function to join the two sets and create a new data set with firstname, lastname and user_id. user_id: [1,3,4,7] firstname: [\\"John\\", \\"Alice\\", \\"Madison\\", \\"Peter\\"] user_id: [1,2,3,6] lastname: [\\"Smith\\", \\"Jones\\", \\"Brown\\", \\"Miller\\"]","completion":"def join_sets(user_id1, firstname, user_id2, lastname): user_id = user_id1 + user_id2 names = firstname + lastname result = [] for id in user_id: firstname = [name for id, name in zip(user_id1, firstname) if id == id][0] lastname = [name for id, name in zip(user_id2, lastname) if id == id][0] result.append({\\"user_id\\": id, \\"firstname\\": firstname, \\"lastname\\": lastname}) return result"},{"prompt":"Using the given list of strings, create a function to count and return the number of capital letters in the list.","completion":"def count_capital_letters(string_list): count = 0 for string in string_list: for char in string: if char.isupper(): count += 1 return count"},{"prompt":"Write a Python program to compute and return a list that contains every possible combination of two given lists. list1 = [1,2] list2 = [3,4]","completion":"def combine_lists(list1,list2): result = [] for i in list1: for j in list2: result.append([i,j]) return result"},{"prompt":"Create a function to return all the indices in a string where a given substring occurs.","completion":"def find_substring(main_string, substring): indices = [] position = -1 while True: position = main_string.find(substring, position + 1) if position == -1: break indices.append(position) return indices"},{"prompt":"Return an error message when a user inputs a negative number.","completion":"if (number < 0): print('Error: Number cannot be negative.')"},{"prompt":"Create a function to detect even numbers.","completion":"def is_even(number): if (number % 2 == 0): return True else: return False"},{"prompt":"Parse a JSON object and print out the elements. data = { 'name': 'John Doe', 'age': 32, 'address': { 'street': '123 Main St', 'city': 'New York', 'zip': 10010 } }","completion":"import json data = json.loads(data) print('Name:', data['name']) print('Age:', data['age']) print('Street:', data['address']['street']) print('City:', data['address']['city']) print('Zip:', data['address']['zip'])"},{"prompt":"Generate a function that computes the sum of the numbers in a given list.","completion":"def compute_sum(numbers): total = 0 for num in numbers: total += num return total"},{"prompt":"Print out the values in the following dictionary. my_dict = { 'name': 'John Doe', 'age': 32, 'city': 'New York' }","completion":"print('Name:', my_dict['name']) print('Age:', my_dict['age']) print('City:', my_dict['city'])"},{"prompt":"Create a class to store student names, ages and grades.","completion":"class Student: def __init__(self,name,age,grade): self.name = name self.age = age self.grade = grade def get_name(self): return self.name def set_name(self,name): self.name = name def get_age(self): return self.age def set_age(self,age): self.age = age def get_grade(self): return self.grade def set_grade(self,grade): self.grade = grade"},{"prompt":"Write a Python program to find all the Armstrong numbers between the given two numbers. An Armstrong number is a number such that the sum of its digits raised to the third power is equal to the number itself. lower = 100 upper = 2000","completion":"def isArmstrong(num): s = 0 temp = num while temp > 0: digit = temp % 10 s += digit ** 3 temp //= 10 if num == s: return True else: return False for num in range(lower, upper + 1): if isArmstrong(num): print(num)"},{"prompt":"Write a virtual assistant in Python to gauge the sentiment of a given string. string = \\"I had a terrible day","completion":"import nltk from nltk.sentiment.vader import SentimentIntensityAnalyzer def sentiment_analyzer(string): sid = SentimentIntensityAnalyzer() snt = sid.polarity_scores(string) return snt[\\"compound\\"] sentiment_analyzer(string)"},{"prompt":"Write a Python function to check if a number is perfect or not. A number is said to be a perfect number if its sum of divisors is equal to itself.","completion":"def is_perfect(n): s = 0 for i in range(1, n): if n % i == 0: s += i return s == n"},{"prompt":"Use the Python built-in function filter() to find all numbers divisible by 5. mylist = [10, 21, 32, 45, 56, 77]","completion":"list(filter(lambda x: (x % 5 == 0), mylist))"},{"prompt":"Calculate the square root of a number using bisection search. number = 9","completion":"low = 0 high = number answer = (high + low) / 2 #Store the difference between the answer and the number diff = (answer ** 2) - number #Loop until the difference is within a very small tolerance while abs(diff) > 0.00001: if diff > 0: #the answer is too high high = answer else: #the answer is too low low = answer #compute a new answer answer = (high + low) /2 #and compute a new diff diff = (answer ** 2) - number print(answer)"},{"prompt":"Convert this time to the 12-hour time format. 16:47","completion":"4:47 PM"},{"prompt":"Create a for loop in PHP to iterate over an array and output a result for each item. myArray = [\\"apple\\", \\"banana\\", \\"pear\\"]","completion":"<?php foreach(myArray as item) { echo \\"I like \\" . item . \\"<br>\\"; } ?>"},{"prompt":"Create a regular expression pattern to detect valid 4-digit numeric codes","completion":"^d{4}"},{"prompt":"Complete the following code to fetch data from the \\"employees\\" table using an SQL query. SELECT * FROM","completion":"SELECT * FROM employees"},{"prompt":"Construct a loop to print numbers from 1 to 10 using a while loop in Python.","completion":"i = 1 while i <= 10: print(i) i += 1"},{"prompt":"Write a Bash script that prints numbers from 0 to 10 three times.","completion":"for i in {1..3}; do for num in (seq 0 10); do echo \\"num\\" done done"},{"prompt":"Design an HTML page using standard HTML tags which contains a heading and two paragraphs","completion":"<html> <head> <title>Example</title> </head> <body> <h1>Heading</h1> <p>Paragraph 1</p> <p>Paragraph 2</p> </body> </html"},{"prompt":"Change the following regular expression so that it matches terms beginning with 'g' ^g","completion":"^gw+"},{"prompt":"Create a Python script that find the number of occurrences of a specific word in a given sentence. This is a sample sentence.","completion":"sentence_input = \\"This is a sample sentence.\\" def count_keyword(sentence_input, keyword): return sentence_input.lower().count(keyword.lower()) count = count_keyword(sentence_input, \\"sentence\\") print(\\"The word 'sentence' occurs \\" + str(count) + \\" times.\\")"},{"prompt":"Design a simple HTML page using standard HTML tags which contains an input box, a button and an output section","completion":"<html> <head> <title>Example</title> </head> <body> <div> <input type=\\"text\\" id=\\"input\\"> <button type=\\"submit\\" onclick=\\"output()\\">Submit</button> </div> <div id=\\"output\\"></div> <script> function output() { output.innerHTML = inp.value; } <\/script> </body> </html>"},{"prompt":"Create a CSS program to apply a blue border to all <div> elements","completion":"div { border: 2px solid blue; }"},{"prompt":"Make a class in Python which will represent a binary search tree.","completion":"class BinarySearchTree: def __init__(self, value): self.left = None self.right = None self.value = value def inorder(self): if self.left: self.left.inorder() print(self.value) if self.right: self.right.inorder() def insert(self, value): if value <= self.value: if self.left is None: self.left = BinarySearchTree(value) else: self.left.insert(value) elif value > self.value: if self.right is None: self.right = BinarySearchTree(value) else: self.right.insert(value)"},{"prompt":"Design a solution in JavaScript to find the kth smallest element in an unsorted array. arr = [8, 5, 7, 2, 3, 1, 9, 4] k = 3","completion":"function kthSmallest(arr, k) { // Sort the array arr.sort((a, b) => a - b); // Return kth element in the sorted array return arr[k - 1]; }"},{"prompt":"Change the following Python program so that it prints out the palindromic substrings. string = 'mom'","completion":"def palindromicSubstrings(string): for start in range(len(string) + 1): for end in range(start + 1, len(string) + 1): substring = string[start:end] if substring == substring[::-1]: print(substring) palindromicSubstrings(string)"},{"prompt":"Rewrite the following C program so that it prints the frequency of each character in a given string. string = \\"abcabcabc","completion":"#include <stdio.h> #include <string.h> // Fills frequency array with zero void clear(int count[], int n) { int i; for (i = 0; i < n; i++) count[i] = 0; } // Calculate frequency of each character // in a string void calculateFrequency(char *str, int count[], int len) { int i; for (i = 0; i < len; i++) count[str[i] - 'a']++; } int main() { char str[] = \\"abcabcabc\\"; int len = strlen(str); // Initialize frequency array int count[26] = { 0 }; // Clear the frequency array clear(count, 26); // Calculate frequency calculateFrequency(str, count, len); // Print the frequency of each character for (int i = 0; i < 26; i++) if(count[i] != 0) printf(\\"%c occurs %d times in the string n\\", i + 'a', count[i]); return 0; }"},{"prompt":"Change the following C++ program so that it returns 0 if an array contains all negative numbers. arr = [-2, -3, -4, -1]","completion":"#include <iostream> using namespace std; int max_sum(int arr[], int n) { if (n == 0) return 0; int max = arr[0]; int sum = arr[0]; for (int i = 1; i < n; i++) { if (arr[i] < 0) return 0; sum = max(sum + arr[i], arr[i]); max = max(max, sum); } return max; } /// 16. Instruction: Create a function in Python that returns the number of times a given substring occurs in a string. 16. Input: string = \\"Hello, Hello, Hello!\\" substring = \\"Hello\\" 16. Output: def count_substring(string, substring): count = 0 #Loop through the string for i in range(0, len(string)): if (string[i:i+len(substring)] == substring): count += 1 return count"},{"prompt":"Sort a given list of numbers and print the result. myList = [9, 2, 5, 1, 8]","completion":"myList.sort() print(myList)"},{"prompt":"Print the first element of a given array. myArray = [20, 45, 70, 95]","completion":"print(myArray[0])"},{"prompt":"Sum the elements of a given array and print the result. array = [2, -7, 4, 5]","completion":"s = sum(array) print(s)"},{"prompt":"Write a code to return the list of integers between two given numbers. start = 5 end = 9","completion":"def get_integer_between(start, end): return list(range(start, end + 1)) print(get_integer_between(start, end))"},{"prompt":"Multiply every element of a list and print the result. myList = [3, 4, 5]","completion":"mulp = 1 for i in myList: mulp = mulp * i print(mulp)"},{"prompt":"Design a database schema for a retail store that tracks customers, purchases, and items.","completion":"CREATE TABLE customers ( id INTEGER NOT NULL AUTO_INCREMENT, name VARCHAR(255), address VARCHAR(255), email VARCHAR(255), PRIMARY KEY (id) ); CREATE TABLE items ( id INTEGER NOT NULL AUTO_INCREMENT, name VARCHAR(255), price DECIMAL(8,2), PRIMARY KEY (id) ); CREATE TABLE purchases ( id INTEGER NOT NULL AUTO_INCREMENT, customer_id INTEGER NOT NULL, item_id INTEGER NOT NULL, quantity INTEGER, PRIMARY KEY (id), FOREIGN KEY (customer_id) REFERENCES customers(id), FOREIGN KEY (item_id) REFERENCES items(id) );"},{"prompt":"w do you create a MySQL query to find a specific employee by their name in a table named 'employees'?","completion":"SELECT * FROM employees WHERE name = '<employee_name>';"},{"prompt":"Given an array of strings and an integer, write a function in Java to return a new array that contains the strings at each index less than the specified integer. String[] array = {\\"one\\", \\"two\\", \\"three\\", \\"four\\", \\"five\\"}; int integer = 3;","completion":"public static String[] filterArray(String[] array, int n) { List<String> filteredArray = new ArrayList<String>(); for (int i = 0; i < array.length; i++) { if (i < n) { filteredArray.add(array[i]); } } String[] newArray = new String[filteredArray.size()]; for (int i = 0; i < newArray.length; i++) { newArray[i] = filteredArray.get(i); } return newArray; }"},{"prompt":"Create a function in Python that takes a number as an argument and displays the corresponding day from Monday to Sunday.","completion":"def getDay(num): days = { 0: 'Monday', 1: 'Tuesday', 2: 'Wednesday', 3: 'Thursday', 4: 'Friday', 5: 'Saturday', 6: 'Sunday', } return days[num]"},{"prompt":"Java, what is a good way to make a deep copy of an object?","completion":"A deep copy of an object can be obtained by using the Object.clone() method or by serializing and deserializing the object."},{"prompt":"What is the syntax for filtering a DataFrame using an OR condition in Pandas?","completion":"df.loc[(condition1) | (condition2)]"},{"prompt":"w to check for a key in a dictionary in Python?","completion":"if key in dictionary: # execute this block of code else: # execute this block of code"},{"prompt":"w can we extract the first 2 characters from a string in Perl?","completion":"substr = substr string, 0, 2;"},{"prompt":"Write a function in Python that accepts an array as an argument and returns the index of the item with the maximum value. arr = [2, 5, 9, 4, 10]","completion":"def find_max_index(arr): if len(arr) == 0: return None max_val = arr[0] max_index = 0 for i in range(1, len(arr)): if arr[i] > max_val: max_val = arr[i] max_index = i return max_index arr = [2, 5, 9, 4, 10] max_index = find_max_index(arr) print(max_index) # Output 4"},{"prompt":"Write an SQL query to display the customer's first name, last name, and total spent. Customer table: id | first_name | last_name | points 1 | Harry | Potter | 500 Order table: order_id | customer_id | total 23 | 1 | 25","completion":"SELECT c.first_name, c.last_name, SUM(o.total) AS total_spent FROM Customer c JOIN Order o ON c.id = o.customer_id GROUP BY c.first_name, c.last_name"},{"prompt":"Rewrite the following function so that it returns a tuple instead of two separate values. def random_arr(arr): idx = random.randint(0,len(arr)-1) return arr[idx], idx","completion":"def random_arr(arr): idx = random.randint(0, len(arr)-1) return (arr[idx], idx)"},{"prompt":"Create a function that takes two integer arguments, subtracts the second one from the first one, and returns the result. num1 = 3, num2 = 2","completion":"def subtract(num1, num2): return num1 - num2 result = subtract(3, 2) print(result) # Output: 1"},{"prompt":"Design a class BankAccount that represents a bank account with the attributes name, balance, and interest_rate.","completion":"class BankAccount: def __init__(self, name, balance, interest_rate): self.name = name self.balance = balance self.interest_rate = interest_rate def deposit(self, amount): self.balance += amount def withdraw(self, amount): self.balance -= amount"},{"prompt":"Write an algorithm that takes a set of numbers and returns the sum of all numbers in the set. my_set = {2, 3, 4, 5}","completion":"def sum_set(my_set): total = 0 # Initialize total for num in my_set: total += num return total my_set = {2, 3, 4, 5} total = sum_set(my_set) print(total) # Output 14"},{"prompt":"Write a query to select the last three records from the table \\"Orders\\". Order table: order_id | customer_id | total 21 | 2 | 10 22 | 4 | 15 23 | 1 | 25 24 | 3 | 20","completion":"SELECT * FROM Orders ORDER BY order_id DESC LIMIT 3"},{"prompt":"Create a function to calculate the sum of 2 numbers and return 'None' if both the parameters are not numbers.","completion":"def sum_of_two_numbers(x, y): if type(x) is not int or type(y) is not int: return None return x + y"},{"prompt":"Using a single 'for' loop, iterate through an array and print out the indices and values of each element to the console. [2, 5, 8, 9, 10]","completion":"for i in range(len(arr)): print(\\"Index: \\" + str(i) + \\", Value: \\" + str(arr[i]))"},{"prompt":"Write a test suite to test an arithmetic function that takes two arguments and returns the sum.","completion":"import unittest class TestArithmeticFunction(unittest.TestCase): def test_sum(self): self.assertEqual(arithmetic_function(2, 5), 7) self.assertEqual(arithmetic_function(-4, 9), 5) self.assertEqual(arithmetic_function(-2, 0), -2) if __name__ == '__main__': unittest.main()"},{"prompt":"Create a method that takes a string as a parameter and returns the number of unique characters present in the string. pytho","completion":"def count_unique_characters(str): characters = set() for char in str: characters.add(char) return len(characters)"},{"prompt":"Create a regex pattern to match the following string: \\"2019-08-21\\".","completion":"d{4}-d{2}-d{2}"},{"prompt":"Update the given code to sort an array of strings based on their lengths. arr = [\\"dogs\\", \\"cat\\", \\"lion\\"]","completion":"def sort_by_length(arr): arr.sort(key=len) return arr"},{"prompt":"Create a function to generate a random number within the range of 0 and 1000.","completion":"import random def random_in_range(): return random.randint(0, 1000)"},{"prompt":"Change the variable names in the given code to comply with the chosen coding standard. x = \\"Hello World!\\" y = 1","completion":"message = \\"Hello World!\\" value = 1"},{"prompt":"Using the input provided, generate a random string consisting of 8 characters. [a, b, c, d, e, f, g, h]","completion":"import random def random_string(arr): return ''.join(random.sample(arr, 8))"},{"prompt":"Create a tag cloud to visualize the most frequent words in the following sentence. The quick brown fox jumps over the lazy dog","completion":"<div> <span class=\\"tag\\" style=\\"font-size: 300%;\\">The</span> <span class=\\"tag\\" style=\\"font-size: 200%;\\">quick</span> <span class=\\"tag\\" style=\\"font-size: 250%;\\">brown</span> <span class=\\"tag\\" style=\\"font-size: 150%;\\">fox</span> <span class=\\"tag\\" style=\\"font-size: 200%;\\">jumps</span> <span class=\\"tag\\" style=\\"font-size: 250%;\\">over</span> <span class=\\"tag\\" style=\\"font-size: 100%;\\">the</span> <span class=\\"tag\\" style=\\"font-size: 150%;\\">lazy</span> <span class=\\"tag\\" style=\\"font-size: 200%;\\">dog</span> </div>"},{"prompt":"dentify all the variables in this C++ program. #include <iostream> int main() { int number = 10; std::cout << number; return 0; }","completion":"The variable in the above program is 'number'."},{"prompt":"Write a Swift program to calculate the factorial of a given integer.","completion":"func factorial(_ n: UInt) -> UInt { if n == 0 { return 1 } return n * factorial(n - 1) } print(factorial(7))"},{"prompt":"Write a JavaScript program to compare two Strings for equality, ignoring case. String1: 'Hello' String2: 'heLLo'","completion":"const compareIgnoreCase = (string1, string2) => { return string1.toUpperCase() === string2.toUpperCase(); }; compareIgnoreCase(\\"Hello\\", \\"heLLo\\"); // true"},{"prompt":"Compile a given C program and link it with a shared library. // program code given #include <stdio.h> int main() { printf(\\"Hello World\\"); return 0; } //Shared Library libfoo.so","completion":"gcc -c yourprogram.c gcc -o yourprogram yourprogram.o -L/path/to/shared/library -lfoo"},{"prompt":"Construct a JSON object from an array of objects. // Given Array [ { \\"name\\": \\"John\\", \\"age\\": 24 }, { \\"name\\": \\"Max\\", \\"age\\": 27 } ]","completion":"{\\"people\\": [ { \\"name\\": \\"John\\", \\"age\\": 24 }, { \\"name\\": \\"Max\\", \\"age\\": 27 } ]}"},{"prompt":"Write a Java code to create a HashMap and add elements into it. //Given Key and Value // key: \\"name\\" // value: \\"Joh","completion":"HashMap<String, String> map = new HashMap<>(); map.put(\\"name\\", \\"John\\");"},{"prompt":"What is the average value of all elements in a given array? //Given Array [1, 8, 4, 5, 9]","completion":"total = 0 for i in arr: total += i average = total / len(arr) print(average) # 5.6"},{"prompt":"Write a JavaScript function to find the number of days left from today to a given date. let date = \\"12/20/2020\\";","completion":"function daysLeft(date){ let today = new Date(); let endDate = new Date(date); let timeDifference = endDate - today; let daysLeft = Math.ceil(timeDifference / (1000 * 60 * 60 * 24)); return daysLeft; }"},{"prompt":"Create a MySQL query to return the employee details from the \\"employees\\" table with the minimum salary. Table Name: Employees Columns: Emp_ID, First_Name, Last_Name, Job_Position, Salary","completion":"SELECT * FROM Employees ORDER BY Salary ASC LIMIT 1"},{"prompt":"Create a MySQL table named \\"customers\\" with 4 columns: \\"CustomerID\\", \\"Name\\", \\"Address\\" and \\"Phone\\".","completion":"CREATE TABLE customers ( CustomerID int NOT NULL AUTO_INCREMENT, Name varchar(255) NOT NULL, Address varchar(255) NOT NULL, Phone varchar(255) NOT NULL, PRIMARY KEY (CustomerID) );"},{"prompt":"Design a function to find the number of common keys between two arrays. let array1 = [\\"a\\", \\"b\\", \\"c\\", \\"d\\", \\"e\\", \\"f\\"]; let array2 = [\\"b\\", \\"d\\", \\"f\\", \\"g\\", \\"h\\", \\"i\\"];","completion":"function commonKeys(array1, array2) { let commonKeys = []; for (let i = 0; i < array1.length; i++) { if (array2.indexOf(array1[i]) !== -1) { commonKeys.push(array1[i]); } } return commonKeys.length; }"},{"prompt":"Execute a provided MySQL query and return the result. SELECT Last_Name, COUNT(*) FROM Employees WHERE Job_Position = \\"Accountant\\" GROUP BY Last_Name","completion":"Miller - 7 Andrews - 2 Gardner - 5"},{"prompt":"ert records into a MySQL table named \\"Products\\" with the specified columns: \\"ProductID\\", \\"Name\\" and \\"Price\\". ProductID: 1, Name: \\"Notebook\\", Price: 15.50 ProductID: 2, Name: \\"Pen\\", Price: 3.50 ProductID: 3, Name: \\"Pencil\\", Price: 2.00","completion":"INSERT INTO Products (ProductID, Name, Price) VALUES (1, 'Notebook', 15.50), (2, 'Pen', 3.50), (3, 'Pencil', 2.00);"},{"prompt":"Write a code to add a new key and value to a given dictionary. Dictionary: {'name': 'John', 'age': 18, 'city': 'New York'} New Key: 'profession', Value: 'journalist'","completion":"dictionary['profession'] = 'journalist' # add new key and value to dictionary{'name': 'John', 'age': 18, 'city': 'New York', 'profession': 'journalist' }"},{"prompt":"Translate the following sentence from Spanish to English. Nuestras ideas eran descabelladas.","completion":"Our ideas were outlandish."},{"prompt":"Separate the given words on the basis of their given data types. Words: Yellow, 3.2, purple","completion":"String: Yellow Float: 3.2 String: purple"},{"prompt":"Write a jQuery code to show an alert when the button is clicked.","completion":"('#btn').click(function(){ alert('Button clicked!'); });"},{"prompt":"Calculate the area of a circle with a radius of 10 cm.","completion":"314.16 cm2"},{"prompt":"Using SQL, write a query to find the most recently hired employee.","completion":"SELECT last_name, first_name FROM employees ORDER BY hire_date DESC LIMIT 1;"},{"prompt":"Create a website using HTML and CSS that displays \\"Hello, World!\\".","completion":"<!DOCTYPE html> <html> <head> <title>Hello World</title> <style> body { background-color: #eee; text-align: center; padding: 20px; } h1 { font-family: sans-serif; font-size: 2em; letter-spacing: 2px; color: #444; margin-bottom: 20px; } </style> </head> <body> <h1>Hello, World!</h1> </body> </html>"},{"prompt":"Design a basic calculator using HTML, CSS, and JavaScript.","completion":"<!DOCTYPE html> <html> <head> <title>HTML/CSS/Javascript Calculator</title> <style> * { box-sizing: border-box; } .calculator { width: 425px; background-color: #fafafa; padding: 20px; border-radius: 8px; } .calculator-display { display: flex; align-items: flex-end; padding: 0px 20px; font-size: 2.5rem; font-family: sans-serif; } .calculator-keypad { display: grid; grid-template-columns: repeat(4, 1fr); grid-gap: 8px; } .calculator-key { background-color: #f0f0f0; width: 100%; height: 80px; border-radius: 8px; font-size: 1.25rem; font-family: sans-serif; font-weight: bold; color: #444; cursor: pointer; } </style> </head> <body> <div class=\\"calculator\\"> <div class=\\"calculator-display\\"></div> <div class=\\"calculator-keypad\\"></div> </div> <script> const calculator = { displayValue: '0', firstOperand: null, waitingForSecondOperand: false, operator: null }; function updateDisplay() { const display = document.querySelector('.calculator-display'); display.innerText = calculator.displayValue; } updateDisplay(); // add event listeners for the calculator buttons <\/script> </body> </html>"},{"prompt":"Create a console application in C++ that computes the sum of two numbers that are user input.","completion":"#include <iostream> using namespace std; int main(){ int num1; int num2; int sum; cout<<\\"Please enter two numbers: \\"; cin>> num1; cin>> num2; sum = num1 + num2; cout<<\\"The sum of the two numbers is: \\" << sum <<endl; return 0; }"},{"prompt":"Create a web page that displays a message in different languages by using HTML, CSS, and JavaScript.","completion":"<!DOCTYPE html> <html> <head> <title>Hello World in Different Languages</title> <style> body { font-family: sans-serif; background-color: #eee; text-align: center; padding: 20px; } select { background-color: #f0f0f0; font-size: 1rem; padding: 5px 10px; margin-top: 20px; border: none; border-radius: 5px; } button { background-color: #444; color: #fff; font-size: 1rem; padding: 5px 10px; margin-top: 20px; border: none; border-radius: 5px; } .language-message { font-size: 2rem; margin: 20px; color: #444; } </style> </head> <body> <h1>Hello World in Different Languages</h1> <select id=\\"language-selector\\"> <option value=\\"English\\">English</option> <option value=\\"French\\">French</option> <option value=\\"Spanish\\">Spanish</option> <option value=\\"German\\">German</option> <option value=\\"Italian\\">Italian</option> </select> <button type=\\"button\\" id=\\"language-button\\">Show!</button> <label class=\\"language-message\\" id=\\"language-message\\"></label> <script> // Get language button, message label, and language selector elements const languageButton = document.querySelector('#language-button'); const languageMessage = document.querySelector('#language-message'); const languageSelector = document.querySelector('#language-selector'); let messages = { 'English': 'Hello, World!', 'French': 'Bonjour le monde!', 'Spanish': 'Hola Mundo!', 'German': 'Hallo Welt!', 'Italian': 'Ciao Mondo!' }; languageButton.addEventListener('click', () => { let language = languageSelector.value; languageMessage.innerText = messages[language]; }); <\/script> </body> </html>"},{"prompt":"Design an interactive game using HTML, CSS and JavaScript.","completion":"<!DOCTYPE html> <html> <head> <title>Hunted Maze</title> <style> * { box-sizing: border-box; } body{ font-family: sans-serif; background-color: #eee; text-align: center; padding: 20px; } h1 { font-size: 2rem; color: #444; } .maze { position: relative; width: 800px; height: 600px; background-color: #f0f0f0; border-radius: 8px; } .box { position: absolute; width: 25px; height: 25px; background-color: #444; border-radius: 4px; top: 0; left: 0; } </style> </head> <body> <h1>Hunted Maze</h1> <div class=\\"maze\\"> <div class=\\"box\\"></div> </div> <script> // add logic for the game <\/script> </body> </html>"},{"prompt":"Using SQL, write a query to find the employee names and the departments that they work in.","completion":"SELECT last_name, first_name, department FROM employees;"},{"prompt":"Suggest a completion to the following SQL command and explain. SELECT column1, column2","completion":"SELECT column1, column2 FROM table_name WHERE condition This statement will return the values of column1 and column2 from the table_name table where the condition is fulfilled."},{"prompt":"w would you write a for loop to iterate over an array of integers in Bash?","completion":"for i in (seq 0 (({#array[@]} - 1))); do echo \\"{array[i]}\\" done"},{"prompt":"w can you test a user-defined function with the name \\"sum\\" in JavaScript?","completion":"function sumTest(){ let expectedResult = 15; let actualResult = sum(5, 10); if(expectedResult === actualResult){ console.log(\\"sum test passed\\"); } else{ console.log(\\"sum test failed\\"); } } sumTest();"},{"prompt":"Construct an SQL query that significantly improves the performance of a given query. SELECT * FROM students WHERE age >= 18","completion":"SELECT name, age FROM students WHERE age >= 18 AND active = 1 ORDER BY age ASC LIMIT 10"},{"prompt":"Create a bash script that asks a user to type in their name and prints out \\"Hello <name>","completion":"#!/bin/bash echo \\"Please enter your name:\\" read name echo \\"Hello name!\\""},{"prompt":"Produce the Java equivalent of the following PHP code block. arr = array(1, 2, 3, 4); foreach (arr as element) { echo element; }","completion":"int[] arr = {1, 2, 3, 4}; for (int element : arr) { System.out.println(element); }"},{"prompt":"Write a 5-line Ruby program to print the Fibonacci series from 1 to 5.","completion":"def fibonacci x = 1 y = 1 for i in 1..5 output = x sum = x + y x = y y = sum puts output end end fibonacci()"},{"prompt":"Explain the role of the \\"break\\" keyword in a switch statement in Java.","completion":"The \\"break\\" keyword is used in a switch statement to terminate the switch block. When it is encountered, the code execution jumps to the line immediately after the switch block. It is also used to exit out of a loop if a certain specified condition is met."},{"prompt":"Write a Ruby program that takes user input and checks if the input is a prime number.","completion":"def is_prime?(num) (2..Math.sqrt(num)).each { |n| return false if num % n == 0 } true end"},{"prompt":"Create a HTML form which collects a user's name and email.","completion":"<form action=\\"form.php\\" method=\\"POST\\"> <label>Name:<input type=\\"text\\" name=\\"name\\"></label> <label>Email:<input type=\\"email\\" name=\\"email\\"></label> <input type=\\"submit\\" value=\\"Submit\\"> </form>"},{"prompt":"Create a class in Java which stores the details of a book (title, author, ISBN).","completion":"class Book { String title; String author; String isbn; public Book(String title, String author, String isbn) { this.title = title; this.author = author; this.isbn = isbn; } }"},{"prompt":"Write a Java program which prints out the maximum element in an array. nums = [6, 4, 7, 2, 8]","completion":"public static int maxElement(int[] nums) { int max = 0; for (int i = 0; i < nums.length; i++) max = Math.max(nums[i], max); return max; }"},{"prompt":"Develop an HTML page which displays a user's profile information (name, age, phone number).","completion":"<!DOCTYPE html> <html lang=\\"en\\"> <head> <meta charset=\\"UTF-8\\"> <meta name=\\"viewport\\" content=\\"width=device-width, initial-scale=1.0\\"> <title>User Profile</title> </head> <body> <h1>User Profile</h1> <p>Name: John Doe</p> <p>Age: 24</p> <p>Phone Number: 123-456-789</p> </body> </html>"},{"prompt":"Create a SQL query that updates the age of a user with a given ID.","completion":"UPDATE users SET age = age + 1 WHERE id = <specified_id>;"},{"prompt":"Write C++ code to search for a particular element in a singly linked list. Linked list: 1->2->5->7->9 Element to be searched: 5","completion":"#include<iostream> using namespace std; struct Node { int data; Node *next; }; // Function to search a given element x in the list bool search(Node* head, int x) { Node* current = head; while (current != NULL) { if (current->data == x) return true; current = current->next; } return false; } // Program to test function search() int main() { Node* head = NULL; Node* second = NULL; Node* third = NULL; head = new Node(); second = new Node(); third = new Node(); head->data = 1; head->next = second; second->data = 2; second->next = third; third->data = 5; third->next = NULL; int elementToSearch = 5; if(search(head, elementToSearch)) cout<<\\"Yes, Element Found\\"; else cout<<\\"No, Element Not Found\\"; }"},{"prompt":"Produce HTML output with a yellow background using the following CSS style. .background { background-color: #000; }","completion":"<html> <head> <style> .background { background-color: #000; } </style> </head> <body> <div class=\\"background\\" style=\\"background-color: #FFFF00;\\"></div> </body> </html>"},{"prompt":"Analyze and improve the following basic shell script. #!/bin/bash # simple bash script echo \\"Hello World","completion":"#!/bin/bash # Simple bash script # Store name in a variable name=\\"World\\" # Print message echo \\"Hello name\\""},{"prompt":"Rewrite the following python code to an equivalent code using lambda and sorted function. def sort_by_length(words): return sorted(words, key=lambda x: len(x))","completion":"sort_by_length = lambda words: sorted(words, key=len)"},{"prompt":"Suggest a functional Node.js program to output the unique elements of an array. let array = [2, 3, 4, 1, 3]","completion":"let array = [2, 3, 4, 1, 3]; let unique_elements = [...new Set(array)]; console.log(unique_elements); // [2, 3, 4, 1]"},{"prompt":"w can we extend the following JavaScript program to add two more students? function getStudents(){ const students = [ {name: \\"Tom\\", age: 17}, {name: \\"Jack\\", age: 16}, ]; return students; }","completion":"function getStudents(){ const students = [ {name: \\"Tom\\", age: 17}, {name: \\"Jack\\", age: 16}, {name: \\"Jill\\", age: 13}, {name: \\"Dave\\", age: 21}, ]; return students; }"},{"prompt":"w can the following C code for Fibonacci Series be modified to include the nth element? #include <stdio.h> int Fibonacci(int n) { if (n <= 1) return n; return Fibonacci(n-1) + Fibonacci(n-2); }","completion":"#include <stdio.h> int Fibonacci(int n) { int a = 0, b = 1, c; if (n == 0) return a; for (int i = 2; i <= n; i++) { c = a + b; a = b; b = c; } return b; }"},{"prompt":"Write a CSS program to create a rectangular box with rounded corners, border and a drop shadow.","completion":".box { width: 300px; height: 200px; background: #fff; border-radius: 10px; border: 1px solid gray; box-shadow: 2px 5px 10px gray; padding: 10px; }"},{"prompt":"Create a Django application to store and retrieve questions and answers.","completion":"# Project Name project = 'questions_and_answers' # Application Name application = 'qa_app' # Create the project directory import os if not os.path.exists(project): os.mkdir(project) # Create the Django application from django.core.management import call_command call_command('startapp', application, project) # Setup the database from django.conf import settings default_db_name = project + '.sqlite3' settings.configure( DATABASES = { 'default': { 'ENGINE': 'django.db.backends.sqlite3', 'NAME': os.path.join(project, default_db_name), } } ) from django.db import models # Create the models class Question(models.Model): question_text = models.CharField(max_length=200) pub_date = models.DateTimeField('date published') class Answer(models.Model): question = models.ForeignKey(Question, on_delete=models.CASCADE) answer_text = models.CharField(max_length=200) # Make and apply the migrations call_command('makemigrations', application) call_command('migrate')"},{"prompt":"w can the following JavaScript program be modified to include a letter grade for each student score? let grades = [ {name: 'John', score: 90}, {name: 'Jack', score: 80}, {name: 'Jill', score: 85}, ]","completion":"let grades = [ {name: 'John', score: 90, grade: 'A'}, {name: 'Jack', score: 80, grade: 'B'}, {name: 'Jill', score: 85, grade: 'B+'}, ]; grades = grades.map(grade => { let letter; if (grade.score >= 90) { letter = 'A'; } else if (grade.score >= 80) { letter = 'B'; } else if (grade.score >= 70) { letter = 'C'; } else if (grade.score >= 60) { letter = 'D'; } else { letter = 'F'; } grade.grade = letter; return grade; });"},{"prompt":"Write a code to print the Fibonacci series of n terms.","completion":"def printFibonacciSeries(n): a, b = 0, 1 for i in range(0, n): print(a) c = a + b a = b b = c printFibonacciSeries(10)"},{"prompt":"Write an HTML page to display a form for user registration.","completion":"<!DOCTYPE html> <html> <head> <title>User Registration Form</title> </head> <body> <h1>User Registration Form</h1> <form> <input type=\\"text\\" name=\\"name\\" placeholder=\\"Enter your name\\"> <input type=\\"email\\" name=\\"email\\" placeholder=\\"Enter your email\\"> <input type=\\"password\\" name=\\"password\\" placeholder=\\"Enter your password\\"> <input type=\\"submit\\" value=\\"Submit\\"> </form> </body> </html>"},{"prompt":"Generate an array of random numbers using the JavaScript Math.random() function. Array length :10","completion":"let arrayLength = 10; let randomArray = []; for (let i = 0; i < arrayLength; i++) { randomArray.push(Math.random()); } console.log(randomArray);"},{"prompt":"Write a code to find the number of singular and plural words in a given paragraph. This is a pleasant evening. I prefer to stay at home for the evening.","completion":"let paragraph = \\"This is a pleasant evening. I prefer to stay at home for the evening.\\"; let words = paragraph.split(' '); let countSingularWords = 0; let countPluralWords = 0; for (let i = 0; i < words.length; i++) { let lastChar = words[i].charAt(words[i].length-1); if (lastChar === 's') { countPluralWords++; } else { countSingularWords++; } } console.log(\`Number of singular words = {countSingularWords}\`); console.log(\`Number of plural words = {countPluralWords}\`);"},{"prompt":"Create an associative array containing 8 records of student data.","completion":"let studentData = { \\"1\\": { \\"name\\": \\"John\\", \\"age\\": \\"18\\", \\"country\\": \\"USA\\" }, \\"2\\": { \\"name\\": \\"Peter\\", \\"age\\": \\"20\\", \\"country\\": \\"UK\\" }, \\"3\\": { \\"name\\": \\"Anna\\", \\"age\\": \\"19\\", \\"country\\": \\"USA\\" }, \\"4\\": { \\"name\\": \\"Steven\\", \\"age\\": \\"22\\", \\"country\\": \\"Canada\\" }, \\"5\\": { \\"name\\": \\"Alex\\", \\"age\\": \\"21\\", \\"country\\": \\"Australia\\" }, \\"6\\": { \\"name\\": \\"David\\", \\"age\\": \\"25\\", \\"country\\": \\"UK\\" }, \\"7\\": { \\"name\\": \\"Dan\\", \\"age\\": \\"23\\", \\"country\\": \\"USA\\" }, \\"8\\": { \\"name\\": \\"Julia\\", \\"age\\": \\"18\\", \\"country\\": \\"Germany\\" } }; console.log(studentData);"},{"prompt":"Write a code to identify palindromic numbers between 1 and a given number n.","completion":"def printPalindromicNumbers(n): for num in range(1, n + 1): s = str(num) if(s == s[::-1]): print(num, end=\\" \\") printPalindromicNumbers(100)"},{"prompt":"dentify which of the given statements is incorrect. - fopen() is a PHP function for opening a file - fgets() is a JavaScript function for reading contents of a file - fread() is a PHP function for reading contents of a file","completion":"fgets() is a JavaScript function for reading contents of a file is incorrect. The correct statement is fgets() is a PHP function for reading contents of a file."},{"prompt":"Create a C++ class called \\"TV\\".","completion":"class TV { public: TV(); // Constructor void turnOn(); void turnOff(); void switchChannel(); };"},{"prompt":"Write a code to define a function to multiply two numbers passed as arguments.","completion":"def multiply(x, y): return x * y"},{"prompt":"Create a class and a method to convert an integer to a string.","completion":"class IntToString { public static String intToString(int n) { String s = String.valueOf(n); return s; } }"},{"prompt":"Create a function that takes a list of strings and returns a new list of strings with the first letter of each string as capital. names = [\\"mary\\", \\"john\\", \\"joseph\\"]","completion":"def capitalize_names(names): new_names = [] for name in names: new_name = name[0].capitalize() + name[1:] new_names.append(new_name) return new_names"},{"prompt":"Create a function that takes a string as an argument and checks if all the characters in the string are unique, and returns a boolean.","completion":"def are_all_characters_unique(string): seen_characters = set() for c in string: if c in seen_characters: return False seen_characters.add(c) return True"},{"prompt":"Create a program that prints a given 2D array in a spiral form. a = [[1,2,3],[4,5,6],[7,8,9]]","completion":"def spiral_print(a): m = len(a) n = len(a[0]) t = 0 #top b = m-1 #bottom l = 0 #left r = n-1 #right dir = 0 while l<=r and t<=b: if dir == 0: for i in range(l, r+1): print(a[t][i], end=\\" \\") t += 1 elif dir == 1: for i in range(t, b+1): print(a[i][r], end=\\" \\") r -= 1 elif dir == 2: for i in range(r, l-1, -1): print(a[b][i], end=\\" \\") b -= 1 elif dir == 3: for i in range(b, t-1, -1): print(a[i][l], end=\\" \\") l += 1 dir=(dir+1)%4"},{"prompt":"What does this declaration mean in JavaScript ? let myArray = []","completion":"The declaration let myArray = [] in JavaScript is declaring a variable myArray which is an empty array."},{"prompt":"Describe the meaning of the variable name ‘arraySize’ in JavaScript","completion":"The variable name arraySize in JavaScript is used to describe the size of an array, that is, the number of elements in the array."},{"prompt":"Draft a Javascript function that takes no arguments and returns ‘Hello World’","completion":"function helloWorld() { return \\"Hello World\\"; }"},{"prompt":"Assign a variable in JavaScript.","completion":"let myVar = \\"Hello World\\";"},{"prompt":"Write code to create a new array with elements that are the doubled values of each element in the original array. let nums = [1, 2, 3, 4];","completion":"let doubledNums = nums.map(x => x * 2);"},{"prompt":"What does typeof do in JavaScript?","completion":"The typeof operator in JavaScript is used to determine the type of a value. It can be used to determine the type of primitives, such as string, number, boolean, null, undefined, and Symbol, and the type of objects. It returns a string indicating the type of the argument."},{"prompt":"w do you comment multiple lines in JavaScript?","completion":"In Javascript, one can comment multiple lines by enclosing the code or text within the /* and */ symbols. For example: /* This is an example of a multi-line comment */"},{"prompt":"Create a CSS rule to make all text in a webpage to have font-size 14px.","completion":"* { font-size: 14px; }"},{"prompt":"Replace all punctuation marks in the following sentence with underscores. She looked up at the stars and got lost in thought.","completion":"She_looked_up_at_the_stars_and_got_lost_in_thought_"},{"prompt":"Create a HTML page to display information about a group of users. User details: John – Age: 24, Profession: Developer Mark – Age: 26, Profession: Designer","completion":"<html> <head> </head> <body> <h1>User Details</h1> <p>John – Age: 24, Profession: Developer</p> <p>Mark – Age: 26, Profession: Designer</p> </body> </html>"},{"prompt":"Compare two objects and return 0 if the objects are equal, greater than 0 if the first object is larger, and less than 0 if the second object is larger. Object 1 - [name: John, age: 30] Object 2 - [name: Jane, age: 28]","completion":"int compareObjects(Object obj1, Object obj2) { if (obj1.name == obj2.name) { return obj1.age - obj2.age; } else { return obj1.name.compareTo(obj2.name); } }"},{"prompt":"Create an HTML5 form to get a user's name, age, and gender.","completion":"<form> <label for=\\"name\\">Name:</label> <input type=\\"text\\" id=\\"name\\" name=\\"name\\" required/> <br> <label for=\\"age\\">Age:</label> <input type=\\"text\\" id=\\"age\\" name=\\"age\\" required/> <br> <label for=\\"gender\\">Gender:</label> <select type=\\"text\\" id=\\"gender\\" name=\\"gender\\" required> <option>M</option> <option>F</option> </select> <br> <input type=\\"submit\\" value=\\"Submit\\"> </form>"},{"prompt":"Construct a SQL query to find the total salary spending of an organization by employees in the month of June.","completion":"SELECT SUM(salary) AS TotalSalarySpending FROM Empolyees WHERE MONTH(date) = 6;"},{"prompt":"Create a CSS style to position a logo in the top right corner of a webpage.","completion":"#logo { position: absolute; top: 0; right: 0; }"},{"prompt":"Find the sum of all even numbers in the following list (Python code): [1, 4, 6, 7, 8, 12, 19]","completion":"sum_even_num = 0 for num in [1, 4, 6, 7, 8, 12, 19]: if num % 2 == 0: sum_even_num = sum_even_num + num print(sum_even_num)"},{"prompt":"ert a line into the code to improve its efficiency. def double_list(lst): for i in range(len(lst)): lst[i] *= 2","completion":"def double_list(lst): output_list = [x * 2 for x in lst] return output_list"},{"prompt":"Create a program to detect whether a given string contains only vowels or not. let str = \\"hello","completion":"let containsOnlyVowels = str => { let vowels = [\\"a\\", \\"e\\", \\"i\\", \\"o\\", \\"u\\"]; for (let i = 0; i < str.length; i++) { if (!vowels.includes(str[i])) { return false; } } return true; }; let result = containsOnlyVowels(str); console.log(result); // prints false"},{"prompt":"Create a function to print the multiples of an integer up to a limit. let number = 3 let limit = 10","completion":"let printMultiples = (num, limit) => { for (let i = num; i <= limit; i += num) { console.log(i); } }; printMultiples(number, limit); // prints 3, 6, 9"},{"prompt":"Create a for loop for copying an array. arr = [1, 2, 3, 4, 5]","completion":"arr_copy = [] for i in arr: arr_copy.append(i)"},{"prompt":"Format a string for a discounted price. price = 5.99 discount = 0.20","completion":"discounted_price = '{:.2f}'.format(price * (1 - discount))"},{"prompt":"Create a function that takes a user id and returns their name. user_id = 1","completion":"def get_user_name(user_id): sql_query = \\"SELECT first_name, last_name FROM user_profiles WHERE user_id = ?\\" user = cursor.execute(sql_query, (user_id,)) return user[0] + \\" \\" + user[1]"},{"prompt":"Switch the positions of the first and last element in a list. list = [1, 2, 3, 4, 5]","completion":"list[0], list[-1] = list[-1], list[0]"},{"prompt":"Rewrite the following program snippet according to the PEP8 guidelines: def calculate_sum(a,b): return a+b;","completion":"def calculate_sum(a, b): return a + b"},{"prompt":"Create a function to sort a list of numbers without using python's built-in sort function. [3,5,4,2,1]","completion":"# Function to sort a list of numbers without using Python's built-in sort function def my_sort(numbers): n = len(numbers) for i in range(n): for j in range(0, n-i-1): if numbers[j] > numbers[j+1] : numbers[j], numbers[j+1] = numbers[j+1], numbers[j] return numbers # Example list list = [3,5,4,2,1] print(my_sort(list))"},{"prompt":"Make a program to display the maximum, minimum and average of numbers in a list [1,2,3,4,5]","completion":"list = [1,2,3,4,5] list_length = len(list) max_val = max(list) min_val = min(list) avg_val = sum(list) / list_length # Display Output print(\\"Maximum: \\", max_val) print(\\"Minimum: \\", min_val) print(\\"Average: \\", avg_val)"},{"prompt":"Create a program to determine the intersecting elements of two lists list1 = [1, 2, 3] list2 = [3, 4, 5]","completion":"def intersection(list1, list2): l1_set = set(list1) l2_set = set(list2) commons = l1_set.intersection(l2_set) return list(commons) # Example list1 = [1, 2, 3] list2 = [3, 4, 5] print(intersection(list1, list2))"},{"prompt":"Using the given input, print a zero (or cross) pattern using asterisks (*) and underscores (_) 3","completion":"*_*_* _*_*_ *_*_*"},{"prompt":"Write a Python function that prints the frequencies of even and odd numbers in a given array. [2, 5, 4, 6, 8, 10]","completion":"def frequency_of_odd_and_even(arr): freq_even = 0 freq_odd = 0 for i in arr: if i % 2 == 0: freq_even += 1 else: freq_odd += 1 print(\\"Frequency of even numbers:\\", freq_even) print(\\"Frequency of odd numbers:\\", freq_odd)"},{"prompt":"Create a JavaScript class that allows the user to choose the size, position and color of a textbox.","completion":"class Textbox { constructor(size, position, color) { this.size = size; this.position = position; this.color = color; } showTextbox() { const textbox = document.createElement(\\"div\\"); textbox.style.width = this.size + \\"px\\"; textbox.style.position = this.position; textbox.style.background = this.color; document.body.appendChild(textbox); } }"},{"prompt":"What is the volume of a sphere with radius 7 cm?","completion":"The volume of a sphere with radius 7 cm is 1436.755 cm3."},{"prompt":"Suppose you are given two lists A and B and you need to check if B’s elements are all in A. A = [1, 2, 3, 4, 5], B = [2, 3]","completion":"def compare_lists(A, B): return set(B).issubset(set(A))"},{"prompt":"Create a MySQL query to calculate the total price paid by customer with ID 1 in the last month.","completion":"SELECT SUM(price) FROM orders WHERE customer_id = 1 and order_date > DATE_SUB(NOW(), INTERVAL 1 MONTH)"},{"prompt":"w would you convert a decimal number such as 2.345 to a binary representation?","completion":"2.345 can be converted to binary representation by multiplying 2.345 by 2 repeatedly and taking note of the whole number of each multiplication. The binary representation of 2.345 is 10.011111."},{"prompt":"What is the difference between function overloading and function overriding in Java?","completion":"Function overloading refers to using the same function name for different functions, with different parameter lists. On the other hand, function overriding refers to redefining a base class function with a child class that has the same signature. Function overriding enables the child class to have a different implementation of the same method as the parent class. This is especially useful in polymorphism."},{"prompt":"Explain why the following code snippet produces the output it does lst = [[1, 2], [1, 2], [3, 4]] [x for i in lst for x in i]","completion":"The code snippet is using a nested list comprehension to flatten the list \`\`lst\`\`. The outer loop iterates over each sublist in the list while the inner loop iterates over each element of the sublist. As a result, the output is a flattened list containing all the elements in the original list. In this case, the output is [1, 2, 1, 2, 3, 4]."},{"prompt":"Observe the following code snippet and identify any errors that it contains for i in range(10): print(\\"Hello world!\\")","completion":"The code snippet does not contain any errors and will print \\"Hello world!\\" ten times."},{"prompt":"Describe the action taken by the following code snippet and provide a sample output def format_string(x): return \\"The output is: {}\\".format(x)","completion":"The code snippet takes an input string, \`\`x\`\`, and formats it by adding a prefix of \\"The output is: \\" to it and returns the formatted string. For example, if the input string is \\"Hello\\", the output string will be \\"The output is: Hello\\"."},{"prompt":"Suggest a better way to store a series of strings for fast lookup strings = [\\"apple\\", \\"strawberry\\", \\"banana\\"]","completion":"A better way to store a series of strings for fast lookup is to use a hash table. A hash table is a data structure that uses hashing to store data and allows for efficient lookups. To use a hash table to store the strings, we can create a mapping between each string and a unique key. For example, we can map \\"apple\\" to 0, \\"strawberry\\" to 1, and \\"banana\\" to 2. This allows us to quickly look up a string based on its key."},{"prompt":"Given the following code snippet, write the code to achieve the expected output def convert_to_title_case(input): # Expected Output: # input = \\"this is a Title\\" # Output = This Is A Title","completion":"def convert_to_title_case(input): words = input.split(' ') output = [] for word in words: output.append(word.capitalize()) return ' '.join(output) # Expected Output: input = \\"this is a title\\" # Output = This Is A Title print(convert_to_title_case(input))"},{"prompt":"Suggest an appropriate data structure and implementation to store employee details Employee details like name, title and contact number","completion":"An appropriate data structure to store employee details is a dictionary. A dictionary maps each employee's name (or other identifier) to a dictionary that holds the employee's title, contact number and other relevant information. For example, the code to define an employee dictionary might look like this: employees = {} #add new employee employees['John'] = {'title': 'Manager', 'phone': '123-456-7890'} #access employee details print(employees['John']['phone']) # prints '123-456-7890'"},{"prompt":"Suggest a data structure and implementation to store a list of vehicles A list of cars and buse","completion":"A list of vehicles can be stored in an adjacency list data structure. Each node in the graph represents either a car or a bus. The edges link the respective cars and buses, indicating their connectivity. For example, if we have a list of cars and buses, we can store it as follows: graph = { 'cars': {'car1', 'car2', ...}, 'buses': {'bus1', 'bus2', ...}, 'edges': { ('car1', 'bus1'), ('car2', 'bus2'), ... } }"},{"prompt":"Suggest an appropriate data structure to store the test scores of a class Test scores of each student in the cl","completion":"An appropriate data structure to store the test scores of a class is a nested dictionary. The outer dictionary will have the student's name as the key and the inner dictionary will have the test name as the key and the score as the value. For example, if we have the test scores for three students for two tests, we can store it as follows: scores = { 'John': { 'Test1': 95, 'Test2': 73 }, 'Adam': { 'Test1': 87, 'Test2': 86 }, 'Sarah': { 'Test1': 76, 'Test2': 75 } }"},{"prompt":"Suggest an algorithm to find the longest common sub-string in two strings Two strings of length n and m","completion":"A possible algorithm to find the longest common sub-string in two strings is the dynamic programming approach. The algorithm works by comparing the two given strings letter by letter and storing the results in a two-dimensional array. The algorithm checks the characters at each index of the given strings and if they are equal, the value of the corresponding cell is set to 1 plus the previous diagonal cell's value. If the characters are not equal, the cell is set to 0. The longest sub-string is then determined by traversing through the matrix and looking for the maximum value."},{"prompt":"Create a class for a book object with properties for the title, author and pages","completion":"class Book: def __init__(self, title, author, pages): self.title = title self.author = author self.pages = pages"},{"prompt":"Create a function that takes a single argument and returns a string describing the type of argument.","completion":"def get_argument_type(arg): if isinstance(arg, str): return 'string' if isinstance(arg, int): return 'integer' if isinstance(arg, float): return 'float' if isinstance(arg, list): return 'list' if isinstance(arg, dict): return 'dictionary'"},{"prompt":"Formulate an algorithm in C++ to find the maximum and minimum elements in an unsorted array. arr = {1, 7, 4, 2, 9, 6, 5}","completion":"#include <bits/stdc++.h> using namespace std; // Function to find maximum and minimum of // given array pair <int, int> getMinMax(int arr[], int n) { pair <int, int> minmax; int i; /* If array has even number of elements then initialize the first two elements as minimum and maximum */ if (n % 2 == 0) { if (arr[0] > arr[1]) { minmax.second = arr[0]; minmax.first = arr[1]; } else { minmax.first = arr[0]; minmax.second = arr[1]; } i = 2; // set the startung index for loop } /* If array has odd number of elements then initialize the first element as minimum and maximum */ else { minmax.first = arr[0]; minmax.second = arr[0]; i = 1; // set the startung index for loop } /* In the while loop, pick elements in pair and compare the pair with max and min so far */ while (i < n - 1) { if (arr[i] > arr[i + 1]) { if(arr[i] > minmax.second) minmax.second = arr[i]; if(arr[i + 1] < minmax.first) minmax.first = arr[i + 1]; } else { if (arr[i] < minmax.first) minmax.first = arr[i]; if(arr[i + 1] > minmax.second) minmax.second = arr[i + 1]; } i += 2; // Increment the index by 2 as two elements are processed in loop } return minmax; }"},{"prompt":"Write a python code snippet to calculate the sum of any number of integers. num1 = 10 num2 = 6 num3 = 8","completion":"sum = num1 + num2 + num3 print(\\"The sum is\\", sum)"},{"prompt":"Write a CSS code to give each element of a list the same width size. <ul> <li>Item 1</li> <li>Item 2</li> <li>Item 3</li> </ul>","completion":"ul { list-style-type: none; padding: 0; margin: 0; } li { display: inline-block; width: 33.33%; }"},{"prompt":"Write a SQL query to output the name, id, and address of each customer who has an address in a specified zip code. zipcode = 39911","completion":"SELECT name, id, address FROM customers WHERE address LIKE '%39911%';"},{"prompt":"Generate a valid cURL command to request data from a given API endpoint Endpoint: testserver.com/api/user","completion":"curl -X GET \\"testserver.com/api/user\\" -H \\"accept: application/json\\""},{"prompt":"Design a code snippet to sort a hashtable by its keys. {8: \\"hello\\", 3: \\"goodbye\\", 2: \\"aloha\\", 4: \\"bonjour\\", 6: \\"ni hao\\"}","completion":"// a function to sort the hashtable by its keys func sortHashTableKeys(hashTable map[int]string) map[int]string { // a slice to store the keys in order var keys []int for key := range hashTable { keys = append(keys, key) } // sort the slice sort.Ints(keys) // create a new map with the sorted keys sortedHashTable := make(map[int]string) for _, key := range keys { sortedHashTable[key] = hashTable[key] } return sortedHashTable }"},{"prompt":"Write an SQL query to retrieve all records from a table named \\"customers\\" where the \\"country\\" column equals \\"USA\\".","completion":"SELECT * FROM customers WHERE country = 'USA';"},{"prompt":"Create a Node.js server which serves a static HTML page.","completion":"// Import the necessary modules const http = require('http'); const fs = require('fs'); // Create a simple server which serves a static HTML page http.createServer((req, res) => { fs.readFile('./index.html',(err, data) => { res.writeHead(200, {'Content-Type': 'text/html'}); res.write(data); res.end(); }); }).listen(3000);"},{"prompt":"Write an Excel formula to calculate the average of the numbers in cells A1 and A2.","completion":"=AVERAGE(A1,A2)"},{"prompt":"Compose a CSS 3D transformation to rotate an element by 45 degrees.","completion":"transform: rotate3d(0, 1, 0, 45deg);"},{"prompt":"Design an algorithm in Java to reverse a list of integers. list = [1,2,3,4,5]","completion":"public static void reverseList(List<Integer> list) { Collections.reverse(list); }"},{"prompt":"Edit the following XML code to add a navigation bar to the top of a web page <html> <head> <title>My Webpage</title> </head>","completion":"<html> <head> <title>My Webpage</title> </head> <body> <nav> <ul> <li><a href=\\"index.html\\">Home</a></li> <li><a href=\\"about.html\\">About Us</a></li> <li><a href=\\"contact.html\\">Contact</a></li> </ul> </nav> </body>"},{"prompt":"Write a Ruby program to calculate the sum of the integers between 1 and 10 (both inclusive).","completion":"def sum_of_numbers total = 0 (1..10).each { |x| total += x } total end puts sum_of_numbers"},{"prompt":"Write an SQL query to create a table named 'students' consisting of three columns: 'name', 'age', and 'score'.","completion":"CREATE TABLE Students ( name varchar(255), age int, score int );"},{"prompt":"Write an SQL query to return rows from the 'customers' table sorted in alphabetical order according to the 'name' column.","completion":"SELECT * FROM customers ORDER BY name"},{"prompt":"Build a TensorFlow model for classification of a 2-D dataset. X = [[1, 2], [3, 4], [5, 6]] Y = [0, 1, 1]","completion":"\\"\\"\\" Build a TensorFlow model for classification of a 2-D dataset. Input: X = [[1, 2], [3, 4], [5, 6]] Y = [0, 1, 1] Output: import tensorflow as tf # data X = tf.constant([[1, 2], [3, 4], [5, 6]], dtype=tf.float32) Y = tf.constant([0, 1, 1], dtype=tf.float32) # model model = tf.keras.Sequential() model.add(tf.keras.layers.Dense(2, activation='relu')) model.add(tf.keras.layers.Dense(1, activation='sigmoid')) model.compile(optimizer='adam', loss='binary_crossentropy', metrics=['accuracy']) model.fit(X, Y, epochs=50, batch_size=3) \\"\\"\\""},{"prompt":"Rewrite the code so that it can run in Python 3 instead of Python 2. #!/usr/bin/env python print 'Hello, world!'","completion":"#!/usr/bin/env python print('Hello, world!')"},{"prompt":"Modify the code to ensure that the variable ‘str’ not being None str = input()","completion":"str = input() if str is not None and str != '': # do something with the input"},{"prompt":"Count the number of leaf nodes in a binary tree. tree = { \\"data\\": 10, \\"left\\": { \\"data\\": 20, \\"left\\": { \\"data\\": 40 }, \\"right\\": { \\"data\\": 50 } }, \\"right\\": { \\"data\\": 30, \\"left\\": { \\"data\\": 60 } } }","completion":"def countLeafNodes(tree): if tree is None: return 0 if tree[\\"left\\"] is None and tree[\\"right\\"] is None: return 1 leftLeaf = countLeafNodes(tree[\\"left\\"]) rightLeaf = countLeafNodes(tree[\\"right\\"]) return leftLeaf + rightLeaf tree = { \\"data\\": 10, \\"left\\": { \\"data\\": 20, \\"left\\": { \\"data\\": 40 }, \\"right\\": { \\"data\\": 50 } }, \\"right\\": { \\"data\\": 30, \\"left\\": { \\"data\\": 60 } } } print(countLeafNodes(tree)) # 3"},{"prompt":"List all the prime numbers less than a specified number ‘n’ n = 10","completion":"def is_prime(n): \\"\\"\\"Returns True if n is a prime number and False otherwise.\\"\\"\\" if n < 2: return False if n == 2: return True if n % 2 == 0: return False for i in range(3, int(n**0.5) + 1, 2): if n % i == 0: return False return True def prime_numbers_less_than(n): \\"\\"\\"Returns a list of all prime numbers less than n.\\"\\"\\" primes = [] for i in range(2, n): if is_prime(i): primes.append(i) return primes n = 10 print(prime_numbers_less_than(n)) # [2, 3, 5, 7]"},{"prompt":"Edit the code so that it can run in JavaScript async/await instead of Promise const myPromise = new Promise((resolve, reject) => { setTimeout(() => { resolve(\\"Success!\\"); }, 1000); }); myPromise.then(data => { console.log(data); });","completion":"async function myAsync() { const response = await new Promise((resolve, reject) => { setTimeout(() => { resolve(\\"Success!\\"); }, 1000); }); console.log(response); } myAsync(); // Success!"},{"prompt":"Create a class to save data of a user's account.","completion":"class Account: def __init__(self, username, password, email): self.username = username self.password = password self.email = email def get_info(self): return (self.username, self.password, self.email)"},{"prompt":"Describe the differences between np.array and a list.","completion":"Numpy arrays are more efficient than lists as they are homogeneous in nature. This means that all the items in a numpy array must be of the same data type, while a list can contain items of any data type. Additionally, numpy arrays can be multi-dimensional while lists are only one-dimensional. Numpy arrays can be indexed and sliced the same way as lists. However, operations on numpy arrays are much faster than operations on lists. Lastly, numpy arrays support vectorization which allows for efficient computation."},{"prompt":"Use a loop to print out each element of the list. list = [1, 2, 3, 4]","completion":"for element in list: print(element)"},{"prompt":"Create a Regex pattern to validate mobile phone numbers.","completion":"^[+]*[(]{0,1}[0-9]{1,4}[)]{0,1}[-s./0-9]*"},{"prompt":"Create a database table using SQL containing information about employees. Create table with the following column names and data types: id (integer), first_name (text), last_name (text), address (text), city (text), state (text), postal_code (text)","completion":"CREATE TABLE employees( id INTEGER PRIMARY KEY, first_name TEXT, last_name TEXT, address TEXT, city TEXT, state TEXT, postal_code TEXT );"},{"prompt":"Create a webpage with a two-column layout using HTML. Create two columns with width of 1/3 and 2/3 respectively","completion":"<html> <head> <style> .column { float: left; width: 33.33%; padding: 0 10px } </style> </head> <body> <div class=\\"column\\"> Your content in the first column goes here </div> <div class=\\"column\\"> Your content in the second column goes here </div> </body> </html>"},{"prompt":"Create an AI chatbot using JavaScript and Natural Language Processing.","completion":"const { NlpManager } = require('node-nlp'); const manager = new NlpManager({ languages: ['en'] }); manager.addDocument('en', 'Good morning', 'greet.morning'); manager.addDocument('en', 'Good evening', 'greet.evening'); manager.addDocument('en', 'Hi', 'greet.hello'); manager.addAnswer('en', 'greet.morning', 'Good morning! How can I help you today?'); manager.addAnswer('en', 'greet.evening', 'Good evening! What do you need help with?'); manager.addAnswer('en', 'greet.hello', 'Hi there! How may I assist you?'); (async() => { await manager.train(); const response = await manager.process('en', 'Hi'); console.log(response.answer); // Hi there! How may I assist you? })();"},{"prompt":"Write jQuery code to add/remove a class on a webpage.","completion":"('#element').addClass('className'); // To add ('#element').removeClass('className'); // To remove"},{"prompt":"Create a web application in React that displays the temperature in Fahrenheit, Celsius and Kelvin.","completion":"class TemperatureViewer extends React.Component { constructor(props) { super(props); this.state = { tempFahrenheit : 0, tempCelsius: 0, tempKelvin: 0 }; this.handleTemperatureChange = this.handleTemperatureChange.bind(this); } handleTemperatureChange(tempFahrenheit) { this.setState({ tempFahrenheit : tempFahrenheit, tempCelsius : (tempFahrenheit - 32) * 5/9, tempKelvin : (tempFahrenheit + 459.67) / 1.8 }); } render() { return ( <div> <TemperatureInput scale=\\"f\\" value={this.state.tempFahrenheit} onTemperatureChange={this.handleTemperatureChange} /> <TemperatureDisplay scale=\\"c\\" value={this.state.tempCelsius} /> <TemperatureDisplay scale=\\"k\\" value={this.state.tempKelvin} /> </div> ); } }"},{"prompt":"Use NLTK to analyse the sentiment of a given text. The movie is awesome","completion":"import nltk from nltk.sentiment.vader import SentimentIntensityAnalyzer sid = SentimentIntensityAnalyzer() text = \\"The movie is awesome\\" scores = sid.polarity_scores(text) print(scores['compound']) # Output 0.6249"},{"prompt":"Write an assembly language program to print \\"Hello, World!","completion":"section .data msg db 'Hello, World!', 10 len equ - msg section .text global _start ;must be declared for linker (ld) _start: ;tells linker entry point mov edx,len ;message length mov ecx,msg ;message to write mov ebx,1 ;file descriptor (stdout) mov eax,4 ;system call number (sys_write) int 0x80 ;call kernel mov eax,1 ;system call number (sys_exit) int 0x80 ;call kernel"},{"prompt":"Create a customer class in Java that can be used to store information about customers. Create a class with field names: id (integer), firstName (text), lastName (text), email (text), address (text)","completion":"public class Customer { private int id; private String firstName; private String lastName; private String email; private String address; // getter and setter methods public int getId() { return id; } public void setId(int id) { this.id = id; } public String getFirstName() { return firstName; } public void setFirstName(String firstName) { this.firstName = firstName; } public String getLastName() { return lastName; } public void setLastName(String lastName) { this.lastName = lastName; } public String getEmail() { return email; } public void setEmail(String email) { this.email = email; } public String getAddress() { return address; } public void setAddress(String address) { this.address = address; } }"},{"prompt":"Write a PHP script that prints out \\"Hello, World!\\" on the web page.","completion":"<?php echo \\"Hello, World!\\"; ?>"},{"prompt":"Filter out a given array of strings and make sure that the strings only contain digits. Filter array of strings [\\"abc123\\", \\"123abc\\", \\"abc456\\", \\"abc\\"]","completion":"result = array_filter([\\"abc123\\", \\"123abc\\", \\"abc456\\", \\"abc\\"], function(value){ return preg_match('/^d+/', value); }); print_r(result); # Output Array ( [1] => 123abc [2] => 456 )"},{"prompt":"Train an AI model to predict whether an email is spam or not.","completion":"import nltk from sklearn.feature_extraction.text import CountVectorizer from sklearn.naive_bayes import MultinomialNB # loading data data = [('This is an email about about a promotion', 'spam'), ('We want to transfer money to your account', 'spam'), ('This email is about programming', 'not_spam'), ('There is a new version of python', 'not_spam'), ] # extracting features X, y = [], [] for feat, lab in data: X.append(feat) y.append(lab) cv = CountVectorizer() X_vect = cv.fit_transform(X) # training the model model = MultinomialNB() model.fit(X_vect, y) # predicting prediction = model.predict(cv.transform([\\"This is an email about a discount sale\\"])) print(prediction) # Output ['spam']"},{"prompt":"Write a Python script to determine how many lowercase letters are in a given string. string = \\"Hello World!","completion":"\\"\\"\\" Python script to determine how many lowercase letters are in a given string \\"\\"\\" # Initialize a variable to count the lowercase letters lowercase_letter_count = 0 # Loop through each character in the string for char in string: # Check if the character is a lowercase letter if char.islower(): # If yes, then increment the counter lowercase_letter_count += 1 # Print the total number of lowercase letters print(lowercase_letter_count)"},{"prompt":"Write a Java method to check if a string is a palindrome (same forwards and backwards). string = \\"racecar","completion":"\\"\\"\\" Java method to check if a string is a palindrome \\"\\"\\" public static boolean isPalindrome(String s) { //base case if(s.length() == 0 || s.length() == 1) return true; if(s.charAt(0) == s.charAt(s.length()-1)) return isPalindrome(s.substring(1, s.length()-1)); //if not match return false; }"},{"prompt":"Design a class in Java that stores the number of letters, numbers, and special characters in a given string.","completion":"\\"\\"\\" Java class to store the number of letters, numbers and special characters in a given string \\"\\"\\" public class StringInfo { // Instance Variables int letterCount; int numberCount; int specialCharCount; // Constructor to initialize all the instance variables public StringInfo() { this.letterCount = 0; this.numberCount = 0; this.specialCharCount = 0; } // A method to find the count of letters, numbers and special characters in a given string public void findCounts(String str) { // Loop through each character in the string for (char c : str.toCharArray()) { if (Character.isLetter(c)) { letterCount++; } else if (Character.isDigit(c)) { numberCount++; } else { specialCharCount++; } } } // Accessor methods to get the count of each type of character public int getLetterCount() { return letterCount; } public int getNumberCount() { return numberCount; } public int getSpecialCharCount() { return specialCharCount; } }"},{"prompt":"Write a JavaScript program that allows the user to input two numbers and shows the bigger number.","completion":"function biggestNum(){ var num1 = parseInt(prompt(\\"Please enter the first number: \\")); var num2 = parseInt(prompt(\\"Please enter the second number: \\")); if(num1 > num2){ alert(\\"The largest number is: \\" + num1); } else if(num2 > num1){ alert(\\"The largest number is: \\" + num2); } else{ alert(\\"Both numbers are equal.\\"); } } biggestNum();"},{"prompt":"Generate a graphical representation of a dataset. The following data describes the height of students in grade 8: X: 155 cm , 159 cm , 166 cm , 165 cm, 186 cm Y: 50 kg , 60 kg , 55 kg, 45 kg , 75 kg","completion":"import matplotlib.pyplot as plt x_list = [155, 159, 166, 165, 186] y_list = [50, 60, 55, 45, 75] plt.scatter(x_list, y_list ) plt.xlabel(\\"Height (cm)\\") plt.ylabel(\\"Weight (kg)\\") plt.title(\\"Height vs Weight of Grade 8 Students\\") plt.show()"},{"prompt":"Modify the following Python code to print the program output unique and ordered. x = [1, 2, 3, 4, 4, 3, 1] print(x)","completion":"x = [1, 2, 3, 4] y = list(set(x)) y.sort() print(y)"},{"prompt":"Create an HTML table that contains the following string values and rows. Header1 Header2 Value1A Value1B Value2A Value2B Value3A Value3B","completion":"<table> <tr> <th>Header1</th> <th>Header2</th> </tr> <tr> <td>Value1A</td> <td>Value1B</td> </tr> <tr> <td>Value2A</td> <td>Value2B</td> </tr> <tr> <td>Value3A</td> <td>Value3B</td> </tr> </table>"},{"prompt":"Create a PHP program that declares a function that takes two parameters. The function should check if the two parameters are equal and if so, return true.","completion":"<?php function checkEqual(a, b) { if (a == b) { return true; } else { return false; } } ?>"},{"prompt":"Create an array in Ruby that contains the following strings: \\"cat\\", \\"dog\\", \\"fish\\".","completion":"arr = [\\"cat\\", \\"dog\\", \\"fish\\"]"},{"prompt":"Create a CSS style sheet that changes the font size of all 'h1' tags to \\"3rem\\".","completion":"h1 { font-size: 3rem; }"},{"prompt":"Write a C# code snippet to create a list with the following string payload and print it out. \\"apple\\", \\"banana\\", \\"mango","completion":"List<string> fruits = new List<string> { \\"apple\\", \\"banana\\", \\"mango\\" }; foreach (string fruit in fruits) { Console.WriteLine(fruit); }"},{"prompt":"Write a Python function that takes a number n as parameter and prints out all even numbers from 2 to n.","completion":"def printEven(n): for i in range(2, n+1): if(i % 2 == 0): print(i, end = \\" \\")"},{"prompt":"Create a SQL query to select the records with the name \\"John\\" from the table \\"people\\".","completion":"SELECT * FROM people WHERE name='John';"},{"prompt":"Create a Swift program that reads in three values from the user and prints out the maximum value.","completion":"import Foundation var a = 0 var b = 0 var c = 0 print(\\"Enter 3 values:\\") if let aInput = readLine() { if let aInt = Int(aInput) { a = aInt } } if let bInput = readLine() { if let bInt = Int(bInput) { b = bInt } } if let cInput = readLine() { if let cInt = Int(cInput) { c = cInt } } var maximum = max(max(a, b), c) print(\\"The maximum value is: (maximum)\\")"},{"prompt":"Modify the following Java program to print \\"Hello world!\\" without using a System.out.print statement. class HelloWorld { public static void main(String args[]) { System.out.print(\\"Hello world!\\"); } }","completion":"class HelloWorld { public static void main(String args[]) { System.out.println(\\"Hello world!\\"); } }"},{"prompt":"Write a line of code to display a text message in the console saying \\"Hello world!\\".","completion":"console.log(\\"Hello world!\\");"},{"prompt":"Write a code to find the first two numbers in a list that add up to a given number. my_list = [1, 2, 5, 6, 10] sum = 8","completion":"def find_two_numbers(my_list, sum): for i in range(len(my_list)): for j in range(i + 1, len(my_list)): if my_list[i] + my_list[j] == sum: return my_list[i], my_list[j] find_two_numbers(my_list, sum);"},{"prompt":"Create a script to generate a random password using uppercase, lowercase and numerics.","completion":"import string import random def generate_password(): password_characters = string.ascii_uppercase + string.ascii_lowercase + string.digits password_length = 16 return ''.join(random.choice(password_characters) for i in range(password_length)) generate_password()"},{"prompt":"Write a JavaScript code to find a value in an array of objects and return the object with that value. list = [{name:\\"John\\", age:\\"22\\"}, {name:\\"Peter\\", age:\\"40\\"}, {name:\\"Anne\\", age:\\"32\\"}]; find_name = \\"Joh","completion":"function findObject(list, find_name) { for(let i = 0; i < list.length; i++){ if(list[i].name == find_name){ return list[i]; } } return null; } findObject(list, find_name)"},{"prompt":"Create an object that holds the property 'name', assigned to the value \\"John\\".","completion":"let john = { name: 'John', };"},{"prompt":"Take the following input string and remove the punctuation and convert it to lowercase. HELP! Is it me you're looking for??","completion":"let inputString = \\"HELP! Is it me you're looking for??\\"; let outputString = inputString.replace(/[.,/#!%^&*;:{}=_\`'\\"<>~]/g,\\"\\").toLowerCase(); console.log(outputString); // help is it me youre looking for"},{"prompt":"Compute the average height of the employees in the table.","completion":"SELECT AVG(Height) FROM Employees;"},{"prompt":"Generate a function in python that takes two lists and returns the product of their longest common substrings. list1 = [1, 2, 3, 4, 5] list2 = [2, 3, 5, 7]","completion":"def longest_common_substring(list1, list2): longest_substring = 0 for i in range(len(list1)): for j in range(len(list2)): if list1[i] == list2[j]: current_substring = 1 k, l = i+1, j+1 while k < len(list1) and l < len(list2) and list1[k] == list2[l]: current_substring += 1 k += 1 l += 1 longest_substring = max(longest_substring, current_substring) if longest_substring == 0: return 0 else: return list1[0] * list2[0] * longest_substring"},{"prompt":"Suggest a code in Python that will calculate the area of any given shape.","completion":"def area(shape): if shape == \\"rectangle\\": length = float(input(\\"Please enter the length: \\")) width = float(input(\\"Please enter the width: \\")) return length * width elif shape == \\"triangle\\": base = float(input(\\"Please enter the base: \\")) height = float(input(\\"Please enter the height: \\")) return 0.5 * base * height elif shape == \\"circle\\": r = float(input(\\"Please enter the radius: \\")) return 3.14 * r * r"},{"prompt":"Create a regular expression pattern to match strings that contain any character except digits.","completion":"pattern = r\\"[^d]+\\""},{"prompt":"Write a function to check if the parentheses in given expression are balanced or not. expression = \\"((A+B)-C)*D+((E-F)*G","completion":"def is_balanced(expression): open_paratheses = 0 for char in expression: if char == '(': open_paratheses += 1 elif char == ')': open_paratheses -= 1 if open_paratheses < 0: return False return open_paratheses == 0 expression = \\"((A+B)-C)*D+((E-F)*G\\""},{"prompt":"Generate a list of unique numbers between A and B where both A and B are input parameters. a = 0 b = 5","completion":"def create_list(a, b): result = [] for i in range(a, b+1): if i not in result: result.append(i) return result a = 0 b = 5"},{"prompt":"Write a query in MongoDB to find all documents in the 'users' collection that have a field 'name' with the value 'John'.","completion":"db.users.find({\\"name\\": \\"John\\"})"},{"prompt":"Explain the functional programming paradigm.","completion":"Functional Programming is a programming paradigm that emphasizes the use of functions, or predefined sequences of commands, to produce desired results. This paradigm tries to avoid state and mutable data, and instead use higher-order functions to pass functions as arguments. This makes it easier to understand, debug, and test code as functions are isolated from one another, making it less prone to errors."},{"prompt":"Create a SQL query to list all customer names from the table \\"customers\\" in ascending alphabetical order.","completion":"SELECT name FROM customers ORDER BY name ASC;"},{"prompt":"Create a function in Python to take a positive integer and return its factorial. num = 5","completion":"def factorial(num): \\"\\"\\"Function to return the factorial of a positive integer\\"\\"\\" if(num <=1): return 1 else: return(num*factorial(num-1))"},{"prompt":"Create a Python function to return the frequency table of a list of words. words = [\\"apple\\", \\"mango\\", \\"cherry\\", \\"banana\\", \\"apple\\", \\"mango\\"]","completion":"def create_frequency_table(words): \\"\\"\\" Function to create a frequency table for a given list of words. Arguments: words {list}: List of words. Returns: dictionary: Frequency table of words. \\"\\"\\" frequency_table = dict() for word in words: if word in frequency_table: frequency_table[word] += 1 else: frequency_table[word] = 1 return frequency_table"},{"prompt":"w can you determine the number of words in a string?","completion":"You can determine the number of words in a string by splitting the string into single words using the split() method and using the len() method to find the length of the resulting list."},{"prompt":"Write a regular expression to extract emails from a list of text. text_list = [\\"contact me at jack@example.com for more information\\", \\"reach out to jill@example.com for a discussion\\"]","completion":"import re email_list = [] for text in text_list: emails = re.findall(r'[w.-]+@[w.-]+', text) email_list.extend(emails)"},{"prompt":"Create a Python function to find all unique values in a list. L = [1, 2, 4, 2, 1]","completion":"def find_unique_values(L): \\"\\"\\" Function to find all the unique values in a list. Arguments: L {list}: The list to search in. Returns: set: The set of unique values. \\"\\"\\" unique_values = set() for item in L: if item not in unique_values: unique_values.add(item) return unique_values"},{"prompt":"Edit the code to print out a string in reverse order. string = \\"Hello World!","completion":"for char in reversed(string): print(char, end=\\"\\")"},{"prompt":"Create a Python code to print out all the common elements in two lists. list1 = [1, 2, 3, 4, 5] list2 = [2, 3, 4, 6]","completion":"def get_common_elements(list1, list2): \\"\\"\\" Function to get all the common elements in two lists. Arguments: list1 {list}: The first list. list2 {list}: The second list. Returns: list: A list containing all the common elements in both lists. \\"\\"\\" common_elements = [] for element in list1: if element in list2: common_elements.append(element) return common_elements"},{"prompt":"Create a c++ class to store data for a student including their name, age, and address.","completion":"class Student { private: string name; int age; string address; public: void setName(string name); void setAge(int age); void setAddress(string address); string getName(); int getAge(); string getAddress(); };"},{"prompt":"Design a database table to store user information such as an email address, name, age, etc","completion":"CREATE TABLE users ( id INT NOT NULL AUTO_INCREMENT PRIMARY KEY, email VARCHAR(255) NOT NULL UNIQUE, name VARCHAR(255) NOT NULL, age INT NOT NULL, );"},{"prompt":"Generate an algorithm in any language that can find the sum of the numbers in a given array","completion":"Function sumArray (arr[]) { sum = 0 for i = 0 to arr.length - 1 sum += arr[i] end for return sum }"},{"prompt":"mplement a jQuery code for the following purpose Make an element hide when mouse moves over","completion":"(document).ready (function () { (\\"element\\").mouseover(function () { (this).hide(); }); });"},{"prompt":"Create a javascript code to open a pop-up window when a user clicks the button","completion":"<button type=\\"button\\" onclick=\\"alert('Pop up window')\\">Click Me!</button>"},{"prompt":"Design a HTML page to show a page counter","completion":"<html> <head> <title>Page counter</title> <script> var count = 0; function countClick(){ count++ document.getElementById(\\"count\\").innerHTML = count; } <\/script> </head> <body> <h1>Page views: <span id=\\"count\\">0</span></h1> <button onclick=\\"countClick()\\">Click Me!</button> </body> </html>"},{"prompt":"Design a MySQL query to delete all records in a specified table","completion":"DELETE FROM TABLE_NAME;"},{"prompt":"mplement a Java code to print the first 10 multiples of a given number","completion":"public class Multiples { public static void main(String[] args) { int number = 5; for (int i = 1; i <= 10; i++) { System.out.println(number*i); } } }"},{"prompt":"Write a SQL query that returns all the distinct values in a given table. table: Employee","completion":"SELECT DISTINCT * FROM Employees;"},{"prompt":"Write an HTML code to show all the items in a given list. list: [\\"apple\\", \\"orange\\", \\"banana\\", \\"strawberry\\"]","completion":"<ul> <li>apple</li> <li>orange</li> <li>banana</li> <li>strawberry</li> </ul>"},{"prompt":"Write a CSS code to add a space between two paragraphs. <p>This is the first paragraph.</p> <p>This is the second paragraph.</p>","completion":"p { margin-bottom: 2em; }"},{"prompt":"Write a C++ code to generate the Fibonacci sequence from 0 to 100.","completion":"#include <iostream> using namespace std; int main() { int n = 100; int a = 0, b = 1, c; cout << a << \\" \\" << b << \\" \\"; for (int i = 2; i < n; i++) { c = a + b; cout << c << \\" \\"; a = b; b = c; } return 0; }"},{"prompt":"Find the fifth smallest number in a list of numbers using Java. list of numbers: [23, 12, 15, 7, 34, 19]","completion":"int compareToFindSmallest(int[] numbers, int targetIndex) { int smallestIndex = 0; for (int i = 1; i < numbers.length; i++) { if (numbers[i] < numbers[smallestIndex]) { smallestIndex = i; } } int tempIndex = smallestIndex; int resultIndex = -1; int count = 0; while (resultIndex == -1) { count++; if (smallestIndex == tempIndex) { if (count == targetIndex) { resultIndex = tempIndex; } tempIndex++; } else { if (numbers[tempIndex] == numbers[smallestIndex]) { if (count == targetIndex) { resultIndex = tempIndex; } tempIndex++; } else { smallestIndex = tempIndex; } } if (tempIndex >= numbers.length) { tempIndex = smallestIndex + 1; } } return resultIndex; } // usage int[] numbers = {23, 12, 15, 7, 34, 19}; int fifthSmallestIndex = compareToFindSmallest(numbers, 5); // fifthSmallestIndex = 4 // fifthSmallestNumber = 34"},{"prompt":"Create a constructor in JavaScript that will assign a value to an object's properties. properties: x, y, z","completion":"function MyObject(x, y, z) { this.x = x; this.y = y; this.z = z; }"},{"prompt":"Create a class in Python that takes a list of numbers and finds the average. list: [4, 5, 6]","completion":"class AverageCalculator: def __init__(self, numbers): self.numbers = numbers def calculate_average(self): total = 0 for item in self.numbers: total += item return total / len(self.numbers)"},{"prompt":"Write a code in Go that will reverse all the words in a sentence. sentence: \\"GPT is a powerful tool","completion":"package main func reverseWords(sentence string) string { words := strings.Split(sentence, \\" \\") var reversedSentence string for i:=len(words)-1; i>=0; i-- { reversedSentence += words[i] + \\" \\" } return strings.TrimSpace(reversedSentence) }"},{"prompt":"Create a Rails controller that can render a JSON response for a given URL. URL: /user","completion":"class UserController < ApplicationController def index @users = User.all render json: @users end end"},{"prompt":"Use jquery to dynamically select an element of a given HTML form and change its value. Form element: input with id=\\"name","completion":"(\\"#name\\").val(\\"John Doe\\");"},{"prompt":"Create an Angular component to display a message and a button. message: \\"Hello World","completion":"@Component({ selector: 'app-hello-world', template: \` <p>{{ message }}</p> <button>Show Message</button> \` }) export class HelloWorldComponent { message = \\"Hello World\\"; }"},{"prompt":"Generate a code that takes an array of integers and splits them into two equal halves arr = [1, 2, 3, 4, 5, 6]","completion":"def split_array(arr): n = len(arr) mid = n//2 left_half = arr[:mid] right_half = arr[mid:] return left_half, right_half"},{"prompt":"Design a function that takes a string of HTML tags in an input and removes the tags from the string","completion":"def strip_tags(s): tag = False out = \\"\\" for c in s: if c == \\"<\\": tag = True elif c == \\">\\": tag = False elif not tag: out += c return out"},{"prompt":"Create a JavaScript program which takes two arguments as strings and returns true if they both have the same length","completion":"function sameLength(str1, str2) { if (str1.length == str2.length) { return true; } else { return false; } }"},{"prompt":"Write a code to print the common elements of two given arrays arr1 = [2, 3, 4, 5] arr2 = [3, 6, 7, 8]","completion":"def common_elements(arr1, arr2): common = [] for i in arr1: if i in arr2: common.append(i) return common"},{"prompt":"Design a function that takes a sentence and returns an array with each word in the sentence as an element.","completion":"def sentence_to_array(sentence): return sentence.split(' ')"},{"prompt":"Create a Python class named 'Student' that contains the name, age and grade of a student.","completion":"class Student: def __init__(self, name, age, grade): self.name = name self.age = age self.grade = grade"},{"prompt":"Write an HTML table with four columns consisting of ID, name, email address and phone number.","completion":"<table> <tr> <th>ID</th> <th>Name</th> <th>Email Address</th> <th>Phone Number</th> </tr> </table>"},{"prompt":"Design a function in PHP that takes two strings as input and return true if the strings are an anagram of each other. string1 = “listen” string2 = “silent”","completion":"function checkAnagram(string1, string2) { if(string1.length !== string2.length) { return false; } var charCounter1 = {}, charCounter2 = {}; for(var i = 0; i < string1.length; i++) { var char1 = string1[i]; var char2 = string2[i]; if(charCounter1[char1]) { charCounter1[char1]++; } else { charCounter1[char1] = 1; } if(charCounter2[char2]) { charCounter2[char2]++; } else { charCounter2[char2] = 1; } } for(var char in charCounter1) { if(charCounter1[char] !== charCounter2[char]) { return false; } } return true; }"},{"prompt":"Write a CSS selector for selecting the first paragraph in any web page.","completion":"p:first-of-type { /* styles go here */ }"},{"prompt":"Create a CSS class for styling the background of any page red.","completion":".redBackground { background-color: red; }"},{"prompt":"Write an algorithm to traverse a binary tree.","completion":"def traverseTree(root): if root != None: traverseTree(root.left) print(root.item) traverseTree(root.right)"},{"prompt":"Output a single string composed of all the characters of the given string, one after the other. This is a string","completion":"thisisastring"},{"prompt":"Write a JavaScript code that randomly generates a 2D array of size m X n, wherein each element has a random value between 0 and 5.","completion":"function genRandom2DArray(m, n){ let result = new Array(m); for (let i = 0; i < m; i++) { result[i] = new Array(n); for (let j = 0; j < n; j++) { result[i][j] = Math.floor(Math.random() * 6); } } return result; }"},{"prompt":"Create a function in Java to remove all the values equal to the given number from an array.","completion":"public static int[] removeFromArray(int[] arr, int num){ int[] newArr = new int[arr.length]; int newIndex = 0; for(int i = 0; i < arr.length; i++){ if(arr[i] != num){ newArr[newIndex] = arr[i]; newIndex++; } } return Arrays.copyOfRange(newArr, 0, newIndex); }"},{"prompt":"Create a program in C to calculate the average of nodes in the given linked list.","completion":"int calculateAverage(struct node* head) { if (head == NULL) return 0; int count = 0; int sum = 0; struct node* temp = head; while (temp != NULL){ sum += temp->data; temp = temp->next; count++; } return sum/count; }"},{"prompt":"Write a shell script to print the unique values from an array. [1, 2, 2, 3, 4, 4, 5]","completion":"#!/bin/bash InputArray=(1 2 2 3 4 4 5) echo \\"Unique values in the array: \\" echo (echo \\"{InputArray[@]}\\" | tr ' ' 'n' | sort -u | tr 'n' ' ')"},{"prompt":"Output a list of all even numbers between two given positive integers m and n. m=2, n=10","completion":"def evenNumbers(m,n): evenNum=[] for i in range(m,n+1): if i%2 == 0: evenNum.append(i) return evenNum"},{"prompt":"Create a program in Ruby to print out all prime numbers up to a given positive integer m.","completion":"def is_prime?(num) is_prime = true for divisor in 2..(num-1) if (num % divisor == 0) is_prime = false break end end return is_prime end def primes_upto(m) primes = [] for n in 2..m primes << n if is_prime?(n) end return primes end"},{"prompt":"Select all records from the Users table whose age is greater than 18.","completion":"SELECT * FROM Users WHERE Age > 18;"},{"prompt":"Modify and update the given HTML code to include a background color. <html> <head> <title>My Page</title> </head> <body> <h1>My Page</h1> </body> </html>","completion":"<html> <head> <title>My Page</title> </head> <body style=\\"background-color: #FFFFFF;\\"> <h1>My Page</h1> </body> </html>"},{"prompt":"Print out a message for an incorrect guess","completion":"print(\\"Sorry, that's not correct. Please try again\\")"},{"prompt":"Analyze the following text and label each token Romeo loves Juliet.","completion":"[('Romeo', 'NOUN'), ('loves', 'VERB'), ('Juliet', 'NOUN'), ('.', 'PUNCT')]"},{"prompt":"Extract a specific key-value pair from the given dictionary dic = {\\"Name\\": \\"John\\", \\"age\\": \\"27\\", \\"Address\\": \\"Street 79\\"}","completion":"Age = dic[\\"age\\"]"},{"prompt":"Write a lambda expression to find the maximum value of two numbers.","completion":"maximum = lambda num1, num2: num1 if num1 > num2 else num2"},{"prompt":"Write C++ code to create a class 'Fruit' that has two attributes - 'name' and 'color'.","completion":"class Fruit { private: string name; string color; public: Fruit(string name, string color) { this->name = name; this->color = color; } // other methods to access and manipulate attributes };"},{"prompt":"Use CSS to create a text area with the width of 300px and the height of 200px","completion":"<style> textarea{ width: 300px; height: 200px; } </style>"},{"prompt":"Create an HTML form that submits data to a server.","completion":"<form action=\\"server.php\\" method=\\"post\\"> <input type=\\"text\\" name=\\"name\\" placeholder=\\"Your Name\\"> <input type=\\"text\\" name=\\"age\\" placeholder=\\"Your Age\\"> <button type=\\"submit\\">Submit</button> </form>"},{"prompt":"duce a condition to change the background color of a given HTML page to green when the user clicks a button.","completion":"<script> function changeBackgroundColor() { document.body.style.backgroundColor = 'green'; } <\/script> <button onclick=\\"changeBackgroundColor()\\">Change background color!</button>"},{"prompt":"Write an SQL query to find all the rows in a table containing the number 5.","completion":"SELECT * FROM table_name WHERE number = 5;"},{"prompt":"Python, write code to sort a list of integers in ascending order. [9, 15, 5, 11, 4]","completion":"def sort_list(list_of_numbers): list_of_numbers.sort() return list_of_numbers print(sort_list([9, 15, 5, 11, 4])) # Output: [4, 5, 9, 11, 15]"},{"prompt":"Write a JavaScript code to find all the elements with class 'myclass' in a given HTML page and alert their inner HTML.","completion":"let elements = document.getElementsByClassName('myclass'); for(let i=0; i<elements.length; i++){ alert(elements[i].innerHTML); }"},{"prompt":"Convert a given three-digit number to its binary equivalent 456","completion":"111001000"},{"prompt":"With the given input, make a css class which will give a box-shadow with 4px spread radius shadow size: 6px; shadow color: yellow","completion":".box-shadow { box-shadow: 0 0 6px 0 yellow; }"},{"prompt":"Write a regular expression to detect phone numbers with country code in a string +918327886067","completion":"/+d{12}/"},{"prompt":"Calculate the sum of squares of the numbers till 10","completion":"385"},{"prompt":"Write an SQL query to sort records in descending order based on salary","completion":"SELECT * FROM Employees ORDER BY salary DESC"},{"prompt":"Create an array in JavaScript to store integers from 1 to 10","completion":"var array = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]"},{"prompt":"Build a HTML page with a section containing two buttons","completion":"<html> <head> <title>Button Section</title> </head> <body> <div> <button>First button</button> <button>Second button</button> </div> </body> </html>"},{"prompt":"Find out the number of odd numbers in an array [2, 9, 0, 5, 3]","completion":"def odd_num(arr): count = 0 for num in arr: if num % 2 != 0: count += 1 return count # Test Array arr = [2, 9, 0, 5, 3] # Function Call odd_num(arr)"},{"prompt":"Generate a working React component to parse GEDCOM data.","completion":"import React, { useState } from 'react'; const GEDCOMParser = () => { const [data, setData] = useState(); const parseGEDCOM = (gedcomData) => { let parsedData = {}; gedcomData.split(\\"n\\").forEach(line => { let fields = line.split(\\" \\"); parsedData[fields[1]] = fields[2] }); setData(parsedData); } return ( <React.Fragment> <input type=\\"file\\" accept=\\".ged\\" onChange={({ target }) => parseGEDCOM(target.file)} /> {data && ( <div> {Object.keys(data).map(key => ( <div key={key}>{key}: {data[key]}</div> ))} </div> )} </React.Fragment> ); }; export default GEDCOMParser;"},{"prompt":"Update the given code to generate the correct output def func(x, n): s = 0 for i in range (n): s += (x**i) return s Output: The sum of series x^1 + x^2 + x^3 + ... + x^n","completion":"def func(x, n): s = 0 for i in range (n): s += (x**i) return s def generateSumString(x, n): result = \\"The sum of series \\" for i in range(1, n+1): result += x + \\"^\\" + str(i) if(i != n): result += \\" + \\" else: result += \\" is\\" return result def main(): x = 4 n = 5 print(generateSumString(x, n), func(x,n)) main()"},{"prompt":"Generate a working C program to accept a sentence as an input and count the occurrences of each letter in the sentence","completion":"#include <stdio.h> #include<string.h> // function to count the occurrence of letters int countOccurrences(char *str) { int count = 0; int i; int j; int len = strlen(str); // Iterate through each letter in the string for (i = 0; i < len; i++) { int numberCount = 0; // Check if the current character matches with any of the other character for (j = 0; j < len; j++) { if (str[i] == str[j]) { numberCount++; } } // If number of occurrence of current character is more than 1, then increments 'count' if (numberCount > 1) { count++; } } return count; } int main() { char str[] = \\"This is a sentence\\"; int count = countOccurrences(str); printf(\\"nNumber of letters having more than one occurrence : %dn\\", count); return 0; }"},{"prompt":"Create a new class named 'Book' with the following fields Title, Author, Publisher, ISBN, Price","completion":"public class Book { public string Title { get; set; } public string Author { get; set; } public string Publisher { get; set; } public string ISBN { get; set; } public double Price { get; set; } }"},{"prompt":"Write a python function that takes two strings as an argument and returns the True if they are anagrams of each other, else False. \\"rat\\" and \\"tar","completion":"def check_anagrams(str1,str2): str1_list = list(str1) str1_list.sort() str2_list = list(str2) str2_list.sort() return (str1_list == str2_list) # Driver code str1 = \\"rat\\" str2 = \\"tar\\" if check_anagrams(str1, str2): print(\\"The strings are anagrams.\\") else: print(\\"The strings aren't anagrams.\\")"},{"prompt":"Print the array elements in reverse order using a recursive function in JavaScript [1,2,3,4]","completion":"function reversePrintArray(arr) { if (arr.length === 0) { return; } reversePrintArray(arr.slice(1)); console.log(arr[0]); }"},{"prompt":"mplement a function to calculate the greatest common divisor 42, 56","completion":"def gcd(a, b): while b > 0: a, b = b, a % b return a print(gcd(42, 56))"},{"prompt":"Write a code to construct the following rectangle pattern 6","completion":"def drawRectangle(size): for i in range(size): print(\\"* \\" * size) drawRectangle(6)"},{"prompt":"Write a JavaScript program to find the longest common prefix string amongst two given strings? \\"hello\\" and \\"heave","completion":"function longestCommonPrefix(str1, str2) { let prefix = ''; let min_len = Math.min(str1.length, str2.length); for (let i = 0; i < min_len; i++) { if (str1[i] === str2[i]) { prefix += str1[i]; } else { break; } } return prefix; } let str1 = 'hello'; let str2 = 'heaven'; console.log(longestCommonPrefix(str1,str2));"},{"prompt":"Write a shell script to perform a binary search of an array [2, 3, 6, 8, 10], 8","completion":"#!/bin/bash arr=(2 3 6 8 10) target=8 function binary_search() { left=0 right={#arr[@]}-1 while [ left -le right ] do mid=(( (left+right)/2 )) if [ {arr[mid]} -eq target ] then echo \\"Number found at position: ((mid+1))\\" return elif [ {arr[mid]} -lt target ] then left=((mid + 1)) else right=((mid - 1)) fi done echo \\"Number not found!\\" } binary_search {arr[@]} target"},{"prompt":"Create a web page to display two input fields to enter the two numbers","completion":"<!DOCTYPE html> <html> <head> <title>Input fields</title> </head> <body> <h1>Input fields to enter two numbers</h1> <form> <p>Enter the first number:<p> <input type=\\"number\\" name=\\"number1\\"><br><br> <p>Enter the second number:</p> <input type=\\"number\\" name=\\"number2\\"><br><br> <input type=\\"submit\\" value=\\"Submit\\"> </form> </body> </html>"},{"prompt":"Generate a SQL query to update the job title for all the employees with name 'John'","completion":"UPDATE employees SET JobTitle = 'Software Engineer' WHERE Name = 'John'"},{"prompt":"Write a Python function that takes a string as an argument and checks if it contains the word “Python”. text = \\"This sentence does not contain the word Pytho","completion":"def contains_python(string): if \\"Python\\" in string: return True else: return False print(contains_python(text)) # False"},{"prompt":"Create a process to sort an array of numbers from least to greatest. arr = [3, 4, 12, 1, 5, 85]","completion":"def sort_array(arr): # Loop through the array, swap each element until it is in order (ascending) for i in range(len(arr) - 1): for j in range(i + 1, len(arr)): if arr[i] > arr[j]: temp = arr[i] arr[i] = arr[j] arr[j] = temp # Return the sorted array return arr print(sort_array(arr)) # [1, 3, 4, 5, 12, 85]"},{"prompt":"Create an algorithm that uses a hash table to detect if an element is a duplicate. array = [2, 3, 4, 5, 6, 3]","completion":"def detect_duplicate(array): # Create a hash table to store elements in the array hash_table = dict() # Iterate through the array, check if the elements are already stored in the hash table # If the elements are already stored in the hash table, return True for element in array: if element in hash_table: return True else: # Else, add the element to the hash table hash_table[element] = 1 # Return False if no duplicates are found return False print(detect_duplicate(array)) # True"},{"prompt":"Create a process to reverse a string without using any built-in functions. string = \\"Hello world","completion":"def reverse_string(string): # Create an empty string rev_string = \\"\\" # Iterate through the string and build the reversed string for char in string: rev_string = char + rev_string # Return the reversed string return rev_string print(reverse_string(string)) # dlrow olleH"},{"prompt":"Display the multiplication table for a given number. num = 6","completion":"def num_mult_table(num): # Iterate through the numbers from 1 to 10 for i in range(1,11): # Print the multiplication table for the given number print(\\"{} x {} = {}\\".format(num, i, num*i)) num_mult_table(num) # Output # 6 x 1 = 6 # 6 x 2 = 12 # 6 x 3 = 18 # 6 x 4 = 24 # 6 x 5 = 30 # 6 x 6 = 36 # 6 x 7 = 42 # 6 x 8 = 48 # 6 x 9 = 54 # 6 x 10 = 60 #"},{"prompt":"Create a program that implements an autocomplete or predictive search feature. words = [\\"Apple\\", \\"App\\", \\"Application\\", \\"Applications\\", \\"Apples\\", \\"Ace\\", \\"Acer\\"]","completion":"def autocomplete(user_input, words): # Store the output words in a list output = [] # Iterate through the words and check if the user input matches the beginning of the word for word in words: if word.startswith(user_input): output.append(word) # Return the output words return output print(autocomplete(\\"app\\", words)) # [\\"App\\", \\"Application\\", \\"Applications\\", \\"Apples\\"]"},{"prompt":"Write a function that takes a list of strings and joins them together with a pipe (|). words = [\\"Apple\\", \\"App\\", \\"Application\\", \\"Applications\\", \\"Apples\\", \\"Ace\\", \\"Acer\\"]","completion":"def join_strings_with_pipe(words): # Join the words with a pipe return \\"|\\".join(words) print(join_strings_with_pipe(words)) # Apple|App|Application|Applications|Apples|Ace|Acer"},{"prompt":"Given a list of integers, return a new list with even numbers doubled. lst = [1, 2, 3, 4, 5, 6]","completion":"def double_even_numbers(lst): # Iterate through the list and double the even numbers double_lst = [] for num in lst: if num % 2 == 0: double_lst.append(num * 2) else: double_lst.append(num) # Return the new list return double_lst print(double_even_numbers(lst)) # [1, 4, 3, 8, 5, 12]"},{"prompt":"Write a function to identify the most frequent letter in a string. string = \\"Hello Universe","completion":"from collections import Counter def most_frequent_letter(string): # Count the letter frequency words = Counter(string) # Identify the most frequent letter most_common = words.most_common(1)[0][0] # Return the most frequent letter return most_common print(most_frequent_letter(string)) # l"},{"prompt":"Generate a script to print out the sum of all even numbers in a given list [2, 4, 5, 6, 7, 8]","completion":"def get_sum_of_evens(numbers): sum_of_evens = 0 for num in numbers: if num % 2 == 0: sum_of_evens += num return sum_of_evens numbers = [2, 4, 5, 6, 7, 8] print(get_sum_of_evens(numbers))"},{"prompt":"Create a python script to check if a substring exists in a given string","completion":"def is_substring(s1, s2): return s2 in s1"},{"prompt":"Write a function in Java which takes an array of integers and calculates the average value.","completion":"public static double calculateAverage(int[] array) { double sum = 0; for(int i = 0; i < array.length; i++) { sum += array[i]; } return sum / array.length; }"},{"prompt":"Design an SQL query to select the top 10 most popular movies from a given movie table.","completion":"SELECT title, count(*) as cnt FROM movie_table GROUP BY title ORDER BY cnt DESC LIMIT 10;"},{"prompt":"Create a React component which shows a list of items with a delete button for each item.","completion":"import React from 'react'; const ItemList = (props) => { return ( <div> {props.items.map((item) => ( <div key={item.id} className=\\"item\\"> {item.name} <button className=\\"delete-btn\\" onClick={() => props.onDeleteItem(item.id)} > Delete </button> </div> ))} </div> ); }; export default ItemList;"},{"prompt":"Use linear regression to predict the price of a car based on its make and model. make = ['Mazda', 'Volkswagen', 'Chevrolet'] model = ['3', 'PASSAT', 'Malibu']","completion":"import pandas as pd from sklearn.linear_model import LinearRegression # load data data = pd.read_csv('cars.csv') # create feature matrix X = data[['make', 'model']] # set target variable y = data['price'] # one-hot encode categorical make and model data X = pd.get_dummies(X, columns=['make', 'model']) # create and fit model model = LinearRegression() model.fit(X, y)"},{"prompt":"Design a PHP program to check whether two given numbers are equal or not.","completion":"<?php function check_equal(num1, num2) { if(num1 == num2){ return true; } else{ return false; } } num1 = 5; num2 = 5; result = check_equal(num1,num2); if(result) { echo \\"Numbers are equal\\"; } else { echo \\"Numbers are not equal\\"; } ?>"},{"prompt":"Using MongoDB and Node.js, create an API to post a new quote to a given collection. quote = \\"A journey of a thousand miles begins with a single step.","completion":"const MongoClient = require('mongodb').MongoClient; const assert = require('assert'); // Connection URL const url = 'mongodb://localhost:27017'; // Database Name const dbName = 'QuotesDB'; // Create a new MongoClient const client = new MongoClient(url); // Use connect method to connect to the Server client.connect(function(err) { assert.equal(null, err); console.log(\\"Connected successfully to server\\"); const db = client.db(dbName); db.collection('quotes').insertOne({\\"quote\\": \\"A journey of a thousand miles begins with a single step.\\"}, (err, res) => { if (err) { console.log(\\"Failed to insert quote\\", err); } else { console.log(\\"Inserted new quote\\"); } client.close(); }); });"},{"prompt":"Create a function to merge two lists and remove duplicates. list1 = [1, 3, 5, 7] list2 = [2, 3, 8, 10]","completion":"def merge_lists(list1, list2): merged_list = list1 + list2 return list(dict.fromkeys(merged_list))"},{"prompt":"Write a JavaScript program to generate and print multiplication table up to 10.","completion":"for(var i = 1; i <= 10; i++) { for(var j = 1; j <= 10; j++) { console.log(i + \\" x \\" + j + \\" = \\" + (i*j)); } }"},{"prompt":"Write an instruction for a GPT model to generate a response when it is given a given an English sentence as input. \\"How are you today?","completion":"return \\"I'm doing great, thank you for asking!\\""},{"prompt":"Write a Python function to filter a given list of strings and return the list with the strings having length greater than the given number. list = ['Example', 'cat', 'dog', 'hello', 'word'] length = 4","completion":"def filter_list(list, length): return [string for string in list if len(string) > length]"},{"prompt":"Create a function to convert an XML string to a JSON object.","completion":"import xmltodict def xmlToJsonObject(xmlStr): return xmltodict.parse(xmlStr)"},{"prompt":"Write a Python function to subtract two given numberss.","completion":"def subtract_numbers(num1, num2): return num1 - num2"},{"prompt":"Read the given list and return the last element. mylist = [1,2,3,4,5]","completion":"5"},{"prompt":"Create a program in Python that will take in a list of strings and print out each unique string in the list. mylist = [\\"Hello\\", \\"World\\", \\"Hello\\", \\"WDI\\", \\"Class\\"]","completion":"uniquelist = [] for string in mylist: if string not in uniquelist: uniquelist.append(string) print(uniquelist)"},{"prompt":"Write a function in Python that takes a sentence and a number as inputs, and returns the number of words in that sentence that are longer than the given number. Sentence = \\"Hello, this is a sentence\\"; Number = 3;","completion":"def count_words_longer_than_number(text, number): words = text.split() count = 0 for word in words: if len(word) > number: count += 1 return count count_words_longer_than_number(Sentence, Number)"},{"prompt":"Write a C++ program for calculating the power of a number. Base = 5; Exponent = 2;","completion":"#include <iostream> double power(double base, int exponent) { double result = 1; for(int i = 0; i < exponent; i++) { result *= base; } return result; } int main() { double base; int exponent; base = 5.0; exponent = 2; std::cout << power(base, exponent) << std::endl; return 0; }"},{"prompt":"Create a program in Python that takes a list of numbers as input and sorts it in ascending order. mylist = [3, 2, 5, 4, 1]","completion":"def list_sort(list): for i in range(0, len(list)): min_index = i for j in range(i+1, len(list)): if list[min_index] > list[j]: min_index = j list[i], list[min_index] = list[min_index], list[i] return list list_sort(mylist)"},{"prompt":"Read the given list and filter out the odd numbers. mylist = [1,2,3,4,5]","completion":"even_list = [] for num in mylist: if num % 2 == 0: even_list.append(num) print(even_list)"},{"prompt":"Write a script in JavaScript for converting temperature from Celsius to Fahrenheit. Celsius = 20","completion":"var celsius = 20; var fahrenheit = (celsius * (9/5)) + 32; console.log(fahrenheit);"},{"prompt":"Create a program in Python that will take a list of strings and output a list containing the lengths of each string. mylist = [\\"Hello\\", \\"World\\", \\"WDI\\", \\"Class\\"]","completion":"length_list = [] for string in mylist: length_list.append(len(string)) print(length_list)"},{"prompt":"Read the given list and filter out the elements containing the number '3'. mylist = [13, 23, 32, 31, 14]","completion":"filteredlist = [] for num in mylist: if '3' not in str(num): filteredlist.append(num) print(filteredlist)"},{"prompt":"Create a JavaScript object to store the data of a person. name: John Doe, age: 20, address: New York, US","completion":"const person = { name: 'John Doe', age: 20, address: 'New York, USA' }"},{"prompt":"Write a SQL query to select employee names together with their salary.","completion":"SELECT name, salary FROM employees;"},{"prompt":"Write a JavaScript program to validate whether a given phone number is valid. phone number: 412-678-9012","completion":"function validPhoneNumber(phoneNumber) { let phoneRegex = /^(?([0-9]{3}))?[-. ]?([0-9]{3})[-. ]?([0-9]{4})/; let validPhone = phoneRegex.test(phoneNumber); return validPhone; } validPhoneNumber(\\"412-678-9012\\") # true"},{"prompt":"Create an HTML page to display the output of a JavaScript greeting message. message: Welcome!","completion":"<!DOCTYPE html> <html> <head> <title>JavaScript Greeting Message</title> </head> <body> <h1>Welcome!</h1> <script type=\\"text/javascript\\"> document.write(\\"Welcome!\\"); <\/script> </body> </html>"},{"prompt":"Enter the necessary code to initiate a MongoDB connection","completion":"from pymongo import MongoClient #creating the MongoClient client = MongoClient(\\"mongodb://localhost:27017/\\") #connecting to the database db = client[\\"database_name\\"]"},{"prompt":"Create a class definition in python with one variable and one method","completion":"class Example: def __init__(self, variable): self.variable = variable def method(self): return self.variable + 1"},{"prompt":"ert a try and except block in the following code x = int(input(\\"Please enter a number: \\"))","completion":"try: x = int(input(\\"Please enter a number: \\")) except ValueError: print(\\"Input must be an integer!\\")"},{"prompt":"Define a python function that returns an array of the numbers from 0 to n","completion":"def create_array(n): # create an empty list mylist=[] # add elements to the list by looping n times for i in range(0, n + 1): mylist.append(i) # return the list return mylist"},{"prompt":"Write a class definition in Java to create a Person object with the properties age, name, and hobby.","completion":"public class Person { private int age; private String name; private String hobby; //constructors public Person(int age, String name, String hobby) { this.age = age; this.name = name; this.hobby = hobby; } //getters public int getAge() { return age; } public String getName() { return name; } public String getHobby() { return hobby; } //setters public void setAge(int age) { this.age = age; } public void setName(String name) { this.name = name; } public void setHobby(String hobby) { this.hobby = hobby; } }"},{"prompt":"Write a MySQL query to select the names and phone numbers of people whose age is greater than 30","completion":"SELECT Name, Phone FROM People WHERE Age > 30"},{"prompt":"Change the comment to a print statement in the code. x = 1 # print the value of x","completion":"x = 1 print(x)"},{"prompt":"Write a function in Python that takes two parameters, a list of integers and a target integer. The function should return the number of times the target integer appears in the list. list = [12, 4, 1, 18, 7, 15, 6, 11, 4] target = 4","completion":"def count_target(lst, target): count = 0 for i in lst: if i == target: count += 1 return count print(count_target(list, target))"},{"prompt":"Write a Ruby method that takes an array of strings as a parameter, and returns a string with the elements of the array sorted and separated by commas. ['cat', 'dog', 'bird', 'bat']","completion":"def array_string(arr) arr.sort.join(', ') end puts array_string(['cat', 'dog', 'bird', 'bat'])"},{"prompt":"Write a Python script that takes a string as input and outputs a string with the same characters in reverse order. hello","completion":"def reverse_string(str): return str[::-1] print(reverse_string('hello'))"},{"prompt":"Write a CSS selector to select all the links in a web page.","completion":"a { color: blue; }"},{"prompt":"Write a PHP program to receive an array as an input and return an array with the same elements in reverse order. [1, 2, 3, 4, 5]","completion":"<?php function reverse_array(arr) { reversed_arr = array_reverse(arr); return reversed_arr; } input_arr = [1, 2, 3, 4, 5]; output_arr = reverse_array(input_arr); print_r(output_arr);"},{"prompt":"Write a C++ program to create a linked list of length 5.","completion":"#include <iostream> using namespace std; struct Node{ int data; Node *next; }; Node *head = NULL; void createList(int n) { Node *newNode, *temp; int data, i; head = new Node; if(head == NULL) { cout<<\\"Memory allocation failedn\\"; } else { cout<<\\"Enter the value of node 1: \\"; cin>>data; head->data = data; head->next = NULL; temp = head; for(i=2; i<=n; i++) { newNode = new Node; if(newNode == NULL) { cout<<\\"Memory allocation failedn\\"; break; } else { cout<<\\"Enter the data of node \\"<<i<<\\": \\"; cin>>data; newNode->data = data; newNode->next = NULL; temp->next = newNode; temp = temp->next; } } } }"},{"prompt":"Write an Objective-C class to represent a person containing attributes like name, age, and height.","completion":"#import <Foundation/Foundation.h> @interface Person : NSObject @property NSString *name; @property NSUInteger age; @property CGFloat height; - (instancetype)initWithName:(NSString *)name age:(NSUInteger)age height:(CGFloat)height; @end #import \\"Person.h\\" @implementation Person - (instancetype)initWithName:(NSString *)name age:(NSUInteger)age height:(CGFloat)height { self = [super init]; if (self) { self.name = name; self.age = age; self.height = height; } return self; } @end"},{"prompt":"Write a JSON document to store the name and score of players in a game.","completion":"[ { \\"name\\": \\"John Doe\\", \\"score\\": 100 }, { \\"name\\": \\"Jane Doe\\", \\"score\\": 70 }, { \\"name\\": \\"Bob Smith\\", \\"score\\": 50 } ]"},{"prompt":"What is deadlock and how to prevent it?","completion":"Deadlock is a state in which two or more processes wait for each other to finish, but none of the processes can finish because each is waiting for the other. To prevent deadlock, one can employ the use of a deadlock avoidance algorithm which typically checks for whether a particular set of conditions exist that can lead to deadlock. Additionally, locks can be applied liberally, but with caution, while avoiding circular wait."},{"prompt":"Update the values of the variables x, y and z using the given expression. x=1, y=2, z=3, expression: x+2*y-z","completion":"x = 3, y = 2, z = 3"},{"prompt":"What is the maximum possible value that can be stored in a single byte?","completion":"The maximum possible value that can be stored in a single byte is 255."},{"prompt":"Create an array of five elements using the language of your choice.","completion":"my_list = [1, 2, 3, 4, 5]"},{"prompt":"What is the difference between the List and the Set data structures?","completion":"The main difference between Lists and Sets are that Lists are ordered and can contain duplicate elements, while Sets are unordered and cannot contain duplicate elements. Additionally, Lists support indexing and iteration, while Sets do not."},{"prompt":"mplement a recursive algorithm to count the number of elements that are divisible by k in an array. [2, 4, 8, 10, 11], k = 3","completion":"def countK(arr, k): if len(arr) == 0: return 0 if arr[0] % k == 0: return 1 + countK(arr[1:], k) else: return 0 + countK(arr[1:], k)"},{"prompt":"What is the difference between shallow copying and deep copying?","completion":"Shallow copying is the process of creating a copy of the original object which only contains references to the values contained in the original instance. This means that any shallow copy only contains references to the same objects as the original instance, while any changes made to the copy will be reflected in the original object as well. Deep copying on the other hand, is the process of creating a new instance of the original object with all of its values copied over. This means that any changes made to the copy are not reflected in the original object."},{"prompt":"Construct a factorial function in JavaScript that takes in two inputs x and y as parameters.","completion":"function factorial(x, y) { let result = 1; for (let i = x; i <= y; i++) { result *= i; } return result; }"},{"prompt":"Modify the following code so that it takes a list of numbers and calculates their median. def median(data)","completion":"def median(data): data.sort() length = len(data) if length == 0: return 0 if length % 2 == 0: return (data[length // 2] + data[length // 2 - 1]) / 2 elif length % 2 == 1: return data[length // 2]"},{"prompt":"Create a program that uses a loop to generate 25 random numbers from 0 to 8.","completion":"import random # Generate 25 random numbers random_list = [] for i in range(25): random_list.append(random.randint(0, 8)) print(random_list)"},{"prompt":"Given the following line of code, explain what it does. a = [i for i in range(5)]","completion":"The given line of code creates a list from 0 to 4 (inclusive) using a list comprehension. It is equivalent to the following code: a = [] for i in range(5): a.append(i) Therefore, it creates a list 'a' with elements \\"0\\", \\"1\\", \\"2\\", \\"3\\", and \\"4\\"."},{"prompt":"Re-write the following code using only the filter() function. numbers = range(10) evens = [] for x in numbers: if x % 2 == 0: evens.append(x)","completion":"numbers = range(10) evens = list(filter(lambda x : x % 2 == 0, numbers))"},{"prompt":"Given an array of strings \\"words\\", write a code to remove all the words which are greater than 5 characters in length. words = [\\"Stack\\", \\"Overflow\\", \\"Python\\", \\"Coding\\"]","completion":"words = [\\"Stack\\", \\"Overflow\\", \\"Python\\", \\"Coding\\"] words = list(filter(lambda x : len(x)<=5, words)) print(words)"},{"prompt":"Create a program that generates a random integer from 1 to 10.","completion":"import random random_number = random.randint(1, 10) print(\\"A random number between 1 and 10 is: \\" + str(random_number))"},{"prompt":"Given an array of strings \\"alphabet\\", write a code to repeat each element in the array. alphabet = [\\"a\\", \\"b\\", \\"c\\"]","completion":"alphabet = [\\"a\\", \\"b\\", \\"c\\"] new_alphabet = [] for letter in alphabet: new_alphabet += [letter]*2 print(new_alphabet)"},{"prompt":"Given a list of numbers, write a program that finds all the numbers that are divisible by 3. myList = [1, 2, 3, 4, 5, 6, 7, 8, 9]","completion":"myList = [1, 2, 3, 4, 5, 6, 7, 8, 9] divisible_by_3 = list(filter(lambda x: x % 3 == 0, myList)) print(divisible_by_3)"},{"prompt":"Write a SQL statement to join table1 and table 2 on the \\"name\\" column.","completion":"SELECT table1.name, table1.city, table2.email FROM table1 INNER JOIN table2 ON table1.name=table2.name;"},{"prompt":"Create a C++ program to print all the even numbers of a given range. 1 10","completion":"#include <iostream> using namespace std; int main() { int start, end; cout<<\\"Enter start of range: \\"; cin>>start; cout<<\\"Enter end of range: \\"; cin>>end; cout<<\\"Printing even numbers between \\"<< start <<\\" and \\"<< end <<\\": \\"; for(int i = start; i <= end; i++) { if(i % 2 == 0) { cout << i << \\" \\"; } } return 0; }"},{"prompt":"Compile a Java program using the command line.","completion":"javac filename.java"},{"prompt":"Design a JavaScript program to find the factorial of an integer. 5","completion":"function factorial(num) { // If the number is less than 0, reject it. if (num < 0) { return -1; } // If the number is 0, its factorial is 1. else if (num == 0) { return 1; } // Otherwise, call the recursive procedure. else { return (num * factorial(num - 1)); } } const num = 5; const result = factorial(num); console.log(\`The factorial of {num} is {result}.\`);"},{"prompt":"Write a method in Python which takes a positive integer and returns the sum of squares of all numbers smaller than the given number. 5","completion":"def sum_of_squares(n): if n == 1: return 1 else: return n*n + sum_of_squares(n-1) number = 5 result = sum_of_squares(number) print('The sum of squares of numbers smaller than {} is {}.'.format(number, result))"},{"prompt":"Generate a MySQL query to fetch a specified number of records starting from a given ID. 5 10","completion":"SELECT * FROM table WHERE id > 10 LIMIT 5;"},{"prompt":"Describe the differences between \\"==\\" and \\"===\\" operators in JavaScript.","completion":"In JavaScript, the \\"==\\" operator compares two values by performing type-conversion if necessary, while the \\"===\\" operator does not perform type-conversion and compares the values directly. For example, the statement \\"3 == '3'\\" will return true for the \\"==\\" operator, but false for the \\"===\\" operator, since the two values on either side of the operator are not of the same type."},{"prompt":"Debug the code to fix the error. def hi_it(name): print(\\"Hi,\\" + name) hi_it(\\"John\\")","completion":"def hi_it(name): print(\\"Hi,\\" + str(name)) hi_it(\\"John\\")"},{"prompt":"Given a list of words and a target word, determine if the target word is in the list list_words = [\\"apple\\", \\"banana\\", \\"orange\\", \\"mango\\"] target_word = \\"pineapple","completion":"list_words = [\\"apple\\", \\"banana\\", \\"orange\\", \\"mango\\"] target_word = \\"pineapple\\" if target_word in list_words: print (\\"Target word is in the list\\") else: print (\\"Target word is not in the list\\")"},{"prompt":"Given a collection of email addresses, group them by the domain emails = [\\"test@example.com\\", \\"example@example.org\\", \\"test@test.co.uk\\"]","completion":"emails = [\\"test@example.com\\", \\"example@example.org\\", \\"test@test.co.uk\\"] from collections import defaultdict by_domain = defaultdict(list) for email in emails: domain = email.split(\\"@\\")[-1] by_domain[domain].append(email) print(dict(by_domain))"},{"prompt":"Strip the spaces in the given string string = \\"Hello World","completion":"string = \\"Hello World \\" stripped_string = string.strip() print (stripped_string)"},{"prompt":"Given a 2D array, return the sums of all columns arr = [[1,2,3], [4,5,6], [7,8,9]]","completion":"arr = [[1,2,3], [4,5,6], [7,8,9]] sums = [] for i in range(len(arr[0])): total = 0 for row in arr: total += row[i] sums.append(total) print(sums)"},{"prompt":"Given a collection of strings, sort the strings by their length strings = [\\"a\\", \\"abc\\", \\"defg\\"]","completion":"strings = [\\"a\\", \\"abc\\", \\"defg\\"] strings.sort(key=len) print(strings)"},{"prompt":"Make a program that prints the elements of a given array in reverse order arr = [1,2,3,4,5]","completion":"arr = [1,2,3,4,5] for index in range(len(arr)-1, -1, -1): print(arr[index])"},{"prompt":"Given a list of strings and a target string, return a list of strings which contain the target string list_of_strings = [\\"cat\\", \\"dog\\", \\"rat\\", \\"bat\\"] target_string = \\"","completion":"list_of_strings = [\\"cat\\", \\"dog\\", \\"rat\\", \\"bat\\"] target_string = \\"at\\" result = [string for string in list_of_strings if target_string in string] print(result)"},{"prompt":"ert code to reverse a list in place. arr = [1,2,3,4]","completion":"arr = [1,2,3,4] arr.reverse()"},{"prompt":"Sum every second element in an array. arr = [1, 5, 4, 8, 10, 12]","completion":"def sum_second_elements(arr): sum_num = 0 for i in range(1, len(arr), 2): sum_num += arr[i] return sum_num"},{"prompt":"dentify if a given integer is odd or even. 43","completion":"def identify_odd_even(num): if num % 2 == 0: return \\"even\\" else: return \\"odd\\""},{"prompt":"Generate a random code string with each character from A-Z and 0-10.","completion":"import random def random_code_string(length): chars = [chr(i) for i in range(65, 91)] + [str(digit) for digit in range(10)] code_string = \\"\\" for _ in range(length): random_char = random.choice(chars) code_string += random_char return code_string"},{"prompt":"Find all duplicates in an array. arr = [1, 2, 4, 2, 1, 5]","completion":"def find_duplicates(arr): duplicates = [] seen = set() for elem in arr: if elem in seen: duplicates.append(elem) else: seen.add(elem) return duplicates"},{"prompt":"Create a function that takes two parameters and merge them into a single object. a = {'a': 1, 'b': 2} b = {'c': 3, 'd': 4}","completion":"def merge_objects(obj_a, obj_b): merged = {**obj_a, **obj_b} return merged"},{"prompt":"Rewrite the following code using the set module in Python a = [1, 1, 2, 3, 4, 5, 5, 5]","completion":"import set a = [1, 1, 2, 3, 4, 5, 5, 5] a_set = set(a) new_list = list(a_set) print(new_list)"},{"prompt":"Create a web service to convert a given list of temperatures from Celsius to Fahrenheit. [50, 51, 52, 53, 54]","completion":"# Code to convert Celsius to Fahrenheit def c_to_f(celsius): return celsius * 9/5 + 32 # Create a web service from flask import Flask app = Flask(__name__) @app.route('/converter/<list:celsius>', methods =['GET']) def convert_celsius(celsius): # Convert the Celsius values to Fahrenheit output = [c_to_f(temp) for temp in celsius] return output if __name__ == '__main__': app.run(debug = True)"},{"prompt":"Create a program to generate a random password of 10 characters consisting of both alphabets and numbers.","completion":"# Program to generate a random password of 10 characters import string import random # Get all the symbols to use in the password symbols = string.ascii_letters + string.digits # Generate a random password password = ''.join(random.choice(symbols) for _ in range(10)) print(password)"},{"prompt":"Create a program to encode a message with the Caesar cipher encryption algorithm. message = 'Hello World' shift = 3","completion":"# Program to encode a message with the Caesar cipher encryption algorithm # Get the message to encrypt message = 'Hello World' # Set the shift value shift = 3 # Create an array to store the encrypted message encrypted_message = [] for character in message: encrypted_character = chr(ord(character) + shift) encrypted_message.append(encrypted_character) # Join the encrypted message to form a string encrypted_message = ''.join(encrypted_message) print(encrypted_message)"},{"prompt":"Generate a web page with a form that takes a user's name and age, and outputs a greeting based on the age.","completion":"# Program to generate a simple web page from flask import Flask, request app = Flask(__name__) # Render the web page @app.route('/', methods = ['GET']) def show_index_page(): return ''' <html> <head> <title>Greeting Form</title> </head> <body> <h1>Greeting Form</h1> <form method=\\"POST\\"> <input type=\\"text\\" name=\\"user_name\\" placeholder=\\"Enter your name\\" required> <input type=\\"number\\" name=\\"user_age\\" placeholder=\\"Enter your age\\" required> <input type=\\"submit\\" value=\\"Submit\\"> </form> </body> </html>''' # Process the form data and generate the greeting @app.route('/', methods = ['POST']) def process_data(): name = request.form.get('user_name') age = request.form.get('user_age') if age <= 10: message = f'Hi {name}, how is your day going?' elif age > 10 and age <= 20: message = f'Hello {name}, what are you interested in?' else: message = f'Greetings {name}, it is nice to meet you!' return message if __name__ == '__main__': app.run(debug = True)"},{"prompt":"Write a code to simulate a random walk in two-dimensional space. x_steps = 10","completion":"# Program to simulate a random walk in two-dimensional space import random x_steps = 10 # Initialize starting positions x = 0 y = 0 # Take a random step on each iteration for _ in range(x_steps): direction = random.randint(0, 3) if direction == 0: x += 1 elif direction == 1: x -= 1 elif direction == 2: y += 1 else: y -= 1 print(f'Final position is ({x},{y})')"},{"prompt":"Write a code to implement a round-robin scheduling algorithm. processes = [10, 5, 7] time_slice = 2","completion":"# Program to implement a round-robin scheduling algorithm # Get the list of processes and the time slice processes = [10, 5, 7] time_slice = 2 # Create an empty list to store the remaining burst time remaining_burst = [] # Loop through all processes to get the remaining burst time for process in processes: remaining_burst.append(process) # Keep track of current time cycle time = 0 # Loop through the processes and implement round-robin scheduling while True: done = True # Iterate through the processes for i in range(len(processes)): if remaining_burst[i] > 0: done = False # Not done yet if remaining_burst[i] > time_slice: # Increment timeline time += time_slice # Reduce the remaining burst time remaining_burst[i] -= time_slice else: # Increment timeline time += remaining_burst[i] # Set remaining burst to 0 remaining_burst[i] = 0 # Break the loop if all processes are done if done: break print('Total time to schedule the processes is', time)"},{"prompt":"Generate a python program to create a n-dimensional array filled with zeros. n = 4","completion":"# Program to create a n-dimensional array filled with zeros import numpy as np # Get the number of dimensions n = 4 # Create an array of zeros of given size arr = np.zeros((n,n,n,n)) print(arr)"},{"prompt":"You need to compute the Average of all numbers stored in an array arr = [3, 2, 5, 9, 6]","completion":"average = 5.4"},{"prompt":"Create a class named 'Circle' which calculates the area and circumference given a radius.","completion":"class Circle: def __init__(self, radius): self.radius = radius def area(self): return 3.14 * (self.radius**2) def circumference(self): return 2 * 3.14 * self.radius"},{"prompt":"Write a function that takes two strings as input,one being a base string and other being a sub-string and returns True if sub-string appears in base string and False otherwise. Base string = \\"I am a coding enthusiast\\" Sub-string = \\"coding","completion":"True"},{"prompt":"You need to extract a part of the string from the starting to the 5th character and from 7th to the 25th character. string = \\"This is a coding challenge","completion":"thiic ng Chal"},{"prompt":"You need to find the number of words in a sentence. sentence = \\"The quick brown fox jumps over the lazy dog","completion":"9"},{"prompt":"Generate a dictionary with five key-value pairs of string.","completion":"dictionary = { 'Apple': 'Red', 'Banana': 'Yellow', 'Strawberry': 'Red', 'Orange': 'Orange', 'Grape': 'Purple' }"},{"prompt":"Sort an array using bubble sort technique. arr = [4, 3, 6, 7, 5, 1, 8]","completion":"[1, 3, 4, 5, 6, 7, 8]"},{"prompt":"Output a sentence in the following format with 'name' as the user input. name = 'John Doe'","completion":"\\"Hello, my name is John Doe.\\""},{"prompt":"Take an array and remove all elements except the unique elements. arr = [2, 3, 6, 8, 3, 8, 6, 2]","completion":"[2, 3, 6, 8]"},{"prompt":"Take user input from the console and output 'Hello [name]'. name = 'John'","completion":"Hello John."},{"prompt":"Take a string and reverse it. string = 'Programming'","completion":"gnimmargorP"},{"prompt":"Create a Python class called Employee which contains the employee id and the name.","completion":"# define the Employee class class Employee: # construct a new Employee instance def __init__(self, id, name): self.id = id self.name = name # create a new Employee object employee1 = Employee(1, \\"John Doe\\") # access the employee id and name print(employee1.id) print(employee1.name)"},{"prompt":"Create a program that takes in two lists and prints out a new list with the elements from the first list followed by the elements from the second list. list_1 = [1, 2, 3] list_2 = [4, 5, 6]","completion":"# define a function to combine two lists into one def combine_lists(list_1, list_2): # create a new list combined_list = [] # append the elements from list 1 for ele in list_1: combined_list.append(ele) # append the elements from list 2 for ele in list_2: combined_list.append(ele) # return the combined list return combined_list # input two lists list_1 = [1, 2, 3] list_2 = [4, 5, 6] # output the combined list combined_list = combine_lists(list_1, list_2) print(\\"The combined list is \\" + str(combined_list))"},{"prompt":"mplement a function to solve the following equation: x2+y2=z2","completion":"def solve_eq(x, y, z): '''This function will solve the equation: x^2 + y^2 = z^2.''' # Use the Pythagorean Theorem if x**2 + y**2 == z**2: return True else: return False"},{"prompt":"Complete the following function to return the indices at which the binary representation of a given number has no consecutive 1s. num = 12","completion":"def find_indices(num): # convert given number to binary binary_num = bin(num)[2:] # create an empty list to store required indices indices_list = [] # iterate over the binary number for i in range(len(binary_num)-1): if binary_num[i+1] != '1' or binary_num[i] != '1': indices_list.append(i) # return the required indices return indices_list num = 12 result = find_indices(num) print(\\"The indices with no consecutive 1s are:\\", result)"},{"prompt":"Given a string, write code to remove all the consecutive characters and output the new string. string='AAABBBCCC'","completion":"def remove_consecutive_chars(string): # create an empty string new_string = '' # iterate over the characters of the given string for i in range(len(string)-1): if string[i] != string[i+1]: new_string += string[i] # add the last character of the string to the output new_string += string[-1] # return the new string return new_string string='AAABBBCCC' result = remove_consecutive_chars(string) print(\\"The new string is:\\", result)"},{"prompt":"Create a regex to identify valid IPV4 addresses.","completion":"import re def is_valid_ipv4(ip): # pattern to match valid IP addresses pattern = r\\"^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?).(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?).(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?).(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\" if re.match(pattern, ip): return True else: return False"},{"prompt":"Write a function to generate an array of all possible permutations of N numbers.","completion":"def generate_permutations(n): if n == 0: return [] if n == 1: return [[1]] permutations = [] for i in range(n): permutations_n_1 = generate_permutations(n - 1) for perm in permutations_n_1: for j in range(n): r = perm.copy() r.insert(j, n) permutations.append(r) return permutations"},{"prompt":"Write a function to convert an array of strings to an array of floats. string_arr=['1.1', '2.3', '3.4']","completion":"def array_to_floats(string_arr): # Create an array to store the float values float_arr = [] # Iterate over the given array and convert to float for s in string_arr: float_arr.append(float(s)) # Return the new array return float_arr string_arr=['1.1', '2.3', '3.4'] result = array_to_floats(string_arr) print(\\"The array as floats is:\\", result)"},{"prompt":"Generate a random PIN of 8 characters.","completion":"import random def generate_pin(): \\"\\"\\" This function generates a random PIN of 8 characters. Parameters ---------- None Returns ------- pin : str The generated PIN \\"\\"\\" characters= \\"ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\\" pin = \\"\\" for _ in range(8): pin += random.choice(characters) return pin print(generate_pin()) # Outputs a random PIN of 8 characters"},{"prompt":"Sort a list of numbers so that the lowest number appears first. n_list = [3, 9, 1, 4, 5]","completion":"def sort_list(n_list): \\"\\"\\" Sort a given list of numbers in ascending order. Parameters ---------- n_list: list The list of numbers to sort Returns ------- sorted_list : list The sorted list \\"\\"\\" sorted_list = sorted(n_list) return sorted_list n_list = [3, 9, 1, 4, 5] print(sort_list(n_list)) # Outputs [1, 3, 4, 5, 9]"},{"prompt":"Compute the number of ways for a host to select 3 items from a list of 8 options.","completion":"def compute_combination(n, r): \\"\\"\\" Compute the number of ways for a host to select 'r' items from a list of 'n' options. Parameters ---------- n : int The total number of items r : int The number of items to select Returns ------- num : int The number of ways to select \\"\\"\\" num = 1 # Calculate combination for i in range(r): num *= n - i num //= math.factorial(r) return num n = 8 r = 3 print(compute_combination(n, r)) # Outputs 336"},{"prompt":"Search a list to find a string and return its index. string_list = [\\"apple\\", \\"banana\\", \\"orange\\"] search_term = \\"orange","completion":"def search_list(string_list, search_term): \\"\\"\\" Search a list for a given string and return its index. Parameters ---------- string_list : list The list to search search_term : str The string to search for Returns ------- index : int The index of the string in the list, returns -1 if the string is not found \\"\\"\\" for i, s in enumerate(string_list): if s == search_term: return i return -1 string_list = [\\"apple\\", \\"banana\\", \\"orange\\"] search_term = \\"orange\\" print(search_list(string_list, search_term)) # Outputs 2"},{"prompt":"Parse a given string and extract the name from it. string = \\"Hi! My name is John Smith","completion":"def extract_name(string): \\"\\"\\" Parse a given string and extract the name from it. Parameters ---------- string : str The string to parse Returns ------- name : str The extracted name \\"\\"\\" # Split the string by words words = string.split() # The last word is the name name = words[-1] return name string = \\"Hi! My name is John Smith\\" print(extract_name(string)) # Outputs \\"John Smith\\""},{"prompt":"Create a histogram chart of the given data. dataset = [2, 3, 5, 6, 7, 4]","completion":"import matplotlib.pyplot as plt def create_histogram(dataset): \\"\\"\\" Create a histogram chart of the given data. Parameters ---------- dataset : list The data to plot on the chart Returns ------- None \\"\\"\\" plt.hist(dataset, bins=7, facecolor=\\"blue\\", alpha=0.5) plt.title(\\"Histogram\\") plt.xlabel(\\"Values\\") plt.ylabel(\\"Frequency\\") plt.show() dataset = [2, 3, 5, 6, 7, 4] create_histogram(dataset) # Outputs a histogram chart of the given data"},{"prompt":"Preprocess a given document, removing stopwords and punctuations. document = \\"Hello! This is a test document for preprocessing","completion":"from nltk.corpus import stopwords import string def preprocess_document(document): \\"\\"\\" Preprocess a given document, removing stopwords and punctuations. Parameters ---------- document : str The document to preprocess Returns ------- clean_word_list : list The preprocessed word list \\"\\"\\" # Split the document into word list word_list = document.split() stopwords_list = stopwords.words('english') # Remove punctuation word_list = [word.strip(string.punctuation) for word in word_list] # Remove words with 2 or fewer characters word_list = [word for word in word_list if len(word) > 2] # Remove stopwords clean_word_list = [word for word in word_list if word not in stopwords_list] return clean_word_list document = \\"Hello! This is a test document for preprocessing\\" print(preprocess_document(document)) # Outputs ['Hello', 'test', 'document', 'preprocessing']"},{"prompt":"Design an algorithm to eliminate duplicate elements in a given array. Array: [1, 5, 1, -2, 5]","completion":"def remove_duplicates(arr): result = [] for el in arr: if el not in result: result.append(el) return result"},{"prompt":"Replace each occurrence of the given character in a string with a space. String: abcde Character: c","completion":"String: ab de"},{"prompt":"You are given a string of tasks. Split the string into a list of tasks. Tasks = \\"cook breakfast;run errand;pick up kids; feed the dog","completion":"tasks = [\\"cook breakfast\\", \\"run errand\\", \\"pick up kids\\", \\"feed the dog\\"]"},{"prompt":"Given a number N find the square root of N.","completion":"def sqrt(N): guess = N/2 while abs(guess*guess - N) >= 0.001: guess = 0.5 * (guess + N/guess) return guess"},{"prompt":"Given an array of integers, remove all the duplicated elements from the array and return the distinct array. nums=[3, 4, 5, 5, 6, 6, 6, 7]","completion":"def uniq_array(nums): distinct_arr = [] for num in nums: if num not in distinct_arr: distinct_arr.append(num) return distinct_arr"},{"prompt":"You are given a string of words. Count how many words the string contains. words = \\"This is a testing string","completion":"def word_count(words): count = 0 for word in words.split(): count+=1 return count"},{"prompt":"Given a string of text, find the total number of characters in the string. text = \\"You have to do","completion":"def char_count(text): count = 0 for char in text: count += 1 return count"},{"prompt":"You are given a list of numbers. Find the maximum sum of any subsequence in the list.","completion":"def max_sum_subsequence(nums): max_sum = 0 curr_sum = 0 for num in nums: curr_sum = max(num + curr_sum, 0) max_sum = max(curr_sum, max_sum) return max_sum"},{"prompt":"You are given a string. Count the total number of lowercase letters in the string.","completion":"def count_lowercase(string): count = 0 for char in string: if char.islower(): count += 1 return count"},{"prompt":"Write a function that takes an array of integers and multiplies them together. arr = [3, 5, 4]","completion":"def multiplyArray(arr): result = 1 for x in arr: result = result * x return result"},{"prompt":"What is this coding question asking you to do? Write a Python function to check whether a number is prime or no","completion":"This coding question is asking you to write a Python function to check whether a given number is prime or not. The function should take an integer as an argument and return a boolean indicating if the number is prime or not."},{"prompt":"Edit the code such that it prints the same output. str1 = \\"python \\" str2 = \\"programming\\" print(str1 + str2)","completion":"str1 = \\"python\\" str2 = \\" programming\\" print(str1 + str2)"},{"prompt":"Fill in the blanks in the following code to make it an executable program. def main(): temp = _____ if _____: print('It is a hot day') elif _____: print('It is a cold day') else: print('It is a lovely day') main()","completion":"def main(): temp = 22 if temp > 30: print('It is a hot day') elif temp < 10: print('It is a cold day') else: print('It is a lovely day') main()"},{"prompt":"Explain the advantages of using the following linear regression algorithm in Python. Linear Regression using Stochastic Gradient Desce","completion":"The advantages of using the Linear Regression algorithm with Stochastic Gradient Descent (SGD) in Python include: 1. It is relatively fast to train, as it only has to go through each sample in the dataset once in order to generate the coefficients. 2. It requires small datasets and low complexity models, so it can be utilized on limited hardware systems. 3. It is well suited for problems where the number of features is quite high, and the relationships between features is non-linear. 4. It can exploit sparse data, which can make it perfect for certain types of data, such as text."},{"prompt":"Remove the element with the value “Carrots” from the given list. sample_list = [\\"Apples\\", \\"Oranges\\", \\"Pears\\", \\"Carrots\\"]","completion":"sample_list = [\\"Apples\\", \\"Oranges\\", \\"Pears\\"]"},{"prompt":"Determine the returned value of the following function. def my_fun(x): if x > 5: return x * 2 else: return x * 3","completion":"If x = 6, the returned value is 12."},{"prompt":"List out all the sorting algorithms supported in Python.","completion":"The sorting algorithms supported in Python include bubble sort, insertion sort, selection sort, merge sort, quick sort, and heap sort."},{"prompt":"Create a function that removes duplicates from an array and returns an array of the unique values. array = [5,5,5,10,10,15]","completion":"def remove_duplicates(array): new_array = [] for number in array: if number not in new_array: new_array.append(number) return new_array print(remove_duplicates([5,5,5,10,10,15]))"},{"prompt":"Find all the possible permutations in a string without using any built-in functions. string = \\"ABC","completion":"def permute(string): # base case if len(string) == 1: return [string] results = set() # iterate through each character in the string for i in range(len(string)): # select the ith character char = string[i] # generate all the permutations from the remaining characters remaining_characters = string[:i] + string[i+1:] permutations = permute(remaining_characters) # append the ith character to the beginning of each permutation and add to the result set for permutation in permutations: results.add(char + permutation) return list(results) print(permute(\\"ABC\\"))"},{"prompt":"Create a function which detects overlapping dates from a given list. dates_list = [ (2018,1,1,2018,3,1), (2018,12,1,2018,9,30), (2018,2,15,2018,5,10) ]","completion":"def detect_overlapping_dates(dates_list): overlaps = set() for i in range(len(dates_list)-1): for j in range(i+1, len(dates_list)): date1_start_year, date1_start_month, date1_start_day, date1_end_year, date1_end_month, date1_end_day = dates_list[i] date2_start_year, date2_start_month, date2_start_day, date2_end_year, date2_end_month, date2_end_day = dates_list[j] # check if the two dates overlap if (date1_start_year <= date2_end_year and date2_start_year <= date1_end_year) and (date1_start_month <= date2_end_month and date2_start_month <= date1_end_month) and (date1_start_day <= date2_end_day and date2_start_day <= date1_end_day): # if the two dates overlap, add to the overlapping set overlaps.add(dates_list[i]) overlaps.add(dates_list[j]) return list(overlaps) dates_list = [ (2018,1,1,2018,3,1), (2018,12,1,2018,9,30), (2018,2,15,2018,5,10) ] print(detect_overlapping_dates(dates_list))"},{"prompt":"Given a list of integers, remove all negative numbers. numbers_list = [-2,-3,4,5,-6,7]","completion":"def remove_negative_numbers(numbers_list): result_list = [] for number in numbers_list: if number >= 0: result_list.append(number) return result_list numbers_list = [-2,-3,4,5,-6,7] print(remove_negative_numbers(numbers_list))"},{"prompt":"Write a JavaScript function to find all words in a string. This is a string","completion":"function findWords(str) { let words = []; let start = 0; for (let i = 0; i < str.length; i++) { if (str[i] == ' ') { let word = str.substring(start, i); if (word != '') words.push(word); start = i + 1; } } let lastWord = str.substring(start, str.length); if (lastWord != '') words.push(lastWord); return words; }"},{"prompt":"HTML, write a code to create an input field to get an email address from a user.","completion":"<input type=\\"email\\" name=\\"email\\" placeholder=\\"Enter email address\\">"},{"prompt":"Create an SQL query to find the number of employees whose age is between 30 and 40","completion":"SELECT COUNT(*) FROM employees WHERE age BETWEEN 30 AND 40;"},{"prompt":"Create a JavaScript object with key-value pairs representing names and ages.","completion":"const people = { \\"John\\": 30, \\"Emily\\": 28, \\"George\\": 25, \\"Karen\\": 33 }"},{"prompt":"Design an abstract employee class with following members.","completion":"public abstract class Employee { private string employeeId; private string name; private string address; private string phoneNumber; private double salary; public string EmployeeId { get { return employeeId; } set { employeeId = value; } } public string Name { get { return name; } set { name = value; } } public string Address { get { return address; } set { address = value; } } public string PhoneNumber { get { return phoneNumber; } set { phoneNumber = value; } } public double Salary { get { return salary; } set { salary = value; } } public abstract double getSalary(); public abstract void incrementSalary(double incrementAmount); public abstract double calculateIncomeTax(); }"},{"prompt":"Discuss the pros and cons of using class properties in C#.","completion":"Class properties make code more readable and shorter by allowing the user to access and set private variables without having to declare a public method for each. Additionally, class properties make it easy to control access rules for class variables, as you can create getters and setters for variable access, allowing you to enforce specific behaviors such as “read-only” or “write-only” access. On the other hand, class properties tend to be less efficient than public or private variables due to the extra overhead incurred in calling the getter and setter methods. Additionally, they can make debugging more difficult, since the code that accesses the variable is abstracted away to a different method. Overall, whether to use class properties or not is largely a design decision, as there are advantages and disadvantages to both approaches."},{"prompt":"Construct a 3 level hierarchical tree data structure in PHP.","completion":"class Node { public item; public parent; public children; public function __construct(item, parent = null) { this->item = item; this->parent = parent; this->children = array(); } public function addChild(item) { node = new Node(item, this); array_push(this->children, node); return node; } }"},{"prompt":"Find the number of negative numbers in a given list. List: [-2, -7, -11, 1, 4, 8, 10]","completion":"function countNegatives(list) { let count = 0; for (let i=0; i<list.length; i++) { if (list[i] < 0) { count++; } } return count; } countNegatives([-2, -7, -11, 1, 4, 8, 10]); // returns 3"},{"prompt":"Write a function to perform buble sort.","completion":"public void bubbleSort(int[] array) { int n = array.length; for (int i = 0; i < n-1; i++) { for (int j = 0; j < n-i-1; j++) { if (array[j] > array[j+1]) { int temp = array[j]; array[j] = array[j+1]; array[j+1] = temp; } } } }"},{"prompt":"Display the results from a MySQL query in HTML table format. MySQL query: SELECT * FROM employees WHERE name LIKE '%john%'","completion":"<?php query = \\"SELECT * FROM employees WHERE name LIKE '%john%'\\"; result = mysqli_query(conn, query); echo \\"<table>\\"; echo \\"<tr><th>ID</th><th>Name</th><th>Age</th></tr>\\"; while (row = mysqli_fetch_assoc(result)) { echo \\"<tr><td>\\".row['id'].\\"</td><td>\\".row['name'].\\"</td><td>\\".row['age'].\\"</td></tr>\\"; } echo \\"</table>\\"; ?>"},{"prompt":"Using the given list, write a code to get a list of all the words starting with \\"T words_list = ['Meteor', 'Timeline', 'Tablet', 'Timeframe', 'Trophy']","completion":"words_starting_with_T = [word for word in words_list if word.startswith('T')]"},{"prompt":"Create a class named \\"Car\\" to store information about a car's make, model and year.","completion":"class Car: def __init__(self, make, model, year): self.make = make self.model = model self.year = year"},{"prompt":"Using the list of strings, create a new list without any vowels. strings = ['apple', 'ball', 'cat']","completion":"def remove_vowels(strings): vowels = ['a', 'e', 'i', 'o', 'u'] new_strings = [] for string in strings: new_strings.append(''.join([char for char in string if char.lower() not in vowels])) return new_strings"},{"prompt":"dentify the algorithm used for sorting a given array of 16 elements. [12, 4, 15, 7, 8, 10, 1, 11, 13, 14, 3, 6, 5, 2, 9, 16]","completion":"The algorithm used for sorting the given array of 16 elements is Quick Sort."},{"prompt":"Write a Java program to generate a schedule for students with a given set of available IDs. IDs to be scheduled [1, 2, 3]","completion":"import java.util.ArrayList; import java.util.List; public class ScheduleGenerator { public static void main(String[] args) { List<Integer> ids = new ArrayList<Integer>(); ids.add(1); ids.add(2); ids.add(3); System.out.println(generateSchedule(ids)); } public static List<Integer> generateSchedule(List<Integer> ids) { List<Integer> schedule = new ArrayList<Integer>(); for (int id : ids) { schedule.add(id); } // Add your code here to generate a customized schedule return schedule; } }"},{"prompt":"Create a data visualization in Python using the given dataset. Dataset: The data contains information about the latest coronavirus cases per US state","completion":"import pandas as pd import matplotlib.pyplot as plt # Read the dataset df = pd.read_csv('data.csv') # Create visualization fig, ax = plt.subplots(figsize=(10,8)) ax.bar(df['State'], df['Cases'], color='#88e398') plt.xlabel('States') plt.ylabel('Coronavirus Cases') plt.title('Covid-19 Cases per US State') plt.xticks(rotation=45) plt.show()"},{"prompt":"Train a machine learning algorithm from a given dataset. Dataset: The data contains information about students' results in an exam.","completion":"import pandas as pd from sklearn.model_selection import train_test_split from sklearn.linear_model import LinearRegression # Read the dataset data = pd.read_csv(\\"data.csv\\") # Split the data into features and labels X = data.drop(['result'], axis=1) y = data['result'] # Split the data into train and test sets X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=0) # Train the model model = LinearRegression() model.fit(X_train, y_train)"},{"prompt":"Create a Java class to represent a new type of vehicle called hovercar.","completion":"public class Hovercar { // Properties private String color; private int maxSpeed; private int currentSpeed; // Constructor public Hovercar(String color, int maxSpeed) { this.color = color; this.maxSpeed = maxSpeed; this.currentSpeed = 0; } // Getters and Setters public String getColor() { return color; } public void setColor(String color) { this.color = color; } public int getMaxSpeed() { return maxSpeed; } public void setMaxSpeed(int maxSpeed) { this.maxSpeed = maxSpeed; } public int getCurrentSpeed() { return currentSpeed; } public void setCurrentSpeed(int currentSpeed) { if (currentSpeed > maxSpeed || currentSpeed < 0) { this.currentSpeed = 0; } else { this.currentSpeed = currentSpeed; } } }"},{"prompt":"Encrypt a given string using a Caesar cipher. String: \\"Hello World","completion":"Encrypted string: \\"Khoor Zruog\\""},{"prompt":"Define a Java annotation for a class.","completion":"@interface MyAnnotation { String author() default \\"unknown\\"; int date(); }"},{"prompt":"Write a CSS rule to hide all elements with class \\"hidden\\".","completion":".hidden { display: none; }"},{"prompt":"Create a Javascript function to take an array of numbers and return the sum of all its elements. [1, 2, 3, 4, 5]","completion":"function sumArrayElements(arr) { let sum = 0; for (let i = 0; i < arr.length; i++) { sum += arr[i]; } return sum; }"},{"prompt":"Write a CSS rule to make all p elements have a font size of 16px.","completion":"p { font-size: 16px; }"},{"prompt":"Create a Java program to take an integer input from the user and print its factorial.","completion":"import java.util.Scanner; public class Factorial { public static void main(String[] args) { Scanner sc = new Scanner(System.in); System.out.print(\\"Enter a number: \\"); int n = sc.nextInt(); int factorial = 1; for (int i = 1; i <= n; i++) { factorial = factorial * i; } System.out.println(\\"The factorial of \\" + n + \\" is \\" + factorial); } }"},{"prompt":"w are objects instantiated in Python?","completion":"Objects are instantiated in Python by using the keyword \\"class\\". Python then creates a new instance of the class and assigns it a unique object ID. This object is then used as the basis for the object's other attributes and methods, which are defined within the class definition. Object instantiation is usually used to create objects that inherit from other classes, or that contain data that need to be initialized."},{"prompt":"What is the purpose of a join operation in a relational database?","completion":"A join operation in a relational database is used to combine data from two or more tables based on a common field. This is done to match and retrieve related data from one or multiple tables and then use it as a single result. The most common type of join is an inner join, which combines only the matching records from both tables. Other types of join operations are left join and right join, which combines all the data from a specified table and contains only the matching data from the other table."},{"prompt":"w are dictionaries implemented in Python?","completion":"Dictionaries in Python are implemented as hash tables. Each key-value pair is stored as an entry in the hash table, and a hash function is used to map the key to its corresponding index in the table. This allows fast lookups of the associated value of a given key and makes dictionary operations such as insertion, deletion, and retrieval very efficient. Furthermore, dictionaries are mutable, meaning they can be changed after they are created."},{"prompt":"mplement a PHP program to find the sum of all even numbers between 0 and 50.","completion":"<?php sum = 0; for (i = 0; i <= 50; i+=2) { sum += i; } echo \\"The sum of all even numbers from 0 to 50 is sum\\"; ?>"},{"prompt":"w is an immutable object different from a mutable object in Java?","completion":"In Java, an immutable object is an object whose state cannot be modified once it is created. An immutable object's state can still be accessed, but its properties cannot be changed. Mutable objects, on the other hand, can be modified after they are created. This is accomplished by providing methods to modify its properties. Mutable objects are generally more flexible than immutable objects, but because they can be changed, they also pose a greater risk of being used incorrectly or maliciously."},{"prompt":"Write a function in C that takes two float numbers as input and returns their average.","completion":"float average(float num1, float num2) { return (num1 + num2) / 2; }"},{"prompt":"Create a function in Python which takes in a list of numbers and returns the sum of all numbers. [1,2,3,4,5]","completion":"def list_sum(num_list): # initialize sum Sum = 0 # traverse through all numbers for num in num_list: Sum += num # return Sum return Sum # test the above code list1 = [1,2,3,4,5] print(list_sum(list1)) # Output: 15"},{"prompt":"w many elements does the following array contain? Array: [4, 6, 1, 9, 7]","completion":"5"},{"prompt":"Format the given date string using JavaScript. String: 2008-11-10","completion":"\\"November 10, 2008\\""},{"prompt":"Subtract the given list of numbers using JavaScript. List: [8, 3, 6]","completion":"-9"},{"prompt":"Create a final list of all unique elements in list_1 and list_2. list_1 = [1, 2, 3, 4, 5] list_2 = [2, 4, 6, 8, 10]","completion":"def get_unique_elements(list1, list2): unique_elements = [] for element in list1: if element not in list2: unique_elements.append(element) for element in list2: if element not in list1: unique_elements.append(element) return unique_elements list1 = [1, 2, 3, 4, 5] list2 = [2, 4, 6, 8, 10] unique_list = get_unique_elements(list1, list2) print(unique_list) # [1, 3, 5, 6, 8, 10]"},{"prompt":"Create a regular expression to select all words starting with 'a'.","completion":"b[Aa]w+b"},{"prompt":"Write a JavaScript program to compute the value obtained by concatenating the three given strings. str1 = \\"Hello \\" str2 = \\"World!\\" str3 = \\" How are you?","completion":"let str1 = \\"Hello \\"; let str2 = \\"World!\\"; let str3 = \\" How are you?\\"; const concatString = str1.concat(str2, str3); console.log(concatString); // \\"Hello World! How are you?\\""},{"prompt":"Create a SQL statement to select the five longest-serving employees.","completion":"SELECT name, length_of_service FROM employees ORDER BY length_of_service DESC LIMIT 5;"},{"prompt":"Escalate privileges in a Windows system using PowerShell.","completion":"user = New-Object System.Security.Principal.WindowsPrincipal(User) if (user.IsInRole([System.Security.Principal.WindowsBuiltInRole]::Administrator)) { Write-Host \\"You are already an Administrator\\" } else { Start-Process \\"powershell.exe\\" \\"-NoExit -Command Start-Process PowerShell.exe -Verb runAs -Args '-noprofile -noexit -file C:ScriptsMyScript.ps1'\\" }"},{"prompt":"Write a function to parse a string and return a dictionary where each character in the string is mapped to its frequency. \\"hello world","completion":"def get_frequency_map(string): frequency_map = {} # count the frequency of each character for char in string: if char in frequency_map: frequency_map[char] += 1 else: frequency_map[char] = 1 return frequency_map string = \\"hello world\\" frequency_map = get_frequency_map(string) print(frequency_map) # {'h': 1, 'e': 1, 'l': 3, 'o': 2, ' ': 1, 'w': 1, 'r': 1, 'd': 1}"},{"prompt":"Create a MySQL query to find the total number of customers from a certain country.","completion":"SELECT COUNT(*) FROM customers WHERE country = '<country name>';"},{"prompt":"Write a SQL query to find information about books in a library","completion":"SELECT Title, Price, Quantity FROM Library WHERE Type = 'Book';"},{"prompt":"Find all the elements in a Python list that correspond to a certain condition using list comprehension list = [-3, -2, -1, 0, 1, 2, 3]","completion":"[x for x in list if x >= 0]"},{"prompt":"Evaluate an expression written in reverse Polish notation 5 1 2 + 4 * + 3 -","completion":"14"},{"prompt":"Normalize a dataset of strings [ \\"New York City, NY\\", \\"Washington, D.C.\\", \\"Los Angeles, Ca\\", \\"Chicago, Il\\" ]","completion":"[ \\"New York City, NY\\", \\"Washington, DC\\", \\"Los Angeles, CA\\", \\"Chicago, IL\\" ]"},{"prompt":"Construct a tree which follows the pre-order traversal 50, 30, 10, 20, 40, 70, 60, 80","completion":"50 / 30 70 / / 10 40 60 80 / 20"},{"prompt":"Create a regular expression to determine if a word is in the form of a palindrome.","completion":"^(.)(?:(.)(?<=2))?1?"},{"prompt":"Given the following array, write a program to find the kth largest element. arr = [3, 10, 2, 6, 4], k = 2","completion":"#include <algorithm> #include <iostream> #include <vector> int main() { // Create sample array std::vector<int> arr = {3, 10, 2, 6, 4}; // Sort array std::sort(arr.begin(), arr.end()); // Get kth largest element int kth_largest = arr.end()[-2]; // second to last element std::cout << kth_largest << std::endl; return 0; }"},{"prompt":"You've been asked to create a program to determine whether a given string is a palindrome str = \\"madam","completion":"#include <iostream> #include <string> bool is_palindrome(std::string str) { int i = 0; int j = str.length() - 1; while (i < j) { if (str[i] != str[j]) return false; i++; j--; } return true; } int main() { std::string str = \\"madam\\"; if (is_palindrome(str)) std::cout << str << \\" is a palindrome\\"; else std::cout << str << \\" is not a palindrome\\"; return 0; }"},{"prompt":"Create a program that prints the vowels in a string. str = \\"Hello World!","completion":"#include <iostream> #include <string> void print_vowels(std::string str) { for (int i = 0; i < str.length(); i++) { if (str[i] =='a' || str[i] =='e' || str[i] =='i' || str[i] =='o' || str[i] =='u'||str[i] =='A' || str[i] =='E' || str[i] =='I' || str[i] =='O' || str[i] =='U') std::cout << str[i] << \\" \\" ; } std::cout << std::endl; } int main() { std::string str = \\"Hello World!\\"; print_vowels(str); return 0; }"},{"prompt":"You've been asked to edit a string by replacing all occurrences of a certain character with another character. string = \\"happy happy\\" find = \\"p\\" replace = \\"","completion":"#include <iostream> #include <string> void replace_chars(std::string& str, char find, char replace) { for (int i = 0; i < str.size(); i++) { if (str[i] == find) str[i] = replace; } } int main() { std::string str = \\"happy happy\\"; char find = 'p'; char replace = 's'; replace_chars(str, find, replace); std::cout << str; return 0; }"},{"prompt":"dentify three expressions that are valid in JavaScript.","completion":"1. 5 + 5 2. document.write(\\"Hello World!\\") 3. function greet(){ console.log(\\"Hello World!\\") }"},{"prompt":"Given the parameter 'word', what JavaScript code should be written to check whether it is a palindrome or not?","completion":"function isPalindrome(word) { let revWord = word.split('').reverse().join(''); return word == revWord; }"},{"prompt":"Write Python code to store odd numbers from the given list in a separate list. list = [1, 2, 3, 4, 5, 6, 7]","completion":"odds = [] for num in list: if num % 2 != 0: odds.append(num)"},{"prompt":"Write a SQL statement to update the 'salary' of an employee with the id value of '100' by 100.","completion":"UPDATE employees SET salary = salary + 100 WHERE id = 100;"},{"prompt":"Modify the given code snippet to add a new entry in the users table of a MySQL database. conn = mysql.connector.connect( host=\\"localhost\\", user=\\"root\\", passwd=\\"12345\\" database=\\"test\\" )","completion":"conn = mysql.connector.connect( host=\\"localhost\\", user=\\"root\\", passwd=\\"12345\\" database=\\"test\\" ) cursor = conn.cursor() cursor.execute(\\"INSERT INTO users(name, email, age) VALUES('John Doe', 'johndoe@example.com', 28)\\") conn.commit()"},{"prompt":"What HTML code is needed to print each item in the following list? list = [\\"apple\\", \\"banana\\", \\"cherry\\"]","completion":"<ul> <li>apple</li> <li>banana</li> <li>cherry</li> </ul>"},{"prompt":"Construct a SQL query to count the number of employees with the same 'state' value in the employees table.","completion":"SELECT state, COUNT(*) FROM employees GROUP BY state;"},{"prompt":"What code should be written to generate a random string with 10 characters in JavaScript?","completion":"function randomString() { let characters = \\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\\"; let string = \\"\\"; for (let i = 0; i < 10; i++) { string += characters.charAt(Math.floor(Math.random() * characters.length)); } return string; }"},{"prompt":"Rewrite the given Python code snippet using list comprehensions . even_list = [] for x in my_list: if x % 2 == 0: even_list.append(x)","completion":"even_list = [x for x in my_list if x % 2 == 0]"},{"prompt":"What code should be used to generate 5 random numbers in Java?","completion":"Random random = new Random(); int[] numbers = new int[5]; for(int i = 0; i < 5; i++) { numbers[i] = random.nextInt(); }"},{"prompt":"Edit the following HTML code to add an attribute and its value <div class=\\"container\\"> <h1>Welcome!</h1> </div>","completion":"<div class=\\"container\\" id=\\"welcome\\"> <h1>Welcome!</h1> </div>"},{"prompt":"Write a callback function for the following requirements This callback should be able to store the input emit it when triggered","completion":"def store_and_emit(data): stored_data = data def emit_stored_data(): return stored_data return emit_stored_data"},{"prompt":"Create a C# method to find the third common element in two arrays arr1: [8, 15, 20, 7, 2] arr2: [5, 6, 7, 9, 8]","completion":"public int FindCommonElement(int[] arr1, int[] arr2) { HashSet<int> set = new HashSet<int>(); foreach (int item in arr1) { set.Add(item); } List<int> commons = new List<int>(); foreach (int item in arr2) { if (set.Contains(item)) commons.Add(item); } return commons.Count >= 3 ? commons[2] : -1; }"},{"prompt":"Explain the effect of using recursion as a programming technique","completion":"Recursion is a programming technique that allows a function to call itself repeatedly until a certain condition is met. This allows for a clear solution to problems that involve repeated cycles of steps in their execution. Recursion also helps to solve complex problems by breaking them down into simpler sub-problems which can then be more easily solved. By effectively breaking a problem down into simpler sub-problems, the result is often a much more efficient and elegant implementation of a solution than an iterative approach. Recursion helps to reduce the complexity of code, making it easier to read, debug and maintain."},{"prompt":"Assign a value to \`name\` by using the ternary operator let name;","completion":"name = condition ? value1 : value2;"},{"prompt":"Suggest a few input parameters for a Machine Learning model","completion":"Some potential input parameters for a Machine Learning model include numeric features, categorical features, text features, external features, and data derived from benchmark datasets."},{"prompt":"Suggest an API endpoint for a user profile","completion":"A possible API endpoint for a user profile could be \`GET /users/:id\` which returns the profile information associated with the given user ID."},{"prompt":"Edit the code to correctly define the type of \`age\` const age;","completion":"const age: number;"},{"prompt":"Create a new Python class called Area to calculate the area of different shapes.","completion":"class Area: def __init__(self): pass def calculate_area_rectangle(self, length, width): return length * width def calculate_area_triangle(self, base, height): return 0.5 * base * height def calculate_area_circle(self, radius): return 3.14 * radius**2"},{"prompt":"Extract the phone numbers from a string of text text = \\"My number is (202) 555-0123 and my friend's number is (703) 555-9876","completion":"import re def extract_phone_numbers(text): phones = re.findall(\\"(d{3}) d{3}-d{4}\\",text) return phones print(extract_phone_numbers(text)) # Output ['(202) 555-0123', '(703) 555-9876']"},{"prompt":"mplement a in-order traversal of a binary tree in Python.","completion":"class Node: def __init__(self, data): self.data = data self.left = None self.right = None def inOrderTraversal(root): if root is not None: inOrderTraversal(root.left) print(root.data) inOrderTraversal(root.right) root = Node(1) root.left = Node(7) root.right = Node(9) root.left.left = Node(4) root.left.right = Node(8) inOrderTraversal(root) # Output 4 7 1 8 9"},{"prompt":"Create a function to generate the weight of a given sequence of DNA DNA = \\"GTCATCTGAG","completion":"def generate_DNA_weight(DNA): # Initialize the weights dict weights = { \\"G\\": 57.02, \\"A\\": 71.04, \\"T\\": 89.09, \\"C\\": 103.01 } # Calculate the weight weight = 0.0 for character in DNA: weight += weights[character] return weight # Output generate_DNA_weight(DNA) # Output 698.22"},{"prompt":"Find the minimum number of coins required to make a given amount amount = 93","completion":"def min_coins(amount): # list of coin denominations coins = [1, 5, 10, 25] min_coins = 0 i = len(coins) - 1 while(amount > 0): if (amount >= coins[i]): amount -= coins[i] min_coins += 1 else: i -= 1 return min_coins # Output min_coins(amount) # Output 7"},{"prompt":"Create a shell script for printing Hello World.","completion":"#!/bin/sh echo \\"Hello World!\\""},{"prompt":"Write a C code snippet to check if an input number is prime or not. The number is 17","completion":"#include <stdio.h> int isPrime(int n) { if (n <= 1) return 0; for (int i = 2; i < n; i++) if (n % i == 0) return 0; return 1; } int main() { int n; printf(\\"Enter an integer: \\"); scanf(\\"%d\\", &n); if (isPrime(n)) printf(\\"%d is a prime number.n\\", n); else printf(\\"%d is not a prime number.n\\", n); return 0; }"},{"prompt":"Write a JavaScript function to display the message \\"Hello World!\\".","completion":"function showMessage() { console.log('Hello World!'); }"},{"prompt":"Construct a JSON object with the given parameters and return the object. Name=John Age=25","completion":"const obj = {Name: 'John', Age: 25}; return obj;"},{"prompt":"Construct a for loop to access each element of the given array. [1, 2, 3, 4]","completion":"arr = [1, 2, 3, 4] for i in range(len(arr)): print(arr[i])"},{"prompt":"Modify the code below to check if the number is divisible by 2. num = 8","completion":"num = 8 if num % 2 == 0: print('The number is divisible by 2.')"},{"prompt":"Create an algorithm to check if a binary tree is univalued.","completion":"\\"\\"\\" def isUnivalTree(root): is_uni = True if root is None: return is_uni else: val = root.val if root.left: is_uni &= root.left.val == val if root.right: is_uni &= root.right.val == val is_uni &= isUnivalTree(root.left) is_uni &= isUnivalTree(root.right) return is_uni \\"\\"\\""},{"prompt":"Design an algorithm for finding the nth node from the tail of a linked list.","completion":"\\"\\"\\" def nthFromLast(head, n): # Initialize slow and fast pointers slow = head fast = head # Move fast pointer n-1 times while (n > 0): if (fast == None): return None fast = fast.next n = n - 1 # Move both slow and fast pointer together while (fast.next != None): slow = slow.next fast = fast.next return slow \\"\\"\\""},{"prompt":"Create a class in Python named 'Rectangle' which can compute the area of a rectangle.","completion":"class Rectangle: def __init__(self, width, height): self.width = width self.height = height def get_area(self): return self.width * self.height"},{"prompt":"Design an algorithm to check if a string contains a given substring.","completion":"\\"\\"\\" def isSubstring(string, sub): l1 = len(string) l2 = len(sub) if l2> l1: return False # Sliding window approach for i in range(l1): if string[i:i+l2] == sub : return True return False \\"\\"\\""},{"prompt":"Suppose we have a dictionary with keys (1,2,3). Create a function to return the values of the dictionary. d = {1: \\"one\\", 2: \\"two\\", 3: \\"three\\"}","completion":"def get_values(d): return list(d.values())"},{"prompt":"Write a function that exchanges the first and last elements of a list.","completion":"def exchange_first_last(lst): first_item = lst[0] last_item = lst[-1] lst[0] = last_item lst[-1] = first_item return lst"},{"prompt":"Reverse a given list without using any predefined functions.","completion":"def reverse_list(lst): n = len(lst) for i in range(n // 2): lst[i], lst[n-i-1] = lst[n-i-1], lst[i] return lst"},{"prompt":"Suggest a valid Python code to add two numbers","completion":"def add_two_numbers(a, b): return a + b"},{"prompt":"Generate an algorithm to multiply two numbers without using multiplication operator","completion":"def multiply_without_operator(a, b): # If either a or b = 0, return 0 if (a == 0 or b == 0): return 0 # Initialize result result = 0 # Add a, b number of times for i in range(min(a, b)): result = result + max(a, b) # Return the multiplication result return result"},{"prompt":"Suggest a valid Python code to print unique characters of a given string","completion":"def print_unique(s): output = set() for char in s: if char not in output: output.add(char) print(char)"},{"prompt":"Create a regex pattern that can match the pattern \\"www.somedomain.com/posts/[post_id]\\".","completion":"^www.somedomain.com/posts/d+"},{"prompt":"Parse a JSON response into a Python dictionary. { \\"name\\": \\"John Doe\\", \\"age\\": \\"35\\" }","completion":"import json def parse_json(json_data): data = json.loads(json_data) return data if __name__ == '__main__': json_data = '{\\"name\\": \\"John Doe\\", \\"age\\": \\"35\\"}' print(parse_json(json_data))"},{"prompt":"w can you define a list of elements in JavaScript?","completion":"In JavaScript, lists of elements can be defined using an array. An array is a data structure that stores a set of elements of the same type. The elements of an array can be accessed by their index. Example: var myList = ['item1', 'item2', 'item3'];"},{"prompt":"Create a CSS class called \\"button\\" to style a button","completion":".button { display: inline-block; padding: 0.5rem; font-size: 1rem; background-color: #1e85e7; color: #fff; border-radius: 0.25rem; border: 0; cursor: pointer; }"},{"prompt":"Fix the following Python code to create a dictionary. dic = {“min”, 10, “max”, 20}","completion":"dic = {\\"min\\": 10, \\"max\\": 20}"},{"prompt":"Generate a dictionary with the key-value pairs {1:1, 2:4, 3:9, 4:16}","completion":"def generate_dict(): \\"\\"\\"Generate a dictionary with the key-value pairs {1:1, 2:4, 3:9, 4:16}\\"\\"\\" my_dict = {} for i in range(1, 5): my_dict[i] = i**2 return my_dict generate_dict() # Outputs {1:1, 2:4, 3:9, 4: 16}"},{"prompt":"Remove the duplicates from the list without using built-in methods. [1, 2, 1, 2, 3, 2, 4, 2]","completion":"def remove_duplicates(arr): \\"\\"\\"Remove the duplicates from the list without using built-in methods.\\"\\"\\" # Initialize empty list new_list = [] # Iterate through array for num in arr: # Check if element is not in list if num not in new_list: # Add element to list new_list.append(num) return new_list remove_duplicates([1, 2, 1, 2, 3, 2, 4, 2]) # Outputs [1, 2, 3, 4]"},{"prompt":"Sort the list in reverse order using insertion sort. [4, 2, 0, 6, 1, 7, 3]","completion":"def insertion_sort_reverse(arr): \\"\\"\\" Sort the list in reverse order using insertion sort. \\"\\"\\" # Iterate over the list for i in range(1, len(arr)): current_value = arr[i] # Keep track of position position = i # Iterate over the sorted part of the list while position > 0 and arr[position - 1] < current_value: # Shift one place to the right arr[position] = arr[position - 1] # Move position back position = position - 1 # Insert current value at the position arr[position] = current_value return arr insertion_sort_reverse([4, 2, 0, 6, 1, 7, 3]) # Outputs[7, 6, 4, 3, 2, 1, 0]"},{"prompt":"Write a code to convert a given date string into a timestamp. date_string = \\"2020-07-24 14:50:00","completion":"import datetime def convert_to_timestamp(date_string): \\"\\"\\"Write a code to convert a given date string into a timestamp.\\"\\"\\" date_object = datetime.datetime.strptime(date_string, '%Y-%m-%d %H:%M:%S') timestamp = datetime.datetime.timestamp(date_object) return timestamp convert_to_timestamp(\\"2020-07-24 14:50:00\\") # Outputs 1595538200.0"},{"prompt":"Create a regular expression which will match numbers divisible by 3.","completion":"import re pattern = r\\"^[0-9]*(3|6|9)\\" re.match(pattern, \\"6\\") # Outputs <re.Match object; span=(0, 1), match='6'>"},{"prompt":"Multiply each element in the given array by 3 and return the new array. [1, 2, 3]","completion":"def multiply_by_3(arr): \\"\\"\\"Multiply each element in the given array by 3 and return the new array.\\"\\"\\" # Initialize empty array new_arr = [] # Iterate over the array for num in arr: # Multiply by 3 num *= 3 # Append to new array new_arr.append(num) return new_arr multiply_by_3([1, 2, 3]) # Outputs [3, 6, 9]"},{"prompt":"the given string, split the words and remove empty strings. string = \\" Hello World","completion":"def split_and_remove(string): \\"\\"\\"In the given string, split the words and remove empty strings.\\"\\"\\" # Split the string by spaces arr = string.split(' ') # Initialize empty list new_arr = [] # Iterate over array for word in arr: # Check if not empty if word != '': # Append to list new_arr.append(word) return new_arr split_and_remove(' Hello World ') # Outputs ['Hello', 'World']"},{"prompt":"Create a dictionary containing the characters from the given string as keys and their frequency in the string as values. string = 'google'","completion":"def create_frequency_dict(string): \\"\\"\\"Create a dictionary containing the characters from the given string as keys and their frequency in the string as values.\\"\\"\\" # Initialize empty dictionary freq_dict = {} # Iterate over the string for char in string: # Check if char is in dictionary if char in freq_dict: # Increase its frequency freq_dict[char] += 1 else: # Add to dictionary freq_dict[char] = 1 return freq_dict create_frequency_dict('google') # Outputs {'g': 2, 'o': 2, 'l': 1, 'e': 1}"},{"prompt":"Write a query to sort a table data by their names in alphabetical order.","completion":"SELECT * FROM table ORDER BY name ASC;"},{"prompt":"Write a JavaScript loop to print out all the values of an array. arr = [1, 2, 3, 4, 5]","completion":"for (let i = 0; i < arr.length; i++) { console.log(arr[i]); }"},{"prompt":"Give a function to get an array of n-dimensional vectors.","completion":"def get_n_dimensional_vectors(n): vectors = [[0 for x in range(n)] for x in range(len(arr))] for vector in vectors: for i in range(n): vector[i] = arr[i] return vectors"},{"prompt":"w can you convert a number from one base to another?","completion":"def convert_base(num, from_base, to_base): if isinstance(num, str): n = int(num, from_base) else: n = int(num) alphabet = \\"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ\\" if n < to_base: return alphabet[(n)] else: return convert_base(n // to_base, from_base, to_base) + alphabet[n % to_base]"},{"prompt":"Answer this logic programming question: What is the transitive closure of the binary relation \\"less than\\" on the set of integers?","completion":"The transitive closure of the 'less than' relation on the set of integers is defined as: if (x,y) belongs to the set of integers, then for all n, x < n and n < y implies x < y."},{"prompt":"Write a function in Python which takes an array of integers and returns a list of all distinct pairs whose sum is equal to a given value. arr = [1, 2, 3, 4, 5] value = 7","completion":"def pairs_with_sum(arr, value): pairs = [] for i in range(len(arr)-1): for j in range(i+1, len(arr)): if (arr[i] + arr[j] == value): pairs.append((arr[i], arr[j])) return pairs"},{"prompt":"Use the following HTML to create an unordered list. <ul><li>First item</li> <li>Second item</li> <li>Third item</li></ul>","completion":"<ul> <li>First item</li> <li>Second item</li> <li>Third item</li> </ul>"},{"prompt":"Write a procedure in SQL that takes two tables as parameters and returns the intersection of the two. table1, table2","completion":"CREATE PROCEDURE intersection(table1 VARCHAR(255), table2 VARCHAR(255)) BEGIN SELECT * FROM table1 WHERE EXISTS (SELECT * FROM table2 WHERE table1.columnName = table2.columnName); END;"},{"prompt":"Use the following JSON data to output information about all the users in the array. [ { \\"name\\": \\"Peter\\", \\"age\\": 25 }, { \\"name\\": \\"Theresa\\", \\"age\\": 30 }, { \\"name\\": \\"John\\", \\"age\\": 22 } ]","completion":"import json users = [ { \\"name\\": \\"Peter\\", \\"age\\": 25 }, { \\"name\\": \\"Theresa\\", \\"age\\": 30 }, { \\"name\\": \\"John\\", \\"age\\": 22 } ] for user in users: print(\\"Name: \\"+ user[\\"name\\"] + \\", Age: \\" + str(user[\\"age\\"]))"},{"prompt":"Create an object in JavaScript that contains two methods. The first method takes two parameters and returns the sum of the two numbers, and the second method takes two parameters and returns the product of the two numbers.","completion":"const calculator = { sum: function(a, b){ return a + b; }, product: function(a, b){ return a * b; } };"},{"prompt":"Use the Pandas library to find the mean rental price for a property in a particular city in the US. The property is located in Miami, Florida.","completion":"\\"\\"\\" Find the mean rental price for a property in Miami, Florida using the Pandas library. \\"\\"\\" import pandas as pd # read the dataset df = pd.read_csv('data.csv') # filter the data by city df_miami = df[df['city'] == 'Miami, Florida'] # calculate the mean rental price mean_price = df_miami['rental_price'].mean() # print the result print(f'The mean rental price in Miami, Florida is {mean_price:.2f}')"},{"prompt":"w would you find the maximum depth of a tree data structure?","completion":"One way to find the maximum depth of a tree data structure is to start at the root node and then recursively traverse down each branch, keeping track of the maximum depth. This is known as a depth-first search and can be implemented using a recursive algorithm. Alternatively, the maximum depth can also be found using a breadth-first search, where the tree is traversed level-by-level."},{"prompt":"Create a Python function which takes in a list and returns the length of the longest common subsequence of consecutive elements in the list. [1, 3, 5, 8, 9, 10, 11, 15]","completion":"\\"\\"\\" Create a Python function which takes in a list and returns the length of the longest common subsequence of consecutive elements. \\"\\"\\" def long_consec_sequence(lst): if not lst: return 0 # initialize the size of the longest subsequence max_seq_len = 0 # iterate through the list for i in range(len(lst)-1) : # create a new sequence curr_seq = 1 j = i+1 while (j < len(lst)): if (lst[j] - lst[j-1]) == 1 : curr_seq += 1 else: break j += 1 # update the length of the maximum subsequence if curr_seq > max_seq_len: max_seq_len = curr_seq # return the length of the maximum consecutive subsequence return max_seq_len if __name__ == '__main__': lst = [1, 3, 5, 8, 9, 10, 11, 15] print(long_consec_sequence(lst)) # Output: 4"},{"prompt":"Create a function to check whether a number is a prime number using the Sieve of Eratosthenes algorithm.","completion":"\\"\\"\\" Create a function to check whether a number is a prime number using the Sieve of Eratosthenes algorithm. \\"\\"\\" def is_prime(n): if n <= 1: return False # create a list of all numbers from 0 to n nums = [True for _ in range(n + 1)] p = 2 while (p * p <= n): # If prime[p] is not changed, it is a prime if nums[p] is True: # Update all multiples of p for i in range(p * 2, n + 1, p): nums[i] = False p += 1 return nums[n] if __name__ == '__main__': n = 37 print(is_prime(n)) # Output: True"},{"prompt":"w would you reverse a singly linked list without using any additional data structures?","completion":"One way to reverse a singly linked list without using any additional data structures is to iterate through the linked list, while keeping track of the current node's predecessor and successor. At each iteration, store the predecessor and successor, remove the link from the predecessor to the current node,and link the current node to the predecessor. Once all the nodes have been iterated through, the predecessor of the head node should be connected to the tail node."},{"prompt":"Edit the code given below to make it print the numbers from 1 to 10 in increasing order. for i in range(10): print(i)","completion":"for i in range(1, 11): print(i)"},{"prompt":"Write a code to generate a random 7 digit phone number.","completion":"\\"\\"\\" Write a code to generate a random 7 digit phone number. \\"\\"\\" import random def generate_random_phone_number(): # create a list of digits lst = [str(i) for i in range(10)] # randomly select one digit random.shuffle(lst) # generate a 7-digit phone number phone_number = ''.join(lst[:7]) return phone_number if __name__ == '__main__': print(generate_random_phone_number()) # Output: e.g. 8247036"},{"prompt":"Given a dictionary of words and a set of characters, how would you find the longest word which can be constructed from the given set of characters?","completion":"One way to find the longest word which can be constructed from a set of characters is by using a trie data structure. To do this, first create the trie from the given dictionary of words, then traverse it to look for the longest word which can be constructed from the given set of characters. At each node, check if the character at the current node is present in the given set, and if yes, traverse down. If no, then backtrack until a valid character is found."},{"prompt":"Parse the given string and return a dictionary with the keys and corresponding values. s = \\"name seth age 30 occupation manager","completion":"d = {'name': 'seth', 'age': '30', 'occupation': 'manager'}"},{"prompt":"Convert a sentence into a list of words using the provided function. str = \\"This is a sentence.","completion":"res = list_of_words(str) res = ['This', 'is', 'a', 'sentence.']"},{"prompt":"Create a loop that prints out the even numbers from the given list. lst = [1, 2, 3, 4, 5]","completion":"for i in lst: if i % 2 == 0: print(i)"},{"prompt":"Convert this regex expression from python to java syntax. pattern = r\\"[A-Za-z0-9_]+","completion":"String pattern = \\"[A-Za-z0-9_]+\\";"},{"prompt":"Generate a list of length n containing all numbers from 1 to n.","completion":"def gen_list(n): list = [] for i in range(1, n+1): list.append(i) return list"},{"prompt":"Using an existing function, update the given array of numbers to contain elements which are the square of each original element. array = [1,2,3,4,5]","completion":"array = list(map(lambda x: x**2, array))"},{"prompt":"Print all permutations of an input array. array = [1,2,3]","completion":"def permutations(array): if len(array) == 0: return if len(array) == 1: return [array] perms = [] for i in range(len(array)): elem = array[i] rem_perms = permutations(array[:i] + array[i+1:]) for perm in rem_perms: perms.append([elem] + perm) return perms"},{"prompt":"Convert a given string into Pig Latin. string = \\"Hello","completion":"def pig_latin(string): vowels = \\"aeiou\\" if string[0].lower() in vowels: return string+\\"way\\" else: return string[1:]+string[0]+\\"ay\\""},{"prompt":"Construct a for loop in Python to output the numbers from 1 to 5.","completion":"for i in range(1,6): print(i)"},{"prompt":"Create a class in Python called Math that can calculate the average of two numbers.","completion":"class Math: def __init__(self, x, y): self.x = x self.y = y def average(self): return (self.x + self.y) / 2"},{"prompt":"Compare and contrast the difference between static and instance variables.","completion":"Static variables are associated with a class and are shared by all the objects of that class; in other words, they are class-level variables. Instance variables are associated with each object and their values can be different for each object. Static variables exist throughout the execution of the program and do not require instance of the class to exist. On the other hand, instance variables are created and destroyed as the instance of the class is created and destroyed."},{"prompt":"Write a SELECT statement in SQL that retrieves all rows from the table \\"employees\\".","completion":"SELECT * FROM employees;"},{"prompt":"Describe how language models can be used in natural language processing.","completion":"Language models are used in natural language processing to enable machines to understand and generate natural language. Language models assign a probability to a sequence of natural language words to improve the accuracy of predictions in language processing tasks. They are used for automatic speech recognition, machine translation, text summarization, essay grading, and natural language understanding."},{"prompt":"What is a Python tuple?","completion":"A Python tuple is an immutable sequence of objects which is ordered and indexed. Tuples are usually used to store collections of data that are related, but may be of different data types. Tuples are used instead of lists because they are more memory efficient and can be used as elements of sets and as keys in dictionaries."},{"prompt":"Write an IF ELSE statement in Python to print either \\"Number is even\\" or \\"Number is odd\\" depending on the number input.","completion":"if (num % 2 == 0): print(\\"Number is even\\") else: print(\\"Number is odd\\")"},{"prompt":"Create a Ruby method to print a triangle of stars with a given height.","completion":"def print_triangle_of_stars(height) (1..height).each do |row| (1..row).each do print \\"*\\" end print \\"n\\" end end"},{"prompt":"Compose a SQL query that returns the total number of employees for each department in a given company.","completion":"SELECT d.DepartmentName, COUNT(e.DepartmentId) AS TotalEmployees FROM Departments d INNER JOIN Employees e ON d.DepartmentId = e.DepartmentId GROUP BY d.DepartmentName"},{"prompt":"Create a React component that displays the current day of the week and date.","completion":"import React from \\"react\\"; const Date = () => { const today = new Date(); const currentDay = today.getDay(); const dayList = [\\"Sunday\\", \\"Monday\\", \\"Tuesday\\", \\"Wednesday\\", \\"Thursday\\", \\"Friday\\", \\"Saturday\\"]; return ( <div> {dayList[currentDay]}, {today.getFullYear()}/{today.getMonth()+1}/{today.getDate()} </div> ); }; export default Date;"},{"prompt":"Create an R function that plots a histogram of a given data set.","completion":"plot_histogram <- function(data) { hist(data, main = \\"Histogram of given data set\\") }"},{"prompt":"design a functions which removes the duplicate elements from a list","completion":"def remove_duplicates(x): res = [] for i in x: if i not in res: res.append(i) return res"},{"prompt":"pdate the function to return the length of 5 def return_length(): return 0","completion":"def return_length(): return 5"},{"prompt":"print the values of a dictionary in first-in, first-out order my_dict = { 'a': 1, 'b': 2, 'c': 3 }","completion":"def print_dict(d): queue = [key for key in d.keys()] while len(queue) > 0: key = queue.pop(0) print(d[key]) if __name__ == '__main__': my_dict = { 'a': 1, 'b': 2, 'c': 3 } print_dict(my_dict)"},{"prompt":"dentify if the given number is prime n = 13","completion":"def is_prime(n): for i in range(2, n): if n % i == 0: return False return True if __name__ == '__main__': n = 13 print(\\"Is {} prime? {}\\".format(n, is_prime(n)))"},{"prompt":"Write a postfix expression to an infix expression 3 4 + 5 *","completion":"def postfix_to_infix(expression): stack = [] for c in expression.split(): if c in \\"+-*/\\": operand1 = stack.pop() operand2 = stack.pop() stack.append(\\"({} {} {})\\".format(operand2, c, operand1)) else: stack.append(c) return stack[0] if __name__ == '__main__': expression = '3 4 + 5 *' print(postfix_to_infix(expression))"},{"prompt":"Create a HTML form for inputting student data.","completion":"<form> <label>Name: </label><input type=\\"text\\" name=\\"name\\"><br> <label>Age: </label><input type=\\"number\\" name=\\"age\\"><br> <label>Gender: </label><input type=\\"text\\" name=\\"gender\\"><br> <label>Address: </label><input type=\\"text\\" name=\\"address\\"><br> <input type=\\"submit\\" value=\\"Submit\\"> </form>"},{"prompt":"Create a JavaScript function that can convert miles to kilometers.","completion":"function convertMilesToKilometers(miles) { return miles * 1.60934; }"},{"prompt":"Determine if a number is even or odd using JavaScript. n = 7","completion":"if(n % 2 == 0) { console.log(\\"Number is even!\\"); } else { console.log(\\"Number is odd!\\"); }"},{"prompt":"Create a HTML table to present student information.","completion":"<table> <tr> <td>Name</td><td>Age</td><td>Gender</td><td>Address</td> </tr> <tr> <td>John Doe</td><td>24</td><td>Male</td><td>123 Main Street</td> </tr> </table>"},{"prompt":"Parse this JSON string and print the value of the \\"name\\" field. json_string = '{\\"name\\":\\"John\\", \\"age\\":25}'","completion":"import json data = json.loads(json_string) print(data['name'])"},{"prompt":"Make changes to this code to fix the bug. def example_function(a, b): c = 0 for i in range(a, b+1): c -= i return c","completion":"def example_function(a, b): c = 0 for i in range(a, b+1): c += i return c"},{"prompt":"Convert this string from snake_case to CamelCase. snake_case_string = \\"example_string","completion":"camelCaseString = ''.join(x.capitalize() or '_' for x in snake_case_string.split('_'))"},{"prompt":"Add this method to the Person class. class Person: def __init__(self, name, age): self.name = name self.age = age","completion":"class Person: def __init__(self, name, age): self.name = name self.age = age def intro(self): print(\\"Hi, my name is %s and I am %d years old.\\" % (self.name, self.age))"},{"prompt":"Create a list comprehension in Python to double each element in the list. list = [1, 2, 3, 4, 5]","completion":"result = [x*2 for x in list]"},{"prompt":"Find the first 10 numbers that are divisible by 4 and 7","completion":"numbers = [] num = 0 while len(numbers) < 10: num += 1 if (num % 4 == 0) and (num % 7 == 0): numbers.append(num) print(numbers)"},{"prompt":"Create a Java program to print out factorials from 1 to 10.","completion":"public class Factorial { public static void main(String[] args) { for (int i = 1; i <= 10; ++i) { System.out.println(i + \\"! = \\" + factorial(i)); } } public static long factorial(int n) { if (n == 0) return 1; else return n * factorial(n - 1); } }"},{"prompt":"Design a data structure to store user information such as username, password, date of birth and email address.","completion":"The information can be stored in a user class using the following structure: class User { string username; string password; string dateOfBirth; string emailAddress; } The information can then be accessed and modified using getter and setter methods."},{"prompt":"Simulate a coin toss in Python and get the results in a list.","completion":"import random results = [] for i in range(10): if random.random() < 0.5: results.append('heads') else: results.append('tails') print(results)"},{"prompt":"Create a MySQL query to select the top 5 customers with the highest total spending in the last 12 months.","completion":"SELECT customer_id, SUM(cost) AS total_spending FROM orders WHERE order_date >= CURDATE() - INTERVAL 12 MONTH GROUP BY customer_id ORDER BY total_spending DESC LIMIT 5"},{"prompt":"Design a function to convert Fahrenheit to Celsius in Python.","completion":"def fahrenheit_to_celsius(f): celsius = (f - 32) * 5/9 return celsius"},{"prompt":"Scale a vector of 10 numbers from 0 to 10. [2.5, 3.5, 5.5, 7.5, 1.5, 8.5, 0.5, 4.5, 6.5, 9.5]","completion":"def scale(vector): scaled_vector = [] for i in vector: scaled_vector.append(i/10*10) return scaled_vector"},{"prompt":"Create a loop to traverse through a tree using depth-first search.","completion":"def traverse_tree(node): print(node.data) if node.left: traverse_tree(node.left) if node.right: traverse_tree(node.right)"},{"prompt":"Edit the vector below such that all elements are greater than five. [1, 5, 3, 7, 6, 4]","completion":"def edit_vec(vec): for i in range(len(vec)): if vec[i] <= 5: vec[i] = 5 return vec"},{"prompt":"Transform the following function definition so it can be used for all type of data def calculate(int a, int b)","completion":"def calculate(a, b): \\"\\"\\"This function can be used to calculate the result of two parameters regardless of their type (int, float, etc)\\"\\"\\" return a + b"},{"prompt":"Capitalize all the words in a string hello world","completion":"Hello World"},{"prompt":"Write a JavaScript function which will return the longest palindrome string from a given strinb \\"abacdaaadccb","completion":"function longestPalindrome(str) { let longest = \\"\\"; for (let i = 0; i < str.length; i++) { let temp = helper(str, i, i); if (temp.length > longest.length) { longest = temp; } temp = helper(str, i, i + 1); if (temp.length > longest.length) { longest = temp; } } return longest; } function helper(str, left, right) { while (left >= 0 && right < str.length && str[left] === str[right]) { left--; right++; } return str.substring(left + 1, right); }"},{"prompt":"Create a new dictionary using the values of two given dictionaries d1 = {1:10, 2:20} d2 = {3:30, 4:40}","completion":"d3 = {**d1, **d2}"},{"prompt":"Convert the given Python code to Java def foo(a, b): return a*b","completion":"public int foo(int a, int b) { return a * b; }"},{"prompt":"Generate a data set using RandomSample()","completion":"from random import Random def RandomSample(number_of_samples): sample = [] random_generator = Random() for i in range(number_of_samples): sample.append(random_generator.random()) return sample"},{"prompt":"Rearrange the code to print the hierarchy of students in a Python class students = [ { \\"name\\": \\"John Smith\\", \\"role\\": \\"student\\" }, { \\"name\\": \\"Alice Johnson\\", \\"role\\": \\"student\\" }, { \\"name\\": \\"Bob Williams\\", \\"role\\": \\"teacher\\" }, { \\"name\\": \\"Cecilia Brown\\", \\"role\\": \\"teacher\\" } ]","completion":"students = [ { \\"name\\": \\"John Smith\\", \\"role\\": \\"student\\" }, { \\"name\\": \\"Alice Johnson\\", \\"role\\": \\"student\\" }, { \\"name\\": \\"Bob Williams\\", \\"role\\": \\"teacher\\" }, { \\"name\\": \\"Cecilia Brown\\", \\"role\\": \\"teacher\\" } ] teachers = [] students_list = [] for student in students: if student[\\"role\\"] == \\"teacher\\": teachers.append(student) else: students_list.append(student) print(\\"Teachers:\\") for teacher in teachers: print(teacher[\\"name\\"]) print(\\"Students:\\") for student in students_list: print(student[\\"name\\"])"},{"prompt":"Reverse the order of the following list: [\\"Apple\\", \\"Banana\\", \\"Cherry\\"] [\\"Apple\\", \\"Banana\\", \\"Cherry\\"]","completion":"[\\"Cherry\\", \\"Banana\\", \\"Apple\\"]"},{"prompt":"Find the sum of all the prime numbers between 45 and 65.","completion":"The sum of all the prime numbers between 45 and 65 is 458."},{"prompt":"Generate an array of all the multiples of 5 that are less than 40.","completion":"[5, 10, 15, 20, 25, 30, 35]"},{"prompt":"Write a regular expression to search for the pattern \\"carrot\\" in a given string.","completion":"The regular expression to search for \\"carrot\\" in a given string is /carrot/."},{"prompt":"Create a program that takes two strings as arguments and returns true if the two strings contain the same characters.","completion":"def same_characters(str1, str2): return sorted(str1) == sorted(str2)"},{"prompt":"Using regex, search for all occurrences of the substring \\"cat\\" in the following string: The dog ran away, but the cat stayed","completion":"The regular expression to search for all occurrences of the substring \\"cat\\" in the string is /bcatb/g."},{"prompt":"Which basic data type is represented by the following JSON? {\\"name\\": \\"John\\", \\"age\\": 30}","completion":"The JSON given represents a basic object data type."},{"prompt":"Create a script that takes an input variable k, and prints out \\"k is true\\" if k is true, and \\"k is false\\" if k is false. k = 2 < 5","completion":"if [ k = true ]; then echo \\"k is true\\" else echo \\"k is false\\" fi"},{"prompt":"Write a method to return the sum of two integers a and b. a = 2, b = 8.","completion":"int add(int a, int b) { return a + b; }"},{"prompt":"Create an array of integers in Swift with length 5​.","completion":"var array = [Int](repeatElement(0, count: 5))"},{"prompt":"Write a SQL query that prints the names of all the people with a salary greater than 60000. SELECT name FROM people WHERE salary > 60000","completion":"SELECT name FROM People WHERE salary > 60000;"},{"prompt":"Modify the following code to print out \\"The result is 30\\". int a = 10 int b = 20 Console.WriteLine(\\"The result is \\" + a + b)","completion":"int a = 10; int b = 20; Console.WriteLine(\\"The result is \\" + (a + b).ToString());"},{"prompt":"Create an SQL query that returns the names of all the people born in the year 1990. SELECT name FROM People WHERE yearOfBirth = 1990","completion":"SELECT name FROM People WHERE yearOfBirth = 1990;"},{"prompt":"Calculate the value of 3^4 using Java code.","completion":"int result = (int)Math.pow(3, 4);"},{"prompt":"Create a class to store the number, its square and its cube.","completion":"class Number: def __init__(self, number): self.number = number self.square = number * number self.cube = number * number * number"},{"prompt":"Make a program that takes in a non-empty string and finds its longest palindrome.","completion":"def longest_palindrome(text): longest_palindrome = \\"\\" for i in range(len(text)): for j in range(len(text), i, -1): substring = text[i:j] if substring == substring[::-1] and len(substring) > len(longest_palindrome): longest_palindrome = substring return longest_palindrome"},{"prompt":"Create an algorithm to produce a Fibonacci number.","completion":"def fibonacci(n): if n <= 1: return n else: return fibonacci(n-1) + fibonacci(n-2)"},{"prompt":"Create a method to solve a linear equation ax + b = 0. a = 2, b = 4","completion":"def solve_linear_equation(a, b): return -b/a"},{"prompt":"Parse a given string to create a tree data structure. expr = \\"a + b * c","completion":"def parse_string(expr): root = Node(expr[0]) current_node = root for i in range(1, len(expr), 2): node = Node(expr[i]) current_node.right = node node.left = current_node current_node = node return root class Node: def __init__(self, data): self.data = data self.left = None self.right = None"},{"prompt":"Create a Python program to sort of given list of strings in alphabetical order. list_of_strings = [\\"apple\\", \\"banana\\", \\"cherry\\", \\"dog\\"]","completion":"def sort_words(words): return sorted(words) list_of_strings_sorted = sort_words(list_of_strings) print(list_of_strings_sorted)"},{"prompt":"Write a Python program to create a new list which contains all even numbers from the given list. list_of_numbers = [1, 2, 3, 4, 5, 6]","completion":"def get_even_numbers(numbers): even_numbers = [] for n in numbers: if n % 2 == 0: even_numbers.append(n) return even_numbers even_numbers = get_even_numbers(list_of_numbers) print(even_numbers) # prints [2, 4, 6]"},{"prompt":"Create a Python function to remove all elements of the given list that are equal to the given value. list_of_numbers = [1, 2, 3, 4, 2, 3] value = 2","completion":"def remove_val(numbers, val): result = [] for n in numbers: if n != val: result.append(n) return result list_without_2 = remove_val(list_of_numbers, value) print(list_without_2) # prints [1, 3, 4, 3]"},{"prompt":"Make a Python program to generate all permutations of a given list.","completion":"def permutations(nums): if len(nums) == 0: return [] if len(nums) == 1: return [[nums[0]]] perms = [] for i, n in enumerate(nums): sub_perms = permutations(nums[:i] + nums[i+1:]) for perm in sub_perms: perms.append([n] + perm) return perms"},{"prompt":"Create a Python program to remove all whitespace from the given string. text = \\" This is a sentence with some whitespace!","completion":"def remove_whitespace(text): return text.replace(\\" \\", \\"\\") text_without_whitespace = remove_whitespace(text) print(text_without_whitespace) # prints \\"Thisisasentencewithsomewhitespace!\\""},{"prompt":"Make a Python program to delete elements from a given list at particular indices. list_of_numbers = [0, 1, 2, 3, 4, 5] indices = [2, 3, 5]","completion":"def remove_elements_at_indices(numbers, indices): for index in sorted(indices, reverse=True): del numbers[index] return numbers modified_list = remove_elements_at_indices(list_of_numbers, indices) print(modified_list) # prints [0, 1, 4]"},{"prompt":"Sort an array of numbers in descending order using the bubble sort algorithm. \`array = [10, 5, 2, 7, 6]\`","completion":"def bubble_sort(arr): for i in range(len(arr)): for j in range(0, len(arr)-i-1): if arr[j] < arr[j+1] : arr[j], arr[j+1] = arr[j+1], arr[j] array = [10, 5, 2, 7, 6] bubble_sort(array) print(array) # Output: [10, 7, 6, 5, 2]"},{"prompt":"w do we define a class in C++?","completion":"In C++, a class is defined by using the keyword \\"class\\" followed by the class name followed by the body of the class, which is enclosed within a pair of curly braces. Within the body of the class are the class members, including the data members and member functions. For example, the following is how we might define a class named \\"Student\\": class Student { int id; string name; public: Student(int i, string n); void printInfo(); };"},{"prompt":"Create a GraphQL query to get a list of all the posts in a blog.","completion":"query { posts { id title body author { name } } }"},{"prompt":"What is an exception handling code in Python?","completion":"Exception handling in Python is a process in which errors or exceptions in a program are handled using certain programming construct such as try-except or try-finally blocks so that the program can recover from such exceptions and continue running. Exception handling helps prevent critical errors in the program from crashing the entire program and allows developers to write more robust codes."},{"prompt":"Generate a code that creates a dictionary from two different lists with equal length. list1 = ['a', 'b', 'c'] list2 = [1, 2, 3]","completion":"def create_dictionary(list1, list2): if len(list1) != len(list2): return \\"lists have different lengths\\" else: my_dict = dict(zip(list1, list2)) return my_dict list1 = ['a', 'b', 'c'] list2 = [1, 2, 3] print(create_dictionary(list1, list2)) #output: {'a': 1, 'b': 2, 'c': 3}"},{"prompt":"Edit the following code to print true if the condition is met, false if not. a = 5 b = 3 if (a > b): print(\\"true\\")","completion":"a = 5 b = 3 if (a > b): print(True) else: print(False)"},{"prompt":"Update the code to get 2 extra lines of output to print the first and last value of the list. list1 = [1, 2, 3, 4, 5]","completion":"list1 = [1, 2, 3, 4, 5] print(\\"First element:\\", list1[0]) print(\\"Last element:\\", list1[-1]) for item in list1: print(item) #output: First element: 1 Last element: 5 1 2 3 4 5"},{"prompt":"Add a loop to the following program so that it prints out each item in a list. list1 = [1, 2, 3, 4, 5]","completion":"list1 = [1, 2, 3, 4, 5] for item in list1: print(item) #output: 1 2 3 4 5"},{"prompt":"Declare a C++ structure that stores data about employees including their name and employee id.","completion":"struct employee { string name; int id; };"},{"prompt":"Fill in the missing characters in the given HTML code <htm__> <head> <tit__>Example</title> </he__>","completion":"<html> <head> <title>Example</title> </head>"},{"prompt":"Generate the syntax to declare a variable called 'result' as an integer in Javascript.","completion":"let result = 0;"},{"prompt":"Generate the necessary SQL query to delete records from the table 'students' where the student's major is 'Computer Science'.","completion":"DELETE FROM students WHERE major = 'Computer Science';"},{"prompt":"w would you write a Swift program to swap the values of two variables?","completion":"var a = 10 var b = 20 (a, b) = (b, a) print(a) // Outputs 20 print(b) // Outputs 10"},{"prompt":"Create a CSS page for styling a header.","completion":"h1 { font-family: Arial, Helvetica, sans-serif; font-size: 28px; font-style: normal; font-weight: bold; line-height: 32px; letter-spacing: 0.5px; color: #000000; text-align: center; padding-top: 10px; padding-bottom: 10px; margin-bottom: 0px; }"},{"prompt":"You need to delete an item from a list. Output the modified list. ['apple', 'orange', 'banana']","completion":"['apple', 'orange']"},{"prompt":"Parse the following HTML page and extract the data from each table. <html> <body> <table> <tr> <td>Name</td> <td>Age</td> </tr> <tr> <td>John Doe</td> <td>30</td> </tr> <tr> <td> Jane Smith</td> <td>25</td> </tr> </table> </body> </html>","completion":"import bs4 html = \\"\\"\\"<html> <body> <table> <tr> <td>Name</td> <td>Age</td> </tr> <tr> <td>John Doe</td> <td>30</td> </tr> <tr> <td> Jane Smith</td> <td>25</td> </tr> </table> </body> </html>\\"\\"\\" data = bs4.BeautifulSoup(html, features=\\"html.parser\\") table = data.find('table') items = table.find_all('tr') for item in items: name, age = item.find_all('td') print(\\"Name: {}, age: {}\\".format(name.text, age.text))"},{"prompt":"Given a set of numbers, you need to output them in descending order. [30, 50, 10, 40]","completion":"[50, 40, 30, 10]"},{"prompt":"Modify the following code so that it takes a user input for the numbers for which to calculate the sum.","completion":"def sum_numbers(): number_list = [] input_numbers = input(\\"Please enter the numbers you want to sum up (enter q to exit): \\") while input_numbers != \\"q\\": number_list.append(int(input_numbers)) input_numbers = input(\\"Please enter the numbers you want to sum up (enter q to exit): \\") return sum(number_list)"},{"prompt":"Consider a list \`\`a = [1,3,2,2,3,4]\`\`. What would be the output of the following code? a = [1,3,2,2,3,4] for i in range(len(a)): a[i] = a[i -1]","completion":"a = [1,3,2,2,3,4] output = [] for i in range(len(a)): output.append(a[i - 1]) print(output) # [3, 2, 2, 3, 4, 1]"},{"prompt":"Write a function that takes two strings as input and returns a join of both strings as a single string, with the second string in the middle. string1 = \\"Hello\\" string2 = \\"World","completion":"def join_string_in_middle(string1 , string2): return string1 + string2 + string1 # Usage result = join_string_in_middle(\\"Hello\\", \\"World\\") print(result) # HelloWorldHello"},{"prompt":"What type of data structure would you use to store key-value pairs in a Python program?","completion":"The data structure to use for key-value pairs in Python is a dictionary. A dictionary is a data type that consists of key-value pairs, and is denoted by {} in Python. Each key has a unique value associated with it that can be accessed using the key. For example, a dictionary called \\"person\\" could look like this: person = {'name':'John', 'age': 32} The value of the key \\"name\\" can be accessed using person['name'] which returns \\"John\\"."},{"prompt":"Generate a recursive function for calculating the factorial of a number.","completion":"def factorial(num): # base case if num == 0: return 1 else: return num * factorial(num-1) # Usage print(factorial(3)) # 6"},{"prompt":"Find all substrings of a string that are palindromes in Python.","completion":"def get_all_palindromes(input_string): palindromes = [] for substring_length in range(len(input_string)): for i in range(len(input_string) - substring_length + 1): sub_string = input_string[i: i + substring_length] if sub_string == sub_string[::-1]: palindromes.append(sub_string) return palindromes # Usage palindromes = get_all_palindromes(\\"banana\\") print(palindromes) # ['a', 'ana', 'anana', 'b', 'na', 'nana']"},{"prompt":"Create a NumPy array containing three zeros and three ones.","completion":"np.array([0, 0, 0, 1, 1, 1])"},{"prompt":"Given a dataframe, remove any rows containing missing values. DataFrame: col1 col2 col3 1 a 3 2 b 4 3 NaN 5 4 c NaN","completion":"DataFrame: col1 col2 col3 1 a 3 2 b 4"},{"prompt":"Create a dictionary of colors containing the values red, blue and green.","completion":"{\\"red\\": \\"red\\", \\"blue\\": \\"blue\\", \\"green\\": \\"green\\"}"},{"prompt":"Given a list, remove the duplicates from it. [1, 2, 3, 1, 4, 2]","completion":"[1, 2, 3, 4]"},{"prompt":"Sort a dictionary by its values. {\\"a\\": 4, \\"b\\": 2, \\"c\\": 3, \\"d\\": 1}","completion":"{\\"d\\": 1, \\"b\\": 2, \\"c\\": 3, \\"a\\": 4}"},{"prompt":"Output a SQL query that returns the sum of all values in the ‘price’ column of the ‘Products’ table.","completion":"SELECT SUM(price) FROM Products;"},{"prompt":"Create a CSS class to raise the font size of the text from the default size.","completion":".largerFont { font-size: 120%; }"},{"prompt":"Create an application to hide certain words in a text. Text: \\"The quick brown fox jumped over the lazy dog.\\" Words to hide: [\\"fox\\", \\"dog\\"]","completion":"const censoredText = (text, wordsToHide) => { const wordsArr = text.split(' '); wordsArr.forEach((word, index) => { if (wordsToHide.includes(word)) { wordsArr[index] = '*'.repeat(word.length) } }); return wordsArr.join(' '); } censoredText(\\"The quick brown fox jumped over the lazy dog.\\", [\\"fox\\", \\"dog\\"]); // The quick brown *** jumped over the lazy ***."},{"prompt":"Write an algorithm in Java to check if a number is a prime number. A prime number is an integer greater than 1 that is only divisible by 1 and itself.","completion":"public static boolean isPrime(int n) { // Corner cases if (n <= 1) return false; if (n <= 3) return true; // This is checked so that we can skip // middle five numbers in below loop if (n % 2 == 0 || n % 3 == 0) return false; for (int i = 5; i * i <= n; i = i + 6) if (n % i == 0 || n % (i + 2) == 0) return false; return true; }"},{"prompt":"Write an algorithm in JavaScript to return the length of the longest word in a string. let str = \\"The quick brown fox jumped over the lazy dog.","completion":"const findLongestWord = (str) => { let longestWord = \\"\\"; let wordsArr = str.split(\\" \\"); for(let i = 0; i < wordsArr.length; i++){ if (wordsArr[i].length > longestWord.length) { longestWord = wordsArr[i]; } } return longestWord.length; } findLongestWord(str); //6"},{"prompt":"Write an Angular directive to validate input fields.","completion":"@Directive({ selector: '[validateInput]' }) export class InputValidationDirective { @Input() validateInput: string; constructor(private el: ElementRef) { } @HostListener('keyup') onKeyup() { let value = this.el.nativeElement.value if(!this.validateInput || this.validateInput === 'creditcard'){ //creditcard validation logic } if(this.validateInput ==='number'){ //number validation logic } } }"},{"prompt":"Create an algorithm in Python to calculate the compound interest","completion":"def compound_interest(principal, rate, time): # Calculates compound interest CI = principal * (pow((1 + rate / 100), time)) return CI # Driver Code principal=8000 rate=3 time=5 print(\\"Compound interest is\\", compound_interest(principal, rate, time))"},{"prompt":"Create a loop in Python that counts down from 10 to 0.","completion":"for i in range(10, 0, -1): print(i)"},{"prompt":"Add a function to the existing code that takes an integer value as input and prints a square of '*' characters. def print_square(length)","completion":"def print_square(length): for i in range(0, length): for j in range(0, length): print(\\"*\\", end=\\"\\") print(\\"\\")"},{"prompt":"Use a for loop to compute the sum of the list [1, 3, 5, 7, 9]. [1, 3, 5, 7, 9]","completion":"total = 0 for num in [1, 3, 5, 7, 9]: total += num print(total)"},{"prompt":"Use a for loop to print the characters of the string \\"Hello World!\\".","completion":"for char in “Hello World!”: print(char)"},{"prompt":"Write a Java code that adds two numbers, a and b, and returns their sum. int a = 2 int b = 3","completion":"public int sum(int a, int b) { return (a + b); }"},{"prompt":"Print the type of the data stored in the variable 'a'. int a = 15","completion":"Integer"},{"prompt":"Find the index of the string \\"the\\" in the sentence \\"I saw the cat\\".","completion":"3"},{"prompt":"Create a set containing the numbers from 1-10 that are divisible by 3.","completion":"my_set = {3, 6, 9}"},{"prompt":"Calculate the product of the numbers 87 and 36.","completion":"3132"},{"prompt":"Create a function in python that takes a string and returns a new string with the same letter count but in ascending order word = “tweet”","completion":"def ascending_order(word): list = [] for letter in word: list.append(letter) sorted_list = sorted(list) return \\"\\".join(sorted_list)"},{"prompt":"Create a basic JavaScript code to input three numbers and store the largest one in a variable. num1 = 10 num2 = 20 num3 = 30","completion":"let max; if (num1 > num2) { max = num1; } else { max = num2; } if (max < num3) { max = num3; }"},{"prompt":"Generate a shorthand method in Python to replace all 0s with 1. input_list = [1, 0, 1, 0, 0]","completion":"def replace_zeros(input_list): output_list = [x if x != 0 else 1 for x in input_list] return output_list"},{"prompt":"Generate a method in Python to sort a given list of dictionaries. list_dict = [{'name': 'a', 'age': 23}, {'name': 'b', 'age': 19}, {'name': 'c','age': 36}]","completion":"def dict_sort(list_dict): sorted_dict = sorted(list_dict, key = lambda x: x['age']) return sorted_dict"},{"prompt":"Write a simple script in JavaScript to reverse a string. text = “hello world”","completion":"function reverseString(text) { return text.split(\\"\\").reverse().join(\\"\\"); } console.log(reverseString(text));"},{"prompt":"Modify the given Python code to calculate the sum of the given list and print the output. list = [1,2,3,4,5]","completion":"def sumList(list): sum = 0 for i in list: sum = sum + i return sum print(sumList(list))"},{"prompt":"Compose a script in JavaScript for finding the greatest common divisor of two numbers. x = 36; y = 60;","completion":"function findGCD(x, y) { if (x === 0) return y; if (y === 0) return x; if (x === y) return x; if (x > y) return findGCD(x - y, y); return findGCD(x, y - x); } console.log(findGCD(x, y));"},{"prompt":"Write a SQL statement that finds all customers who have placed orders","completion":"SELECT c.customer_id, c.name FROM customers AS c INNER JOIN orders AS o ON c.customer_id = o.customer_id;"},{"prompt":"What is the value of the math expression 100(log_10 10)","completion":"100"},{"prompt":"Create a neural network with 5 inputs and 2 outputs","completion":"model = tf.keras.Sequential([ tf.keras.layers.Dense(10, activation='relu', input_shape=(5,)), tf.keras.layers.Dense(2, activation='softmax'), ])"},{"prompt":"Sum up the elements of this array [2,7,1,3]","completion":"13"},{"prompt":"Add a comment to this code for(int i = 0; i < n; i++)","completion":"// loop through all n elements in the array for (int i = 0; i < n; i++) { // code }"},{"prompt":"Write a simple Java class","completion":"public class MyClass { public static void main(String[] args) { System.out.println(\\"Hello World!\\"); } }"},{"prompt":"Output the largest number in this array [20, 6, 36, 41, 12, 3]","completion":"41"},{"prompt":"Create a function that takes two String as parameters and return true if one String is substring of the other","completion":"public static boolean isSubstring(String s1, String s2){ int len1 = s1.length(); int len2 = s2.length(); if(len1 < len2){ if(s2.contains(s1)){ return true; } }else{ if(s1.contains(s2)){ return true; } } return false; }"},{"prompt":"Edit this code to show a message after 2 seconds <script> alert(\\"Hello World!\\"); <\/script>","completion":"<script> setTimeout(function(){ alert(\\"Hello World!\\"); }, 2000); <\/script>"},{"prompt":"Write a function to find all distinct permutations of a given list [1,2,3]","completion":"def permute(nums): # base case when only one element in the list if len(nums) == 1: return [nums] permutations = [] for i in range(len(nums)): m = nums[i] # extract remaining list remain = nums[:i] + nums[i+1:] # Iterate over remaining list and # generate all permutations for p in permute(remain): permutations.append([m] + p) return permutations"},{"prompt":"Construct an algorithm to delete duplicate characters from a string","completion":"def delete_duplicates(string): letters = set() newstring = \\"\\" for char in string: if char in letters: continue else: letters.add(char) newstring += char return newstring"},{"prompt":"Create a variable called myName and assign your name to it.","completion":"myName = \\"John Doe\\""},{"prompt":"What is the standard indentation size for Python code?","completion":"The standard indentation size for Python code is 4 spaces."},{"prompt":"Write a code to print out all the even numbers in the range 0 to 10.","completion":"for i in range(0, 11): if i%2 == 0: print(i)"},{"prompt":"Create a dictionary and assign four key-value pairs.","completion":"my_dict = {'apple': 'fruit', 'carrot': 'vegetable', 'house': 'structure', 'dog': 'animal'}"},{"prompt":"Create an array and assign four elements to it.","completion":"my_array = [\\"John\\", \\"Paul\\", \\"George\\", \\"Ringo\\"]"},{"prompt":"Construct an if-else statement to handle a conditional execution. if x is greater than 0","completion":"if x > 0: # execute one block of code else: # execute another block of code"},{"prompt":"Create a while loop that prints the numbers 1-10","completion":"i = 1 while i <= 10: print(i) i += 1"},{"prompt":"Construct a for loop to print a user-defined pattern. * ** *** ****","completion":"for i in range(1, 5): for j in range(0, i): print(\\"*\\", end=\\"\\") print() # add a new line"},{"prompt":"Convert this list into a numpy array and sort it. [3, 5, 1, 9, 6]","completion":"import numpy as np # Convert to numpy array arr = np.array([3, 5, 1, 9, 6]) # Sort the array arr.sort() # Print the sorted array print(arr)"},{"prompt":"Build a machine learning model using scikit-learn to predict the house prices in Boston. - Number of rooms: 3 - Average number of rooms per dwelling: 6 - Proportion of residential land zoned for lots over 25,000 sq.ft: 0.4 - Index of accessibility to radial highways: 4 - Full-valuation property-tax rate per 10,000: 300","completion":"import sklearn from sklearn.linear_model import LinearRegression # Create feature and label X = [[3,6,0.4,4,300]] y = [[BostonHousePrice]] # Create and fit the linear regression model reg = LinearRegression().fit(X, y) # Predict the output prediction = reg.predict([[3,6,0.4,4,300]])[0][0]"},{"prompt":"Create a function my_func in Python that accepts three integers x, y and z as parameters and returns the maximum.","completion":"def my_func(x, y, z): max_num = max(x, y, z) return max_num"},{"prompt":"w can we detect outliers in a dataset?","completion":"Outliers can be detected by computing simple summary statistics and plotting the data. Common methods for detecting outliers include the use of box plots, scatter plots, and statistical tests such as the Interquartile Range (IQR) test and the Z-score test. The IQR test uses the difference between the 75th and 25th percentiles, and any value further than 1.5 times the IQR is considered an outlier. The Z-score test detects outliers by calculating the z-scores of each data point, and values more than 3 standard deviations away are considered outliers."},{"prompt":"Create a SQL query to display the total number of sales in each year. Table Name: \\"Sales\\" Table Columns: \\"year\\", \\"total_sale","completion":"SELECT year, SUM(total_sales) FROM Sales GROUP BY year;"},{"prompt":"What is aHeap data structure?","completion":"A heap is a specialized tree-based data structure in which the root-node key is compared with the keys of its children and arranged accordingly. It is typically used to implement priority queues where the key for each item is based on its priority. Heaps are also used for sorting, representing graphs, and as a data structure for the heapsort sorting algorithm."},{"prompt":"Create a function 'double_up()' in JavaScript that takes an array of integers as input and returns an array with each of the elements doubled. [2, 4, 6]","completion":"function double_up(arr) { // Declare a new array let result = []; // Loop through input array for (let i=0; i < arr.length; i++) { result.push(arr[i] * 2); } //Return the new array return result; }"},{"prompt":"mplement Quicksort in Python to sort this list of integers. [8, 5, 3, 9, 1]","completion":"def quicksort(arr): if len(arr) <= 1: return arr pivot = arr[len(arr) // 2] left = [x for x in arr if x < pivot] middle = [x for x in arr if x == pivot] right = [x for x in arr if x > pivot] return quicksort(left) + middle + quicksort(right) sorted_arr = quicksort([8, 5, 3, 9, 1]) print(sorted_arr)"},{"prompt":"Write an event handler for a button in JavaScript that prints 'Hello World!'","completion":"// Declare a function \`printHelloWorld\` function printHelloWorld () { console.log(\\"Hello World!\\"); } // Add the event handler to the button document.getElementById(\\"myButton\\").addEventListener(\\"click\\", printHelloWorld);"},{"prompt":"Create a CSS rule to apply the 'medium-blue' class the the <body> tag.","completion":"body { background-color: medium-blue; }"},{"prompt":"What is computational complexity and how can it affect the performance of a program?","completion":"Computational complexity is a measure of the amount of resources (time and memory) needed to execute a given algorithm. It is expressed as a function of the size of the input data. A program that has a high computational complexity will take longer to execute and require more memory as the size of the data increases. Improving the complexity of algorithms can dramatically improve the performance of a program."},{"prompt":"Create a Java program to sort an array of integers by implementing the Selection Sort technique.","completion":"public static void selectionSort(int[] arr) { int n = arr.length; for (int i = 0; i < n-1; i++) { int min_idx = i; for (int j = i+1; j < n; j++) if (arr[j] < arr[min_idx]) min_idx = j; int temp = arr[min_idx]; arr[min_idx] = arr[i]; arr[i] = temp; } }"},{"prompt":"Write a C program that uses the bitwise operator to set, clear and toggle the Nth bit of an integer.","completion":"#define SET_BIT(number, n) ((number) |= (1 << (n))) #define CLEAR_BIT(number, n) ((number) &= ~(1 << (n))) #define TOGGLE_BIT(number, n) ((number) ^= (1 << (n)))"},{"prompt":"Generate a parse tree for the following sentence Alice likes to swim","completion":"likes / Alice to / swim"},{"prompt":"Write an SQL query to select the productname and the total price of orders with more than 10 items","completion":"SELECT productname, SUM(price) AS total_price FROM Orders JOIN OrderItems USING (orderId) JOIN Products USING (productId) WHERE quantity > 10 GROUP BY orderId"},{"prompt":"Create a database query to count the number of customers who have placed orders in the last month","completion":"SELECT COUNT(*) FROM customers WHERE EXISTS (SELECT * FROM orders WHERE orders.customerId = customers.id AND Date_sub(now(), interval 1 month) <= orders.orderDate);"},{"prompt":"Take the following array of numbers and write a JavaScript program that sorts the array [3, 4, 8, 9, 5, 6, 2]","completion":"function sortArray(arr) { let len = arr.length; for(let i = len-1; i>=0; i--){ for(let j = 1; j<=i; j++){ if(arr[j-1] > arr[j]){ let temp = arr[j-1]; arr[j-1] = arr[j]; arr[j] = temp; } } } return arr; }"},{"prompt":"What is the best time complexity of QuickSort?","completion":"The best time complexity of QuickSort is O(nlog(n))."},{"prompt":"Create a class to create a naive bayes model.","completion":"class NaiveBayesModel: def __init__(self): pass def train(self, data, labels): self.prior_probability = self.calculatePriorProbabilities(labels) self.likelihoods = self.calculateLikelihoods(data, labels) def calculatePriorProbabilities(self, labels): labels_counts = {} for label in labels: if label not in labels_counts: labels_counts[label] = 0 labels_counts[label] += 1 return {label: count/len(labels) for label, count in labels_counts.items()} def calculateLikelihoods(self, data, labels): likelihoods = {} for feature, values in data.items(): likelihoods[feature] = {} for label in labels: for value in values: pass # complete the calculation return likelihoods"},{"prompt":"What is the main idea behind Naive Bayes Model?","completion":"The main idea behind Naive Bayes Model is to use the probability of each data point to make a prediction by calculating the probability of a certain outcome given some prior knowledge. It assumes all the features are independent of each other and uses the Bayes theorem to calculate the probability of a given class based on the evidence."},{"prompt":"What is the time complexity of the most_common() function?","completion":"The time complexity of the most_common() function is O(n)."},{"prompt":"What is the time complexity of checking if a given string is a palindrome or not?","completion":"The time complexity of checking if a given string is a palindrome or not is O(n)."},{"prompt":"What is the time complexity of the function you wrote to output the nth Fibonacci number?","completion":"The time complexity of the function to output the nth Fibonacci number is O(2^n)."},{"prompt":"What is the time complexity of the program you wrote to generate random passwords?","completion":"The time complexity of the program to generate random passwords is O(n), where n is the length of the password."},{"prompt":"Create a generator to produce \\"hello world\\" ten times","completion":"def hello_world_generator(): for _ in range(10): yield \\"Hello World\\""},{"prompt":"Create a variable named \\"my_name\\" with a value of your name.","completion":"let my_name = \\"John\\";"},{"prompt":"What is the data type for the following value \\"true\\"?","completion":"The data type for the value \\"true\\" is boolean."},{"prompt":"Given an array of strings, write a JavaScript function to filter out all elements that are not palindromes. [\\"a\\", \\" racecar\\", \\" abba \\", \\"civic\\", \\" pot op \\"]","completion":"function filterPalindromes(arr) { return arr.filter(element => { let strippedString = element.replace(/s+/g, \\"\\"); let reversedString = strippedString.split('').reverse().join(''); return strippedString == reversedString; }); } console.log(filterPalindromes([\\"a\\", \\" racecar\\", \\" abba \\", \\"civic\\", \\" pot op \\"])); // Output: [\\" racecar\\", \\"abba\\", \\"civic\\", \\"pot op\\"]"},{"prompt":"Write a permutation function which takes a given string and returns all the possible permutations. \\"abc","completion":"function permutate(str){ if (str.length <= 1) { return str; } let permutations = []; for (let i = 0; i < str.length; i++) { let char = str[i]; // excluding the character from the string let remainingString = str.slice(0, i) + str.slice(i + 1, str.length); // recursively call the function for (let subPermutation of permutate(remainingString)) { permutations.push(char + subPermutation); } } return permutations; } const possiblePermutations = permutate(\\"abc\\"); // Output: [\\"abc\\", \\"acb\\", \\"bac\\", \\"bca\\", \\"cab\\", \\"cba\\"]"},{"prompt":"Build a regular expression to match only strings that start with one specific character and end with another specific character.","completion":"/^X.*Y/"},{"prompt":"Edit the existing code to accept more than two arguments def get_sum(a, b): return a + b","completion":"def get_sum(*args): sum = 0 for number in args: sum += number return sum"},{"prompt":"Construct a SQL query to select all the records from the \\"user_table\\" table that were created in the last 3 days.","completion":"SELECT * FROM \`user_table\` WHERE date_created > date_sub(curdate(), interval 3 day)"},{"prompt":"What are the advantages of using a while loop over a for loop in Python?","completion":"The main advantages of using a while loop over a for loop in Python are that it is more concise and allows the user to have better control over the iteration process. For example, the while loop allows the user to specify an exit condition if a certain condition is met, mid-way through the loop. Furthermore, while loop allows the user to dynamically change the number of times the loop is executed based on a condition or an expression. This is not possible in for loops as the user needs to specify the exact number of iterations beforehand."},{"prompt":"Write a code to convert HTML to Markdown using Python.","completion":"import markdown import re def convert_html_to_markdown(html): lines = html.split('n') for line in lines: line = markdown.markdown(line) # remove HTML tags line = re.sub(r'<[^>]*>', '', line) # strip whitespace line = line.strip() print line html = '<p>This is an example of HTML text.</p>' convert_html_to_markdown(html) # Output This is an example of HTML text."},{"prompt":"w can you access an element in an array using JavaScript?","completion":"In order to access an element in an array using JavaScript, you can use the index of the element. The index is the position of the element in the array. For example, if the array is [4, 8, 15], then you can use the following code to access the element at index 1 (i.e. 8): var array = [4, 8, 15]; var element = array[1]; // The variable \`element\` now contains the value 8"},{"prompt":"What is the maximum length of a string in Python?","completion":"The maximum length of a string in Python is sys.maxsize, which is typically 2^63 - 1 on a 64-bit machine. This means that the maximum length of a string is 18,446,744,073,709,551,615 characters."},{"prompt":"Write a query in SQL to find all customers with email addresses starting with 'Simon'.","completion":"SELECT * FROM Customers WHERE Email LIKE 'Simon%';"},{"prompt":"mplement a sorting algorithm in C# that sorts the numbers in increasing order. numbers = [3, 7, 5, 2, 4, 1]","completion":"public static void Sort(int[] numbers) { int n = numbers.Length; for (int i = 0; i < n - 1; i++) for (int j = 0; j < n - i - 1; j++) if (numbers[j] > numbers[j + 1]) { int temp = numbers[j]; numbers[j] = numbers[j + 1]; numbers[j + 1] = temp; } }"},{"prompt":"Write a function in Ruby which takes two parameters and prints the greater one.","completion":"def greater_num(a,b) if a > b puts a else puts b end end"},{"prompt":"Edit the given HTML code to center all the elements. <div> <h1>Hello World!</h1> <p>This is a paragraph</p> </div>","completion":"<div style=\\"text-align: center;\\"> <h1>Hello World!</h1> <p>This is a paragraph</p> </div>"},{"prompt":"Write a conditional statement in PHP to check if a variable is even or odd.","completion":"if (num % 2 == 0) { // even } else { // odd }"},{"prompt":"Create a web page with all the elements aligned on the right, using only CSS.","completion":"<style> * { text-align: right; } </style>"},{"prompt":"Compute the area of the circle where the radius is 5 inches in Python.","completion":"import math radius = 5 area = math.pi * (radius**2) print(\\"The area of the circle is\\", area)"},{"prompt":"Generate a random hexadecimal value in C#.","completion":"Random random = new Random(); string randomHex = string.Format(\\"{0:X}\\", random.Next());"},{"prompt":"Write a Java program to display a pyramid with the given height. height = 3","completion":"public class Pyramid { public static void printPyramid(int height) { int i, j; for (i=0; i<height; i++) { for (j=0; j<=i; j++) { System.out.print(\\"* \\"); } System.out.println(); } } public static void main(String args[]) { int height = 3; printPyramid(height); } }"},{"prompt":"Write a SQL query to sort records in a table alphabetically by a column 'name'.","completion":"SELECT * FROM table_name ORDER BY name ASC;"},{"prompt":"Create a PHP script to generate a valid checksum of a given string.","completion":"<?php function getChecksum(string) { // Get the seed used seed = (string) md5(string); checkSum = 0; // Calculate the checksum foreach(str_split(string) as char){ checkSum += ord(char)*seed[checkSum % 32]; } // Return the checksum return checkSum; } ?>"},{"prompt":"Write a Python method to extract only the numeric values from a string.","completion":"def extract_num(string): return [word for word in string.split() if word.isdigit()]"},{"prompt":"Write a PHP code to get the root directory of the server.","completion":"<?php root_dir = _SERVER['DOCUMENT_ROOT']; echo root_dir; ?>"},{"prompt":"Generate SQL query to find the average score for each student. Table: student_scores | id | student_id | score | |-----|------------|-------| | 1 | 111 | 5 | | 2 | 111 | 7 | | 3 | 223 | 6 | | 4 | 223 | 8 |","completion":"SELECT student_id, AVG(score) AS average_score FROM student_scores GROUP BY student_id;"},{"prompt":"Design a function using Python to remove all vowels from a string.","completion":"def remove_vowels(string): vowels = 'aeiouAEIOU' new_string = '' for char in string: if char not in vowels: new_string += char return new_string"},{"prompt":"JAVA code to calculate the Fibonacci number at a given position.","completion":"public class Fibonacci { public static long Fibonacci(int n) { if (n <= 1) { return n; } return Fibonacci(n - 1) + Fibonacci(n - 2); } }"},{"prompt":"Create a HTML page to show user data from a REST API. { \\"name\\": \\"John\\", \\"age\\" : 25, \\"address\\" : \\"123 Main Street\\" }","completion":"<html> <head> <title>User Data</title> </head> <body> <h1>User Data</h1> <p>Name: John</p> <p>Age: 25</p> <p>Address: 123 Main Street</p> </body> </html>"},{"prompt":"Create a Kotlin program which prints out all the numbers between 1 and 10.","completion":"fun main() { for(i in 1..10) { println(i) } }"},{"prompt":"Suggest a suitable algorithm for solving this problem. An array of integers is given. Find the highest sum that can be obtained by including different members from the array, such that no two members have the same index.","completion":"We can use the dynamic programming approach to solve this problem. At each step, we calculate the maximum possible sum that can be obtained if we include the current element. We keep track of the maximum sum found so far, and then continue with the next element. At the end, we have the highest sum of elements with no two elements having the same index."},{"prompt":"Code a function in Python to generate random numbers within a given range.","completion":"import random def random_num_gen(start, end): return random.randint(start, end)"},{"prompt":"Write a web crawler in Python to extract only the text content from a given website.","completion":"# import the necessary libraries import requests from bs4 import BeautifulSoup # define the web crawler def web_crawler(url): # make the request to the specified url page = requests.get(url) page_content = page.content # parse the received content soup = BeautifulSoup(page_content, 'lxml') text_content = soup.find_all(text=True) # return only the text content return [s.strip() for s in text_content if s.strip()]"},{"prompt":"Explain how to find the sum of all elements in an array using recursive approach.","completion":"The recursive approach to finding the sum of all elements in an array is to consider the array as a combination of two subarrays. We first calculate the sum of the first subarray and then for the second subarray. The total sum of elements in the array can be found by adding the sum of the two subarrays. This process is repeated until the size of the array is 0, at which point the final sum is returned. This approach is known as the divide and conquer algorithm."},{"prompt":"Suggest a suitable algorithm for clustering data points.","completion":"The k-means clustering algorithm is a suitable algorithm for clustering data points. It is an iterative algorithm that works by assigning data points to clusters and then computing the centroids of the clusters. The algorithm is repeated until a desired outcome is reached. This algorithm works well for grouping similar data points in a dataset."},{"prompt":"Find the length of the longest substring in the given string without repetition. string = \\"abcabcbb","completion":"3"},{"prompt":"Transform the given array into a object, with the key being the index and the value being the value at the index in the array. arr = [1,2,3,4]","completion":"{ 0: 1, 1: 2, 2: 3, 3: 4 }"},{"prompt":"Read the given CSV and output the data as a HTML table. name, age joe, 23 billy, 24","completion":"<table> <tr> <th>Name</th> <th>Age</th> </tr> <tr> <td>Joe</td> <td>23</td> </tr> <tr> <td>Billy</td> <td>24</td> </tr> </table>"},{"prompt":"Prompt the user to enter a year and output whether it is a leap year or not.","completion":"year = int(input(\\"Please enter a year: \\")) if (year % 4 == 0 and year % 100 != 0) or year % 400 == 0: print(\\"It is a leap year.\\") else: print(\\"It is not a leap year.\\")"},{"prompt":"Given an array of words, replace each character with the corresponding number from the English alphabet (e.g. a=1, b=2 ...z=26), and find the computed sum. [\\"cat\\", \\"dog\\"]","completion":"def find_sum(words): total_sum = 0 for word in words: for c in word: total_sum += ord(c) - 96 return total_sum"},{"prompt":"Given a linked list, reverse its order of nodes.","completion":"def reverse_linked_list(head): if head is None or head.next is None: return head prev = None curr = head while curr is not None: prev, curr.next, curr = curr, prev, curr.next return prev"},{"prompt":"Given an array of integers, write a program to find the number of triplets that satisfy the triangle inequality.","completion":"def find_num_triplets(arr): arr.sort() count = 0 for i in range(len(arr) - 2): for j in range(i + 1, len(arr) - 1): for k in range(j + 1, len(arr)): if arr[i] + arr[j] > arr[k]: count += 1 return count"},{"prompt":"Given a matrix, write a program to fill it with zeroes in constant time and space complexity.","completion":"def fill_matrix_zeros(matrix): n, m = len(matrix), len(matrix[0]) col0_zero = False for i in range(n): if matrix[i][0] == 0: col0_zero = True for j in range(1, m): if matrix[i][j] == 0: matrix[i][0] = 0 matrix[0][j] = 0 for i in range(1, n): for j in range(1, m): if matrix[i][0] == 0 or matrix[0][j] == 0: matrix[i][j] = 0 if matrix[0][0] == 0: for j in range(m): matrix[0][j] = 0 if col0_zero: for i in range(n): matrix[i][0] = 0"},{"prompt":"dentify which language the following code snippet is written in. #include<bits/stdc++.h> using namespace std; int main() { cout << \\"Hello, World\\"; return 0; }","completion":"C++"},{"prompt":"Create a MySQL query that returns a list of states in the United States with populations greater than 10 million.","completion":"SELECT state FROM population_data WHERE population > 10000000;"},{"prompt":"Write Java code to create a class called Card with two string fields, rank and suit.","completion":"public class Card { private String rank; private String suit; // constructor public Card(String rank, String suit) { this.rank = rank; this.suit = suit; } // getters public String getRank() { return rank; } public String getSuit() { return suit; } }"},{"prompt":"Create an SQL query that finds the most expensive products in a given product table.","completion":"SELECT * FROM product ORDER BY price DESC LIMIT 1;"},{"prompt":"Write a Javascript program to convert a given string into all uppercase characters. String: \\"Welcome to the World !","completion":"let str = \\"Welcome to the World !\\"; let upperCaseStr = str.toUpperCase(); console.log(upperCaseStr); # Output: \\"WELCOME TO THE WORLD !\\""},{"prompt":"Write a CSS rule that changes the text color for all headings on a page.","completion":"h1, h2, h3, h4, h5, h6 { color: red; }"},{"prompt":"Create an SQL query that returns the names and phone numbers of customers from the state of Virginia.","completion":"SELECT name, phone FROM customers WHERE state= 'Virginia';"},{"prompt":"Explain the basic logic for a linear search algorithm.","completion":"A linear search algorithm is a basic searching algorithm for finding an item in an array of items. It operates by comparing each item in the array sequentially with the target value until the target value is found or the end of the array is reached. To perform a linear search, the algorithm begins by considering the first element of the array and then moving on to every subsequent element in order until the target value is found. If the target value is not found, a linear search terminates when the end of the elements is reached."},{"prompt":"Create a stand-alone Python script to print the sum of all the divisors of a number.","completion":"def printDivisorSum(num): sum = 0 i = 1 while i <= num / 2: if num % i == 0: sum = sum + i i = i + 1 print(\\"Sum of divisors of \\" + str(num) + \\" is \\" + str(sum)) num = 16 printDivisorSum(num)"},{"prompt":"Generate a new voice sample using a given text and speech synthesis model. text = \\"Hello, world!","completion":"<nooutput> Since this task requires speech synthesis software and a model, it cannot be completed by the GPT model."},{"prompt":"Categorize the following sentence into parts-of-speech? The cat jumped quickly onto the table","completion":"Determiner (The), Noun (cat), Verb (jumped), Adverb (quickly), Preposition (onto), Determiner (the), Noun (table)."},{"prompt":"Find the variable type for the following statement: name = \\"Joh","completion":"The variable type for the above statement is string."},{"prompt":"Use the Java language to print out ‘Hello World’.","completion":"public class HelloWorld { public static void main(String[] args) { System.out.println(\\"Hello World!\\"); } }"},{"prompt":"Build a C++ program that calculates using the below formula","completion":"#include <iostream> int main() { int a=5, b=7; double result = a*a+b*b; std::cout << result << std::endl; return 0; }"},{"prompt":"Using a MySQL query, select the top 5 dog breeds based on the number of owners.","completion":"SELECT breed, COUNT(*) AS owners FROM dogs GROUP BY breed ORDER BY owners DESC LIMIT 5;"},{"prompt":"Construct a Python program to print the numbers from 1 to 10 on a single line.","completion":"for i in range(1,11): print(i, end=\\" \\")"},{"prompt":"Develop a PHP script that creates and populates a database table called “customers”.","completion":"<?php host = \\"localhost\\"; username = \\"root\\"; password = \\"\\"; database = \\"mydb\\"; connection = new mysqli(host, username, password, database); if (connection->connect_error) { die(\\"Connection failed: \\" . connection->connect_error); } query = \\"CREATE TABLE customers ( id INT(6) UNSIGNED AUTO_INCREMENT PRIMARY KEY, firstname VARCHAR(30) NOT NULL, lastname VARCHAR(30) NOT NULL, address VARCHAR(100), city VARCHAR(50), postalcode VARCHAR(10) )\\"; if (connection->query(query) === TRUE) { echo \\"Table customers created successfully\\"; } else { echo \\"Error creating table: \\" . connection->error; } connection->close(); ?>"},{"prompt":"Using MATLAB, calculate the roots of the equation x*x + 5*x - 6.","completion":"syms x; solve(x*x + 5*x - 6);"},{"prompt":"Generate a Ruby script to find the GCD of two given numbers.","completion":"def gcd(a, b) if b == 0 return a else return gcd(b, a % b) end end a = 10 b = 20 puts gcd(a,b)"},{"prompt":"Create an assembly language program to sum 30 odd integers.","completion":".model small .data number dw 2,4,6,8,10,12,14,16,18,20 ,22,24,26,28,30,32,34,36,38,40 ,42,44,46,48,50,52,54,56,58,60 sum dw 0 .code main proc mov ax,@data mov ds,ax lea si,number mov cx,30 loop1: mov ax,[si] mov bx,2 mul bx add ax,sum mov sum,ax add si,2 loop loop1 mov ax,sum mov ah,09h int 21h mov ax,4c00h int 21h main endp end main"},{"prompt":"Create a Swift program to print out the following: “Hello, World!”","completion":"print(\\"Hello, World!\\")"},{"prompt":"Design a function that takes a number, n, and returns the n’th Fibonacci number. Remember that the Fibonacci sequence begins with 0, 1, and each subsequent number is the sum of the previous two numbers.","completion":"def Fibonacci_number(n): if n<0: print(\\"Incorrect input\\") # First Fibonacci number is 0 elif n==1: return 0 # Second Fibonacci number is 1 elif n==2: return 1 else: return Fibonacci_number(n-1)+Fibonacci_number(n-2)"},{"prompt":"Find the number of times the substring “ab” appears in the given string. text = \\"abraacadabrabracabracabracabr","completion":"def count_substring(string, sub_string): count = 0 #Loop over the length of string for i in range(0, len(string)): # If a part of string matches with sub_string #increment count if (string[i:i+ len(sub_string)] ==sub_string): count += 1 return count count = count_substring(text, 'ab') print(\\"Number of substring occurrences: \\", count)"},{"prompt":"Create a function that takes two strings and returns a boolean representing whether or not the strings are anagrams of one another.","completion":"def is_anagram(string1, string2): # remove whitespaces string1 = string1.replace(\\" \\",\\"\\") string2 = string2.replace(\\" \\",\\"\\") # check length if len(string1) != len(string2): return False # create counters counter = {} for letter in string1: if letter in counter : counter[letter] += 1 else: counter[letter] = 1 for letter in string2: if letter in counter: counter[letter] -= 1 else: return False # Check all values are 0 for key in counter: if counter[key] != 0: return False return True"},{"prompt":"Generate the HTML output for a page that has a title of \\"Welcome\\" and a body with a single header of \\"Hello World!\\".","completion":"<html> <head> <title>Welcome</title> </head> <body> <h1>Hello World!</h1> </body> </html>"},{"prompt":"Design an algorithm to find the maximum subarray of an array of numbers.","completion":"def max_subarray(arr): max_so_far = 0 max_ending_here = 0 for i in range(len(arr)): max_ending_here = max_ending_here + arr[i] if max_ending_here < 0: max_ending_here = 0 if (max_so_far < max_ending_here): max_so_far = max_ending_here return max_so_far"},{"prompt":"Solve the following problem Given two strings s and t, find the minimum window in s which will contain all the characters in t.","completion":"def minWindow(s, t): # Initialize with None minWindowLength = None leftIndex = 0 # Balance will act as alphabet to store the occurrence of each character in t balance = {} for char in t: if char not in balance: balance[char] = 1 else: balance[char] += 1 # leftIndex and rightIndex act as two poiners to traverse the list leftIndex = 0 rightIndex = 0 charactersFound = 0 # Start traversal from left for i in range(len(s)): # If character present in t if s[i] in balance: # Decrease its counter by 1 balance[s[i]] -= 1 # if the character is found first time if balance[s[i]] == 0: charactersFound += 1 # If all characters present if charactersFound == len(balance): # Check the right side window while(rightIndex <= i and charactersFound == len(balance)): # remove the left side character if s[leftIndex] in balance: if balance[s[leftIndex]] == 0: charactersFound -= 1 # Increase the counter of that character balance[s[leftIndex]] += 1 # Calculate the minimum window if minWindowLength == None or (i-leftIndex+1) < minWindowLength: minWindowLength = i-leftIndex+1 leftIndex += 1 return minWindowLength"},{"prompt":"Create a sorting algorithm","completion":"def sort(arr): n = len(arr) # Various loops to sort the array for i in range(n): min_idx = i for j in range(i+1, n): if arr[min_idx] > arr[j]: min_idx = j arr[i], arr[min_idx] = arr[min_idx], arr[i] return arr"},{"prompt":"Generate an appropriate CSS code to fulfill the following purpose Define a 500px x 500px div with rounded corners, a white background, a 0.2px red border, and text aligned to the center.","completion":"div { width:500px; height:500px; background-color:white; border-radius: 10px; border: 0.2px solid red; text-align:center; }"},{"prompt":"Create an sql query to find the following Find the customer who has placed the highest number of orders.","completion":"SELECT customer_name, COUNT(order_id) FROM orders GROUP BY customer_name ORDER BY COUNT(order_id) DESC LIMIT 1;"},{"prompt":"Construct an algorithm to fulfill the following purpose Find the two numbers that add up to a given number N.","completion":"def twoSum(N, arr): for i in range(len(arr)): for j in range(i+1, len(arr)): if arr[i] + arr[j] == N: return (arr[i], arr[j])"},{"prompt":"w would you print a big \\"Hello World\\" on the console output?","completion":"print('"},{"prompt":"Design a SQL query to retrieve the names of movies released in the last 10 years.","completion":"SELECT Name FROM Movies WHERE Release_Year > YEAR(CURDATE()) - 10;"},{"prompt":"Create a UI component in ReactJs to render a list of items from an array of objects. const items = [ { name: \\"Apple\\", price: 12.99 }, { name: \\"Orange\\", price: 5.99 }, { name: \\"Banana\\", price: 3.99 }, ];","completion":"const ItemList = ({ items }) => ( <ul> {items.map(item => ( <li>{\`{item.name}: {item.price}\`}</li> ))} </ul> );"},{"prompt":"Design a class in Java to represent a bank account that has a balance, a name, and an account number.","completion":"public class BankAccount { private String name; private String accountNumber; private double balance; public BankAccount(String name, String accountNumber, double balance) { this.name = name; this.accountNumber = accountNumber; this.balance = balance; } public void deposit(double amount) { balance += amount; } public void withdraw(double amount) { balance -= amount; } public double getBalance() { return balance; } public String getAccountNumber() { return accountNumber; } public String getName() { return name; } }"},{"prompt":"Generate a permutation of a given list of numbers.","completion":"import itertools def perms(lst): perm = itertools.permutations(lst) for i in list(perm): print(i)"},{"prompt":"Design a Node.js class to create a RESTful API.","completion":"const express = require('express'); /* Class for generating a RESTful API with Node.js */ class Api { constructor() { this.app = express(); } //Method for creating a route route(url, handler) { this.app.get(url, handler); } //Method for running the app start(port) { this.app.listen(port); console.log(\`API is running on port {port}\`); } }"},{"prompt":"Create a CSS style sheet to apply the following styles to a div element.","completion":"div { width: 50%; padding: 30px; font-size: 20px; background-color: #EEE; border: 1px solid black; }"},{"prompt":"Find the output of the following .NET Core code snippet. int[] numbers = {2, 3, 5, 7}; var result = numbers.Where(x => x % 2 == 0).Sum();","completion":"The output of the code snippet is 10, as 2 and 6 (the two even numbers in the array) are added together to give 10."},{"prompt":"Rewrite the following Node.js code using promises fs.readFile('data.json', 'utf8', (err, data)) => { if (err) throw err; // do something with data }","completion":"const readFileAsync = function (file) { return new Promise((resolve, reject) => { fs.readFile(file, 'utf8', (err, data) => { if (err) reject(err); else resolve(data); }); }); } const dataPromise = readFileAsync('data.json'); dataPromise.then(data => { // do something with data }) .catch(err) => { throw err; };"},{"prompt":"Explain the concept of assembly language.","completion":"Assembly language is a low-level programming language that provides a symbolic representation of the machine instructions for a specific processor or family of processors. It is typically used when writing code for embedded systems, or when the target processor and/or instruction set of the program is not well-known. Assembly language is generally used when more control over the memory management and data layout of a program is desired. It also allows for generating more efficient code since the code can be tailored for the target processor and instruction set."},{"prompt":"Use conditionals and a for loop to return the sum of all odd numbers up to a given number.","completion":"def sum_odd_nums(n): total = 0 for i in range(1, n+1): if i % 2 != 0: total += i return total"},{"prompt":"Write a function to generate a random permutation of a given array. [1, 2, 3, 4, 5]","completion":"import random def random_permutation(input_list): n = len(input_list) for i in range( n - 1 ): j = random.randint(i, n-1) input_list[i], input_list[j] = input_list[j], input_list[i] return input_list"},{"prompt":"Find the logarithm (base 10) of a number. 1000","completion":"3.0"},{"prompt":"Store a list of elements in a dictionary, making each element the key and itself the value. list = [4, 8, 12, 16]","completion":"dictionary = {4:4, 8:8, 12:12, 16:16}"},{"prompt":"Multiply two matrices and return the resulting matrix. Matrix A = [[1, 2], [3, 4]] Matrix B = [[5, 6], [7, 8]]","completion":"result = [[19, 22], [43, 50]]"},{"prompt":"w would you display the below list in descending order? [2, 5, 8, 9, 1]","completion":"[9, 8, 5, 2, 1]"},{"prompt":"Parse the below XML into a JSON object. <Root> <item>A</item> <item>B</item> <item>C</item> </Root>","completion":"{ \\"Root\\": { \\"item\\": [\\"A\\",\\"B\\",\\"C\\"] } }"},{"prompt":"Create a MySQL query to fetch data from two tables using an inner join. TableOne: ID, Name, Age TableTwo: ID, School","completion":"SELECT TableOne.ID, TableOne.Name, TableOne.Age, TableTwo.School FROM TableOne INNER JOIN TableTwo ON TableOne.ID = TableTwo.ID;"},{"prompt":"w would you collect data from websites using Scrapy?","completion":"Scrapy is a Python framework used for web scraping. It can be used to extract data from websites using a variety of techniques. The first step is to create a Scrapy project and define the items you want to scrape. After that, create a Spider class which is responsible for crawling and extracting the data. Finally, you can use a range of methods like XPath and CSS selectors to collect the data."},{"prompt":"Create a Node.js program for converting a temperature from Celsius to Fahrenheit.","completion":"const celsiusToFahrenheit = celsius => { let fahrenheit = (celsius * 9/5) + 32; return fahrenheit; }; const tempCelsius = 20; const tempFahrenheit = celsiusToFahrenheit(tempCelsius); console.log(\`{tempCelsius}°C is equal to {tempFahrenheit}°F.\`);"},{"prompt":"Create a query in MongoDB to search a record by its ID.","completion":"db.collection.find({\\"_id\\": ObjectId(\\"<id>\\")});"},{"prompt":"Convert the following JSON array to an XML document. [ { \\"name\\":\\"Alice\\", \\"age\\":25 }, { \\"name\\":\\"Bob\\", \\"age\\":30 } ]","completion":"<?xml version=\\"1.0\\" encoding=\\"UTF-8\\"?> <data> <person> <name>Alice</name> <age>25</age> </person> <person> <name>Bob</name> <age>30</age> </person> </data>"},{"prompt":"Design a database schema for a table which stores customer information?","completion":"CREATE TABLE customers ( id INT NOT NULL UNIQUE AUTO_INCREMENT, first_name VARCHAR(50) NOT NULL, last_name VARCHAR(50) NOT NULL, email VARCHAR(50) NOT NULL, phone_number VARCHAR(20) NOT NULL, address VARCHAR(200) NOT NULL, PRIMARY KEY (id) );"},{"prompt":"Build an online form for collecting customer feedback using HTML elements.","completion":"<form action=\\"\\"> <label for=\\"name\\">Name</label><br /> <input type=\\"text\\" id=\\"name\\" name=\\"name\\" /><br /> <label for=\\"email\\">E-Mail</label><br /> <input type=\\"email\\" id=\\"email\\" name=\\"email\\" /><br /> <label for=\\"feedback\\">Feedback</label><br /> <textarea id=\\"feedback\\" name=\\"feedback\\"></textarea> <br /> <input type=\\"submit\\" value=\\"Submit\\" /> </form>"},{"prompt":"Write a MySQL query to retrieve the name of the manager and the department they manage.","completion":"SELECT manager.name AS manager_name, department.name AS department_name FROM manager JOIN department ON manager.department_id = department.id;"},{"prompt":"mplement a search algorithm in Java.","completion":"public class SearchAlgorithm { public int search(int[] array, int target) { int left = 0; int right = array.length - 1; while (left <= right) { int mid = (left + right) / 2; if (target == array[mid]) { return mid; } if (target < array[mid]) { right = mid - 1; } else { left = mid + 1; } } return -1; } }"},{"prompt":"Generate a hash of a given string using the SHA-256 algorithm in Python. string = \\"Hello World","completion":"import hashlib string = \\"Hello World\\" result = hashlib.sha256(string.encode()).hexdigest() print(result) # output: \\"a591a6d40bf420404a011733cfb7b190d62c65bf0bcda32b57b277d9ad9f146e\\""},{"prompt":"Create an object of type Car in Java.","completion":"public class Car { private String make; private String model; private String color; //getters and setters public Car(String make, String model, String color) { this.make = make; this.model = model; this.color = color; } public String getMake() { return make; } public void setMake(String make) { this.make = make; } public String getModel() { return model; } public void setModel(String model) { this.model = model; } public String getColor() { return color; } public void setColor(String color) { this.color = color; } }"},{"prompt":"Design a RESTful API that returns customer information.","completion":"GET /customers Returns a list of customer objects GET /customers/{id} Returns customer info with the customer id POST /customers Add a new customer PUT /customers/{id} Update existing customer info with given customer id DELETE /customers/{id} Delete customer with given customer id"},{"prompt":"Convert the following for loop to a recursive solution. for i in range(0, 10): print('i: ', i)","completion":"def loopRecursion(num): if(num<10): print(\\"i:\\",num) loopRecursion(num+1) loopRecursion(0)"},{"prompt":"Given two arrays of integers, find a pair of values (one from each array) that you can swap to give the two arrays the same sum. [1, 2, 3, 4], [3, 2, 1, 4]","completion":"def find_pair(arr1, arr2): sum_arr1 = sum(arr1) sum_arr2 = sum(arr2) diff = abs(sum_arr1 - sum_arr2) for x in arr1: for y in arr2: if x + y == diff: return (x, y) return -1"},{"prompt":"Write a code that computes the given equation for x. x2 + 3x - 7 = 0","completion":"def compute_equation(x): return x**2 + 3*x - 7"},{"prompt":"Create a Python program that accepts input from the user and prints out the result for Fibonacci sequence","completion":"def print_fibonacci(n): a = 0 b = 1 print('Fibonacci sequence:') while a < n: print(a, end=' ') tmp_var = a a = b b = tmp_var + b num = int(input(\\"Enter positive number: \\")) print_fibonacci(num)"},{"prompt":"Create a RUST program that prints out the highest number from an array of integers. [6, 1, 4, 22, 7, 9]","completion":"fn main() { let arr = [6, 1, 4, 22, 7, 9]; let max_num: i32 = arr[0]; for x in 0..arr.len() { if arr[x] > max_num { max_num = arr[x]; } } println!(\\"Max number: {}\\",max_num); }"},{"prompt":"Write an algorithm to check if a number is even or not without using modulus (%) operator","completion":"def is_even(num): if num & 1 == 0: return True else: return False"},{"prompt":"Create a program in C# to find the nth Fibonacci number in the sequence.","completion":"public static int FindNthFibonacci(int n) { int firstNumber = 0, secondNumber = 1, result = 0; if (n == 0 || n == 1) return n; else { for (int i = 2; i <= n; i++) { result = firstNumber + secondNumber; firstNumber = secondNumber; secondNumber = result; } return result; } }"},{"prompt":"Create a shell script to list out the folders and its size in the current directory","completion":"#!/bin/bash echo \\"Folders and Sizes: \\" for item in \`ls -l\` do if [ -d item ] then dirSize=\`du -s item | awk '{print 1}'\` echo \\"item : dirSize\\" fi done"},{"prompt":"Derive the formula for calculating the circumference of a circle.","completion":"The formula for calculating the circumference of a circle is C = 2*π*r, where r is the radius of the circle."},{"prompt":"Output the maximum element of a list list = [1, 23, 12, 38, 56, 9]","completion":"max_element = 56"},{"prompt":"Debug the following code by finding the syntax error. def calculate_value(nums): result = 0 for num in nums result += num return resul","completion":"def calculate_value(nums): result = 0 for num in nums: # missing colon result += num return result"},{"prompt":"Create a function that takes in an array and displays all of the elements in the array in reverse order. list_elements = [15,19,20]","completion":"def reverse_list_elements(list_elements): list_elements.reverse() for element in list_elements: print(element)"},{"prompt":"Output the items in a list with the length less than or equal to the given number. list_items = [1, 2, 3, 4, 5] given_number = 3","completion":"output_items = [item for item in list_items if len(str(item)) <= given_number] print(output_items) # Output [1, 2, 3]"},{"prompt":"Validate the email address using a regular expression. email = \\"example@gmail.com","completion":"import re # Validate the email address using the regex email_pattern = re.compile(r'S+@S+.S+') email_valid = re.match(email_pattern, email) if email_valid: print(\\"Valid Email Address\\") else: print(\\"Invalid Email Address\\") # Output Valid Email Address"},{"prompt":"What number is missing in the following sequence? 2, 4, 8, 16, __","completion":"32"},{"prompt":"What is the index of the item which is given below? my_list = [1, 2, 3, 4, 5] item_to_find = 3","completion":"index_of_item = my_list.index(item_to_find) # Output 2"},{"prompt":"Design a program that automatically refactors a python code to improve readability and reduce complexity. def myfunc(): x = 1 y = 5 return x + y","completion":"def myfunc(): x = 1 y = 5 return x + y"},{"prompt":"Beatify the following code by formatting it properly with adequate indentation and formatting. def func1(): print(\\"this is function 1\\") print(\\"this is function 2\\")","completion":"def func1(): print(\\"this is function 1\\") print(\\"this is function 2\\")"},{"prompt":"Design a die roll program in Java.","completion":"import java.util.Random; public class RollDie { public static void main(String[] args) { // creating instance of Random class Random rand = new Random(); // Generate random integers in range 0 to 6 int rand_int = rand.nextInt(6); // Print random integers System.out.println(\\"The die shows : \\"+ (rand_int + 1)); } }"},{"prompt":"Write a JavaScript program for finding the sum of two numbers. numbers: 10, 15","completion":"var first = 10; var second = 15; // finding sum of two numbers var sum = first + second; // printing the result console.log(\\"Sum of two numbers is \\" + sum);"},{"prompt":"Write an HTML code snippet to make the text bold.","completion":"<strong>Bold Text</strong>"},{"prompt":"Create a HTML page that contains an unordered list with given items in a given order. list items: \\" Apple \\", \\" Orange \\", \\" Pineapple","completion":"<html> <head> <title>Fruits List</title> </head> <body> <ul> <li>Apple</li> <li>Orange</li> <li>Pineapple</li> </ul> </body> </html>"},{"prompt":"Write a JavaScript code snippet to find the greatest of three given numbers.","completion":"let a = 10; let b = 20; let c = 23; // greatest of three numbers let greatest = 0; if(a >= b && a >= c) { greatest = a; } else if(b >= a && b >= c) { greatest = b; } else { greatest = c; } console.log('The greatest number among the given numbers is ' + greatest);"},{"prompt":"Design a program in C# to print the following patterns.","completion":"class Pattern { static void Main(string[] args) { for (int i = 1; i <= 5; i++) { for (int j = 1; j <= i; j++) { Console.Write(\\"*\\"); } Console.WriteLine(); } for (int i = 4; i >= 0; i--) { for (int j = 1; j <= i; j++) { Console.Write(\\"*\\"); } Console.WriteLine(); } } }"},{"prompt":"Develop a function in python to check if a given word can be formed with the given set of letters. Set of letters: 'abeos' Word: 'seabed'","completion":"def can_form_word(set_letters, word): flag = True for letter in word: if letter not in set_letters: flag = False break return flag"},{"prompt":"Extract the first name of the user from the below format. Full Name- Abraham Lincol","completion":"Abraham"},{"prompt":"Develop a code in python to list the elements present in a given dictionary. dictionary = { \\"name\\": \\"John\\", \\"age\\": 20, \\"location\\": \\"London\\" }","completion":"def list_elements(dict): for item in dict: print(item, \\":\\", dict[item]) list_elements(dictionary) # Output: # name : John # age : 20 # location : London"},{"prompt":"Replace every occurrence of 'a' with 'b' in the given string. cave","completion":"cbve"},{"prompt":"Modify the previous code so that it is now optimized for time complexity? def quick_sort(arr): if len(arr) < 2: return arr else: pivot = arr[0] less = [i for i in arr[1:] if i <= pivot] greater = [i for i in arr[1:] if i > pivot] return quick_sort(less) + [pivot] + quick_sort(greater)","completion":"def quick_sort(arr): if len(arr) < 2: return arr else: pivot = arr[0] i = 1 for j in range(1, len(arr)): if arr[j] < pivot: arr[i], arr[j] = arr[j], arr[i] i = i + 1 arr[0], arr[i-1] = arr[i-1], arr[0] left = quick_sort(arr[:i-1]) right = quick_sort(arr[i:]) return left + [arr[i-1]] + right"},{"prompt":"Create a JavaScript program to loop the following array array = [2, 4, 6, 8, 10];","completion":"let array = [2, 4, 6, 8, 10]; for (let i=0; i<array.length; i++) { console.log(array[i]); }"},{"prompt":"Print the even numbers in a given array? array = [2, 3, 4, 5, 6, 7, 8, 9];","completion":"let array = [2, 3, 4, 5, 6, 7, 8, 9]; for (let i=0; i<array.length; i++) { if (array[i] % 2 === 0) { console.log(array[i]); } }"},{"prompt":"Create a list of square numbers between 0 and 9","completion":"square_numbers = [] for i in range(10): square_numbers.append(i * i) print(square_numbers) # [0, 1, 4, 9, 16, 25, 36, 49, 64, 81]"},{"prompt":"Create a JavaScript Program to sort an unsorted array array = [2, 4, 1, 6, 8, 9, 5];","completion":"let array = [2, 4, 1, 6, 8, 9, 5]; let sorted_array = array.sort((a, b) => a-b); console.log(sorted_array); // [1, 2, 4, 5, 6, 8, 9]"},{"prompt":"Write a script to normalize each word in a given sentence by converting it into lowercase. The Quick Brown Fox Jumps Over The Lazy Dog.","completion":"sentence = \\"The Quick Brown Fox Jumps Over The Lazy Dog\\" sentence = sentence.lower().split() sentence = ' '.join(sentence) print(sentence)"},{"prompt":"Write a Tensorflow model to classify a given X and Y as either positive or negative. X = [1, 1, 2, 4] Y = [3, 1, 0, 4]","completion":"import tensorflow as tf model = tf.keras.Sequential([ tf.keras.layers.Dense(8, input_dim=2, activation=\\"relu\\"), tf.keras.layers.Dense(1, activation=\\"sigmoid\\") ]) model.compile(loss='binary_crossentropy', optimizer=tf.keras.optimizers.Adam(0.01), metrics=['accuracy']) X_list = [X, Y] y = [1, 0] model.fit(X_list, y, batch_size=4, epochs=4)"},{"prompt":"Read this JSON structure, parse it and print the value of \\"name\\". { \\"person\\": { \\"name\\":\\"John\\", \\"age\\": 30, \\"location\\": \\"USA\\" } }","completion":"import json # input JSON json_data = '{ \\"person\\": { \\"name\\":\\"John\\", \\"age\\":30, \\"location\\":\\"USA\\" } }' # parse json data = json.loads(json_data) # get the name name = data[\\"person\\"][\\"name\\"] # print the name print(name)"},{"prompt":"Write code to create a bar chart comparing the performance of two different algorithms. Algorithm 1: [90, 91, 95, 94, 99] Algorithm 2: [83, 89, 95, 91, 99]","completion":"import matplotlib.pyplot as plt # Data to plot algorithm1 = [90, 91, 95, 94, 99] algorithm2 = [83, 89, 95, 91, 99] # plotting a bar chart plt.bar([1, 2, 3, 4, 5], algorithm1, label = \\"Algorithm1\\", width = 0.25, color = 'b') plt.bar([1.25, 2.25, 3.25, 4.25, 5.25], algorithm2, label = \\"Algorithm2\\", width = 0.25, color = 'r') # Naming X-axes plt.title('Performance Comparison') plt.xlabel('Runs') plt.ylabel('Accuracy %') plt.xticks([1.125, 2.125, 3.125, 4.125, 5.125], ['1', '2', '3', '4', '5']) # Show the legend plt.legend() # Function to show the plot plt.show()"},{"prompt":"Create a HTML form to allow users to enter an email address and a message.","completion":"<!DOCTYPE html> <html> <head> </head> <body> <form action=\\"submit.php\\" method=\\"post\\"> Email: <input type=\\"text\\" name=\\"email\\"> Message: <input type=\\"text\\" name=\\"message\\"> <input type=\\"submit\\" value=\\"Submit\\"> </form> </body> </html>"},{"prompt":"Create a CSS class 'blue-background' which will set background color of any div to blue.","completion":".blue-background { background-color: blue; }"},{"prompt":"Write an Objective-C statement to create an empty array to hold names.","completion":"NSMutableArray *names = [NSMutableArray array];"},{"prompt":"w will you debug an unresponsive Flask web application?","completion":"To debug an unresponsive Flask web application, you should first check the server logs. If there are any errors, they should be debugged first. Other steps might include disabling caching, checking for memory leaks, checking for database locking, and checking for any long-running requests. You could also use a profiler to run performance analysis on the code and identify any bottlenecks in the code. Lastly, you could use logging or debugging libraries (like pdb) to step-through the code and identify the source of any problems."},{"prompt":"Design an efficient algorithm to search for an item in an array.","completion":"One efficient algorithm to search for an item in an array is the binary search algorithm. The binary search algorithm works by dividing the array into two parts and then searching through the divided parts in logarithmic time. The algorithm starts by comparing the item to be searched with the middle element of the array. If the item is smaller than the middle element, then the algorithm searches the first part of the array. If the item is larger than the middle element, then the algorithm searches the second part of the array. The process is then repeated until the item is found or the algorithm reaches the end of the array."},{"prompt":"Explain why recursion is a powerful technique for solving problems.","completion":"Recursion is a powerful technique for solving problems because it allows for decomposing complex problems into simpler subproblems. By breaking down a problem into smaller components, it becomes easier to solve. This process can be repeated until a base case is reached, providing a way to reach a solution for the original problem. Additionally, recursive solutions tend to be shorter and easier to comprehend than iterative solutions."},{"prompt":"Create a function in Python which takes a string and an integer n as input and returns a string with the first n characters of the given string.","completion":"def get_first_n_chars(string, n): return string[:n]"},{"prompt":"dentify the most efficient algorithm to find the maximum element in an array.","completion":"The most efficient algorithm to find the maximum element in an array is the Linear Search algorithm. This algorithm works by looping through the array and comparing each element to find the maximum element. This algorithm takes O(n) time and requires no additional space."},{"prompt":"Write a Python program to reverse each word of a given sentence. This is a te","completion":"def reverse_words(sentence): words = sentence.split() reversed_words = [word[::-1] for word in words] return ' '.join(reversed_words) print(reverse_words(\\"This is a test\\")) # Output: sihT si a tset"},{"prompt":"w would you verify that a given string is a valid email address?","completion":"To verify that a given string is a valid email address, you should use a regular expression. A regular expression is a sequence of characters which can be used to check if the string matches a predefined pattern. The pattern for a valid email address should ensure that it contains the symbol \\"@\\" and at least one period (.) in the domain name."},{"prompt":"Create a function in Python which takes an integer n and an unsorted list of numbers as input and returns the nth smallest number in the list. [5, 8, 1, 9, 4], 3","completion":"def nth_smallest(nums, n): sorted_nums = sorted(nums) return sorted_nums[n-1] print(nth_smallest([5, 8, 1, 9, 4], 3)) # Output: 5"},{"prompt":"Create a C++ program that computes the average of the given array elements. arr = {1, 2, 3, 4, 5}","completion":"#include <iostream> int main() { int arr[] = {1, 2, 3, 4, 5}; int sum = 0; int n = 5; for (int i = 0; i < n; i++) { sum = sum +arr[i]; } int avg = sum/n; std::cout << \\"Average = \\" << avg; return 0; }"},{"prompt":"Sort the following list of strings. list = [\\"apple\\", \\"mango\\", \\"banana\\", \\"pear\\"]","completion":"list = [\\"apple\\", \\"banana\\", \\"mango\\", \\"pear\\"]"},{"prompt":"Write a function in JavaScript that takes two arguments and adds them.","completion":"function add(a, b) { return a + b; }"},{"prompt":"Create a program that accepts two strings as input, and then check to see if the two strings are an anagram of each other. word1 = ‘earth’ word2 = ‘heart’","completion":"def check_anagrams(word1, word2): return sorted(word1) == sorted(word2) word1 = 'earth' word2 = 'heart' print(check_anagrams(word1, word2))"},{"prompt":"Generate a correct for loop that prints every other number between 0 and 10.","completion":"for num in range(0, 11, 2): print(num)"},{"prompt":"Create a function that takes a dictionary and an integer as parameters, and returns the value of the dictionary corresponding to the given integer. dictionary = {1: \\"Monday\\", 2: \\"Tuesday\\", 3: \\"Wednesday\\"} integer = 2","completion":"def get_value(dictionary, integer): return dictionary[integer] dictionary = {1: \\"Monday\\", 2: \\"Tuesday\\", 3: \\"Wednesday\\"} integer = 2 print(get_value(dictionary, integer))"},{"prompt":"Create a function in JavaScript for reversing the order of the characters in a given string. var str = \\"TestString\\";","completion":"function reverseString(str) { var reversedStr = ''; for (var i = str.length - 1; i >= 0; i--){ reversedStr += str[i]; } return reversedStr; } console.log(reverseString(str)); // gnirtSEtsT"},{"prompt":"Create an HTML document to display \\"Hello, World!\\" in bold.","completion":"<!DOCTYPE html> <html> <head> <title>Hello World</title> </head> <body> <b>Hello, World!</b> </body> </html>"},{"prompt":"Rewrite the following C# program to use a for loop instead of a while loop. int i = 0; while (i < 10) { Console.WriteLine(i); i++; }","completion":"for (int i = 0; i < 10; i++) { Console.WriteLine(i); }"},{"prompt":"Use CSS to center a div inside a parent div.","completion":".parent { position: relative; } .child { position: absolute; top: 50%; left: 50%; transform: translate(-50%, -50%); }"},{"prompt":"Compute the area and perimeter of a triangle Base: 5 cm Height: 10 cm","completion":"Area = 25 cm^2 Perimeter = 15.59 cm"},{"prompt":"Write a SQL query to group salary data by job type Table Employee: +----+----------+-----------+-----------+ | ID | Name | Job | Salary | +----+----------+-----------+-----------+ | 1 | John | Manager | 150000 | | 2 | Tom | Engineer | 80000 | | 3 | Nick | Manager | 120000 | | 4 | Alice | Engineer | 87500 | | 5 | Steve | Designer | 50000 | | 6 | Mary | Designer | 62500 | +----+----------+-----------+-----------+","completion":"SELECT Job, AVG(Salary) FROM Employee GROUP BY Job"},{"prompt":"Using regex, convert a string of dates from the format 'dd/mm/yyyy' to 'mm/dd/yyyy' String \\"05/06/2019, 10/08/2020","completion":"String \\"06/05/2019, 08/10/2020\\""},{"prompt":"Using HTML and CSS, create a simple two-columns landing page.","completion":"<!DOCTYPE html> <html> <head> <title>Two-Column Layout</title> <style> /* define a fixed width for the entire content */ .wrapper{ width: 1000px; margin: 0 auto; } /* define the size and margin of the two columns */ .main-column{ float: left; width: 650px; margin-right: 20px; } .side-column{ float: left; width: 300px; } </style> </head> <body> <div class=\\"wrapper\\"> <div class=\\"main-column\\"> <!-- content in main column --> </div> <div class=\\"side-column\\"> <!-- content in side column --> </div> </div> </body> </html>"},{"prompt":"Create the following table using the Python language:","completion":"table = [[\\"Name\\", \\"Age\\", \\"Gender\\"],[\\"John\\", 20, \\"Male\\"], [\\"Anna\\", 18, \\"Female\\"],[\\"Adam\\", 22, \\"Male\\"], [\\"Sophie\\", 19, \\"Female\\"]]"},{"prompt":"Come up with a python code to find the mean of a list of numbers. nums = [78, 79, 79, 79, 79, 80]","completion":"total = 0 for num in nums: total += num mean = total/len(nums) print(mean)"},{"prompt":"Create HTML code for a two-column page layout with two paragraphs in each column.","completion":"<style> .container { display: flex; justify-content: space-around; } .text { width: 45%; } </style> <div class=\\"container\\"> <div class=\\"text\\"> <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nam vel tempus velit, vel auctor erat. Nam maximus varius urna quis ornare.</p> <p>Vestibulum iaculis augue et dui maximus, eu auctor dui aliquet. Interdum et malesuada fames ac ante ipsum primis in faucibus.</p> </div> <div class=\\"text\\"> <p>Sed et metus pulvinar, ultricies sapien sed, dignissim leo. Integer ex est, consequat non mi eget, convallis egestas mauris.</p> <p>Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. Morbi cursus, magna at bibendum semper, erat lacus commodo nisi.</p> </div> </div>"},{"prompt":"Write a query to find all entries in a table called customers with postal code 32412.","completion":"SELECT * FROM customers WHERE postal_code = '32412';"},{"prompt":"Generate an SQL statement to add a row in the customers table where the columns are name, address, and city. name = 'John'; address = '123 Main Street'; city = 'Winter Park';","completion":"INSERT INTO customers (name, address, city) VALUES ('John', '123 Main Street', 'Winter Park');"},{"prompt":"Devlop a SQL query to update the address for a user with id 10. user_id = 10 new_address = '321 Market Street'","completion":"UPDATE customers SET address = '321 Market Street' WHERE user_id = 10;"},{"prompt":"Edit the following piece of code to form a valid sentence. This poet is one of America's most loved poets.","completion":"This poet is one of America's most beloved poets."},{"prompt":"Train a linear regression model on a dataset containing m columns and n rows.","completion":"model = LinearRegression() model.fit(X, y)"},{"prompt":"For a given network layer, compute the total number of weights. Number of input neurons: 4, Number of output neurons: 3","completion":"The total number of weights in the network layer is 4 * 3 = 12."},{"prompt":"Classify the following statement as true or false. The square root of 4 is 2.","completion":"True. The square root of 4 is 2."},{"prompt":"mplement a function which takes an array and returns the maximum number. [2, 4, 8, 6]","completion":"def max_num(arr): n = arr[0] for i in range(len(arr)): if arr[i] > n: n = arr[i] return n max_num([2, 4, 8, 6]) # Output: 8"},{"prompt":"Determine the output of the following code. for i in range(2, 8): print(i * i)","completion":"4 9 16 25 36 49"},{"prompt":"Convert the following SQL query to its equivalent Python expression. SELECT name FROM students WHERE age > 18","completion":"[student['name'] for student in students if student['age'] > 18]"},{"prompt":"w many times will the following loop be executed? for i in range(5): print('Hello')","completion":"The loop will be executed 5 times. The range function will generate numbers from 0 to 4 (inclusive). Therefore, the loop will be executed 5 times with 'Hello' being printed each time."},{"prompt":"What's the average value of the following list of numbers? [2, 3, 6, 4]","completion":"The average value of [2, 3, 6, 4] is 3.75. This can be calculated by summing up all of the numbers, i.e. 2 + 3 + 6 + 4 = 15, and then dividing by the number of elements in the list, i.e. 4. Therefore, the average value is 15 / 4 = 3.75."},{"prompt":"Develop a Python function to append a number with zeros to a given string up to a maximum number of characters. string = \\"some_string\\", max_len = 10","completion":"def append_num_with_zeros(string, max_len): \\"\\"\\"Append a number with zeros to a given string up to a maximum number of characters.\\"\\"\\" # Convert string to list ls = list(string) # Calculate number of zeros required to append num_zeros = max_len - len(string) # Append zeros for i in range(num_zeros): ls.append('0') # Convert list back to string return ''.join(ls)"},{"prompt":"mprove the following code snippet to make it more efficient and organized. def printElements(list): for element in list: print(element)","completion":"def printElements(list): \\"\\"\\"Print all elements of a given list.\\"\\"\\" # Check if list is empty if not list: print(\\"List is empty\\") # Loop through the list else: for element in list: print(element)"},{"prompt":"Remove all duplicate words from the given sentence. sentence = \\"All all are are we we here here to to help help.","completion":"sentence = 'All are we here to help.'"},{"prompt":"Name the commonly used data structure for implementing stacks.","completion":"The commonly used data structure for implementing stacks is a linked list."},{"prompt":"Create a class to represent a complex number with two private fields (x, y) and two public member functions (getMagnitude, increment) in Java.","completion":"public class ComplexNumber { private double x; private double y; public ComplexNumber(double x, double y) { this.x = x; this.y = y; } public double getMagnitude() { return Math.sqrt(x * x + y * y); } public void increment() { this.x++; this.y++; } }"},{"prompt":"Create a function to calculate the sum of numbers from a given list in Python.","completion":"def sum_list(list): \\"\\"\\"Calculate the sum of numbers from a given list\\"\\"\\" # Initialize sum s = 0 # Sum the list for number in list: s += number # Return the result return s"},{"prompt":"Create a code snippet to print the star pattern below in Python.","completion":"# Print the pattern rows = 5 for i in range(0, rows): for j in range(0, i + 1): print(\\"*\\", end=' ') print(\\"r\\")"},{"prompt":"Write an SQL query to count the number of records with age greater than 25 from a given table.","completion":"SELECT COUNT(*) FROM table WHERE age > 25;"},{"prompt":"Add exception handling for user-defined errors to the following code snippet in Java. public class MyClass { public static void main(String[] args) { int x = 4; int y = 2; int z = x/y; System.out.println(z); } }","completion":"public class MyClass { public static void main(String[] args) { try { int x = 4; int y = 2; int z = x/y; System.out.println(z); } catch (ArithmeticException ex) { System.out.println(\\"Division by zero not allowed.\\"); } } }"},{"prompt":"Write a code snippet to get the remainder when 34 is divided by 5 in JavaScript.","completion":"let num = 34; let divisor = 5; let remainder = num % divisor; console.log(remainder); // prints 4"},{"prompt":"Construct an SQL query that selects the employee name, job title, and salary for employees with a salary greater than 50,000. Table Name: employee Columns: Name, JobTitle, Salary","completion":"SELECT Name, JobTitle, Salary FROM employee WHERE Salary > 50000;"},{"prompt":"Write a JavaScript code snippet that creates a pop-up window with the text \\"Welcome!\\".","completion":"window.alert('Welcome!');"},{"prompt":"Request the age of a user using HTML and store the user's answer in a variable called \\"Age\\".","completion":"<label for=\\"age\\">Please enter your age: </label> <input type=\\"number\\" name=\\"age\\" id=\\"age\\"> // Store the user's answer in a variable var Age = document.getElementById(\\"age\\").value;"},{"prompt":"Create a SQL query that searches the database for users with names beginning with the letter 'A'. Table Name: User","completion":"SELECT * FROM Users WHERE name LIKE 'A%';"},{"prompt":"Construct an SQL query that returns records for users with a name starting with the letter 'S' or 'T'. Table Name: user","completion":"SELECT * FROM users WHERE name LIKE 'S%' OR name LIKE 'T%';"},{"prompt":"Construct an SQL query that averages the grades of students belonging to the Physics department. Table Name: Grade","completion":"SELECT AVG(grade) FROM Grades WHERE department = 'Physics';"},{"prompt":"Create a Python function that prints all the values in a dictionary. Dictionary: { \\"a\\": 1, \\"b\\": 2, \\"c\\": 3 }","completion":"def printDictValues(dict): for key, value in dict.items(): print(value) printDictValues({\\"a\\": 1, \\"b\\": 2, \\"c\\": 3})"},{"prompt":"Construct an SQL query to search the database for the user with the highest score. Table Name: user","completion":"SELECT * FROM users ORDER BY score DESC LIMIT 1;"},{"prompt":"What data type in JavaScript corresponds to a finite set of distinct values?","completion":"In JavaScript the data type that corresponds to a finite set of distinct values is an Enum. An Enum is a collection of related values that can be represented as a set of named constants. These constants can be used to represent a single value in many different forms. Each Enum value can be represented numerically or by a String literal value."},{"prompt":"Write a macro in C++ that prints half of the cube of a number","completion":"#include <iostream> #define CUBE(x) ((x)*(x)*(x)) #define HALF_CUBE(x) ( (CUBE(x) )/2 ) int main() { int x = 3; std::cout << HALF_CUBE(x) << std::endl; return 0; }"},{"prompt":"What data structure would be best to store an employee roster containing their name, age, and gender?","completion":"The best data structure for storing an employee roster containing their name, age, and gender would be a hash table. A hash table is a data structure that allows for fast lookups and inserts by mapping values to keys. Each employee can be stored as a key-value pair, with their name, age, and gender as the respective values."},{"prompt":"Create a for-loop structure in Java that prints out each index in the array A from 0 to the length of A minus 1. int[] A = {1, 2, 3, 4, 5}","completion":"for(int i = 0; i < A.length; i++) { System.out.println(\\"A[\\" + i + \\"] = \\" + A[i]); }"},{"prompt":"What is the JavaScript syntax for declaring a variable with the value of \\"hello\\"?","completion":"The JavaScript syntax for declaring a variable with the value of \\"hello\\" is \\"var myVariable= 'hello';\\"."},{"prompt":"Suggest a name for a new string variable.","completion":"The name for the new string variable could be \\"nameString\\"."},{"prompt":"Reverse the following linked list in Java. // single linked list Node { int data; Node next; } head | V 1 -> 2 -> 3 -> 4 -> NULL","completion":"// single linked list Node { int data; Node next; } head | V 4 -> 3 -> 2 -> 1 -> NULL"},{"prompt":"Write a function in JavaScript that takes the two given arrays, A and B, and merges them into a single array. let A = [1, 2, 3]; let B = [4, 5, 6];","completion":"function mergeArrays(A, B) { let merged = []; let indexA = 0; let indexB = 0; while (indexA < A.length && indexB < B.length) { merged.push(A[indexA], B[indexB]); indexA++; indexB++; } if (indexA < A.length) { for (let i=indexA; i < A.length; i++) { merged.push(A[i]); } } if (indexB < B.length) { for (let i=indexB; i < B.length; i++) { merged.push(B[i]); } } return merged; }"},{"prompt":"Create a HTML page with 4 divs, one of them should have text aligned in the center.","completion":"<!DOCTYPE html> <html> <head> <title>4 Divs</title> </head> <body> <div> This div does not contain any special styling </div> <div> This div is colored red <style>div { background-color: red; } </style> </div> <div> This div is colored blue <style>div { background-color: blue; }</style> </div> <div style=\\"text-align: center;\\"> This div has the text aligned in the center </div> </body> </html>"},{"prompt":"What is the command to run a Python script from the command line?","completion":"The command to run a Python script from the command line is \`python filename.py\`."},{"prompt":"Create a HTML page with a textbox, button and a message “Hello World!”","completion":"<html> <head></head> <body> <input type=\\"text\\" id=\\"textbox\\"> <button onclick=\\"sayHello()\\">Say Hello</button> <p id=\\"message\\">Hello World!</p> <script> function sayHello() { var text = document.getElementById('textbox').value; document.getElementById('message').innerHTML = \\"Hello \\" + text + \\"!\\"; } <\/script> </body> </html>"},{"prompt":"Write a CSS rule to center align a div element with id=\\"content","completion":"#content { margin: 0 auto; width: 70%; text-align: center; }"},{"prompt":"Write a PowerShell script to list all the installed applications on a Windows machine","completion":"Get-ItemPropertyHKLM:SoftwareWow6432NodeMicrosoftWindowsCurrentVersionUninstall* | select-Object DisplayName, Publisher"},{"prompt":"What is the MySQL command to drop a database named 'test'","completion":"The MySQL command to drop a database named 'test' is \`DROP DATABASE test;\`."},{"prompt":"Create a Node.js program to print the first 5 prime numbers","completion":"const prime_nums = () => { let count = 0; let num = 2; while(count < 5) { if(isPrime(num)) { console.log(num); count++; } num++; } } function isPrime(n) { for(let i = 2; i < n; i++) if(n % i === 0) return false; return true; } prime_nums();"},{"prompt":"Write a line of code to input 10 numbers from the user.","completion":"a = list(map(int, input(\\"Enter 10 numbers: \\").split()))"},{"prompt":"Create a function to compare two strings and output their similarity score. string_1 = \\"python\\" string_2 = \\"coding","completion":"def compare_strings(string_1, string_2): similarity_score = 0 n = min(len(string_1), len(string_2)) for i in range(n): if string_1[i] == string_2[i]: similarity_score += 1 return similarity_score"},{"prompt":"Output the total number of elements in a given list. list_numbers = [1, 2, 3, 4, 5]","completion":"def count_list_elements(list_numbers): count = 0 for element in list_numbers: count += 1 return count"},{"prompt":"Create a function to search for a given element in a list and output its index. list_numbers = [1, 2, 3, 4, 5]","completion":"def search_list(list_numbers, element): for i in range(len(list_numbers)): if list_numbers[i] == element: return i"},{"prompt":"Write a command to install a package in Node.js from the Node Package Manager. Package name: ej","completion":"npm install ejs"},{"prompt":"Create an HTML element for a paragraph and add five sentences to it.","completion":"<p> This is the first sentence. This is the second sentence. This is the third sentence. This is the fourth sentence. This is the fifth sentence. </p>"},{"prompt":"Write a function in C# to round a given number to the next closest integer. Number: 27.7","completion":"public static int RoundToNearestInteger(double number) { return (int)Math.Round(number, 0); } RoundToNearestInteger(27.7); //output: 28"},{"prompt":"Write an if-else statement in Java to check if a given number is greater than or equal to 15. Number: 9","completion":"int number = 9; if (number >= 15) { System.out.println(\\"Number is greater than or equal to 15\\"); } else { System.out.println(\\"Number is less than 15\\"); }"},{"prompt":"Construct a regular expression pattern in Python that matches all emails.","completion":"pattern = r\\"[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+.[A-Za-z]{2,63}\\""},{"prompt":"Create a React component that displays an alert when a button is clicked.","completion":"import React from 'react'; class AlertButton extends React.Component { onClick() { alert('Button clicked!'); } render() { return ( <button onClick={this.onClick}>Click me</button> ); } }"},{"prompt":"Write a Bash command that outputs the system's date as \\"DD-MM-YYYY\\".","completion":"date +\\"%d-%m-%Y\\""},{"prompt":"Create a Swift class called \\"Vehicle\\" that includes two properties: a model name (String) and a year (Int).","completion":"class Vehicle { let modelName: String let year: Int init(modelName: String, year: Int) { self.modelName = modelName self.year = year } }"},{"prompt":"Write a function in Go language that will return the number of elements in a slice.","completion":"func len(s []int) int { return len(s) }"},{"prompt":"Create a thread-safe Java method that increments a given counter.","completion":"public static synchronized void incrementCounter(int counter) { counter += 1; }"},{"prompt":"Create a class in TypeScript that contains a method that takes two numbers, adds them, and returns the result.","completion":"class Math { add(n1: number, n2: number): number { return n1 + n2; } }"},{"prompt":"Construct an HTML form that includes two input fields, one for a name and one for an email address.","completion":"<form action=\\"\\"> <label>Name:</label> <input type=\\"text\\" name=\\"name\\"> <label>Email Address:</label> <input type=\\"email\\" name=\\"email\\"> </form>"},{"prompt":"Design an algorithm in JavaScript that finds the most frequent element in an array.","completion":"function mostFrequentElem(arr) { let countMap = new Map(); for (let i = 0; i < arr.length; i++) { if (!countMap.has(arr[i])) { countMap.set(arr[i], 1); } else { let val = countMap.get(arr[i]); countMap.set(arr[i], val + 1); } } let maxCount = 1; let maxElem; for (let [key, val] of countMap.entries()) { if (val > maxCount) { maxCount = val; maxElem = key; } } return maxElem; }"},{"prompt":"Write a SQL query to retrieve the last four entries of a table called \\"students\\".","completion":"SELECT * FROM students ORDER BY id DESC LIMIT 4;"},{"prompt":"Create a rake task in Ruby that updates the system time.","completion":"task :update_time do system(\\"date +%T -s '#{Time.now.strftime(\\"%H:%M:%S\\")}'\\") end"},{"prompt":"Write a command to retrieve the first n items from a list. [10, 20, 30, 40, 50], n = 3","completion":"[10, 20, 30]"},{"prompt":"Create a JSON object with the following elements: firstname, lastname, age","completion":"{ \\"firstname\\": \\"John\\", \\"lastname\\": \\"Doe\\", \\"age\\": 25 }"},{"prompt":"Edit this code to sort a list of strings alphabetically mylist = [\\"Eggs\\", \\"Cheese\\", \\"Milk\\"]","completion":"mylist.sort()"},{"prompt":"Create a HTML page that prints the following message \\"Welcome to my website!","completion":"<html> <head> <title>Welcome to my website!</title> </head> <body> <h1>Welcome to my website!</h1> </body> </html>"},{"prompt":"Write an SQL query to select all the customers who are from the US.","completion":"SELECT * FROM customers WHERE country = 'US';"},{"prompt":"Explain in detail what is the significance of a local variable in Python","completion":"A local variable in Python is a variable that is declared within a function or a class. It is a variable that only exists in the context of that function or class, and cannot be accessed outside the function or class in which it is declared. Local variables are also referred to as \\"lexical\\" or \\"automatic\\" variables because they are automatically scoped to the function or class in which they are declared. They are different from global variables, which are available to the entire program. Local variables are helpful in limiting the scope of a variable, which means that the variable is only accessible in the function or class in which it is declared. This can help make code more efficient, clear, and secure."},{"prompt":"w would you create a table in a database using SQL commands?","completion":"To create a table in a database using SQL commands, you would use the following SQL statement: CREATE TABLE <table_name>(column_name datatype);"},{"prompt":"Write a code snippets in Python to print the contents of a dictionary. {\\"key1\\": \\"value1\\", \\"key2\\": \\"value2\\"}","completion":"for key, value in dict.items(): print(\\"Key: {}, Value: {}\\".format(key, value))"},{"prompt":"Write a SQL query to insert new data into a table. Table Name: users Columns: id, name, email Data: 1, John Doe, john@example.com","completion":"INSERT INTO users (id, name, email) VALUES (1, 'John Doe', 'john@example.com');"},{"prompt":"Construct an object literal in JavaScript to describe a person's name and age.","completion":"let person = { name: \\"John\\", age: 20 };"},{"prompt":"mplement a linked list structure with an insert method using Java.","completion":"class Node { int data; Node next; Node (int data) { this.data = data; this.next = null; } } class LinkedList { Node head; public void insert(int data) { Node newNode = new Node(data); if (head == null) { head = newNode; } else { Node current = head; while (current.next != null) { current = current.next; } current.next = newNode; } } }"},{"prompt":"Find the indices of the two numbers in an array that have the sum of a given number using JavaScript. let arr = [2, 5, 11, 15], targetSum = 16;","completion":"function twoNumSum(arr, targetSum) { let hash = {}; for(let i = 0; i < arr.length; i++){ let current = arr[i]; if(hash[current] !== undefined) return [hash.current, i]; else hash[targetSum - current] = i; } return []; }"},{"prompt":"Build an HTML table with 3 columns and 5 rows using JavaScript.","completion":"var htmlTable = '<table border=\\"1\\">'; // Create the table rows for (var i = 0; i < 5; i++){ htmlTable += '<tr>'; // Create the table columns for (var j = 0; j < 3; j++){ htmlTable += \\"<td></td>\\"; } htmlTable += \\"</tr>\\"; } htmlTable += \\"</table>\\";"},{"prompt":"Write a SQL query to find all orders greater than a given value.","completion":"SELECT * FROM orders WHERE value > [INPUT VALUE];"},{"prompt":"Construct an array of objects in JavaScript to represent a list of users.","completion":"let users = [ { username: 'John', age: 20 }, { username: 'Jane', age: 22 }, { username: 'Jacob', age: 25 } ];"},{"prompt":"Write a code to generate n terms of the Fibonacci sequence.","completion":"def get_fibonacci(n): \\"\\"\\" Generates n terms of the Fibonacci sequence Args: n (int): The number of Fibonacci terms to generate Returns: list: A list of the first n Fibonacci numbers \\"\\"\\" # Initialize first two Fibonacci numbers a = 0 b = 1 # Initialize the Fibonacci Sequence list fibonacci_sequence = [] fibonacci_sequence.append(a) fibonacci_sequence.append(b) # Generate the Fibonacci Sequence while len(fibonacci_sequence) < n: c = a + b fibonacci_sequence.append(c) a = b b = c return fibonacci_sequence"},{"prompt":"Print the nth element from a spin lock sequence using only O(1) space.","completion":"def get_spinlock_element(n): \\"\\"\\" Prints the nth element from a spin lock sequence using only O(1) space Args: n (int): The number of the element to be retrieved Returns: int: The nth element \\"\\"\\" # Initialize the step size step_size = 343 # Find the previous two elements in the iteration first = 0 second = 0 # Initialize the index of the element to be retrieved index = 0 # Iterate over the elements until we reach the desired element while index < n: # Generate the next element in the sequence element = first + second + 1 # Update the previous two elements first, second = second, element # Move the index index += step_size # Return the element at the nth position return element"},{"prompt":"Merge two sorted linked lists and return it as a new list.","completion":"def merge_sorted_lists(list1, list2): \\"\\"\\" Merges two sorted linked lists and returns it as a new list Args: list1 (list): The first sorted linked list list2 (list): The second sorted linked list Returns: list: The merged sorted linked list \\"\\"\\" # Initialize the merged list merged_list = [] # Initialize the pointers i = 0 j = 0 # Iterate over the two lists while i < len(list1) and j < len(list2): # Add the element with the smaller value to the merged list if list1[i] < list2[j]: merged_list.append(list1[i]) i += 1 else: merged_list.append(list2[j]) j += 1 # Add the remaining elements to the merged list while i < len(list1): merged_list.append(list1[i]) i += 1 while j < len(list2): merged_list.append(list2[j]) j += 1 return merged_list"},{"prompt":"Construct a query to retrieve the names and ages of all customers","completion":"SELECT name, age FROM customers;"},{"prompt":"Construct a DB search query to find a customer by name Name of the customer: Joh","completion":"SELECT * FROM customers WHERE name=\\"John\\";"},{"prompt":"Construct a regex pattern to match a valid IP address","completion":"^(((25[0–5]|2[0-4][0–9]|[01]?[0-9][0–9]?).){3}(25[0–5]|2[0-4][0–9]|[01]?[0–9][0–9]?))"},{"prompt":"Write an algorithm to find the area of a triangle","completion":"Algorithm: 1. Take the input for the sides of the triangle. 2. Calculate the semiperimeter of the triangle using the formula (a+b+c)/2 3. Calculate the area of the triangle using the formula: area = √(s(s-a)(s-b)(s-c))"},{"prompt":"Create a neural network to classify types of dogs","completion":"import keras import numpy as np from keras.layers import Dense from keras.models import Sequential # Building a Sequential model model = Sequential() # Input layer with 2 neurons model.add(Dense(2, input_dim=64, activation='relu')) # Hidden layer with 3 neurons model.add(Dense(3, activation='relu')) # Output layer with 15 neurons (15 classes) model.add(Dense(15, activation='softmax')) # Compiling and training the model model.compile(loss='mean_squared_error', optimizer='adam', metrics=['accuracy']) model.fit(training_samples, labels, epochs=100)"},{"prompt":"Develop a program to encrypt a text","completion":"#include <stdio.h> #include <string.h> // Encode a string using Ceasar cipher string ceasar_encode(string s, int k) { // Declare a variable to store the encoded string string encoded_str = \\"\\"; // Loop through the string and encode each character for (int i=0; i<strlen(s); i++) { // Shift each character with the given key char enc = ((s[i]-'a' + k) % 26) + 'a'; encoded_str += enc; } return encoded_str; } int main() { before = \\"abcdefghijklmnopqrstuvwxyz\\"; after = ceasar_encode(before, 5); printf(\\"%sn\\", after); return 0; } // Output: fghijklmnopqrstuvwxyzabcde"},{"prompt":"Develop a web page which takes user inputs and validates them","completion":"<!DOCTYPE html> <html> <head> <title>Validate user input</title> <script> function validateInput() { var name = document.getElementById(\\"name\\").value; var email = document.getElementById(\\"email\\").value; if (name.length == 0 || email.length == 0) { alert(\\"Please enter your name and email.\\"); return false; } if (!email.includes(\\"@\\")){ alert(\\"Please enter a valid email address.\\"); return false; } return true; } <\/script> </head> <body> <h3>Validate user input</h3> <form onsubmit=\\"return validateInput()\\"> Name: <input type=\\"text\\" id=\\"name\\" name=\\"name\\" /> <br/> Email: <input type=\\"text\\" id=\\"email\\" name=\\"email\\" /> <br/> <input type=\\"submit\\" value=\\"Submit\\" /> </form> </body> </html>"},{"prompt":"w do you compare two numbers, num1 and num2, in python?","completion":"We can compare two numbers, num1 and num2, in Python using the comparison operators. These are the equality operators (== and !=), the relational operators (> and <) and the logical operators (and, or, not). For example, \`\`num1 == num2\`\` checks if two numbers are equal, \`\`num1 > num2\`\` checks if num1 is greater than num2, and \`\`num1 < num2\`\` checks if num1 is less than num2. We can also use logical operators like \`\`num1 > num2 and num2 < num3\`\`, which checks if num1 is greater than num2 and num2 is less than num3."},{"prompt":"Read the input and print the output in the specified format. Name: John Age: 23","completion":"Hello, my name is John and I am 23 years old."},{"prompt":"Suggest a code to execute when a condition is met. if volume > 10","completion":"if volume > 10: # Do something print(\\"Volume is greater than 10\\")"},{"prompt":"Convert the following python code to an equivalent JavaScript code. for item in items: print(item)","completion":"items.forEach(item => { console.log(item); });"},{"prompt":"Suggest a code to get the smallest and largest number in an unsorted list.","completion":"def get_smallest_largest(arr): \\"\\"\\" Function to return the smallest and largest numbers in a list Parameters: arr: An unsorted list of numbers Returns: A tuple containing the smallest and largest numbers in the list \\"\\"\\" smallest = arr[0] largest = arr[0] for elem in arr: if elem < smallest: smallest = elem if elem > largest: largest = elem return (smallest, largest)"},{"prompt":"Read the input and output the reverse of each word. List of words: Apple Banana Car","completion":"elppA ananab raC"},{"prompt":"For the following function, suggest a test case that can be used to check the correctness of the function. def find_mode(arr): \\"\\"\\" Function to find the mode of a list Parameters: arr: The list of values Returns: The mode of the list \\"\\"","completion":"A test case that can be used to check the correctness of the function is to pass the list [1, 1, 2, 3, 3, 3] to the function. The function should return 3 as the mode, which is the element that appears most frequently in the list."},{"prompt":"Suggest a code to create an empty list.","completion":"mylist = [] # Create an empty list"},{"prompt":"What is the meaning of the modulo operator in python?","completion":"In Python, the modulo operator (also known as the “remainder” or “modulus” operator) is the percentage sign (%). It is used to calculate the remainder after division of one number by another. For example, the expression “7 % 3” will evaluate to 1. This means that the remainder after 7 is divided by 3 is 1. Generally, the syntax for this operation is “a % b”, where a and b are numbers. The result of this operation is the remainder after a is divided by b."},{"prompt":"Suggest a code to add the values of all odd numbers in an array. arr = [1, 2, 3, 4, 5, 6]","completion":"total = 0 for num in arr: if num % 2 == 1: # Check if num is odd total += num"},{"prompt":"Create a bash script that prints out the days in a month.","completion":"#!/bin/bash for day in {1..31}; do echo \\"day\\" done"},{"prompt":"Construct an HTML table that contains the following headers: \\"Year\\", \\"Make\\", \\"Model\\".","completion":"<html> <table> <thead> <tr> <th>Year</th> <th>Make</th> <th>Model</th> </tr> </thead> </table> </html>"},{"prompt":"Create an object with the following properties, \`name\` of type \`string\`, \`age\` of type \`number\`, and \`pet\` of type \`boolean\`.","completion":"let exampleObject = { name: 'Bob', age: 26, pet: true };"},{"prompt":"Print the symmetric difference of two sets. set1 = {1, 2, 3, 4, 5}, set2 = {1, 3, 5, 7, 9}","completion":"{2, 4, 7, 9}"},{"prompt":"Replace NaN values in the given dataframe with a string. Stored in the form of a Pandas dataframe. 0 1 2 3 a NaN b NaN 4 NaN 5 6","completion":"Stored in the form of a Pandas dataframe. 0 1 2 3 a 'NA' b 'NA' 4 'NA' 5 6"},{"prompt":"Compute the mean of all the values in a column of a given dataframe. Stored in the form of a Pandas dataframe. 0 1 2 a 1 b 4 4 5","completion":"3.0"},{"prompt":"Construct a boolean check to detect if a given string contains the word \\"hello\\".","completion":"def contains_hello(input_string): return \\"hello\\" in input_string"},{"prompt":"Develop an algorithm that checks for balanced parentheses in a given string.","completion":"def is_balanced(input_string): stack = [] for char in input_string: if char == '(': stack.append(char) elif char == ')': if len(stack) == 0: return False else: stack.pop() return len(stack) == 0"},{"prompt":"Estimate how many words are present in the given text. The world of technology is rapidly evolving each day.","completion":"10"},{"prompt":"Construct a program to filter the list of names based on the given condition. names = [\\"Ada\\", \\"Bob\\", \\"Chris\\", \\"David\\", \\"Elsa\\", \\"Frank\\"] condition: length greater than 4","completion":"[\\"Ada\\", \\"Chris\\", \\"David\\", \\"Elsa\\", \\"Frank\\"]"},{"prompt":"Design a machine learning model to classify an article as either a sports article or a food article.","completion":"The machine learning model can be designed as a sequence of layers built with Keras, followed by a dense layer with two units – one for sports and one for food, and a softmax activation function to achieve the final output. We can feed the model with a dataset consisting of article texts labeled as 'sports' or 'food'. Then, the model can be trained using gradient descent. After training is complete, the model can be used to classify new articles as either 'sports' or 'food' articles."},{"prompt":"Write a JavaScript function that counts the number of times a given character appears in a string.","completion":"const countCharacter = (str, char) => { let count = 0; for (let i = 0; i < str.length; i++) { if (str.charAt(i) === char) { count += 1; } } return count; } // example call let str = \\"hello world\\"; let char = \\"l\\"; let count = countCharacter(str, char); console.log(count); // 3"},{"prompt":"Design a web scraper in Python to extract the text content from Wikipedia articles.","completion":"The web scraper can be designed using the Python library BeautifulSoup. The scraper can take a url of a wiki article as an argument and extract the text content using the method find_all('p'). The text content of the article can then be extracted using the get_text() method."},{"prompt":"mplement a Vue component that displays a table layout.","completion":"The component can be implemented in the following way: <template> <div> <table> <tr v-for=\\"row in rows\\"> <td v-for=\\"item in row\\">{{item}}</td> </tr> </table> </div> </template> <script> export default { name: 'TableComponent', props: { rows: { type: Array } } } <\/script>"},{"prompt":"Design a neural network model to detect the sentiment of a given sentence.","completion":"The designed neural network model can be implemented with an embedding layer followed by a convolutional layer and then a global max-pooling layer. The output of the pooling layer can be passed through a fully connected layer with a sigmoid activation function to achieve the final output of the model. We can feed the model with a dataset of sentences labeled as either 'positive' or 'negative'. The model can then be trained using gradient descent. After training is complete, the model can be used to detect the sentiment of new sentences as either 'positive' or 'negative'."},{"prompt":"Design a data structure to store a list of courses with their corresponding details.","completion":"The data structure to store a list of courses with their corresponding details can be a Python dictionary. The keys can be the course codes and the corresponding value can be a dictionary with the details of the course such as the name, number of credits, and description. Example: course_list = { 'MATH101': { 'name': 'Calculus', 'credits': 4, 'description': 'A study of calculus.' }, 'PHYS101': { 'name': 'Physics', 'credits': 5, 'description': 'An introduction to physics.' } }"},{"prompt":"Debug the following C++ program. #include<iostream> using namespace std; int main() { int a, b cin>>a,b; cout<<\\"The product is \\"<<a*b; return 0; }","completion":"#include<iostream> using namespace std; int main() { int a, b; cin>>a>>b; // change \\",\\" to \\">>\\" cout<<\\"The product is \\"<<a*b; return 0; }"},{"prompt":"Create a Java function that takes an integer array as a parameter and prints out the maximum element of the array. [1, 5, 9, 10, 12]","completion":"public static void printMax(int[] arr) { int max = arr[0]; for (int i = 1; i < arr.length;i++) { max = (arr[i] > max) ? arr[i] : max; } System.out.println(max); }"},{"prompt":"Write a SQL query to find the names of the people who are enrolled in both Physics and Math classes.","completion":"SELECT name FROM students WHERE enrolled_in = 'Physics' AND enrolled_in = 'Math';"},{"prompt":"Write a code snippet to compute the average of a set of integers. [3, 7, 11, 15]","completion":"def avg(arr): sum = 0 for num in arr: sum += num return sum/len(arr) numbers = [3, 7, 11, 15] average = avg(numbers) print(\\"Average of the numbers:\\",average) // Output: 9.5"},{"prompt":"Read the given Python code and generate the output for the following input. my_list = range(1, 11)","completion":"my_list = range(1, 11) output = 0 for i in my_list: output += i print(output) #55"},{"prompt":"Edit the given JavaScript code to convert the input string’s first letter to uppercase. let str = \\"hello world\\";","completion":"let str = \\"hello world\\"; str = str[0].toUpperCase() + str.slice(1);"},{"prompt":"Write a Python program to count how many times a given element appears in the list. my_list = [1, 2, 5, 4, 2, 1, 5]","completion":"my_list = [1, 2, 5, 4, 2, 1, 5] count = 0 for i in my_list: if i == 5: count += 1 print(count) #2"},{"prompt":"Create a PHP script to iterate through a list of numbers and determine if any of the numbers are divisible by 5. my_list = [18, 22, 10, 27]","completion":"<?php my_list = [18, 22, 10, 27]; divisible = False; foreach (my_list as num){ if(num % 5 == 0){ divisible = True; break; } } echo divisible;"},{"prompt":"Edit the following program to add 1 to each element of the list and print the result. my_list = [2, 5, 7, 9]","completion":"my_list = [2, 5, 7, 9] for (let i = 0; i < my_list.length; i++) { my_list[i] = my_list[i] + 1; } console.log(my_list); // [3, 6, 8, 10]"},{"prompt":"Read the following JavaScript code and add an appropriate input field for the function.","completion":"function reverse_string(string){ let reversed = ''; for(let i = string.length - 1; i >= 0; i--){ reversed += string[i]; } return reversed; } let input = \\"hello world\\"; console.log(reverse_string(input)); // dlrow olleh"},{"prompt":"Write a Java program to take in 3 strings and combine them into one. string1 = \\"hello\\" string2 = \\"world\\" string3 = \\"!","completion":"public class CombineStrings { public static void main(String[] args) { String string1 = \\"hello\\"; String string2 = \\"world\\"; String string3 = \\"!\\"; String output = string1 + string2 + string3 ; System.out.println(output); //hello world! } }"},{"prompt":"Edit the following code to take in a list of numbers and output the sum of all numbers in the list. my_list = [5, 10, 15, 20]","completion":"my_list = [5, 10, 15, 20] total = 0 for num in my_list: total += num print(total) #50"},{"prompt":"Create a Java program to determine whether a given string is a palindrome. A palindrome is a string which reads the same forwards and backwards.","completion":"public class Palindrome { public static boolean isPalindrome(String s) { int i = 0, j = s.length()-1; while (i < j) { if (s.charAt(i) != s.charAt(j)) return false; i++; j--; } return true; } public static void main(String[] args) { String s = \\"madam\\"; if (isPalindrome(s)) System.out.println(\\"The string is a palindrome.\\"); else System.out.println(\\"The string is not a palindrome.\\"); } }"},{"prompt":"You are given a list of names. Create a list whose elements are the length of each name in the original list. names = [\\"Max\\", \\"John\\", \\"Cindy\\", \\"Sarah\\"]","completion":"lens = [] for name in names: lens.append(len(name))"},{"prompt":"Read a sentence from the user, and then reverse its words in place.","completion":"sentence = input(\\"Please enter a sentence: \\") words = sentence.split() words.reverse() sentence = \\" \\".join(words) print(sentence)"},{"prompt":"Create two functions to check if a given list contains a specific element. list = [4, 1, 6, 9, 8] item = 8","completion":"def check_list(lst, item): return item in lst def check_list_version2(lst, item): for x in lst: if x == item: return True return False"},{"prompt":"Given a list of numbers, sort them from smallest to largest. lst = [3, 5, 2, 6, 8, 1]","completion":"lst.sort()"},{"prompt":"Unpack the elements in the given list of tuples and assign them to individual variables. lst = [(\\"Max\\", \\"Smith\\"), (\\"John\\", \\"Doe\\"), (\\"Cindy\\", \\"Wilson\\")]","completion":"for (name1, name2) in lst: first_name = name1 last_name = name2"},{"prompt":"Given two strings, concatenate them together and assign the result to a variable. str1 = \\"Hello\\" str2 = \\"World","completion":"res = str1 + str2"},{"prompt":"Convert the following list of strings to integers and calculate their total. lst = [\\"4\\", \\"5\\", \\"2\\", \\"6\\", \\"8\\", \\"1\\"]","completion":"total = 0 for s in lst: total += int(s)"},{"prompt":"Write a JavaScript function to generate a random string of 8 characters using lowercase alphabets and digits.","completion":"function getRandomString(){ let chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789'; let str = ''; for (let i=0; i<8; i++) str += chars.charAt(Math.floor(Math.random() * chars.length)); return str; }"},{"prompt":"Edit this HTML structure to add a footer at the bottom. <html> <head> <title>My Website</title> </head> <body> </body> </html>","completion":"<html> <head> <title>My Website</title> </head> <body> <footer> <p>Copyright © 20"},{"prompt":"Generate an HTML page with the following data fields: title, author, and content. title: Generating HTML page author: GPT content: This is an example of how you can generate an HTML page.","completion":"<html> <head> <title>Generating HTML Page</title> <meta name=\\"author\\" content=\\"GPT\\" /> </head> <body> <p>This is an example of how you can generate an HTML page.</p> </body> </html>"},{"prompt":"Modify the following code to print the keys of a dictionary. d = {'a':1, 'b':2, 'c':3}","completion":"d = {'a':1, 'b':2, 'c':3} for key in d: print(key)"},{"prompt":"Write a SQL query which will select column names from a certain table.","completion":"SELECT column_name FROM table_name;"},{"prompt":"Create an algorithm for finding the least common multiple of two numbers.","completion":"One algorithm to find the least common multiple of two numbers is as follows: Step 1: Find the greatest common divisor (GCD) of the two numbers. Step 2: Divide the product of the two numbers by the GCD to find the least common multiple (LCM). The GCD of two numbers can be found using the Euclidean algorithm, which works by continually dividing the larger number by the smaller number until they are equal. The GCD is then the smaller number."},{"prompt":"Construct a for loop in Java for iterating through an array.","completion":"for (int i = 0; i < array.length; i++) { System.out.println(array[i]); }"},{"prompt":"Replace the content of the variable \`\`x\`\` with a list of numbers. x = <noinput>","completion":"x = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]"},{"prompt":"Create a for loop to output the square roots of the numbers between 0 and 10 using the math library.","completion":"import math for i in range(0,11): print(math.sqrt(i))"},{"prompt":"Construct a helper function that prints the provided string twice.","completion":"def print_twice(string): print(string) print(string)"},{"prompt":"Form an if-else condition that prints “This is an even number” if a number is even and “This is an odd number” if the number is odd number = 5","completion":"if (number % 2 == 0): print(\\"This is an even number\\") else: print(\\"This is an odd number\\")"},{"prompt":"Construct a loop that prints the characters of the given string in reverse order. string = 'Hello World'","completion":"for i in range(len(string)-1, -1, -1): print(string[i], end=\\"\\")"},{"prompt":"Make a dictionary that contains the number of characters in each word from this list. list = ['apple', 'banana', 'cherry']","completion":"list_dict = { 'apple': 5, 'banana': 6, 'cherry': 6 }"},{"prompt":"Suggest two ways to loop through a python dictionary","completion":"1. Using for loop: for key, value in dict.items(): # Do something with key and value 2. Using while loop: keys = list(dict.keys()) i = 0 while i < len(keys): key = keys[i] value = dict[key] # Do something with key and value i += 1"},{"prompt":"Write a SQL query to extract the top 5 occurrences of the city names from the following table. Table: person ╔════╦═══════╦═════════╗ ║ id ║ name ║ city ║ ╠════╬═══════╬═════════╣ ║ 1 ║ Ann ║ Paris ║ ║ 2 ║ Jack ║ Tokyo ║ ║ 3 ║ Tom ║ Tokyo ║ ║ 4 ║ Daisy ║ Paris ║ ║ 5 ║ John ║ London ║ ║ 6 ║ Paul ║ London ║ ╚════╩═══════╩═════════╝","completion":"SELECT CITY, COUNT(*) as Occurrences FROM person GROUP BY City ORDER BY Count(*) DESC LIMIT 5;"},{"prompt":"Edit this line of code to make it work according to our requirements. print(\\"Hello\\",[1,2,3],sep='|')","completion":"print(\\"Hello\\",\\"|\\".join([str(x) for x in [1,2,3]]))"},{"prompt":"Write an assembly code to perform the task of incrementing a memory block by 8.","completion":"MOV AL, 8 MOV CX, Size CLD LOOP: LODSW ADD AL, 8 STOSW LOOP LOOP"},{"prompt":"ert this HTML element at the appropriate place. <h1>Important Text</h1>","completion":"<body> <p>Some other text here</p> <h1>Important Text</h1> </body>"},{"prompt":"Write some Java code to fill in an array of size n with all consecutive numbers from 1 to n.","completion":"public void fill(int[] array, int n) { for (int i = 0; i < n; i++) { array[i] = i + 1; } }"},{"prompt":"dentify the mistakes in the below code. def add_two_numbers(x, y): a = x + y return","completion":"The given code does not have any mistakes. All the syntax is correct and the code will perform its intended operation. The indentation of the code is also correct. However, it could be improved by adding descriptive variable and function names, adding comments to explain the code's purpose and by making sure that the code follows the established coding standards."},{"prompt":"Rewrite the following Java code into SQL to select all the distinct elements from a table. String sql = \\"SELECT DISTINCT * FROM table_name\\";","completion":"SELECT DISTINCT * FROM table_name;"},{"prompt":"Generate a Python Fibonacci sequence of length n n = 7","completion":"def fibonacci_sequence(n): nums = [] a, b = 0,1 for i in range(n): nums.append(a) a, b = b, a + b return nums print(fibonacci_sequence(7))"},{"prompt":"Spin up a container for an application with Docker-Compose Web App Image: my_web_app:v1","completion":"version: '3' services: web_app: image: my_web_app:v1 deploy: replicas: 1 restart_policy: condition: on-failure"},{"prompt":"Create a Go program to print out the cube of a given integer. Number: 5","completion":"package main import \\"fmt\\" func main() { num := 5 fmt.Println(\\"Cube of a given number is: \\", num*num*num) }"},{"prompt":"Using the JavaScript language, write a code snippet to display the current date.","completion":"var today = new Date() var date = today.getDate() + \\"/\\" + (today.getMonth()+1) + \\"/\\" + today.getFullYear() console.log(date)"},{"prompt":"Using CSS, style a page width 800px and a page height of 600px.","completion":"body { width: 800px; height: 600px; }"},{"prompt":"Create a Java program that prints a 10x10 multiplication table.","completion":"class MultiplicationTable { public static void main(String[] args) { System.out.print(\\" \\"); for(int i=1; i<=10; i++) System.out.printf(\\"%4d\\", i); System.out.println(); for(int i=1; i<=10; i++) { System.out.print(i + \\" \\"); for(int j=1; j<=10; j++) System.out.printf(\\"%4d\\", i * j); System.out.println(); } } }"},{"prompt":"Summarize the features of the Python pandas library.","completion":"Pandas is a Python library used for data manipulation and analysis. It provides an efficient and flexible data structure for labeled and relational data called DataFrame, and operations for groupby aggregation, merging, joining, reshaping, and other manipulations. It also offers statistical functions for descriptive statistics, optimization, plotting, and visualization. Finally, pandas is designed to be fast and efficient, with powerful options for indexing, handling missing data, time-series, and automatic conversion of data."},{"prompt":"Write a python program to create a class called cube.","completion":"class Cube: def __init__(self, length, width, height): self.length = length self.width = width self.height = height def calculate_volume(self): return self.length * self.width * self.height"},{"prompt":"Create a javascript class that takes in two arguments and prints them out when called.","completion":"class PrintNumber{ constructor(num1, num2){ this.num1 = num1; this.num2 = num2; } printNumber(){ console.log(\`{this.num1}, {this.num2}\`); } }"},{"prompt":"Explain the main differences between Java and Python.","completion":"The main differences between Java and Python include speed of development, execution speed, type safety, readability and syntax ease, standard libraries, and code scalability. Java is more popular in enterprise applications and is generally faster to develop than Python because of its statically typed language. Java has a JVM (Java Virtual Machine) making it faster to compile and execute than Python, which is dynamically typed. Java is more type-safe and easier to debug, while Python is more readable and easier to learn. Python also has wider range of standard libraries than Java, making development faster. Python is more scalable than Java, making it applicable for larger projects."},{"prompt":"Provide a syntactically correct C++ function that takes a number and returns a string representation of the number.","completion":"std::string intToString(int number){ std::stringstream ss; ss << number; return ss.str(); }"},{"prompt":"Concatenate the following two strings using C#. string str1 = \\"hello\\"; string str2 = \\"world\\";","completion":"string str1 = \\"hello\\"; string str2 = \\"world\\"; string result = str1 + str2;"},{"prompt":"Create an HTML page that uses the CSS box model to style a text.","completion":"<!DOCTYPE html> <html> <head> <title>Text Styling</title> <style> #text { border: solid 1px black; padding: 10px; width: 300px; margin: 10px auto; } </style> </head> <body> <div id=\\"text\\"> This is some sample text to demonstrate the CSS box model. </div> </body> </html>"},{"prompt":"Print a multiplication table for the number 4 in C.","completion":"#include <stdio.h> int main() { int i,j; for(i=1;i<=9;i++) { j=4*i; printf(\\"%d * %d = %dn\\",4,i,j); } return 0; }"},{"prompt":"Write a code to find the maximum value in a numeric array using recursion. array = [1, -2, 3, -4, 5]","completion":"def find_max(arr): #base case if len(arr) == 1: return arr[0] else: max_n = find_max(arr[1:]) #compare the maximum element with the first element of the array if arr[0] > max_n: return arr[0] else: return max_n # Print maximum value in the array print(find_max(array)) #output 5"},{"prompt":"Create a simple calculator program in Python.","completion":"def add(num1, num2): return num1 + num2 def subtract(num1, num2): return num1 - num2 def multiply(num1, num2): return num1 * num2 def divide(num1, num2): return num1 / num2 # Infinite loop until user chooses to exit while True: print(\\"Select operation:\\") print(\\"1. Add\\") print(\\"2. Subtract\\") print(\\"3. Multiply\\") print(\\"4. Divide\\") print(\\"5. Exit\\") choice = input(\\"Enter choice (1/2/3/4):\\") # Check if choice is one of the four options if choice in ('1', '2', '3', '4', '5'): num1 = float(input(\\"Enter first number: \\")) num2 = float(input(\\"Enter second number: \\")) if choice == '1': print(num1, \\"+\\", num2, \\"=\\", add(num1, num2)) elif choice == '2': print(num1, \\"-\\", num2, \\"=\\", subtract(num1, num2)) elif choice == '3': print(num1, \\"*\\", num2, \\"=\\", multiply(num1, num2)) elif choice == '4': print(num1, \\"/\\", num2, \\"=\\", divide(num1, num2)) elif choice == '5': break else: print(\\"Invalid Input\\") else: print(\\"Invalid Input\\")"},{"prompt":"Create a regular expression to match all numbers of the form 1xx-xxx-xxxx.","completion":"Regex pattern to match numbers in the given form: pattern = r'1d{2}-d{3}-d{4}'"},{"prompt":"Write an XPATH expression to find the text \\"Welcome\\" in an HTML document. <div> <h1>Welcome</h1> <p>Hello World!</p> </div>","completion":"//h1[contains(text(), \\"Welcome\\")]"},{"prompt":"Write a Java statement that takes a string as an argument and prints it out. String s = \\"Hello World!\\";","completion":"System.out.println(s);"},{"prompt":"Create a SQL query to select the most recent 5 posts from a table ordered by the post date.","completion":"SELECT * FROM Posts ORDER BY PostDate DESC LIMIT 5;"},{"prompt":"Write a JavaScript code snippet to check for an empty array. let array = [];","completion":"if (array.length === 0) { console.log('Array is empty'); }"},{"prompt":"Write a loop that iterates over the characters in a string, and if the character is an 'o', print the character. \\"Hello World","completion":"for char in \\"Hello World\\": if char == 'o': print(char)"},{"prompt":"Write a Java program to output the first ten numbers of the Fibonacci sequence.","completion":"class Fibonacci { public void printFibonacciNumbers(int n) { int first = 0; int second = 1; System.out.print(first + \\" \\" + second); for (int i = 2; i < n; i++) { int third = first + second; System.out.print(\\" \\"+third); first = second; second = third; } } }"},{"prompt":"Design a Node.js program to send a push notification to users when the deadline of a task is reached.","completion":"const { Notifications } = require('node-notifier'); function sendPushNotification() { const message = \\"This is a reminder that your deadline is approaching\\"; const notification = new Notifications({message}) notification.send(); }; // Function to monitor the deadline function deadlineMonitor() { setInterval(function(){ // Call function to check if the deadline has been reached deadlineReached(); }, 5000); } // Function to check if the deadline has been reached function deadlineReached() { // Set deadline let deadline = new Date(); deadline.setMinutes(deadline.getMinutes() + 15); // Current date const date = new Date(); // If the current date is equal to the deadline, call the push notification if (date === deadline) { sendPushNotification(); } }"},{"prompt":"Add a function to implement a basic calculator in C++.","completion":"#include <iostream> using namespace std; int addition(int a, int b){ return (a+b); } // Subtraction function int subtraction(int a, int b){ return (a-b); } // Multiplication function int multiplication(int a, int b){ return (a*b); } // Division function int division(int a, int b){ return (a/b); } // Function to perform basic calculator operations int calculate(int a, int b, char c){ int result; switch (c){ case '+': result = addition(a, b); break; case '-': result = subtraction(a, b); break; case '*': result = multiplication(a, b); break; case '/': result = division(a, b); break; default: break; } return result; } int main(){ int x, y; char a; cout << \\"Please enter two numbers: \\"; cin >> x >> y; cout << \\"Please enter an operator: \\"; cin >> a; int result = calculate(x, y, a); cout << \\"The result is: \\" << result; return 0; }"},{"prompt":"Explain the differences between a multi-threaded application and a multi-process application.","completion":"A multi-threaded application is an application that uses multiple threads of execution to execute different tasks simultaneously. All threads share the same address space, so multiple threads can access the same data in memory. This provides a more optimized use of resources, as one thread does not need to wait for another thread to finish before accessing the same data. A multi-process application is an application that uses multiple processes to execute different tasks simultaneously. Each process has its own separate address space, meaning the processes do not share the same data in memory. This means that the processes can’t directly access data from each other, and communication between processes must be established through inter-process communication mechanisms like pipes, sockets, and message queues."},{"prompt":"Construct a decision tree to classify a fruit as mango or apple based on its color and texture.","completion":"Decision Tree: Root Node: Is it a mango? Yes: Output = Mango No: Left Node: Is it yellow? Yes: Output = Mango No: Left Node: Is it green? Yes: Output = Apple No: Output = Unknown Right Node: Is it smooth? Yes: Output = Apple No: Output = Unknown"},{"prompt":"Write regular expression for the following string: abc123","completion":"^[a-zA-Z]+[0-9]{3}"},{"prompt":"List the various sorting algorithms used in computer programming.","completion":"The various sorting algorithms used in computer programming include: bubble sort, insertion sort, selection sort, merge sort, quick sort, heap sort, shell sort, radix sort, and counting sort."},{"prompt":"Create a simple website using HTML/CSS.","completion":"<html> <head> <title> My Website </title> <style> body { font-family: Arial, Helvetica, sans-serif; } h1 { font-size: 40px; color: blue; } p { font-size: 20px; line-height: 1.6; } </style> </head> <body> <h1> Welcome to my website! </h1> <p> This is a simple website created using HTML and CSS. </p> </body> </html>"},{"prompt":"Construct a switch statement to check if a month name is valid.","completion":"// switch statement to check if a month name is valid switch (month) { case \\"January\\": case \\"February\\": case \\"March\\": case \\"April\\": case \\"May\\": case \\"June\\": case \\"July\\": case \\"August\\": case \\"September\\": case \\"October\\": case \\"November\\": case \\"December\\": System.out.println(\\"Valid Month\\"); break; default: System.out.println(\\"Invalid Month\\"); break; }"},{"prompt":"Write a React class conmponent to render a greeting.","completion":"class Greeting extends React.Component { render() { return ( <div> <h1>Hello World!</h1> </div> ); } }"},{"prompt":"Create a Spring boot program to find the area of a triangle.","completion":"import org.springframework.boot.autoconfigure.SpringBootApplication; @SpringBootApplication public class App { // Function to calculate the area of triangle public static double calculateArea(int a, int b, int c) { double s = (a + b + c) / 2; double area = Math.sqrt(s * (s - a) * (s - b) * (s - c)); return area; } public static void main( String[] args ) { int a = 3; int b = 4; int c = 5; System.out.println(\\"The area of the triangle is: \\" + calculateArea(a, b, c)); } }"},{"prompt":"You need to generate an HTML table and style it with CSS. table { font-family: arial, sans-serif; border-collapse: collapse; width: 100%; } td, th { border: 1px solid #dddddd; text-align: left; padding: 8px; }","completion":"<!DOCTYPE html> <html> <head> <meta charset=\\"utf-8\\" /> <title>Title of the document</title> </head> <body> <table> <tr> <th>Firstname</th> <th>Lastname</th> <th>Age</th> </tr> <tr> <td>Jill</td> <td>Smith</td> <td>50</td> </tr> <tr> <td>Eve</td> <td>Jackson</td> <td>94</td> </tr> </table> </body> </html>"},{"prompt":"for the given array, output true if the array does not contain duplicates,output false if it contains any. arr = [1, 3, 5, 6, 1]","completion":"false"},{"prompt":"Create a function to decrypt an encrypted string.","completion":"def decrypt(enc_string): s = 0 decrypted = '' for i in range(len(enc_string)): s += ord(enc_string[i]) decrypted += chr(s) return decrypted"},{"prompt":"Given two sorted arrays, find elements that exist in both arrays. arr1 = [1, 2, 5, 8, 9, 10] arr2 = [2, 5, 6, 9]","completion":"common_elements = [2, 5, 9]"},{"prompt":"Use a random number generator to generate random numbers between 1 and 10.","completion":"import random def random_numbers(): for _ in range(10): num = random.randint(1, 10) print(num) random_numbers()"},{"prompt":"Modify this string in such a way that it should start with \\"Hello \\" and must end with \\" World\\". str = \\"World, say hello","completion":"str = \\"Hello World\\""},{"prompt":"Recalculate this code block with the new input given and provide the new output. a = '1' b = 2 answer = int(a) + int(b) New input: a = 5 b = 3","completion":"answer = 8"},{"prompt":"Write SQL query to get the records with age>25 and address in Mumbai.","completion":"SELECT * FROM records WHERE age>25 and address like 'Mumbai%';"},{"prompt":"Create a JavaScript function to check if a number is divisible by 4.","completion":"const divisibleBy4 = (num) => { if (num % 4 === 0) return true; else return false; };"},{"prompt":"Write CSS code to position a block at the top centre of the page.","completion":"block { position: absolute; top: 0; left: 50%; transform: translateX(-50%); }"},{"prompt":"Write code to create an object with the key which will be incremented on every call of the code.","completion":"let count = 0; const keyObject = () => { let newObj = {[\`key_{count}\`]: count}; count++; return newObj; }"},{"prompt":"Name a popular library used to break down text into basic meaningful parts.","completion":"NLTK (Natural Language Toolkit) is a popular library used for text processing and breaking it down into basic meaningful parts. It is a platform for building Python programs to work with human language data."},{"prompt":"Re-write this algorithm in pseudo-code. def checkEven(number): if(number % 2 == 0): return True else: return False","completion":"function checkEven(number) if number modulo 2 = 0 return true else return false end function"},{"prompt":"Create a CSS property to remove the vertical scrollbar.","completion":"overflow-y: hidden;"},{"prompt":"Print out the length of each string in the list. list_of_strings = ['hello', 'world', 'foobar']","completion":"list_of_strings = ['hello', 'world', 'foobar'] for string in list_of_strings: print(len(string))"},{"prompt":"Create a new list of elements, multiplied by 10. nums = [1, 2, 3, 4]","completion":"nums = [1, 2, 3, 4] new_nums = [num*10 for num in nums] print(new_nums)"},{"prompt":"Generate a new array and store only elements that are greater than 5. arr = [3, 9, 8, 1, 6, 4]","completion":"arr = [3, 9, 8, 1, 6, 4] new_arr = [num for num in arr if num > 5] print(new_arr)"},{"prompt":"Swap the elements at index 2 and 4. arr = [1, 3, 5, 6, 8]","completion":"arr = [1, 3, 5, 6, 8] arr[2], arr[4] = arr[4], arr[2] print(arr)"},{"prompt":"Concatenate the elements of the list into a string. list_of_strings = ['I', 'am', 'a', 'string']","completion":"list_of_strings = ['I', 'am', 'a', 'string'] concat = ' '.join(list_of_strings) print(concat)"},{"prompt":"Extract all the words that begin with 's' from the given list. list_of_strings = ['stack', 'super', 'stone', 'sit']","completion":"list_of_strings = ['stack', 'super', 'stone', 'sit'] words_start_s = [word for word in list_of_strings if word.startswith('s')] print(words_start_s)"},{"prompt":"Reverse a given array's elements and print the resulting array. arr = [1, 2, 3, 4, 5]","completion":"arr = [1, 2, 3, 4, 5] arr.reverse() print(arr)"},{"prompt":"Create a new array from the given array by replacing all the odd numbers with 0. arr = [3, 5, 7, 9, 1]","completion":"arr = [3, 5, 7, 9, 1] new_arr = [num if num % 2 == 0 else 0 for num in arr] print(new_arr)"},{"prompt":"Determine the time complexity of the code given below as a function of n. def foo(A, n): if n == 1: return A[0] else: return foo(A, n - 1) + A[n - 1]","completion":"O(n)"},{"prompt":"Create a function to add three numbers together","completion":"def add_three(n1, n2, n3): return n1 + n2 + n3"},{"prompt":"Create a function that prints a provided message 3 times message = \\"Hello World!","completion":"def print_message(message): for i in range(3): print(message)"},{"prompt":"What data structure is most appropriate for fast searches?","completion":"A hash table is the most appropriate data structure for fast searches."},{"prompt":"Fix this indentation error in the following Python code def double(number): return number * 2","completion":"def double(number): return number * 2"},{"prompt":"Create code that given two linked lists, determine if they intersect Two linked lists: list1 = [3, 7, 8, 10] and list2 = [99, 1, 8, 10]","completion":"def are_lists_intersect(list1, list2): # Set pointer to head node temp1 = list1 temp2 = list2 # Get lengths list1_length = 0 list2_length = 0 # Count length for each list while (temp1): list1_length += 1 temp1 = temp1.next while (temp2): list2_length += 1 temp2 = temp2.next # Store longer list in tem1 if list1_length > list2_length: temp1 = list1 temp2 = list2 else: temp1 = list2 temp2 = list1 # Take difference to get number of nodes to # traverse for longer list diff = abs(list1_length - list2_length) # Move pointer for longer list to # difference node to get same position # node in both list for i in range(diff): temp1 = temp1.next # Move all pointer together till they meet while(temp1 and temp2): if (temp1 == temp2): return True temp1 = temp1.next temp2 = temp2.next # Return false if no common node found return False"},{"prompt":"Edit this code so that it can marshall a json object import json data = { \\"name\\": \\"John Doe\\", \\"age\\": 30 }","completion":"import json data = { \\"name\\": \\"John Doe\\", \\"age\\": 30 } marshalled_data = json.dumps(data)"},{"prompt":"Create code that will reverse the order of elements in this list. list = [1, 2, 3, 4]","completion":"def reverse_list(list): start = 0 end = len(list) - 1 while start < end: list[start], list[end] = list[end], list[start] start += 1 end -= 1 return list"},{"prompt":"Create a function that will find the maximum length of increasing subarray in a list list = [2, 3, 3, 1, 4, 5, 8, 4]","completion":"def longest_increasing_subarray(arr): max_length = 1 curr_length = 1 for i in range(1, len(arr)): if arr[i] > arr[i - 1]: curr_length += 1 else: if curr_length > max_length: max_length = curr_length curr_length = 1 if curr_length > max_length: max_length = curr_length return max_length"},{"prompt":"Create code that, given a string, returns the longest permutation of the same character str = \\"abcccdef","completion":"def longest_consecutive_character(str): # Store character, length of longest permutation, and current length max_char = str[0] max_length = 1 cur_length = 1 # Iterate over the string for i in range(1, len(str)): # If the characters are the same if str[i] == str[i-1]: cur_length += 1 # Check if the current permutation is longest if cur_length > max_length: max_char = str[i] max_length = cur_length # Reset count if character changes else: cur_length = 1 return max_char, max_length"},{"prompt":"Create code to find the longest subarray with equal number of 0's and 1's list = [0, 0, 1, 0, 1, 0, 0, 1]","completion":"def longest_subarray(arr): # Stores index of previos zero prev_zero = -1 # Stores index and length of longest subarray with equal 0 and 1 max_len = 0 start_index = 0 # Traverse the given array for i in range(len(arr)): # Update previous zero if arr[i] == 0: prev_zero = i # Calculate difference b/w current and previous zero diff = i - prev_zero # Update max_len if required if (diff > max_len): max_len = diff start_index = prev_zero + 1 # Return longest sub-array return arr[start_index:start_index + max_len]"},{"prompt":"Create code that given two binary search trees, determine if they are identical Two Binary Search Trees: Tree1 and Tree2","completion":"def are_identical(Tree1, Tree2): # Both trees are empty if Tree1==None and Tree2==None: return True # If only one of them is empty if (Tree1==None or Tree2==None): return False # Both non-empty, compare the data and # recur for left and right sub-tree if (Tree1.data==Tree2.data and are_identical(Tree1.left, Tree2.left)and are_identical(Tree1.right, Tree2.right)): return True else: return False"},{"prompt":"Create a function that will add two numbers (represented as linked lists) Linked lists: list1 = [2, 4, 3] and list2 = [5, 6, 4]","completion":"def add_numbers(list1, list2): start = result = ListNode(0) carry = 0 # Iterate both Lists until the end while list1 or list2 or carry: val1 = 0 val2 = 0 # If l1 is not None, add data if list1: val1 = list1.data list1 = list1.next # If l2 is not None, add data if list2: val2 = list2.data list2 = list2.next # Calculate sum total = val1 + val2 + carry # Update result list present node result.next = ListNode(total % 10) result = result.next carry = total // 10 # Return head node of the result list return start.next"},{"prompt":"Create code that given a stack (i.e., a sequence of objects), returns the reversed stack stack = [1, 2, 3, 4]","completion":"def reverse_stack(stack): if len(stack) == 0: return # Pop the first element from the stack temp = stack.pop() # Call the reverse_stack method on the remaining elements reverse_stack(stack) # Push the poped element to the bottom of the stack insert_at_bottom(stack, temp) return stack def insert_at_bottom(stack, item): if len(stack) == 0: stack.append(item) else: temp = stack.pop() insert_at_bottom(stack, item) stack.append(temp)"},{"prompt":"Create a function to build a queue (i.e., a sequence of objects)","completion":"class Queue: def __init__(self): self.items = [] def enqueue(self, item): self.items.insert(0, item) def dequeue(self): if not self.is_empty(): return self.items.pop() def is_empty(self): return len(self.items) == 0 def peek(self): if not self.is_empty(): return self.items[-1].value def __len__(self): return self.size() def size(self): return len(self.items)"},{"prompt":"Create a user interface for a customer order system.","completion":"import tkinter # create the main window root = Tk() # create the user interface root.title(\\"Order System\\") root.geometry(\\"400x200\\") # create widgets Label(root, text = 'Name:').grid(row = 0, column = 0, padx = 10, pady = 10) Entry(root).grid(row = 0, column = 1, columnspan = 2, padx = 10, pady = 10) Label(root, text = 'Email address:').grid(row = 1, column = 0, padx = 10, pady = 10) Entry(root).grid(row = 1, column = 1, columnspan = 2, padx = 10, pady = 10) Button(root, text = 'Submit').grid(row = 2, column = 1, padx = 10, pady = 10) Button(root, text = 'Cancel').grid(row = 2, column = 2, padx = 10, pady = 10) # enter main event loop root.mainloop()"},{"prompt":"Create a virtual machine using Terraform.","completion":"resource \\"azurerm_resource_group\\" \\"example\\" { name = \\"example-resources\\" location = \\"westus2\\" } resource \\"azurerm_virtual_machine\\" \\"example\\" { name = \\"example-vm\\" location = azurerm_resource_group.example.location resource_group_name = azurerm_resource_group.example.name vm_size = \\"Standard_DS2_v2\\" storage_image_reference { publisher = \\"Canonical\\" offer = \\"UbuntuServer\\" sku = \\"16.04-LTS\\" version = \\"latest\\" } storage_os_disk { name = \\"myosdisk1\\" caching = \\"ReadWrite\\" create_option = \\"FromImage\\" disk_size_gb = \\"30\\" } os_profile { computer_name = \\"hostname\\" admin_username = \\"username\\" admin_password = \\"secure_password\\" } os_profile_linux_config { disable_password_authentication = false } tags = { environment = \\"Production\\" } }"},{"prompt":"Create a web page with a simple \\"Hello World\\" message.","completion":"<html> <head> <title>Hello World</title> </head> <body> <h1>Hello World!</h1> </body> </html>"},{"prompt":"Get the top ten most used words within a string.","completion":"import collections def get_most_used_words(string): # Tokenize the string words = string.split() # Calculate frequency of each word freq = {} for word in words: if word in freq: freq[word] += 1 else: freq[word] = 1 # Sort the words in descending order of frequency sorted_freq = sorted(freq.items(), key=lambda x: x[1], reverse=True) # Get the top ten most used words most_used_words = [word for word, count in sorted_freq[:10]] return most_used_words"},{"prompt":"Edit the following code snippet to add if/else logic for printing a success message. num1 = 5 num2 = 6 if num1 > num2: print(\\"The number is greater than 5.\\")","completion":"num1 = 5 num2 = 6 if num1 > num2: print(\\"The number is greater than 5.\\") else: print(\\"Success! The number is less than or equal to 5.\\")"},{"prompt":"Generate a regex expression to find all words starting with \\"ha","completion":"^haw+"},{"prompt":"Construct a SQL query to find all clients with a given email address. The email address is \\"test@example.com","completion":"SELECT * FROM clients WHERE email = 'test@example.com';"},{"prompt":"Construct an expression in javascript to reverse a string.","completion":"let reverseString = (str) => str.split('').reverse().join('');"},{"prompt":"Make a HTML5 webpage with a simple form.","completion":"<!DOCTYPE html> <html> <head> <title>Simple Form</title> </head> <body> <form> Name: <input type=\\"text\\" name=\\"name\\"/><br><br> Email: <input type=\\"email\\" name=\\"email\\"/><br><br> <input type=\\"submit\\" value=\\"Submit\\"/> </form> </body> </html>"},{"prompt":"Create a HTML page with a form that takes in two numbers as input and adds them together when the form is submitted.","completion":"<!DOCTYPE html> <html> <head> <title>Adding Form</title> </head> <body> <form action=\\"\\" method=\\"post\\"> <input type=\\"number\\" name=\\"a\\"> <input type=\\"number\\" name=\\"b\\"> <input type=\\"submit\\" value=\\"Submit\\" /> </form> <script> document.querySelector('form').onsubmit = function(event) { event.preventDefault(); const a = Number(document.querySelector('input[name=\\"a\\"]').value); const b = Number(document.querySelector('input[name=\\"b\\"]').value); const result = a + b; alert(\`The result of adding {a} with {b} is {result}\`); } <\/script> </body> </html>"},{"prompt":"Create an API endpoint in NodeJS that returns a JSON object containing the current time.","completion":"const express = require('express'); const app = express(); app.get('/time', (req, res) => { const date = new Date(); const time = { hour: date.getHours(), minutes: date.getMinutes(), seconds: date.getSeconds() } res.json(time) }); app.listen(6000);"},{"prompt":"Write an SQL query to fetch the top 5 products with the highest sale prices from a table named 'products'.","completion":"SELECT * FROM products ORDER BY sale_price desc LIMIT 5;"},{"prompt":"Construct a valid and optimized MySQL query to get the user details of all users who are younger than 24 and have subscribed more than 10 times.","completion":"SELECT user_id, username, age, subscriptions FROM users WHERE age < 24 AND subscriptions >= 10"},{"prompt":"Generate a gradient descent algorithm to optimize a cost function.","completion":"def gradient_descent(cost_function, theta, eta, tolerance): cost = cost_function(theta) diff = tolerance + 1 while diff > tolerance: theta_updated = theta for i in range(len(theta)): theta[i] = theta[i] - eta * cost_function.gradient_wrt_theta(theta, i) diff = sum((theta_updated[i] - theta[i])**2 for i in range(len(theta))) return theta"},{"prompt":"Construct a pre-order traversal code to traverse a binary tree.","completion":"def preOrder(root): if root: print(root.data) preOrder(root.left) preOrder(root.right)"},{"prompt":"Create an array of length 10 from a given list of values. given_list = [1, 2, 3, 4, 5]","completion":"final_list = [1, 2, 3, 4, 5, 1, 2, 3, 4, 5]"},{"prompt":"mplement the merge sort algorithm to sort a given array ascending. given_array = [7,9,3,8,1]","completion":"def merge_sort(arr): if len(arr) > 1: mid = len(arr) // 2 L = arr[:mid] R = arr[mid:] #calling merge sort function on left and right arrays merge_sort(L) merge_sort(R) i = j = k = 0 # Copying data to temp arrays L[] and R[] while i < len(L) and j < len(R): if L[i] < R[j]: arr[k] = L[i] i+=1 else: arr[k] = R[j] j+=1 k+=1 # Checking if any element was left while i < len(L): arr[k] = L[i] i+=1 k+=1 while j < len(R): arr[k] = R[j] j+=1 k+=1 ar =[7,9,3,8,1] merge_sort(ar) # printing sorted array print (ar)"},{"prompt":"Write a code to create a web server for a given web page.","completion":"# importing the modules import http.server import socketserver # defining the port number port = 8080 # the web page index_html = \\"\\"\\"<!DOCTYPE html> <html> <head> <title>My Website</title> </head> <body> <h1> Welcome to my website!</h1> <p>Here you will find useful information about me and my work.</p> </body> </html> \\"\\"\\" # define a handler class RequestHandler(http.server.SimpleHTTPRequestHandler): def do_GET(self): # setting the response status code self.send_response(200) # setting the content type and other headers self.send_header('Content-type', 'text/html') self.end_headers() # writing the index.html page self.wfile.write(bytes(index_html, \\"utf8\\")) # define http server with socketserver.TCPServer((\\"\\", port), RequestHandler) as httpd: print(\\"serving at port\\", port) # infinite loop httpd.serve_forever()"},{"prompt":"Compact a given list into a dictionary with unique items as keys. given_list = [1,1,1,2,2,3]","completion":"uniques = {} for item in given_list: if item not in uniques: uniques[item] = 1 else: uniques[item] += 1 # result: {1: 3, 2: 2, 3: 1}"},{"prompt":"Edit the code to make sure the program prints the correct output. def my_function(x): y = x * 2 return x + y result = my_function(2) print(result)","completion":"def my_function(x): y = x * 2 return x + y result = my_function(2) print(\\"The result is:\\", result)"},{"prompt":"Modify the following code to kill a thread after 10 seconds. import threading from time import sleep def worker(): try: while True: print(\\"Thread\\") sleep(1) threads = [] for x in range(40): t = threading.Thread(target=worker) threads.append(t) t.start()","completion":"import threading import signal from time import sleep def exitThread(signum, frame): raise SystemExit def worker(): try: signal.signal(signal.SIGALRM, exitThread) signal.alarm(10) while True: print(\\"Thread\\") sleep(1) threads = [] for x in range(40): t = threading.Thread(target=worker) threads.append(t) t.start()"},{"prompt":"Create an array of 5 unique numbers between 1 and 15.","completion":"[1, 7, 10, 11, 15]"},{"prompt":"Change the following code to implement the Observer Design Pattern in Python. class Publisher: def __init__(self): self.observers = [] def add(self, observer): if observer not in self.observers: self.observers.append(observer) else: print('Failed to add: {}'.format(observer)) def remove(self): self.observers.remove(observer) def notifyAll(self, *args, **kwargs): for observer in self.observers: observer.notify(self, *args, **kwargs)","completion":"class Publisher: def __init__(self): self.observers = [] self.state = None def getState(self): return self.state def setState(self, state): self.state = state self.notifyAll() def add(self, observer): if observer not in self.observers: self.observers.append(observer) else: print('Failed to add: {}'.format(observer)) def remove(self): self.observers.remove(observer) def notifyAll(self, *args, **kwargs): for observer in self.observers: if args and kwargs: observer.notify(self, *args, **kwargs) else: observer.notify(self)"},{"prompt":"Create an array of 20 unique values from 1 to 50.","completion":"[1, 5, 6, 8, 13, 16, 18, 20, 21, 24, 25, 29, 31, 32, 36, 39, 40, 43, 44, 50]"},{"prompt":"Declare a variable named 'items' and assign it a list containing the elements ‘pen’, ‘paper’ and ‘pencil’ in Python.","completion":"items = ['pen', 'paper', 'pencil']"},{"prompt":"Create a vector in R to store the elements ‘apple’, ‘mango’, ‘banana’ and ‘orange’.","completion":"fruits <- c(\\"apple\\", \\"mango\\", \\"banana\\", \\"orange\\")"},{"prompt":"Create an array from a given string and sort it in ascending order. string = \\"cbaefd","completion":"string = \\"cbaefd\\" array = list(string) array.sort() print(array)"},{"prompt":"Generate a random password of 16 characters that includes a mix of alphanumeric characters and punctuation.","completion":"import string import random def random_password(str_len): alphanumeric = string.ascii_letters + string.digits + string.punctuation return ''.join(random.choice(alphanumeric) for i in range(str_len)) random_password(16)"},{"prompt":"Write a function that takes two arguments, an array arr and a value x, and returns the number of times x appears in the array arr. arr = [1, 2, 3, 4, 5, 6, 7, 8, 5] x = 5","completion":"def count_val(arr, x): count = 0 for i in arr: if i == x: count += 1 return count count_val(arr, x)"},{"prompt":"Write a code in Python for comparing two strings without using a built-in function. string1 = \\"apple\\" string2 = \\"orange","completion":"string1 = \\"apple\\" string2 = \\"orange\\" length = min(len(string1), len(string2)) for i in range(length): if string1[i] != string2[i]: result = string1[i] < string2[i] break if result == True: print(string1 + \\" follows \\" + string2 + \\" alphabetically.\\") else: print(string2 + \\" follows \\" + string1 + \\" alphabetically.\\")"},{"prompt":"Generate a two-dimensional array of 3 rows and 3 columns with all elements equal to 1.","completion":"import numpy as np arr = np.ones((3,3)) print(arr)"},{"prompt":"w can we use a list comprehension to make a copy of a given list?","completion":"list_copy = [x for x in given_list]"},{"prompt":"Generate the SQL command to insert a new item in an existing table. Table Name: users Values: ('Adam', 34, 'Male')","completion":"INSERT INTO users (name, age, gender) VALUES ('Adam', 34, 'Male');"},{"prompt":"Convert a list of numbers to a 5x5 matrix. given_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20]","completion":"matrix = [[1, 2, 3, 4, 5], [6, 7, 8, 9, 10], [11, 12, 13, 14, 15], [16, 17, 18, 19, 20]]"},{"prompt":"Write a JavaScript function to compare two strings without using any built-in functions.","completion":"function compareStrings(str1, str2) { if (str1.length !== str2.length) { return false; } for (let i === 0; i < str1.length; i++) { if (str1[i] !== str2[i]) { return false; } } return true; }"},{"prompt":"Describe a method to reverse the order of elements in a given array.","completion":"A simple approach to reverse an array is to use two index variables, one at the start and one at the end of the array. Swap the elements present at these two indexes and increment the first index and decrement the second index, until the indexes meet. Example: def reverseArray(arr, start, end): while (start < end): arr[start], arr[end] = arr[end], arr[start] start += 1 end = end-1 arr = [1, 2, 3, 4, 5, 6] reverseArray(arr, 0, 5)"},{"prompt":"Explain how to find the minimum value of a list.","completion":"We can use the built-in min() function to find the minimum value in a list. This function takes an iterable such as a list, tuple or set as an argument and returns the smallest item in the iterable. For example, if given a list of numbers, the min() function would return the number with the lowest value. Example: my_list = [3, 6, 2, 8, 4] min_val = min(my_list) print(min_val) # 2"},{"prompt":"Generate an HTML form with a text input box.","completion":"<form> <input type=\\"text\\" name=\\"name\\" /> </form>"},{"prompt":"Write a CSS rule to center-align the text of all <h1> elements on a web page.","completion":"h1 { text-align: center; }"},{"prompt":"Write an SQL query to find all the records in a given table that have a price greater than 1000. Table name: Orders Fields: price (decimal), item_name (string)","completion":"SELECT * FROM Orders WHERE price > 1000;"},{"prompt":"Create a program which finds patterns in a stream of numbers and prints out the start of the pattern. 87, 88, 89, 87, 88, 89, 87, 88, 89","completion":"Pattern detected: 87, 88, 89. Starting at index 0."},{"prompt":"Construct a for loop in Python to find the sum of all the the numbers between 15 and 30 (inclusive).","completion":"total_sum = 0 for num in range(15, 31): total_sum += num print(total_sum)"},{"prompt":"Construct a JSON Object of a person with their name, age, and occupation.","completion":"{ \\"name\\": \\"John Doe\\", \\"age\\": 35, \\"occupation\\": \\"Software Engineer\\" }"},{"prompt":"Construct an if-else if condition to grade the user input (1 to 5) between A, B, C, D, or F.","completion":"if user_input == 1: print('A') elif user_input == 2: print('B') elif user_input == 3: print('C') elif user_input == 4: print('D') else: print('F')"},{"prompt":"Construct a switch-case statement to output \\"Monthly\\" if the user enters \\"M\\" to output \\"Yearly\\" if the user enters \\"Y\\", and \\"Invalid\\" if the user enters neither \\"M\\" nor \\"Y\\".","completion":"def printOption(option): switch(option): case \\"M\\": print(\\"Monthly\\") break case \\"Y\\": print(\\"Yearly\\") break default: print(\\"Invalid\\")"},{"prompt":"Design a regex pattern to check if a given string is a valid URL or not.","completion":"pattern = r'^(https?://)[da-z.-]+.[a-z.]{2,}/?[/w .-]*'"},{"prompt":"Construct a class in Python that contains three variables and two methods.","completion":"class myClass(): def __init__(self): self.var1 = \\"Hello\\" self.var2 = \\"World!\\" self.var3 = 5 def method1(self): print(self.var1) def method2(self): print(self.var2)"},{"prompt":"Write a function to sort a string containing several words alphabetically.","completion":"def sortString(string): words = string.split() words.sort() return (' '.join(words))"},{"prompt":"Convert the following SQL statement into a Python def() and write the code. SELECT order_id, order_time, subtotal FROM orders WHERE order_time > NOW()","completion":"def get_order_info(order_time): query = \\"SELECT order_id, order_time, subtotal FROM orders WHERE order_time > %s\\" cursor.execute(query, (order_time, )) rows = cursor.fetchall() return rows"},{"prompt":"Sort a string in alphabetical order. string = \\"edcb","completion":"def sort_string(string): str_list = list(string) str_list.sort() return \\"\\".join(str_list) sorted_str = sort_string(string)"},{"prompt":"Write a script that prints the first N numbers in a Fibonacci series. N = 10","completion":"def fibonacci_series(n): if n == 0: return a = 0 b = 1 print(a, end=\\" \\") print(b, end=\\" \\") for i in range(2,n): c = a + b a = b b = c print(b, end=\\" \\") fibonacci_series(N)"},{"prompt":"Create a Java program that removes duplicate elements from an array. int arr[] = {12, 11, 12, 11, 13, 11};","completion":"import java.util.HashSet; public class RemoveDuplicates { public static int[] removeDuplicates(int arr[]) { // HashSet for removing duplicates HashSet<Integer> set = new HashSet<>(); // adding elements to HashSet for(int i=0; i<arr.length; i++) set.add(arr[i]); // Converting HashSet to array int i=0; int new_arr[] = new int[set.size()]; for (Integer val : set) new_arr[i++] = val; return new_arr; } }"},{"prompt":"mplement a k-nearest neighbors algorithm to predict point labels.","completion":"# k-nearest neighbor algorithm def knn(k, data, targets, query): # find k nearest neighbors of the query indices = get_neighbors(k, data, query) # find most common label among the neighbors counts = {} for index in indices: label = targets[index] counts[label] = counts.get(label, 0) + 1 # from the most to the least occurring labels = sorted(counts, key=counts.get, reverse=True) return labels[0]"},{"prompt":"Create a function which takes two parameters and returns true if the second parameter is a power of the first parameter. x = 16 y = 4","completion":"def is_a_power_of(x, y): if x == y: return True if x > y and y != 0: return is_a_power_of(x/y, y) else: return False power_of = is_a_power_of(x, y)"},{"prompt":"Write an algorithm in Python to find the number of distinct words in a given sentence. \\"This is a test sentence.","completion":"def count_distinct_words(sentence): distinct_words = set([word.lower() for word in sentence.split()]) return len(distinct_words) print(count_distinct_words(\\"This is a test sentence.\\")) # Outputs: 4"},{"prompt":"Write a Bash script for downloading a web page from the internet.","completion":"#!/bin/bash if [ -z 1 ]; then echo \\"Please provide a URL as an argument\\" else curl -O 1 fi"},{"prompt":"Convert the following JS code from a callback to a promise. function downloadData(url, callback) { // Code to download data if (/* success */) { callback(null, data) } else { callback(err, null) } }","completion":"function downloadData(url) { return new Promise((resolve, reject) => { // Code to download data if (/* success */) { resolve(data) } else { reject(err) } }) }"},{"prompt":"Edit the following JS code to include a check to avoid creating duplicate requests. sendRequest(url) { // Code to send request } makeRequest(url) { sendRequest(url); }","completion":"sendRequest(url) { // Code to send request } requests = []; // Array to keep track of requests makeRequest(url) { if (!requests.includes(url)) { // Check if request doesn't already exist sendRequest(url); requests.push(url); // Add request to list } }"},{"prompt":"Write an HTML page to display facts about a specific animal. Animal: Cat Name: Fluffy Age: 8 Weight: 10 lbs Fur Color: Orange","completion":"<html> <head> <title>Facts about Fluffy</title> </head> <body> <h1>Fluffy the Cat</h1> <ul> <li>Age: 8</li> <li>Weight: 10 lbs</li> <li>Fur Color: Orange</li> </ul> </body> </html>"},{"prompt":"Create a MySQL query that returns all the names of the students with a grade greater than or equal to 7. Table: Students Columns: student_id, name, grade","completion":"SELECT name FROM Students WHERE grade >= 7;"},{"prompt":"Edit the following JavaScript code to make the function asynchronous. function getData() { // Code to fetch data }","completion":"function getData() { // Code to fetch data return new Promise((resolve, reject) => { // Fetch data if (/* success */) { resolve(data) } else { reject(err) } }) }"},{"prompt":"mplement a function in C++ to print a pyramid of stars","completion":"#include <iostream> using namespace std; // Function to demonstrate printing pattern void pyramid(int n) { // outer loop to handle number of rows // n in this case for (int i=0; i<n; i++) { // inner loop to handle number of columns // values changing acc. to outer loop for (int j=0; j<=i; j++ ) { // printing stars cout << \\"* \\"; } // ending line after each row cout << endl; } }"},{"prompt":"Write a Python program to get the IP address from a given hostname google.com","completion":"import socket def get_ip(hostname): return socket.gethostbyname(hostname) print(get_ip('google.com'))"},{"prompt":"Write a code to select all columns from a table named 'students' where the age is between 22 and 28","completion":"SELECT * FROM students WHERE age BETWEEN 22 AND 28;"},{"prompt":"mplement a Swift function to filter an array of numbers by a given filter number [4, 5, 8, 11, 7], filter_num = 7","completion":"func filter_array(_ numbers: [Int], filter_num: Int) -> [Int] { var resultArr = [Int]() for i in 0..<numbers.count { if numbers[i] < filter_num { resultArr.append(numbers[i]) } } return resultArr } filter_array([4, 5, 8, 11, 7], filter_num: 7) // returns [4, 5]"},{"prompt":"Design a web page with the following HTML elements: (1) Heading, (2) Subheading, (3) Form, (4) Button.","completion":"<html> <head> <title> My Web Page </title> </head> <body> <h1> Heading </h1> <h2> Subheading </h2> <form> ... </form> <button> Button </button> </body> </html>"},{"prompt":"Write an SQL query to retrieve all rows in a table that match a certain criteria. Table: Users name | age ------|------ John | 20 Pete | 22 Alex | 18","completion":"SELECT * FROM Users WHERE age > 20;"},{"prompt":"Design a fourth-order Butterworth low-pass filter.","completion":"s = tf('s'); H = 1/(s^4 + 2.39125*s^3 + 2.37238*s^2 + 0.857723*s + 0.147902);"},{"prompt":"Create a MongoDB query to find all documents that have a field called 'city' with a value of 'New York'","completion":"db.collection.find({city: 'New York'});"},{"prompt":"Write an HTML code for a div tag with an id attribute of 'main-content'.","completion":"<div id=\\"main-content\\"></div>"},{"prompt":"Write a Python code snippet to evaluate an expression stored as a string. expression = '2+2*2'","completion":"def evaluate_expression(expression): return eval(expression) print(evaluate_expression(expression))"},{"prompt":"Create a database query in SQL to filter records within a particular range. Table Name: records Attributes: id (INTEGER), name (TEXT), start_date (DATE), end_date (DATE)","completion":"SELECT * FROM records WHERE start_date >= '<date1>' AND end_date <= '<date2>';"},{"prompt":"Find the largest value in an array of numbers. [5, 9, 40, 0.5, 3]","completion":"40"},{"prompt":"Convert an array from its x-coordinate values to an array of polar coordinates. [(1, 1), (4, 2)]","completion":"[(1.4142135623730951, 0.7853981633974483), (4.47213595499958, 0.4636476090008061)]"},{"prompt":"alize a 2D array with \`0\`s.","completion":"def init2DArray(rows, cols): # initialize the array arr = [[0 for i in range(cols)] for j in range(rows)] return arr"},{"prompt":"Given a 2D array, replace every element with the greatest element on its row. [[6, 2, 9], [3, 8, 7], [1, 4, 5]]","completion":"def greatest_element(arr): # loop through elements of 1D array for i in range(len(arr)): max_element = arr[i][0] # loop through elements of 2D array for j in range(len(arr[i])): if arr[i][j] > max_element: max_element = arr[i][j] # replace every element with max_element for j in range(len(arr[i])): arr[i][j] = max_element return arr"},{"prompt":"a given list, replace the even numbers by their square. [1, 2, 3, 4, 5, 6]","completion":"def even_nums_square(nums): for i in range(len(nums)): # check for even number if nums[i] % 2 == 0: # square the number nums[i] = nums[i] * nums[i] return nums"},{"prompt":"Consider the given list of tuples, remove the third element if it exists. data = [(1, 5), (3, 4), (2, 6, 4)]","completion":"data = [(1, 5), (3, 4)]"},{"prompt":"Construct a lambda function to filter a given list based on a given predicate. numbers = [1, 2, 3, 4, 5, 6] predicate = lambda x: x % 2 == 0","completion":"filtered_list = list(filter(predicate, numbers)) #=> [2, 4, 6]"},{"prompt":"how to implement a recursive function for computing Fibonacci numbers? max_num = 5","completion":"def Fibonacci(n): if n==0 or n==1: return n else: return Fibonacci(n-1)+Fibonacci(n-2) def Fibonacci_Series(max_num): for n in range(max_num+1): print(Fibonacci(n)) # Output: 0 1 1 2 3 5"},{"prompt":"Construct a regular expression pattern to match a specific set of strings. Match the following strings: Apple, Bananas, Orange","completion":"^(Apple|Bananas|Oranges)"},{"prompt":"Using the provided class, add a new method to print the age of employees. class Employee: def __init__(self, name, age): self.name = name self.age = age","completion":"class Employee: def __init__(self, name, age): self.name = name self.age = age def get_age(self): print(self.age)"},{"prompt":"Explain in a sentence the concept of proxy objects.","completion":"A proxy object is an intermediary object that is responsible for managing access to a target object or service to protect it from unauthorized access."},{"prompt":"Translate the provided sentence into Pig Latin. The cat jumped over the box.","completion":"eThay atcay jumpeday overay ethay oxbay."},{"prompt":"Convert the given matrix into a comma-separated values (CSV) format. [[1, 2, 3], [4, 5, 6], [7, 8, 9]]","completion":"1,2,3 4,5,6 7,8,9"},{"prompt":"Make a simple program that adds two numbers.","completion":"# Take the input from user num1 = int(input(\\"Enter number 1: \\")) num2 = int(input(\\"Enter number 2: \\")) # Add the numbers sum = num1 + num2 # Print the result print(\\"The sum is: \\" + str(sum))"},{"prompt":"Construct a JSON structure from its respective python dictionaries a = { \\"name\\": \\"John\\", \\"age\\": 32 } b = { \\"cars\\": [\\"Ford\\", \\"BMW\\", \\"Fiat\\"] }","completion":"import json data = {**a, **b} json_data = json.dumps(data)"},{"prompt":"Write a function that takes an array and prints every element in a single line. my_array = [1, 2, 3]","completion":"def print_array(arr): for element in arr: print(element, end=' ')"},{"prompt":"Write a statement which checks whether a number is within a given range. number = 7 min_range = 5 max_range = 10","completion":"if (number >= min_range) and (number <= max_range): print(\\"The number is within the given range.\\")"},{"prompt":"Using a conditional statement, print a message depending on the day of the week. day_of_week = \\"Thursday","completion":"if day_of_week == \\"Monday\\": print(\\"It's Monday\\") elif day_of_week == \\"Tuesday\\": print(\\"It's Tuesday\\") elif day_of_week == \\"Wednesday\\": print(\\"It's Wednesday\\") elif day_of_week == \\"Thursday\\": print(\\"It's Thursday\\") elif day_of_week == \\"Friday\\": print(\\"It's Friday\\") elif day_of_week == \\"Saturday\\": print(\\"It's Saturday\\") elif day_of_week == \\"Sunday\\": print(\\"It's Sunday\\")"},{"prompt":"Rewrite the following expression using an if-else statement. x = 5 if x > 4: print('x is greater than 4')","completion":"x = 5 if x > 4: print('x is greater than 4') else: print('x is not greater than 4')"},{"prompt":"Design a class that stores the data of an individual employee","completion":"class Employee: def __init__(self, name, age, salary): self.name = name self.age = age self.salary = salary def get_name(self): return self.name def get_age(self): return self.age def get_salary(self): return self.salary"},{"prompt":"Create a function that compares two numbers and returns 'lower', 'higher', or 'equal' based on the comparison.","completion":"def compare_numbers(num1, num2): if num1<num2: return 'lower' elif num1>num2: return 'higher' else: return 'equal'"},{"prompt":"Calculate the number of seconds in a day.","completion":"seconds_in_day = 24 * 60 * 60"},{"prompt":"Create a database schema for managing authentication users.","completion":"CREATE TABLE users ( id SERIAL PRIMARY KEY, username VARCHAR NOT NULL UNIQUE, password VARCHAR NOT NULL, created_at TIMESTAMP NOT NULL DEFAULT NOW() );"},{"prompt":"Pass the following JSON array to an AJAX request. [{\\"name\\":\\"John\\", \\"age\\":21}, {\\"name\\":\\"Dave\\", \\"age\\":25}]","completion":".ajax({ url: 'url', type: 'POST', contentType: 'application/json', data: JSON.stringify([{\\"name\\":\\"John\\", \\"age\\":21}, {\\"name\\":\\"Dave\\", \\"age\\":25}]) });"},{"prompt":"Change the value of the third element in the following array. int[] arr = {1, 3, 4, 5};","completion":"arr[2] = 10;"},{"prompt":"Write CSS code to separate the sidebar from the content by a horizontal line.","completion":"#sidebar { border-bottom: 1px solid black; } #content { border-top: 1px solid black; }"},{"prompt":"Create a route for a REST API to retrieve a list of all books.","completion":"app.get('/books', (req, res) => { // retrieve list of books from database res.json(books); });"},{"prompt":"dentify the programming language of the sample code snippet. def find_average(numbers): sum = 0 for num in numbers: sum += num return sum / len(numbers)","completion":"Python."},{"prompt":"Write a function to implement heap sort in JavaScript.","completion":"function heapSort(arr) { let n = arr.length; for (let i = Math.floor(n / 2 - 1); i >= 0; i--) { heapify(arr, n, i); } for (let i = n - 1; i > 0; i--) { [arr[0], arr[i]] = [arr[i], arr[0]]; heapify(arr, i, 0); } return arr; } function heapify(arr, n, i) { let largest = i; let left = 2 * i + 1; let right = 2 * i + 2; if (left < n && arr[left] > arr[largest]) largest = left; if (right < n && arr[right] > arr[largest]) largest = right; if (largest !== i) { [arr[i], arr[largest]] = [arr[largest], arr[i]]; heapify(arr, n, largest); } }"},{"prompt":"Edit the given function in Python to convert the given list of integers a into a multidimensional list of size len(a) X len(a). def convert_to_multi(a): return [a]","completion":"def convert_to_multi(a): result = [] for i in range(len(a)): row = [] for j in range(len(a)): row.append(a[j]) result.append(row) return result"},{"prompt":"Find the data type of the variable x in the following JavaScript code snippet? let x = \\"Hello World\\";","completion":"String."},{"prompt":"Given a word, remove all the vowels from it in C.","completion":"void remove_vowels(char *s) { for (int i = 0; s[i] != '0'; i++) { if (s[i] == 'a' || s[i] == 'A' || s[i] == 'e' || s[i] == 'E' || s[i] == 'i' || s[i] == 'I' || s[i] == 'o' || s[i] == 'O' || s[i] == 'u' || s[i] == 'U') { for (int j = i; s[j] != '0'; ++j) { s[j] = s[j+1]; } } } }"},{"prompt":"Create an object in JavaScript to save the particular book detail. Title: Lord of the Rings Author: J.R.R. Tolkie","completion":"let book = { title: 'Lord of the Rings', author: 'J.R.R. Tolkien' };"},{"prompt":"Explain the concept of classes and objects in Java.","completion":"Classes in Java are user-defined templates for creating objects. A class specifies the data and behavior associated with any objects created from it. An object is an instance of a class which contains its own set of attributes and methods. Objects can interact with each other’s attributes and methods. Classes and objects are the fundamental components of object-oriented programming."},{"prompt":"Generate an SQL query to select product names and prices that are greater than 50.","completion":"SELECT product_name, price FROM products WHERE price > 50;"},{"prompt":"Create a Python class 'Calculator' with two methods: 'add' and 'sub'.","completion":"class Calculator: def add(self, x, y): return x + y def sub(self, x, y): return x - y"},{"prompt":"Edit the following HTML page to add a table with three rows and two columns. <!-- HTML page --> <!DOCTYPE html> <html lang=\\"en\\"> <head> <meta charset=\\"UTF-8\\"> <title>Table Example</title> </head> <body> </body> </html>","completion":"<!-- Edited HTML page --> <!DOCTYPE html> <html lang=\\"en\\"> <head> <meta charset=\\"UTF-8\\"> <title>Table Example</title> </head> <body> <table> <tr> <th>First Header</th> <th>Second Header</th> </tr> <tr> <td>Row 1, Cell 1</td> <td>Row 1, Cell 2</td> </tr> <tr> <td>Row 2, Cell 1</td> <td>Row 2, Cell 2</td> </tr> </table> </body> </html>"},{"prompt":"Write a Java method to decide if one point is inside a given rectangle or not.","completion":"public static boolean isPointInsideRectangle(Point p, Rectangle r) { return (p.getX() <= r.getMaxX() && p.getX() >= r.getMinX() && p.getY() <= r.getMaxY() && p.getY() >= r.getMinY()); }"},{"prompt":"Create an if-else statement that prints \\"Welcome!\\" if the input is \\"John\\" and \\"Goodbye!\\" if the input is \\"Caroline\\".","completion":"if name == \\"John\\": print(\\"Welcome!\\") else: print(\\"Goodbye!\\")"},{"prompt":"Given two lists, create a function that finds the common elements between the two lists. list1 = [1, 2, 3, 4, 5] list2 = [2, 3, 4, 6, 7]","completion":"def find_common(list1, list2): common_elems = [] for elem in list1: if elem in list2: common_elems.append(elem) return common_elems"},{"prompt":"Define what a global variable is.","completion":"A global variable is a variable that is accessible and can be modified in any part of a program. It is not limited to the scope of any particular function."},{"prompt":"Explain what the \\"continue\\" statement does.","completion":"The \\"continue\\" statement is used to skip the current iteration of a loop and continue with the next iteration. It is commonly used to ignore certain items in a list or when the program should take a different action based on a particular condition."},{"prompt":"Write a function in Python to encourage user input by prompting the user \\"Please enter a valid email address.","completion":"def get_email(): email = input(\\"Please enter a valid email address: \\") return email"},{"prompt":"Sort an array in descending order using JavaScript. [50, 34, 97, 56, 12, 99]","completion":"let arrayToSort = [50, 34, 97, 56, 12, 99]; arrayTo Sort.sort((a, b) => b - a); console.log(arrayToSort); // [99, 97, 56, 50, 34, 12]"},{"prompt":"Write a JavaScript program to convert a given number of seconds into the equivalent time in days, hours, minutes and seconds. 15000","completion":"let totalSeconds = 15000; let days = Math.floor(totalSeconds / (24*60*60)); let remainingSeconds = totalSeconds % (24*60*60); let hours = Math.floor(remainingSeconds / (60*60)); let remainingSeconds2 = remainingSeconds % (60*60); let minutes = Math.floor(remainingSeconds2 / (60)); let seconds = remainingSeconds2 % (60); console.log(\`{days} days, {hours} hours, {minutes} minutes, {seconds} seconds.\`);"},{"prompt":"Write a JavaScript program to find the remainder when two given numbers are divided. 9 and 5","completion":"let dividend = 9; let divisor = 5; let remainder = dividend % divisor; console.log(remainder);"},{"prompt":"Create an array to store 10 names of famous scientists.","completion":"let scientists = [\\"Albert Einstein\\", \\"Isaac Newton\\", \\"Charles Darwin\\", \\"Marie Curie\\", \\"Galileo Galilei\\", \\"Stephen Hawking\\", \\"Sophie Germain\\", \\"Antoine Lavoisier\\", \\"Niels Bohr\\", \\"Blaise Pascal\\"];"},{"prompt":"Create a code block that calculates the root of a given number Find the square root of 16","completion":"#calculate the square root of a given number def get_square_root(num): root = num ** 0.5 return root if __name__ == '__main__': number = 16 root = get_square_root(number) print(\\"Square root of {} is {}\\".format(number, root))"},{"prompt":"Develop a code that can calculate the cumulative sum of an array [2, 4, 6, 8, 10]","completion":"def cummulative_sum(arr): cum_sum = 0 for num in arr: cum_sum += num return cum_sum if __name__ == '__main__': test_list = [2, 4, 6, 8, 10] print('Cumulative Sum:', cummulative_sum(test_list))"},{"prompt":"Given a function that takes two parameters \\"a\\" and \\"b\\", write a code to add the two parameters together and return the result. a = 1, b = 2","completion":"#Add two parameters together and return the result def add_two_params(a, b): return a + b result = add_two_params(1, 2) print('The result is', result)"},{"prompt":"Write a code to find control characters such as carriage returns inside a given string 'This is a stringrnwith some control characters'","completion":"#Function to find control characters def find_control_chars(string): control_chars = [ 'r', 'n' ] for char in control_chars: if char in string: return True return False string = 'This is a stringrnwith some control characters' control_char_exists = find_control_chars(string) print('Control character exists:', control_char_exists)"},{"prompt":"Create a method to calculate the amount of tax to be paid based on the inputs of income and country. income = 20000, country = Ireland","completion":"#Calculate the applicable tax amount def get_tax_amount(income, country): #Country specific logic if country == 'Ireland': tax_rate = 0.20 else: tax_rate = 0.15 #Calulate tax amount tax_amount = income * tax_rate return tax_amount if __name__ == '__main__': income = 20000 country = 'Ireland' tax_amount = get_tax_amount(income, country) print('Tax amount:', tax_amount)"},{"prompt":"Write a code block to return a random value from a given list [1, 4, 8, 12]","completion":"#Return a random value from a given list import random def get_random_value(lst): n = random.randint(0, len(lst) - 1) return lst[n] test_list = [1, 4, 8, 12] random_value = get_random_value(test_list) print('Random value:', random_value)"},{"prompt":"Generate three different sorting algorithms for a list of integers.","completion":"# Bubble Sort algorithm def bubble_sort(lst): for i in range(len(lst)-1): for j in range(len(lst)-1-i): if lst[j] > lst[j+1]: lst[j], lst[j+1] = lst[j+1], lst[j] return lst # Insertion Sort algorithm def insertion_sort(lst): for i in range(1, len(lst)): key = lst[i] j = i - 1 while j >= 0 and key < lst[j]: lst[j+1] = lst[j] j -= 1 lst[j+1] = key return lst # Heap Sort algorithm def heap_sort(lst): # build max heap for i in range(len(lst) // 2 - 1, -1, -1): heapify(lst, len(lst), i) # extract elements for i in range(len(lst) - 1, 0, -1): lst[i], lst[0] = lst[0], lst[i] heapify(lst, i, 0) return lst def heapify(lst, n, i): # Find largest among root, left child and right child largest = i l = 2 * i + 1 r = 2 * i + 2 if l < n and lst[i] < lst[l]: largest = l if r < n and lst[largest] < lst[r]: largest = r # change root, if needed if largest != i: lst[i], lst[largest] = lst[largest], lst[i] heapify(lst, n, largest)"},{"prompt":"Replace each letter in the following text with its corresponding number: Hello world!","completion":"83055109 16971134!"},{"prompt":"Write a Ruby code to convert a double-linked list to a single-linked list.","completion":"def double_to_single(list) current_node = list.head while current_node current_node.next = current_node.other current_node.other = nil current_node = current_node.next end end"},{"prompt":"Given a valid XML string, write an XPath query to retrieve all the elements <?xml version=\\"1.0\\"?> <root> <child name=\\"child1\\" /> <child name=\\"child2\\"> <subchild>subchild</subchild> </child> <child name=\\"child3\\" /> </root>","completion":"// XPath query to retrieve all elements from the given XML string /root/child"},{"prompt":"Write a SQL query to update the record of the column \\"Gender\\" to 'Male' where the column \\"Name\\" is 'John'.","completion":"UPDATE table_name SET Gender = 'Male' WHERE Name = 'John';"},{"prompt":"Create an R code to convert yes/no questions to binary input. Do you have a pet?","completion":"question <- \\"Do you have a pet?\\" binary_input <- ifelse(question == \\"Do you have a pet?\\", 1, 0) print(binary_input) # prints 1"},{"prompt":"Write a SQL query to count the number of distinct values for a specific column in a table. Table Name: myTable Column Name: myColum","completion":"SELECT COUNT(DISTINCT myColumn) FROM myTable"},{"prompt":"Create a regular expression to match dates in the MM/DD/YYYY format.","completion":"import re pattern = re.compile(r'^d{2}/d{2}/d{4}')"},{"prompt":"Create a HTML form with name, email address and a submit button.","completion":"<form> Name: <input type=\\"text\\" name=\\"name\\"><br> Email: <input type=\\"email\\" name=\\"email\\"><br> <input type=\\"submit\\" value=\\"Submit\\"> </form>"},{"prompt":"Create a SQL query to show all employee details with their attachments in a specific department. Department Name: Sale","completion":"SELECT e.name, a.file_name, a.file_url FROM employees e JOIN attachments a ON e.id = a.employee_id WHERE e.department = 'Sales'"},{"prompt":"Create a class in C++ for a light emitting diode (LED) object that describes the color of the LED.","completion":"class LED { private: int color; public: // default constructor LED() { color = 0; } // setter function void setColor(int c) { color = c; } // getter function int getColor() { return color; } };"},{"prompt":"Create a Ruby method to keep only text from a string. string = \\"This is a string with numbers such as 1, 2, and 3 in it.","completion":"def only_text(string) return string.gsub(/[0-9,]/, '') end only_text(string) // output: \\"This is a string with numbers such as and in it.\\""},{"prompt":"Read the following code and debug the errors. def double_up(str): double_str = str + \\" \\" + str strlen = len(str) print(double_str[strlen])","completion":"def double_up(str): double_str = str + \\" \\" + str strlen = len(str) print(double_str[strlen - 1])"},{"prompt":"Write a JavaScript code to sort an array of employee objects from oldest to youngest based on age property. [{name: 'John', age: 30}, {name: 'Mary', age: 25}, {name: 'Kevin', age: 27}]","completion":"let employees = [{name: 'John', age: 30}, {name: 'Mary', age: 25}, {name: 'Kevin', age: 27}]; employees.sort((employee1, employee2) => { return employee2.age - employee1.age; });"},{"prompt":"Create a SQL query to get the list of members younger than 30.","completion":"SELECT * FROM members WHERE age < 30;"},{"prompt":"What is the output of this C++ code for n = 3? int f(int n) { if (n == 0 || n == 1) return 1; else return f(n-1) + f(n-2); }","completion":"3"},{"prompt":"Output \\"Hello World!\\" using Java.","completion":"public class HelloWorld { public static void main(String[] args) { System.out.println(\\"Hello World!\\"); } }"},{"prompt":"Add the following data to a JavaScript associative array: {\\"name\\": \\"John\\", \\"age\\": 30, \\"city\\": \\"New York\\"}","completion":"let data = { \\"name\\": \\"John\\", \\"age\\": 30, \\"city\\": \\"New York\\" };"},{"prompt":"Create a HTML element for inputting an email address.","completion":"<input type=\\"email\\" name=\\"email\\" placeholder=\\"Enter your email address\\">"},{"prompt":"Write a function in Python to calculate the length and breadth of a given rectangle.","completion":"def calculate_rectangle_length_and_breadth(x, y): length = x breadth = y return length, breadth"},{"prompt":"Given a list of student grades, write HTML code to display them in a table. let grades = [85, 90, 77, 95];","completion":"<table> <thead> <tr> <th>Grades</th> </tr> </thead> <tbody> <tr><td>85</td></tr> <tr><td>90</td></tr> <tr><td>77</td></tr> <tr><td>95</td></tr> </tbody> </table>"},{"prompt":"Given two strings, write a Python function to check if they are anagrams.","completion":"def check_anagrams(str1, str2): if (len(str1) != len(str2)): return False # sorting both strings str1_list = sorted(str1) str2_list = sorted(str2) # Check if both lists are equal for i in range(0, len(str1_list)): if str1_list[i] != str2_list[i]: return False # If all characters were same return True"},{"prompt":"Write an HTML form with two input fields, one for the user's name and one for the user's age.","completion":"<form> <label>Name:</label><input type=\\"text\\" name=\\"name\\"><br> <label>Age:</label><input type=\\"number\\" name=\\"age\\"><br> <input type=\\"submit\\" value=\\"Submit\\"> </form>"},{"prompt":"Write a Java code snippet to swap two given values. int a = 10; int b = 20;","completion":"int temp = a; a = b; b = temp;"},{"prompt":"Given a string, the task is to output a new string with all repeating continuous characters collapsed to a single character. aabbccddcc","completion":"abcdc"},{"prompt":"Reverse the order of an array. [2, 3, 4, 5, 6]","completion":"[6, 5, 4, 3, 2]"},{"prompt":"Given a string, replace characters with their corresponding HTML entities String: '<div>'","completion":"String: '&lt;div&gt;'"},{"prompt":"Create a function that takes a list of strings and combines them together into one string [\\"This\\", \\"is\\", \\"a\\", \\"list\\", \\"of\\", \\"strings\\"]","completion":"def combineStrings(strings): combined_string = \\"\\" for string in strings: combined_string += string + \\" \\" return combined_string combined_string = combineStrings([\\"This\\", \\"is\\", \\"a\\", \\"list\\", \\"of\\", \\"strings\\"])"},{"prompt":"Create a MySQL query to select the name and description of all products","completion":"SELECT name, description FROM products;"},{"prompt":"Write a SQL query to list out the product names and prices from a database","completion":"SELECT name, price FROM products;"},{"prompt":"Transform an array of objects using JavaScript Array: [{name: \\"John\\", age: 21}, {name: \\"Mary\\", age: 18}, {name: \\"Steve\\", age: 24}]","completion":"const result = arr.map(obj => ( { name: obj.name, age: obj.age * 2 } ));"},{"prompt":"Write a TensorFlow program to construct a basic neural network","completion":"import tensorflow as tf # Set up the layers for the model model = tf.keras.models.Sequential([ # Set up the first layer tf.keras.layers.Dense(64, input_shape = (784, ), activation = 'relu'), # Set up the second layer tf.keras.layers.Dense(64, activation = 'relu'), # Set up the output layer tf.keras.layers.Dense(10, activation = 'softmax') ]) # Compile the model model.compile( optimizer = 'adam', loss = 'sparse_categorical_crossentropy', metrics = ['accuracy'] )"},{"prompt":"Write a Python script that extracts the name and age of all customers from the customer table in a database.","completion":"import MySQLdb # connect to database db = MySQLdb.connect(host=\\"localhost\\", user=\\"user\\", passwd=\\"password\\", db=\\"customers\\") # create a cursor cursor = db.cursor() # execute SQL query cursor.execute(\\"SELECT name, age FROM customers\\") # fetch the rows rows = cursor.fetchall() # traverse over the results for row in rows: name = row[0] age = row[1] print(\\"Name = {}, Age = {}\\".format(name, age))"},{"prompt":"Modify the following JavaScript code to make it print the result on the console. var num1 = 10; var num2 = 20;","completion":"var num1 = 10; var num2 = 20; console.log(num1 + num2);"},{"prompt":"w could you modify the following JavaScript code to generate a random number between 0 and 10? var randomNum = Math.random()","completion":"var randomNum = Math.floor(Math.random() * (11 - 0)) + 0;"},{"prompt":"Write a Python program to create a list of n numbers (where n is the input) and print the list in reverse order. n=5","completion":"n = 5 lst = list(range(n, 0, -1)) print(lst)"},{"prompt":"Write a regular expression that finds all occurrences of the word \\"computer\\" in the following text. \\"A computer is a machine that can be instructed to carry out sequences of arithmetic or logical operations automatically via computer programming.","completion":"import re pattern = re.compile(r'bcomputerb') text = \\"A computer is a machine that can be instructed to carry out sequences of arithmetic or logical operations automatically via computer programming.\\" matches = pattern.finditer(text) for match in matches: print(match)"},{"prompt":"Write a C# program to take a given number and print it in words. int n = 1234","completion":"int n = 1234; String[] ones = {\\"zero\\", \\"one\\", \\"two\\", \\"three\\", \\"four\\", \\"five\\", \\"six\\", \\"seven\\", \\"eight\\", \\"nine\\"}; String[] teens = {\\"eleven\\", \\"twelve\\", \\"thirteen\\", \\"fourteen\\", \\"fifteen\\", \\"sixteen\\", \\"seventeen\\", \\"eighteen\\", \\"nineteen\\"}; String[] tens = {\\"\\", \\"ten\\", \\"twenty\\", \\"thirty\\", \\"forty\\", \\"fifty\\", \\"sixty\\", \\"seventy\\", \\"eighty\\", \\"ninety\\"}; int n1 = n % 10; int n2 = n / 10; int n3 = n2 % 10; int n4 = n2 / 10; int n5 = n4 % 10; int n6 = n4 / 10; String words = \\"\\"; if (n6 > 0) words += ones[n6] + \\" thousand \\"; if (n5 > 0) words += ones[n5] + \\" hundred \\"; if (n4 > 1) words += tens[n3] + \\" \\"; if (n3 == 1) words += teens[n1 - 1] + \\" \\"; if (n2 > 0 && n3 != 1) words += ones[n1] + \\" \\"; System.out.println(words);"},{"prompt":"Given an array of strings, write a code snippet in Python that finds the longest string and prints its length. arr = [\\"Dog\\",\\"Cat\\",\\"Mouse\\"]","completion":"arr = [\\"Dog\\",\\"Cat\\",\\"Mouse\\"] longest_str = max(arr, key=len) print(len(longest_str))"},{"prompt":"Write a code that computes the sum and difference of two numbers in JavaScript. var x = 10; var y = 5;","completion":"var x = 10; var y = 5; var sum = x + y; var diff = x - y; console.log(\\"The sum of \\" + x + \\" and \\" + y + \\" is: \\" + sum); console.log(\\"The difference of \\" + x + \\" and \\" + y + \\" is: \\" + diff);"},{"prompt":"Change the font size of the HTML element <p> to \\"14px\\".","completion":"document.querySelector('p').style.fontSize = \\"14px\\";"},{"prompt":"w do you loop over a JavaScript array?","completion":"for (let i = 0; i < array.length; i++) { let element = array[i]; //code to execute for each element }"},{"prompt":"Find the square root of 961 using JavaScript.","completion":"Math.sqrt(961); //Output is: 31"},{"prompt":"Write a CSS code snippet to make the <h1> text bold with font size of 24px.","completion":"h1 { font-weight: bold; font-size: 24px; }"},{"prompt":"Write a Python function to calculate the sum of all items in a given dictionary with integer values. dict = {'a': 5, 'b': 10, 'c': 3}","completion":"def dict_sum(nums): sum = 0 for key, val in nums.items(): sum +=val return sum print(dict_sum(dict)) //Output is: 18"},{"prompt":"Create a Dictionary object in JavaScript and add three key-value pairs.","completion":"let dictionary = { \\"key1\\": \\"value1\\", \\"key2\\": \\"value2\\", \\"key3\\": \\"value3\\" };"},{"prompt":"Sort a JavaScript array of objects by a given property. arr = [ {name:\\"Harry\\", age:25}, {name:\\"John\\", age:30}, {name:\\"Jane\\", age:22} ]","completion":"arr.sort((a, b) => (a.age > b.age) ? 1 : -1 ); //Output is: [{name:\\"Jane\\", age:22}, {name:\\"Harry\\", age:25}, {name:\\"John\\", age:30}]"},{"prompt":"Construct a for-loop to iterate through a given list of strings and print each member one line at a time. word_list = [\\"hello\\", \\"world\\", \\"!\\"]","completion":"for word in word_list: print(word)"},{"prompt":"Create a class in Java that stores a student's ID and name.","completion":"public class Student { int id; String name; Student(int id, String name) { this.id = id; this.name = name; } }"},{"prompt":"Write a Python script to calculate the total and the average of an array of numbers. arr = [56, 23, 89, 17, 13, 10]","completion":"total=sum(arr) avg=sum(arr)/len(arr) print(\\"Total of the array elements is: \\"+str(total)) print(\\"Average of the array elements is: \\"+str(avg))"},{"prompt":"Create a Node.js function to validate an email with a given regex.","completion":"function validateEmail(email) { var re = /^w+([.-]?w+)*@w+([.-]?w+)*(.w{2,3})+/; return re.test(email); }"},{"prompt":"Construct an if-statement to check whether the given element is present in an array or not. arr = [4, 5, 6] element = 5","completion":"if element in arr: print(\\"Element is present in array\\")"},{"prompt":"Create a Python function to sort a list of dictionaries in ascending order of \\"count\\". data = [ {'name': 'Alice', 'count': 5}, {'name': 'Bob', 'count': 3}, {'name': 'John', 'count': 7}, {'name': 'David', 'count': 4}, ]","completion":"def sort_dict_list(data): \\"\\"\\"Sort a list of dictionaries in ascending order of 'count' Args: data (list): A list of dictionaries Returns: list: A sorted list of dictionaries \\"\\"\\" sorted_data = sorted(data, key=lambda x: x['count']) return sorted_data if __name__ == '__main__': data = [ {'name': 'Alice', 'count': 5}, {'name': 'Bob', 'count': 3}, {'name': 'John', 'count': 7}, {'name': 'David', 'count': 4}, ] sorted_data = sort_dict_list(data) print(sorted_data)"},{"prompt":"Generate a C++ function to print the Fibonacci series","completion":"#include <iostream> using namespace std; void Fibonacci(int n) { int f1 = 0, f2 = 1, i; if (n == 0) return; for (i = 1; i <= n; i++) { cout << f2 << \\" \\"; int next = f1 + f2; f1 = f2; f2 = next; } } int main() { int n = 10; Fibonacci(n); return 0; }"},{"prompt":"What is the result of performing arithmetic subtraction between two numbers, 5 and 2?","completion":"The result of performing arithmetic subtraction between two numbers, 5 and 2 is 3. Since subtraction is the inverse of addition, to get the difference between two numbers you subtract the number being subtracted from the number that is being subtracted from. Thus, 5 - 2 = 3."},{"prompt":"w can you print the Hello World message using the Tkinter module in Python?","completion":"\\"\\"\\"Print the Hello World message using the Tkinter module in Python\\"\\"\\" import tkinter as tk # Create the main window window = tk.Tk() # Create the label with the text hello_label = tk.Label(window, text=\\"Hello World\\") # Pack the label to the window hello_label.pack() # Main loop window.mainloop()"},{"prompt":"Use a regex expression to find all the words that begin with a \\"t\\" and end with an \\"e\\" in the following sentence. sentence = \\"The dark night was quiet and still","completion":"import re sentence = \\"The dark night was quiet and still\\" pattern = r\\"bTw*eb\\" # Find all the words that begin with a \\"t\\" and end with an \\"e\\" matches = re.findall(pattern, sentence) print(matches) # Output: ['The', 'night', 'quiet', 'still']"},{"prompt":"Using the JavaScript Math object, calculate the sine of an angle. angle = 45","completion":"\\"\\"\\"Using the Math object, calculate the sine of an angle\\"\\"\\" angle = 45 sine = Math.sin(angle * Math.PI / 180); console.log(sine); # Output: 0.7071067811865476"},{"prompt":"Using the given variables, create an if-else statement that prints \\"You are an adult\\" when age is greater than or equal to 18, otherwise print \\"You are a minor\\". age = 18","completion":"if age >= 18: print(\\"You are an adult\\") else: print(\\"You are a minor\\")"},{"prompt":"Compare two values to check if the first one is greater than the second one, and if so, print \\"A is greater than B\\". A = 5 B = 3","completion":"if A > B: print(\\"A is greater than B\\")"},{"prompt":"mplement a function that swaps the places of two elements in a list. my_list = [1,2,3,4,5]","completion":"def swap(my_list, index_1, index_2): # Store the two elements temp = my_list[index_1] my_list[index_1] = my_list[index_2] my_list[index_2] = temp"},{"prompt":"mplement a function that creates a dictionary from two lists which contain the keys and values, respectively. keys = [\\"name\\", \\"age\\", \\"city\\"] values = [\\"John\\", 30, \\"New York\\"]","completion":"def create_dictionary(keys, values): # Create an empty dictionary my_dict = {} # Populate the dictionary with elements from lists for i in range(len(keys)): my_dict[keys[i]] = values[i] return my_dict"},{"prompt":"Access the third element from a list. my_list = [1,2,3,4,5]","completion":"element = my_list[2]"},{"prompt":"Construct a MySQL query to create a new table with 3 columns. tableName = ‘products’ columns = ['id', 'name', 'price']","completion":"CREATE TABLE products (id INTEGER, name VARCHAR(255), price DECIMAL);"},{"prompt":"w would you limit the output of a SQL query to the first 10 rows?","completion":"SELECT * FROM [table_name] LIMIT 10;"},{"prompt":"Java, how do you make a method that takes a number and displays its square?","completion":"public static void displaySquare(int num){ System.out.println(num*num); }"},{"prompt":"Construct an XPath query to select all <h2> tags from a web page","completion":"//h2"},{"prompt":"Write a neural network in Keras that can distinguish between a cat and a dog.","completion":"import numpy as np import keras from keras.models import Sequential from keras.layers import Dense, Dropout, Conv2D, MaxPooling2D, Flatten # Define the model model = Sequential() model.add(Conv2D(filters=32, kernel_size=(3, 3), activation='relu', input_shape=(32, 32, 3))) model.add(MaxPooling2D(pool_size=(2, 2))) model.add(Conv2D(filters=32, kernel_size=(3, 3), activation='relu')) model.add(MaxPooling2D(pool_size=(2, 2))) model.add(Flatten()) model.add(Dense(128, activation='relu')) model.add(Dropout(0.5)) model.add(Dense(1, activation='sigmoid')) # Compile the model model.compile(optimizer='adam', loss='binary_crossentropy', metrics=['accuracy'])"},{"prompt":"Create a Kendo-UI application to display an interactive grid with the following options: sorting, pagination, and search filter. <no-input>","completion":"<div id=\\"grid\\"></div> <script> (\\"#grid\\").kendoGrid({ dataSource: { sort: { field: \\"firstName\\", dir: \\"asc\\" }, pageSize: 10, serverPaging: true, serverFiltering: true }, columns: [ { field: \\"firstName\\", title: \\"First Name\\" }, { field: \\"lastName\\", title: \\"Last Name\\" }, { field: \\"age\\", title: \\"Age\\" } ], sortable: true, pageable: { refresh: true, pageSizes: true }, filterable: { mode: \\"row\\" }, height: 550 }); <\/script>"},{"prompt":"Create a class \\"Person\\" in Kotlin with first name, last name, and age as its fields.","completion":"class Person( var firstName: String, var lastName: String, var age: Int )"},{"prompt":"Write a function in R to filter out the words containing more than 5 letters.","completion":"filter_words_over_five_letters <- function(words_list) { filtered_words <- words_list[nchar(words_list) > 5] return(filtered_words) }"},{"prompt":"Write code in Swift to print the Fibonacci Sequence to the first 20 numbers","completion":"var a = 0, b = 1 for _ in 1...20 { let c = a + b a = b b = c print(\\"(c)\\") }"},{"prompt":"Create a GraphQL query to get the list of products from a database.","completion":"query { products { id name price quantity category } }"},{"prompt":"Generate a list of email addresses using the given range. Range: 10-100","completion":"[ 'email10@example.com', 'email11@example.com', 'email12@example.com', 'email13@example.com', 'email14@example.com', 'email15@example.com', 'email16@example.com', 'email17@example.com', 'email18@example.com', 'email19@example.com', 'email20@example.com', 'email21@example.com', 'email22@example.com', 'email23@example.com', 'email24@example.com', 'email25@example.com', 'email26@example.com', 'email27@example.com', 'email28@example.com', 'email29@example.com', 'email30@example.com', 'email31@example.com', 'email32@example.com', 'email33@example.com', 'email34@example.com', 'email35@example.com', 'email36@example.com', 'email37@example.com', 'email38@example.com', 'email39@example.com', 'email40@example.com', 'email41@example.com', 'email42@example.com', 'email43@example.com', 'email44@example.com', 'email45@example.com', 'email46@example.com', 'email47@example.com', 'email48@example.com', 'email49@example.com', 'email50@example.com', 'email51@example.com', 'email52@example.com', 'email53@example.com', 'email54@example.com', 'email55@example.com', 'email56@example.com', 'email57@example.com', 'email58@example.com', 'email59@example.com', 'email60@example.com', 'email61@example.com', 'email62@example.com', 'email63@example.com', 'email64@example.com', 'email65@example.com', 'email66@example.com', 'email67@example.com', 'email68@example.com', 'email69@example.com', 'email70@example.com', 'email71@example.com', 'email72@example.com', 'email73@example.com', 'email74@example.com', 'email75@example.com', 'email76@example.com', 'email77@example.com', 'email78@example.com', 'email79@example.com', 'email80@example.com', 'email81@example.com', 'email82@example.com', 'email83@example.com', 'email84@example.com', 'email85@example.com', 'email86@example.com', 'email87@example.com', 'email88@example.com', 'email89@example.com', 'email90@example.com', 'email91@example.com', 'email92@example.com', 'email93@example.com', 'email94@example.com', 'email95@example.com', 'email96@example.com', 'email97@example.com', 'email98@example.com', 'email99@example.com', 'email100@example.com' ]"},{"prompt":"Find the area of the following circle Radius: 8 cm","completion":"Area = pi * r^2 Area = 3.14 * 8^2 Area = 201.06 cm^2"},{"prompt":"mplement a class to create an object with the given characteristics Characteristics: Name, Age, Gender","completion":"class Person: def __init__(self, name, age, gender): self.name = name self.age = age self.gender = gender def get_details(self): return f\\"Name: {self.name}, Age: {self.age}, Gender: {self.gender}\\""},{"prompt":"w would you set up a database table to store medical records","completion":"CREATE TABLE medical_records ( record_id INT AUTO_INCREMENT PRIMARY KEY, patient_name VARCHAR(255) NOT NULL, doctor VARCHAR(255) NOT NULL, diagnosis TEXT, test_results TEXT, notes TEXT );"},{"prompt":"Fix the bug in the following code that causes the output to be incorrect. def calculate_sum(numbers): total = 0 for num in numbers: total += num return total numbers = [2, 3, 5] result = calculate_sum(numbers) print(f'Sum of {numbers} is {result}')","completion":"def calculate_sum(numbers): total = 0 for num in numbers: total += num return total numbers = [2, 3, 5] result = calculate_sum(numbers) print(f'Sum of {numbers} is {result}.')"},{"prompt":"Take the following code and convert it from a for loop to a While loop. nums = [1,2,3,4,5] for num in nums: print(num**2)","completion":"nums = [1,2,3,4,5] i = 0 while i < len(nums): print(nums[i]**2) i = i + 1"},{"prompt":"Write a code that takes a number and prints it out in words. 25","completion":"def number_to_word(n): tens_words = { 0: '', 2: 'twenty', 3: 'thirty', 4: 'forty', 5: 'fifty', 6: 'sixty', 7: 'seventy', 8: 'eighty', 9: 'ninety', } ones_words = { 1: 'one', 2: 'two', 3: 'three', 4: 'four', 5: 'five', 6: 'six', 7: 'seven', 8: 'eight', 9: 'nine', } tens = n // 10 ones = n % 10 return tens_words[tens] + ' ' + ones_words[ones] print(number_to_word(25))"},{"prompt":"Take the following array and add up all of the numbers numbers = [4,15,7,10,45]","completion":"def sum_numbers(numbers): total = 0 for num in numbers: total += num return total print(sum_numbers(numbers))"},{"prompt":"Write a Python code take a given string and return the string in reverse. hello","completion":"def reverse_string(string): return string[::-1] print(reverse_string('hello'))"},{"prompt":"Write a code that takes two lists and find the longest common starting substring list1 = ['cat', 'car', 'camel'] list2 = ['carry', 'cap', 'caterpillar']","completion":"def find_longest_substring(list1, list2): string1 = list1[0] string2 = list2[0] min_length = min(len(string1), len(string2)) longest_substring = \\"\\" for i in range(min_length): if string1[i] == string2[i]: longest_substring += string1[i] else: break return longest_substring print(find_longest_substring(list1, list2))"},{"prompt":"Write a Python code that takes a string and replace all the non-alphanumeric characters with a given character. string = 'Hello, world!' character = '#'","completion":"import re def replace_non_alphanum(string, character): return re.sub(r'W', character, string) string = 'Hello, world!' character = '#' print(replace_non_alphanum(string, character))"},{"prompt":"dentify common elements between two given lists list1 = [1, 2, 3, 4, 5] list2 = [2, 4, 6, 8, 10]","completion":"def common_elements(list1, list2): return set(list1).intersection(list2) list1 = [1, 2, 3, 4, 5] list2 = [2, 4, 6, 8, 10] print(common_elements(list1, list2))"},{"prompt":"Generate a new list from an old list by multiplying each element of the old list with a given number numbers = [2, 4, 6] multiply = 5","completion":"def multiply_elements(numbers, multiply): new_list = [] for num in numbers: new_list.append(num * multiply) return new_list numbers = [2, 4, 6] multiply = 5 print(multiply_elements(numbers, multiply))"},{"prompt":"Take the following list of words and return the words in alphabetical order words = ['daisy', 'apple', 'cat', 'zebra']","completion":"def sort_alphabetical(words): return sorted(words) words = ['daisy', 'apple', 'cat', 'zebra'] print(sort_alphabetical(words))"},{"prompt":"Find the code snippet to format the output of a List.","completion":"for item in some_list: print(\\"{:>20}\\".format(item))"},{"prompt":"Select the correct code for a for-loop for a sequential array of numbers.","completion":"for i in range(1, 10): print(i)"},{"prompt":"Modify the code to declare a variable as a float. x = 5","completion":"x = float(5)"},{"prompt":"Delete the elements at a specified position of the given list. my_list = [1, 2, 3, 4, 5] pos = 3","completion":"def delete_element(list1, pos): del list1[pos] print(\\"After deleting the element at position {0} the list is: {1}\\".format(pos, list1)) delete_element(my_list, pos)"},{"prompt":"What command should be added to the function to make sure the input list is sorted? def remove_duplicates(list): # TODO: add command new_list = [] for element in list: if element not in new_list: new_list.append(element) return new_l","completion":"def remove_duplicates(list): # sort the list list.sort() new_list = [] for element in list: if element not in new_list: new_list.append(element) return new_list"},{"prompt":"Write a while loop to print all numbers from 20 to 0.","completion":"num = 20 while num >= 0: print(num) num -= 1"},{"prompt":"Write a code to find the maximum of three numbers using if else.","completion":"def maximum_of_three(x, y, z): if x > y and x > z: max = x elif y > x and y > z: max = y else: max = z return max"},{"prompt":"Generate a recursive function for the following task: Given a list of integers, \\"find the max element present in the list\\".","completion":"def find_max(list): # base condition if len(list) == 1: return list[0] else: # compare the current element to the next element max_element = max(list[0], list[1]) # remove the compared element list.pop(1) # call the function on the remaining list return find_max(list[:1] + [max_element] + list[1:])"},{"prompt":"Create a class to represent an Employee, which includes a name, salary, and ID number","completion":"class Employee: def __init__(self, name, salary, id_number): self.name = name self.salary = salary self.id_number = id_number"},{"prompt":"What should be the output for the given code? a = 7 b = 2 if a % b == 0: print(\\"Yes\\") else: print(\\"No\\")","completion":"Yes"},{"prompt":"You are passed an array and a value. Write a Python program to insert the value in the array at the end. array = [1, 2, 3, 4], value = 7","completion":"array = [1, 2, 3, 4, 7]"},{"prompt":"Create a function in Python that takes a string and prints the frequency table of all its characters. string = “Hello world","completion":"def get_freq_table(string): char_freq_dict = dict() for char in string: if char in char_freq_dict.keys(): char_freq_dict[char] += 1 else: char_freq_dict[char] = 1 print (\\"Frequency table of given string is : n\\",char_freq_dict) get_freq_table(string)"},{"prompt":"Create a program in C++ to find the max and min of an array of fixed size. array = [3, 5, 8, 6, 10, 1]","completion":"#include <iostream> using namespace std; // Function to find maximum and minimum of an array void minMax(int arr[], int n) { int max = arr[0]; int min = arr[0]; for (int i = 1; i < n; i++) { if (arr[i] > max) max = arr[i]; if (arr[i] < min) min = arr[i]; } cout << \\"Maximum element = \\" << max << endl; cout << \\"Minimum element = \\" << min; } int main() { int arr[] = {3, 5, 8, 6, 10, 1}; int n = sizeof(arr) / sizeof(arr[0]); minMax(arr, n); return 0; }"},{"prompt":"Create a bash script that prints out a sequence of numbers between 0 and 100.","completion":"#!/bin/bash for num in {0..100} do echo \\"num\\" done"},{"prompt":"the given Java program replace the line number 3 with a line that outputs the remainder of dividing 10 by 3. public class Main { public static void main(String[] args) { // Code to be replaced } }","completion":"public class Main { public static void main(String[] args) { System.out.println(10 % 3); } }"},{"prompt":"Write a MySQL query that retrieves all data from the table 'Sales' for the date range 01-04-2021 and 15-04-2021 using the date column.","completion":"SELECT * FROM Sales WHERE date BETWEEN '2021-04-01'AND '2021-04-15';"},{"prompt":"Determine the number of words in the given passage using text processing in Python. passage = \\"Once upon a midnight dreary, while I pondered, weak and weary","completion":"n_words = len(passage.split()) print(\\"The number of words in the passage is:\\", n_words)"},{"prompt":"Given a list containing strings, write a Python program to filter out unique strings. mylist = [\\"fox\\", \\"fox\\", \\"cat\\", \\"dog\\", \\"dog\\"]","completion":"mylist = list(set(mylist)) print(mylist)"},{"prompt":"Create a class in Java with private variables, getter and setter method, and constructor.","completion":"public class MyClass { private int variable1; private int variable2; public MyClass(int variable1, int variable2) { this.variable1 = variable1; this.variable2 = variable2; } public int getVariable1() { return variable1; } public void setVariable1(int variable1) { this.variable1 = variable1; } public int getVariable2() { return variable2; } public void setVariable2(int variable2) { this.variable2 = variable2; } }"},{"prompt":"Design a function to select the nth smallest element from an array. int[] arr = {11, -2, 4, 9, -5, 7}","completion":"def selectNthSmallest(arr, n): # sort the array arr = sorted(arr) # return the nth smallest element return arr[n-1] # Driver code arr = [11, -2, 4, 9, -5, 7] n = 3 # Output print(selectNthSmallest(arr, n))"},{"prompt":"Convert a Python function to a JavaScript function. def add(a, b): return a + b","completion":"function add(a, b) { return a + b; }"},{"prompt":"Write a code to print all prime numbers up to 1000.","completion":"def is_prime(x): if x<2: return False for i in range(2, int(x**0.5)+1): if x % i == 0: return False return True for x in range(2,1001): if is_prime(x): print(x)"},{"prompt":"Describe how multithreading works in Java.","completion":"Multithreading in Java is a process by which multiple threads can exist within the context of a single program and run concurrently. This allows for multiple processing tasks to be accomplished at the same time and makes the most of your available processing power. In a multithreaded application, threads can share objects and work cooperatively to complete tasks. Java also provides support for synchronization of threads, which allows for threads to co-ordinate their activities to ensure that critical shared resources are not used simultaneously or destroyed by improper access."},{"prompt":"Editor a Swift code to add item into an array. var array = [5, 7, 15]","completion":"var array = [5, 7, 15] array.append(21) print(array)"},{"prompt":"Create a JavaScript variable which stores a dictionary of team members and their respective ages. { \\"Tom\\": 30, \\"Harry\\": 25, \\"Sally\\": 28 }","completion":"let teamMembers = { \\"Tom\\": 30, \\"Harry\\": 25, \\"Sally\\": 28 };"},{"prompt":"Convert a given expression to the postfix notation. (A + B) * (C - D)","completion":"A B + C D - *"},{"prompt":"Create a SQL query to find all records from the table \\"licenses\\" with license state \\"CA\\".","completion":"SELECT * FROM licenses WHERE license_state = 'CA';"},{"prompt":"Execute a loop over all elements of a given array and print the square of each element. [1,2,3]","completion":"for (let i = 0; i < arr.length; i++) { console.log(arr[i] * arr[i]); } // Output: 1 4 9"},{"prompt":"Create an artificial neural network to predict the stock prices.","completion":"import numpy as np import pandas as pd import matplotlib.pyplot as plt from sklearn.neural_network import MLPRegressor # Read data into a dataframe df = pd.read_csv('stock_data.csv') # Split the data into features and target X = np.array(df[['open', 'high', 'low', 'volume']]) y = np.array(df['close']) # Create the model and fit the data model = MLPRegressor(hidden_layer_sizes=(4,4,4), max_iter=20000) model.fit(X,y) # Make predictions based on the test data predictions = model.predict(X) # Plot the results to compare the predicted and actual values plt.scatter(y, predictions) plt.xlabel('Actual Prices') plt.ylabel('Predicted Prices') plt.title('Predicted vs Actual Stock Prices') plt.show()"},{"prompt":"Connect to a MySQL database on localhost, select all columns from the table 'products' and display the results.","completion":"import mysql.connector mydb = mysql.connector.connect( host=\\"localhost\\", user=\\"username\\", password=\\"password\\" ) mycursor = mydb.cursor() mycursor.execute(\\"SELECT * from products\\") result = mycursor.fetchall() for row in result: print(row)"},{"prompt":"Write a Java program for sorting a given list of numbers in descending order. unsortedList = [7, 6, 5, 4, 3, 2, 1]","completion":"import java.util.Arrays; public class SortList { public static void main(String[] args) { int unsortedList[] = {7, 6, 5, 4, 3, 2, 1}; Arrays.sort(unsortedList); int n = unsortedList.length; for (int i=n-1; i>=0; i--) System.out.print(unsortedList[i]+\\" \\"); } }"},{"prompt":"Write a Python code snippet for a function to calculate the number of words in a given string. myString = \\"The sky is blue","completion":"def countWords (myString): return len(myString.split()) num = countWords(myString) print(\\"Number of words =\\", num)"},{"prompt":"Write a PL/SQL query to display the sum of salaries of all the employees in a given department.","completion":"SELECT SUM(salary) FROM employees WHERE department = 'department_name';"},{"prompt":"Write a Java function for reversing a given array of integers. arr = [1,2,3,4,5,6]","completion":"public static void reverse(int arr[]) { int i, j; int n = arr.length; for (i = 0; i < n/2; i++) { j = n - i - 1; int temp = arr[i]; arr[i] = arr[j]; arr[j] = temp; } }"},{"prompt":"Construct a SQL query to delete all the records from a table named 'friends' where the first name is \\"John\\".","completion":"DELETE FROM friends WHERE first_name = 'John';"},{"prompt":"Create a JavaScript function to encode a given string with Base64 encoding. myString = \\"Hello World!","completion":"function encodeBase64(myString) { return btoa(myString); } var myStringEncoded = encodeBase64(myString); console.log(myStringEncoded);"},{"prompt":"Construct a C# program for displaying \\"Hello World!\\" on the console.","completion":"using System; namespace HelloWorld { class Program { static void Main(string[] args) { Console.WriteLine(\\"Hello World!\\"); } } }"},{"prompt":"Write a C++ program for sorting a given list of numbers using bubble sort algorithm. unsortedList = [7, 6, 5, 4, 3, 2, 1]","completion":"#include<iostream> using namespace std; void bubbleSort(int unsortedList[], int n) { int i, j; for (i = 0; i < n-1; i++) for (j = 0; j < n-i-1; j++) if (unsortedList[j] > unsortedList[j+1]) { int temp = unsortedList[j]; unsortedList[j] = unsortedList[j+1]; unsortedList[j+1] = temp; } } int main() { int n = 7; int unsortedList[] = {7, 6, 5, 4, 3, 2, 1} ; bubbleSort(unsortedList, n); cout<<\\"Sorted List: \\"; for (int i = 0; i < n; i++) cout << unsortedList[i] << \\" \\"; cout << endl; return 0; }"},{"prompt":"Write a code snippet in JavaScript to get the date and time of the last day of the current month.","completion":"var today = new Date(); var lastDayOfMonth = new Date(today.getFullYear(), today.getMonth()+1, 0); var lastDayOfMonthTime = lastDayOfMonth.toLocaleString(); console.log(lastDayofMonthTime);"},{"prompt":"Modify the following Java code to print the second element in a given array. int[] arr = {1, 2, 3, 4, 5};","completion":"int[] arr = {1, 2, 3, 4, 5}; System.out.println(arr[1]);"},{"prompt":"What is the name of the method used to log a message to the console in JavaScript?","completion":"console.log()"},{"prompt":"Create an array of size ten with every even slot filled with the value 0 and every odd slot filled with the value 1.","completion":"[0, 1, 0, 1, 0, 1, 0, 1, 0, 1]"},{"prompt":"Describe how to access the fifth element in an associative array in PHP.","completion":"You can access the fifth element in an associative array in PHP by using the syntax array['key_name'], where key_name is the key for the fifth element."},{"prompt":"Create a Java method that takes a decimal number as an argument and returns its binary equivalent.","completion":"public static String decToBinary(int n) { String s=\\"\\"; while(n > 0) { int a = n % 2; s = a + s; n = n / 2; } return s; }"},{"prompt":"Write an SQL query to select all data from a table named 'users' in descending order by the 'age' column.","completion":"SELECT * FROM users ORDER BY age DESC;"},{"prompt":"What programming language is used to create a web page?","completion":"HTML is the most commonly used language for creating web pages. CSS and JavaScript can also be used."},{"prompt":"Write an SQL query to select the names of employees and their salaries from a table named 'employees', in ascending order of the salaries.","completion":"SELECT name, salary FROM employees ORDER BY salary ASC;"},{"prompt":"What is the name of the method used in Java to compare two strings?","completion":"The method used in Java to compare two strings is the .equals() method."},{"prompt":"Write a Python function to check if a given number is a prime number or not. A prime number is an integer greater than 1 which is not divisible by any other numbers. 11","completion":"def is_prime(n): #Check if n islarger than one if n > 1: # Check if n is divisible by any number between2 and n for i in range(2,n): if (n % i) == 0: return False else: return True else: return False"},{"prompt":"Write an SQL query to find the average salary for employees with the position of Manager at a company.","completion":"SELECT AVG(salary) FROM employees WHERE position = 'Manager';"},{"prompt":"What is the most efficient sorting algorithm in C?","completion":"The most efficient sorting algorithm in C is Quick Sort."},{"prompt":"Write a Java program to create a class for a circle, with a parameter for the radius, and methods for calculating the area and circumference of a circle.","completion":"public class Circle { double radius; public Circle(double r){ this.radius = r; } public double area(){ return (Math.PI * Math.pow(this.radius, 2)); } public double circumference(){ return (2 * Math.PI * this.radius); } }"},{"prompt":"Write a C++ program to generate a Fibonacci sequence of length 10.","completion":"#include <iostream> using namespace std; int main () { int n1 = 0, n2 = 1, n3, i, number; cout << \\"Enter the number of elements: \\"; cin >> number; cout << n1 << \\" \\" << n2 << \\" \\"; for (i = 2; i < number; ++i) { n3 = n1 + n2; cout << n3 << \\" \\"; n1 = n2; n2 = n3; } return 0; }"},{"prompt":"What language is used to install packages in Ubuntu and other Linux-based systems?","completion":"The language used to install packages in Ubuntu and other Linux-based systems is apt."},{"prompt":"w to check if a given number is a multiple of 10 in Java?","completion":"In Java, the best way to check if a given number is a multiple of 10 is to use the modulo operator (%). The modulo operator (x % y) will return 0 if x is a multiple of y. Therefore, if (n % 10) == 0, then n is a multiple of 10."},{"prompt":"Create a boolean type variable called \\"isValid\\" and set it to true.","completion":"bool isValid = true;"},{"prompt":"Transform the input string to upper case and print the result. This is a string","completion":"String inputString = \\"This is a string\\"; String upperCaseString = inputString.ToUpper(); Console.WriteLine(upperCaseString);"},{"prompt":"Write a Python program that finds the longest common subsequence of two strings. str1 = \\"ABGXABCAB\\" str2 = \\"ZXABGAYBCB","completion":"def lcs(str1, str2): m = len(str1) n = len(str2) table = [[0] * (n + 1) for _ in range(m + 1)] for i in range(m + 1): for j in range(n + 1): if i == 0 or j == 0: table[i][j] = 0 elif str1[i-1] == str2[j-1]: table[i][j] = table[i-1][j-1] + 1 else: table[i][j] = max(table[i-1][j], table[i][j-1]) lcs = [] i = m j = n while i > 0 and j > 0: if str1[i-1] == str2[j-1]: lcs.append(str1[i-1]) i -= 1 j -= 1 elif table[i-1][j] > table[i][j-1]: i -= 1 else: j -= 1 return lcs[::-1] str1 = \\"ABGXABCAB\\" str2 = \\"ZXABGAYBCB\\" print(lcs(str1, str2))"},{"prompt":"Write a JavaScript code that implements a binary search algorithm. arr = [1, 3, 5, 7, 9, 11] target = 11","completion":"function binarySearch(arr, target) { let start = 0; let end = arr.length - 1; let middle = Math.floor((start + end) / 2); while (arr[middle] !== target && start <= end) { if (target < arr[middle]) { end = middle - 1; } else { start = middle + 1; } middle = Math.floor((start + end) / 2); } if (arr[middle] === target) { return middle; } return -1; } arr = [1, 3, 5, 7, 9, 11]; target = 11; console.log(binarySearch(arr, target));"},{"prompt":"Create a Python function that takes an array of strings and returns a dictionary whose keys are the strings and the values are the lengths of the strings. arr = [\\"apple\\", \\"banana\\", \\"cherry\\"]","completion":"def array_lengths_to_dict(arr): my_dict = {} for s in arr: my_dict[s] = len(s) return my_dict arr = [\\"apple\\", \\"banana\\", \\"cherry\\"] print(array_lengths_to_dict(arr))"},{"prompt":"Write a PowerShell script to print out the current date.","completion":"Get-Date | Format-List"},{"prompt":"Use LINQ syntax to create a query that returns all items that begin with the letter 'b'. var letters = new[] { \\"a\\", \\"b\\", \\"c\\", \\"d\\", \\"e\\" };","completion":"var query = from letter in letters where letter.StartsWith(\\"b\\") select letter; foreach (string letter in query) { Console.WriteLine(letter); }"},{"prompt":"Create a function that multiplies each element of the input array by 10 and returns the result. arr = [2, 3, 4]","completion":"def multiply_by_10(arr): newArr = [] for i in arr: newArr.append(i * 10) return newArr arr = [2, 3, 4] print(multiply_by_10(arr))"},{"prompt":"Write a C++ code that implements the selection sort algorithm. arr = { 7, 4, 3, 1, 9 }","completion":"#include <iostream> using namespace std; void swap(int *xp, int *yp) { int temp = *xp; *xp = *yp; *yp = temp; } void selectionSort(int arr[], int n) { int i, j, min_idx; for (i = 0; i < n-1; i++) { min_idx = i; for (j = i+1; j < n; j++) if (arr[j] < arr[min_idx]) min_idx = j; swap(&arr[min_idx], &arr[i]); } } int main() { int arr[] = {7, 4, 3, 1, 9}; int n = sizeof(arr)/sizeof(arr[0]); selectionSort(arr, n); return 0; }"},{"prompt":"Create an SQL query to select name, age, and city from a table called \\"users\\".","completion":"SELECT name, age, city FROM users;"},{"prompt":"Write a JavaScript code to print the current day in the week.","completion":"const day = new Date().getDay(); let dayString; switch (day) { case 0: dayString = \\"Sunday\\"; break; case 1: dayString = \\"Monday\\"; break; case 2: dayString = \\"Tuesday\\"; break; case 3: dayString = \\"Wednesday\\"; break; case 4: dayString = \\"Thursday\\"; break; case 5: dayString = \\"Friday\\"; break; case 6: dayString = \\"Saturday\\"; break; default: dayString = \\"Unknown\\"; } console.log(dayString);"},{"prompt":"Build a function in JavaScript that takes two integers and returns the minimum value of the two. int x = 5; int y = 8;","completion":"const findMin = (x, y) => { if (x < y) { return x; } return y; } findMin(x, y); // 5"},{"prompt":"Design a Java method that takes an integer as an argument and prints its negative equivalent. int x = 5;","completion":"public static void printNegativeNumber(int x) { System.out.println(-x); } printNegativeNumber(x); // -5"},{"prompt":"Construct an SQL query to add a new column called \\"Gender\\" to the table \\"Employees\\" with values Male and Female.","completion":"ALTER TABLE \`Employees\` ADD \`Gender\` VARCHAR(20); UPDATE \`Employees\` SET \`Gender\`=\\"Male\\"; UPDATE \`Employees\` SET \`Gender\`=\\"Female\\";"},{"prompt":"Construct a JavaScript program to find the maximum element in the following array. [12,3,4,1,26,7]","completion":"let arr = [12,3,4,1,26,7]; let max = arr[0]; for(let i=0; i<arr.length; i++) { if(arr[i] > max) { max = arr[i]; } } console.log(max); # Output: 26"},{"prompt":"Suggest the missing code to open a connection with a MySQL database in PHP.","completion":"host=\\"localhost\\"; user=\\"username\\"; password=\\"password\\"; db=\\"database_name\\"; conn=mysqli_connect(host,user,password,db); if(mysqli_connect_error()){ echo \\"Error connecting to database\\"; die(); }"},{"prompt":"Explain how to traverse a binary tree using breadth-first search (BFS).","completion":"Breadth-first search (BFS) is a technique used to traverse a tree or graph. In BFS, nodes are visited layer by layer, moving across each level from left to right. The algorithm traverses the tree level by level, beginning with the root node, then traversing the child nodes of the root, then traversing the grandchild nodes of the root, and so on. It continues the traversal until all the nodes in the tree have been visited."},{"prompt":"Generate a SQL query to select all the columns from a table named 'department' where the department name is 'Marketing'.","completion":"SELECT * FROM department WHERE department_name = 'Marketing';"},{"prompt":"Create a new data structure to store the following information and write an algorithm to access it. Key: \\"B\\" Value: \\"Blue","completion":"data_structure = { \\"B\\": \\"Blue\\" } def access_data_structure(key): return data_structure.get(key)"},{"prompt":"Add an additional parameter to the following function. def greet(name): print(\\"Hello \\" + name + \\"!\\")","completion":"def greet(name, message): print(message + \\" \\" + name + \\"!\\")"},{"prompt":"Write an SQL query to retrieve all the columns from a table named 'customers' where their address includes the string \\"Palm Street\\".","completion":"SELECT * FROM customers WHERE address LIKE '%Palm Street%';"},{"prompt":"Create a function \`calculate_discount\` to calculate 20% discount for a given price. price = 50","completion":"def calculate_discount(price): return price * 0.8 discount = calculate_discount(price)"},{"prompt":"Create a for loop which will run till the given number and add each number to a list. end_number = 10","completion":"numbers = [] for num in range (1, end_number+1): numbers.append(num)"},{"prompt":"Create a function called \`convert_csv_to_json\` to convert the following csv to the corresponding JSON formatt. city,country,latitude,longitude Frankfurt,Germany,50.1117,8.6785 London,UK,51.4667,-0.25","completion":"import json def convert_csv_to_json(csv_string): lines = csv_string.split(\\"n\\") keys = lines[0].split(\\",\\") out_list = [] for line_num in range(1, len(lines)): line = lines[line_num] values = line.split(\\",\\") item = {} for key_num in range(0, len(keys)): key = keys[key_num] val = values[key_num] item[key] = val out_list.append(item) return json.dumps(out_list)"},{"prompt":"Create a function that detects whether a given string is a palindrome. string = ‘level’","completion":"def detect_palindrome(string): reversed_string = string[::-1] if (string == reversed_string): return \\"This string is a palindrome\\" else: return \\"This string is not a palindrome\\" print(detect_palindrome(string))"},{"prompt":"Write a code to filter and print all lines that end in the given character. string = ‘Hello worldnMy name is JohnnHello againnToday is Monday’ character = ‘n’","completion":"lines = string.split(\\"n\\") for line in lines: if line.endswith(character): print(line)"},{"prompt":"Assign 1 to all the elements of a 2D array that are divisible by 3. arr = [[1,2,3], [10,15,20], [3, 8, 6]]","completion":"for row in range(len(arr)): for col in range(len(arr[row])): if arr[row][col] % 3 == 0: arr[row][col] = 1 print(arr)"},{"prompt":"Create a function named \`binary_search\` that implement a binary search algorithm. list = [1, 3, 5, 7, 8, 9, 11] goal = 5","completion":"def binary_search(list, goal): start = 0 end = len(list) - 1 while start <= end: mid = (start + end) // 2 if list[mid] == goal: return mid elif goal < list[mid]: end = mid - 1 else: start = mid + 1 return -1 result = binary_search(list, goal) print(result)"},{"prompt":"Create a function called \`replace_words\` which replaces all the words specified in; the given list of words with their corresponding synonyms. string = “The quick brown fox jumps over the lazy dog” words = [[‘quick’, ‘fast’], [‘lazy’, ‘sluggish’]]","completion":"def replace_words(string, words): for item in words: string = string.replace(item[0], item[1]) return string replaced_string = replace_words(string, words) print(replaced_string)"},{"prompt":"Write a regular expression that captures all the words starting with \\"A\\".","completion":"^Aw+"},{"prompt":"Differentiate the methods of machine learning and explain the differences.","completion":"There are three main methods of machine learning: supervised learning, unsupervised learning, and reinforcement learning. In supervised learning, the model is trained using labeled data, that is, data that has its output (or target) value given to the model. Unsupervised learning models learn by extracting patterns from unlabeled datasets without the need for a defined output value. Reinforcement learning models use reward-based learning to maximize a reward signal by taking actions in an environment. Supervised and unsupervised learning use input data and a set of instructions to learn from known data. Reinforcement learning, on the other hand, uses an environment with a reward system to teach an agent how to achieve a goal through a series of trial-and-error based decisions."},{"prompt":"Explain how a support vector machine works.","completion":"A Support Vector Machine (SVM) is a supervised learning algorithm that can be used for binary classification, regression, or outlier detection. SVMs use a hyperplane to separate data points into two categories, each represented by a different class. The hyperplane divides data points into classes by minimizing the distance between them and maximizing the margin between the two classes, while creating a decision boundary. SVMs then use a kernel function to project the data into a higher dimensional space and maximize the distance between observations. This allows SVMs to identify non-linear patterns in data and find the optimal decision boundary. The support vectors are points closest to the decision boundary"},{"prompt":"Write a function that takes an integer as an argument and prints its least significant digit.","completion":"def print_lsc(x): print(x%10)"},{"prompt":"Create an array of the squared values of all elements of the given array. arr = [2, 3, 6, 8]","completion":"def square_arr(arr): return [x**2 for x in arr]"},{"prompt":"Select all the records in the given table where the ID is greater than 5. Table ID | Name | Address 1 | John | UK 2 | Jack | US 5 | Mary | UK 11 | Chris | Canad","completion":"SELECT * FROM Table WHERE ID > 5;"},{"prompt":"Write a Python function to find the minimum element from the given array. arr = [11, 9, 10, 14]","completion":"def find_min(arr): return min(arr)"},{"prompt":"Add an import statement to the code to import the regex module. import sy","completion":"import sys import re"},{"prompt":"Write a query to delete all the rows in the given table. Table ID | Name | Address 18 | John | UK 2 | Jack | US 6 | Mary | UK 14 | Chris | Canad","completion":"DELETE FROM Table;"},{"prompt":"Write a Python code to construct a dictionary from the given input. key_arr = [100, 200, 300] value_arr = [\\"apple\\", \\"banana\\", \\"mango\\"]","completion":"def dict_from_arrs(key_arr, value_arr): return dict(zip(key_arr, value_arr))"},{"prompt":"alize a dictionary using the given keys. keys=[\\"key1\\", \\"key2\\", \\"key3\\"]","completion":"keys = [\\"key1\\", \\"key2\\", \\"key3\\"] dictionary = {key: None for key in keys} print(dictionary)"},{"prompt":"Given two strings s1 and s2, find the number of times the characters in s2 are present in s1. s1 = \\"Hello World\\", s2 = \\"o","completion":"s1 = \\"Hello World\\" s2 = \\"o\\" def count_characters(s1, s2): count = 0 for c in s1: if c == s2: count += 1 return count print(count_characters(s1,s2))"},{"prompt":"Filter out the integers from the list that are divisible by 6. nums = [1, 2, 4, 6, 7, 8, 10, 12, 14, 18]","completion":"nums = [1, 2, 4, 6, 7, 8, 10, 12, 14, 18] def filter_divisible_by_6(nums): return [num for num in nums if num % 6 == 0] print(filter_divisible_by_6(nums))"},{"prompt":"Transform and print the given list which includes negative and positive numbers. nums = [-5, -2, 3, 7, 1]","completion":"nums = [-5, -2, 3, 7, 1] def transform(nums): return [abs(num) for num in nums] print(transform(nums))"},{"prompt":"Replace all instances of a given character with another character. s = \\"this is a sample string\\", c=\\"s\\", r=\\"x","completion":"s = \\"this is a sample string\\" c = \\"s\\" r = \\"x\\" def replace_character(s, c, r): return s.replace(c, r) print(replace_character(s, c, r))"},{"prompt":"Writing a regex pattern to match words starting with \\"Py","completion":"pattern = r'bPyw*b'"},{"prompt":"Rewrite the code to remove the unnecessary boolean flag flag = False def printFooBar(x): fooBarArray = [] for i in range(x): fooBarArray.append(i) flag = True if flag and len(fooBarArray) > 0: print(fooBarArray)","completion":"def printFooBar(x): fooBarArray = [] for i in range(x): fooBarArray.append(i) if len(fooBarArray) > 0: print(fooBarArray)"},{"prompt":"Convert the following snippet from ES6 to ES5 const multiply = ( x, y) => { return x * y };","completion":"var multiply = function(x, y) { return x * y; };"},{"prompt":"Classify the following pieces of data Texas Blue Dog","completion":"State: Texas Color: Blue Animal: Dog"},{"prompt":"Using python, implement a method to find the longest common subsequence in two strings str1 = \\"AGGTAB\\" str2 = \\"GXTXAYB","completion":"def lcs(str1, str2, n, m): if n == 0 or m == 0: return 0 elif str1[n-1] == str2[m-1]: return 1 + lcs(str1, str2, n-1, m-1) else: return max(lcs(str1, str2, n, m-1), lcs(str1, str2, n-1, m))"},{"prompt":"Find the area of a triangle using the Heron's formula lengths = [3, 4, 5]","completion":"def herons_formula(lengths): a, b, c = lengths[0], lengths[1], lengths[2] s = (a + b + c) / 2 area = (s*(s-a)*(s-b)*(s-c))** 0.5 return area"},{"prompt":"Develop an algorithm to concatenate two strings. String 1: \\"Hello,\\" String 2: \\"World!","completion":"def concatenate(str1, str2): return str1 + str2"},{"prompt":"Generate a random string with the a capital letter followed by two lower case letters.","completion":"import string import random def random_string(): capitalletter = random.choice(string.ascii_uppercase) lowercaseletter1 = random.choice(string.ascii_lowercase) lowercaseletter2 = random.choice(string.ascii_lowercase) return capitalletter + lowercaseletter1 + lowercaseletter2"},{"prompt":"Develop an algorithm to print all the possible n-ary trees with a given number of nodes. n=4","completion":"# Node class class Node: def __init__(self, data): self.data = data self.children = [] # A function to print the n-ary tree def printNaryTreeUtil(root, func, level = 0): # If node is None, simply return if root is None: return # Process child nodes of root recursively for i in range(len(root.children)): printNaryTreeUtil(root.children[i], func, level + 1) # Call the function for the root func(root, level) # Function to generate n-ary trees def constructNaryTree(nodes): # Create a root node root = Node(nodes[0]) # Create a stack which will be used to # create children of root and their subtrees s = [root] # Traverse the tree nodes in pre order fashion i = 1 while i < len(nodes): node = s[len(s) - 1] child = Node(nodes[i]) node.children.append(child) s.append(child) # If number of children of the node is equal to # its degree, remove the node and its subtree if len(node.children) == node.degree: s.pop() i += 1 return root # Driver code if __name__ == '__main__': # Given number of nodes n = 4 # Generate the nodes nodes = list(range(1, n + 1)) # Construct n-ary tree root = constructNaryTree(nodes) # Function to print the tree def printTree(node, level): print('t' * level, node.data, sep=\\"\\") # Print the tree printNaryTreeUtil(root, printTree)"},{"prompt":"Generate a regular expression to match words that contain only lowercase letters.","completion":"^[a-z]+"},{"prompt":"You need to write an algorithm to find the third largest value in a Binary Search Tree. 8 / 3 10 / 1 6 14 / / 4 7 13","completion":"def third_largest(root): if root is None: return None queue = [] queue.append(root) while len(queue): curr = queue.pop(0) if curr.right: queue.append(curr.right) if curr.left: queue.append(curr.left) if len(queue)>1: return queue[1].val else: return root.val"},{"prompt":"Edit the given code to validate an IP address. # Function to validate an IPv4 address def validate_IPv4(IP)","completion":"# Function to validate an IPv4 address def validate_IPv4(IP): # Split the IP string by '.' ip_split = IP.split('.') #Checking for the corner cases if (len(ip_split) == 4) and (1 <= int(ip_split[0]) <= 223) and (int(ip_split[0]) != 127) and (int(ip_split[0]) != 169 or int(ip_split[1]) != 254) and (0 <= int(ip_split[1]) <= 255 and 0 <= int(ip_split[2]) <= 255 and 0 <= int(ip_split[3]) <= 255): return \\"Valid IP!\\" else: return \\"Invalid IP!\\""},{"prompt":"Develop an algorithm to modify a given string by changing the case of each character. string = \\"Hello World","completion":"def modify_string(string): new_string = \\"\\" for i in string: if (i.isupper()) == True: new_string += i.lower() elif (i.islower()) == True: new_string += i.upper() return new_string"},{"prompt":"Write a function to remove the first occurrence of a specified element from a given list. [2, 4, 8, 9, 4]","completion":"def remove_first_occurrence(arr, element): if element in arr: arr.remove(element) return arr"},{"prompt":"Write a function to find all elements that appear more than once in a given array. [1, 3, 2, 3, 8, 9, 10]","completion":"def find_duplicates(numbers): seen = set() duplicates = set() for num in numbers: if num in seen: duplicates.add(num) else: seen.add(num) return list(duplicates)"},{"prompt":"Generate an 8 character random string.","completion":"import string import random def gen_random_string(size): letters = string.ascii_letters + string.digits return ''.join(random.choice(letters) for i in range(size)) random_string = gen_random_string(8) print(random_string)"},{"prompt":"Create a script to delete all system logs.","completion":"#!/bin/bash # Remove all system log files sudo rm /var/log/*.log"},{"prompt":"Compute the sum of all elements in an array given as an argument to a JavaScript function.","completion":"function sumArray(array) { let result = 0; array.forEach(function(element) { result += element; }); return result; }"},{"prompt":"Classify three objects using a decision tree algorithm written in JavaScript. Object 1: round, red, 5cm Object 2: square, green, 10cm Object 3: triangular, red, 8cm","completion":"function classifyObject(object) { if(object.shape === 'round') { return 'object is round'; } else if(object.color === 'red') { return 'object is red'; } else if(object.size <= 8) { return 'object is small'; } else { return 'object is large'; } }"},{"prompt":"Modify a given shell script to generate a text-based report of the commands run in the bash shell.","completion":"#!/bin/bash # Capture the output of command result=(bash -c \\"{COMMAND}\\") # Store the output of command in a file echo \\"result\\" >> output.txt # Include timestamp echo \\"Result at: (date)\\" >> output.txt # Add a newline to results file echo >> output.txt"},{"prompt":"Write a Java program to find all pairs of integers from an array whose sum equals a given number.","completion":"public static List<int[]> findSumPairs(int[] arr, int target) { List<int[]> pairs = new ArrayList<>(); Map<Integer, Integer> numFreqMap = new HashMap<>(); for (int value : arr) { numFreqMap.put(value, numFreqMap.getOrDefault(value, 0) + 1); } for (int value : arr) { int targetSubValue = target - value; if (numFreqMap.containsKey(targetSubValue)) { int targetSubValueFreq = numFreqMap.get(targetSubValue); if (targetSubValue == value) { if (targetSubValueFreq >= 2) { int[] pair = {value, targetSubValue}; pairs.add(pair); } } else { int[] pair = {value, targetSubValue}; pairs.add(pair); } numFreqMap.put(targetSubValue, 0); } } return pairs; }"},{"prompt":"Generate a string containing the first 10 characters of the alphabet in reverse order.","completion":"zyxwvutsrq"},{"prompt":"Determine the function of the Bluetooth signal in the given program. void setup() { Serial.begin(9600); Bluetooth.begin(9600); } void loop() { BluetoothSignal(); } void BluetoothSignal() { // Code to send a signal to the Bluetooth module. }","completion":"The function of the Bluetooth signal is to send a signal to the Bluetooth module."},{"prompt":"Create a Python program to convert a given temperature in Celsius to Kelvin.","completion":"def convert_celsius_to_kelvin(celsius): kelvin = celsius + 273.15 return kelvin"},{"prompt":"Create a SQL query that returns the number of employees in each city.","completion":"SELECT city, COUNT(*) AS num_employees FROM employees GROUP BY city;"},{"prompt":"Edit the given Python code to compute the mean of the given list of numbers. my_list = [10, 20, 30, 40, 50] sum = 0.0 for x in my_list: sum += x","completion":"my_list = [10, 20, 30, 40, 50] sum = 0.0 for x in my_list: sum += x mean = sum / len(my_list)"},{"prompt":"Train a Random Forest classifier in Python on the Iris dataset.","completion":"import pandas as pd from sklearn.model_selection import train_test_split from sklearn.ensemble import RandomForestClassifier # Import Iris dataset iris_data = pd.read_csv(\\"iris.csv\\") # Split dataset into training and testing X = iris_data.drop(\\"species\\", axis=1) y = iris_data['species'] X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3) # Train a Random Forest classifier clf = RandomForestClassifier() clf.fit(X_train, y_train) # Make predictions preds = clf.predict(X_test)"},{"prompt":"Rewrite the following if-statement into a switch statement. if (grade == \\"A\\") { gradeValue = 4.0; } else if (grade == \\"B\\") { gradeValue = 3.0; } else if (grade == \\"C\\") { gradeValue = 2.0; } else if (grade == \\"D\\") { gradeValue = 1.0; }","completion":"switch(grade) { case 'A': gradeValue = 4.0; break; case 'B': gradeValue = 3.0; break; case 'C': gradeValue = 2.0; break; case 'D': gradeValue = 1.0; break; default: gradeValue = 0; break; }"},{"prompt":"Write a function in Python to normalize a given string by removing white spaces, changing to lower case and replacing special characters with underscores. \\"Hello World!","completion":"def normalize_string(string): \\"\\"\\"Normalize a string by removing white spaces, changing to lower case and replacing special characters with underscores.\\"\\"\\" # Remove whitespaces normalized_string = string.replace(\\" \\", \\"\\") # Convert to lowercase normalized_string = normalized_string.lower() # Replace special characters characters = [\\"!\\", \\"@\\", \\"#\\", \\"\\", \\"%\\", \\"^\\", \\"&\\", \\"*\\"] for c in characters: normalized_string = normalized_string.replace(c, \\"_\\") return normalized_string # Example normalized_string = normalize_string(\\"Hello World!\\") print(normalized_string) # Output: hello_world_"},{"prompt":"Print the largest number in a given array in Python. my_array = [5, 11, 7, 10, 2]","completion":"my_array = [5, 11, 7, 10, 2] # Function to find the largest number def find_largest_number(array): # Assume that the first item in the array is the largest largest = array[0] # Now loop through the array to find the largest number for num in array: # If a number is larger than the assumed largest, it is the new largest number if num > largest: largest = num # Return the largest number return largest # Call the function largest = find_largest_number(my_array) # Print the result print(largest) # Output: 11"},{"prompt":"Create a for loop in JavaScript to loop backwards from 10 to 1.","completion":"for (let i = 10; i > 0; i--) { console.log(i); } // Output: 10 9 8 7 6 5 4 3 2 1"},{"prompt":"Create a function in Python to add two numbers, which may take any number of arguments.","completion":"def add(*nums): \\"\\"\\"Add two or more numbers.\\"\\"\\" # Initialize sum result = 0 # Iterate through given numbers for num in nums: result += num # Return the sum return result # Example sum = add(15, 7, 10) print(sum) # Output: 32"},{"prompt":"Write a stack class in Java.","completion":"public class Stack { private int[] stackArray; private int maxSize; private int top; public Stack(int size) { maxSize = size; stackArray = new int[maxSize]; top = -1; } public void push(int item) { stackArray[++top] = item; } public int pop() { return stackArray[top--]; } public int peek() { return stackArray[top]; } public boolean isEmpty() { return (top == -1); } }"},{"prompt":"mplement a DFS algorithm for a tree data structure.","completion":"def DFS(root): S = [] visited = [] S.append(root) while len(S) > 0: node = S.pop() visited.append(node) for vertex in node.get_adjacent_vertices(): if vertex not in visited: S.append(vertex) return visited"},{"prompt":"Construct a program in Java to sort an array of String objects.","completion":"public class StringSort { public static void sortStringArray(String[] arr) { // Sorting strings Arrays.sort(arr); // Displaying the strings after sorting System.out.println(\\"Strings in sorted order: \\"); for (int i = 0; i < arr.length; i++) System.out.println(arr[i]); } }"},{"prompt":"Construct a data mining program to mine public internet data. Twitter datase","completion":"import tweepy CONSUMER_KEY = 'XXXXXXXXXXXXXXXXXXX' CONSUMER_SECRET = 'XXXXXXXXXXXXXXXXXXX' ACCESS_TOKEN = 'XXXXXXXXXXXXXXXXXXX' ACCESS_TOKEN_SECRET = 'XXXXXXXXXXXXXXXXXXXX' # authenticating auth = tweepy.OAuthHandler(CONSUMER_KEY, CONSUMER_SECRET) auth.set_access_token(ACCESS_TOKEN, ACCESS_TOKEN_SECRET) # initializing the API for data mining api = tweepy.API(auth) # pulling the data from Twitter data = api.search(q=\\"data mining\\", lang=\\"en\\", count=100, tweet_mode=\\"extended\\") # processing the data for tweet in data: print(tweet.full_text) # print the full text of each tweet"},{"prompt":"Give a function name in JavaScript that takes in two integer numbers as parameters and returns the remainder of the first parameter divided by the second.","completion":"function remainder(a, b) { return a % b; }"},{"prompt":"Develop a C++ code to print the numbers 1 to 10 in descending order.","completion":"for(int i=10; i>0; i--) cout << i << \\" \\";"},{"prompt":"Write a code snippet in HTML to include an external style sheet in web page.","completion":"<link rel=\\"stylesheet\\" type=\\"text/css\\" href=\\"style.css\\" />"},{"prompt":"Describe the different thread states in Java programming.","completion":"In Java, threads can be in one of the following states: NEW, RUNNABLE, BLOCKED, WAITING, TIMED_WAITING or TERMINATED. The NEW state means that the thread has been created but not yet started. RUNNABLE means that the thread is running. BLOCKED means that the thread is waiting to acquire a lock. WAITING and TIMED_WAITING means that the thread is waiting for another thread to perform a particular action. Lastly, TERMINATED is the state when the thread has finished execution."},{"prompt":"Compile a C program that calculates the area of a rectangle from the given values of length and width. Length = 10 Width = 15","completion":"#include <stdio.h> int main() { int length = 10; int width = 15; int area; area = length * width; printf(\\"The area is %d.\\", area); return 0; }"},{"prompt":"List the types of inheritance supported in Java.","completion":"In Java, there are four types of inheritance supported: single inheritance, multiple inheritance, hierarchical inheritance, and socioeconomic inheritance. Single inheritance means a class extends only one class. Multiple inheritance is when a subclass extends multiple superclasses. Hierarchical inheritance is when a class can be extended by multiple subclasses. Lastly, socioeconomic inheritance is when a subclass can extend superclasses and use their methods, variables, and properties."},{"prompt":"What is an event in JavaScript?","completion":"In JavaScript, an event is an action that a user performs that causes a change in the state of the program. Events can be generated by a user (e.g. pressing a button, clicking a link), by the browser (e.g. loading a page, scrolling, resizing the window) or by the system (e.g. device orientation changes, network connection changes). Events can trigger handlers (functions in JavaScript) that respond to the event with the appropriate action."},{"prompt":"You need to develop a code that takes two strings and returns a boolean if the substrings are anagrams. Strings: \\"computer\\" and \\"computer","completion":"def isAnagram (str1, str2): # Get length of both strings n1 = len(str1) n2 = len(str2) # If length is not same, then strings are not anagrams if n1 != n2: return False # Sort both strings str1 = sorted(str1) str2 = sorted(str2) # Compare sorted strings for i in range(0, n1): if str1[i] != str2[i]: return False return True print (isAnagram(\\"computer\\", \\"computer\\"))"},{"prompt":"Develop a function to encode a text string in a ROT13 manner. String: \\"Hello World","completion":"def rot13(message): output = [] for char in message: char_code = ord(char) if char_code >= ord('A') and char_code <= ord('Z'): # Rotate lower case characters char_code += 13 if char_code > ord('Z'): char_code -= 26 elif char_code >= ord('a') and char_code <= ord('z'): # Rotate upper case characters char_code += 13 if char_code > ord('z'): char_code -= 26 output.append(chr(char_code)) return ''.join(output) print(rot13(\\"Hello World\\"))"},{"prompt":"Write the Big O time complexity of the given algorithm. Algorithm: Finding the value at a given index of an unordered array.","completion":"O(n)."},{"prompt":"Given two strings, develop a function to calculate edit distance between them. Strings: \\"kitten\\" and \\"sitting","completion":"def edit_distance(str1, str2): n1 = len(str1) n2 = len(str2) dp = [[0 for x in range(n2 + 1)] for x in range(n1 + 1)] for i in range(n1 + 1): for j in range(n2 + 1): if i == 0: dp[i][j] = j elif j == 0: dp[i][j] = i elif str1[i - 1] == str2[j - 1]: dp[i][j] = dp[i - 1][j - 1] else: dp[i][j] = 1 + min(dp[i][j - 1], dp[i - 1][j], dp[i - 1][j - 1]) return dp[n1][n2] edit_distance(\\"kitten\\", \\"sitting\\")"},{"prompt":"You need to develop a function which checks if a given string is palindrome or not. String: \\"redder","completion":"def is_palindrome(input_string): # Convert string to lower case to ignore capitalization. input_string = input_string.lower() # Reverse input string rev_string = reversed(input_string) # Check if strings are equal or not if (list(input_string) == list(rev_string)): return True else: return False print(is_palindrome(\\"redder\\"))"},{"prompt":"Create a SQL query to return the top 10 most popular books.","completion":"SELECT title, COUNT(*) AS num_readers FROM books LEFT JOIN readers ON books.id = readers.book_id GROUP BY title ORDER BY num_readers DESC LIMIT 10;"},{"prompt":"Create a React app that loads data from a given REST API endpoint.","completion":"import React from 'react'; import Axios from 'axios'; class App extends React.Component { constructor(props) { super(props); this.state = { data: [], }; } async componentDidMount() { const res = await Axios.get(<api_url>) this.setState({data: res.data}); } render(){ return ( <div> {this.state.data.map(item => <p>{item.name}</p>)} </div> ) } } export default App;"},{"prompt":"Write a Node.js program which fetches the top 10 trending news from a given website.","completion":"const rp = require('request-promise'); const cheerio = require('cheerio'); async function getTrendingContent(){ const options = { uri: '<url>', }; let trendingContent = []; const htmlResult = await rp(options); const = await cheerio.load(htmlResult); const allTitles = ('h2.title'); allTitles.each((index, element) => { if(index < 10){ trendingContent.push((element).text()); } }); return trendingContent; } getTrendingContent().then(content => console.log(content));"},{"prompt":"Create an algorithm that sorts a given list of numbers. [1, 5, -3, 0, 8]","completion":"def bubble_sort(list): for i in range(len(list)): for j in range(len(list)-1-i): if list[j] > list[j+1]: list[j], list[j+1] = list[j+1], list[j] return list bubble_sort([1,5,-3,0,8])"},{"prompt":"Create a HTML form that takes three inputs and print them out when the submit button is clicked.","completion":"<html> <head> <title>Input Form</title> </head> <body> <h1>Input Form</h1> <form action=\\"#\\"> <p>First name: <input type=\\"text\\" name=\\"firstname\\"></p> <p>Last name: <input type=\\"text\\" name=\\"lastname\\"></p> <p>Email: <input type=\\"text\\" name=\\"email\\"></p> <button type=\\"submit\\" onclick=\\"printInputs()\\">Submit</button> </form> <script> function printInputs(){ let firstName = document.querySelector(\\"input[name=firstname]\\").value; let lastName = document.querySelector(\\"input[name=lastname]\\").value; let email = document.querySelector(\\"input[name=email]\\").value; console.log(firstName, lastName, email); } <\/script> </body> </html>"},{"prompt":"Create an algorithm to implement a stack using a single queue.","completion":"class Stack: def __init__(self): self.queue = [] def push(self, item): self.queue.append(item) # Reverse the queue to implement a stack self.queue.reverse() def pop(self): if self.queue: # Reverse the queue to implement a stack self.queue.reverse() return self.queue.pop() return None"},{"prompt":"Create a JavaScript program to make a TCP connection to the server.","completion":"const net = require('net'); const client = new net.Socket(); client.connect(5000, '127.0.0.1', () => { console.log('Connected'); }); client.on('data', (data) => { console.log('Received: ' + data); }); client.on('close', () => { console.log('Connection closed'); });"},{"prompt":"Formulate a SQL query to determine the name of the product with the highest price.","completion":"SELECT product_name FROM product_table WHERE price = (SELECT MAX(price) FROM product_table);"},{"prompt":"Create a Java program for finding the largest number among three integers.","completion":"public class LargestNumber { public static int getLargestNumber(int num1, int num2, int num3) { int greater; if( num1 > num2 && num1 > num3) greater = num1; else if( num2 > num1 && num2 > num3) greater = num2; else greater = num3; return greater; } public static void main(String[] args) { int num1 = 10, num2 = 14, num3 = 12; System.out.println(\\"Largest number among \\" + num1 + \\", \\" + num2 + \\" and \\" + num3 + \\" is \\" + getLargestNumber(num1, num2, num3)); } }"},{"prompt":"Write a C++ program to rotate an array by 'k' positions. int arr[] = {1, 2, 3, 4, 5}; int k = 2;","completion":"#include<iostream> using namespace std; void reverseArray(int arr[], int start, int end) { while (start < end) { int temp = arr[start]; arr[start] = arr[end]; arr[end] = temp; start++; end--; } } void leftRotate(int arr[], int d, int size) { reverseArray(arr, 0, d-1); reverseArray(arr, d, size-1); reverseArray(arr, 0, size-1); } void printArray(int arr[], int size) { for (int i=0; i < size; i++) cout << arr[i] << \\" \\"; } int main() { int arr[] = {1, 2, 3, 4, 5}; int size = sizeof(arr) / sizeof(arr[0]); int k = 2; leftRotate(arr, k, size); printArray(arr, size); return 0; }"},{"prompt":"Write a Python code snippet to check if an integer is between 5 and 10 (including both). x = 8","completion":"if 5 <= x <= 10: print('The integer is between 5 and 10.') else: print('The integer is not between 5 and 10.')"},{"prompt":"Write a PHP script to connect to a MySQL database and insert a row in the table with values in given fields. Table name: users Fields: id, name, email","completion":"<?php // Connect to the database db = new mysqli('localhost', 'user', 'password', 'dbname'); // Check connection if(db->connect_errno > 0){ die('Unable to connect to database [' . db->connect_error . ']'); } // Prepare the statement sql = \\"INSERT INTO users (id, name, email) VALUES (?, ?, ?)\\"; stmt = db->prepare(sql); // Execute the statement stmt->bind_param('isi', id, name, email); stmt->execute(); stmt->close(); db->close(); ?>"},{"prompt":"Write an R script to create a histogram of a given array of numeric values.","completion":"# Load libraries library(ggplot2) # Define the data data <- c(1, 4, 6, 8, 12, 16, 20) # Create the histogram ggplot(data.frame(x=data), aes(x)) + geom_histogram(bins = 5, fill = \\"#0072B2\\", color = \\"black\\")"},{"prompt":"Explain the purpose of the np.random.seed() function.","completion":"The np.random.seed() function sets the random seed, or starting point, for generating random numbers. This allows users to reproduce the same random numbers each time they run the code, making apps and experiments easier to debug. The seed can be set to an integer value, a list of integers, or None. If the seed is set to None, the system time is used to set the starting point."},{"prompt":"Given the following nested loop structure, write code to print all elements in the array. arr = [[1, 2, 3], [4, 5, 6], [7, 8, 9]]","completion":"for row in arr: for elem in row: print(elem, end=' ') print() # Output # 1 2 3 # 4 5 6 # 7 8 9"},{"prompt":"Physicists often use the constant, Planck's constant, to measure the frequency of light waves. What is the value of Planck's constant?","completion":"Planck's constant (denoted by h) is a physical constant that has a value of 6.62607015×10-34 kg m2/s. It is the fundamental physical constant that is used to describe the size of quantum effects. It is named after physicist Max Planck, who first proposed it in 1900."},{"prompt":"Suppose you have a list of numbers and you want to add all the numbers together. Write a loop to do so. [1, 2, 3, 4, 5]","completion":"sum = 0 nums = [1, 2, 3, 4, 5] for num in nums: sum += num print(sum) # Output 15"},{"prompt":"We have a list of numbers, what is the correct syntax for finding the sum of all the numbers? [1, 2, 3, 4, 5]","completion":"total = 0 nums = [1, 2, 3, 4, 5] for num in nums: total += num print(total) # Output 15"},{"prompt":"Create a CSS class named \\"card\\" to create a card with border-radius = 10 px..","completion":".card { border-radius: 10px; }"},{"prompt":"Create a CSS selector for all paragraph tags, which will set the font size to 14px.","completion":"p { font-size: 14px; }"},{"prompt":"w can a developer create a button with the text \\"Submit\\" in HTML?","completion":"<button>Submit</button>"},{"prompt":"Write a JavaScript function to do the following: assign a value of \\"true\\" to a variable if the number is odd, and assign the value of \\"false\\" if the number is even. Number: 6","completion":"function assignOddOrEven(num){ let result; if(num % 2 === 0) { result = false; } else { result = true; } return result; }"},{"prompt":"Gather data from the web page and write a C# program to extract the page title.","completion":"using System.Net; using System.IO; public static string GetPageTitle(string url) { HttpWebRequest request = (HttpWebRequest)WebRequest.Create(url); using (HttpWebResponse response = (HttpWebResponse)request.GetResponse()) { using (StreamReader reader = new StreamReader(response.GetResponseStream())) { string html = reader.ReadToEnd(); int startIndex = html.IndexOf(\\"<title>\\") + \\"<title>\\".Length; int endIndex = html.IndexOf(\\"</title>\\", startIndex); string title = html.Substring(startIndex, endIndex - startIndex); return title; } } }"},{"prompt":"Translate the sentence \\"I'm having dinner at 8pm\\" into French.","completion":"Je prends mon dîner à 20h."},{"prompt":"Convert a string of characters to uppercase in JavaScript. String: hello","completion":"let upperCaseString = 'hello'.toUpperCase();"},{"prompt":"Write a Python program to insert a given string at a specific position within another given string. string1 = 'Python is fun' string2 = 'awesome ' position = 7","completion":"def insert_string(string1, string2, pos): return string1[:pos] + string2 + string1[pos:]"},{"prompt":"Given two lists, write a Python program to print all common elements in them. list1 = [10, 20, 30, 40] list2 = [30, 40, 50, 60]","completion":"def common_elements(list1, list2): common = [] for elem in list1: if elem in list2: common.append(elem) return common"},{"prompt":"Design a program in Python which takes a string as input and returns a list of words from the string. string1 = 'Python Programming is Fun!'","completion":"def get_words(string1): words = string1.split() return words"},{"prompt":"Design a program in Python to remove all even elements from a given list. lst = [2, 4, 5, 6, 8, 10]","completion":"def remove_even(lst): evens = [] for num in lst: if num % 2 != 0: evens.append(num) return evens"},{"prompt":"Design a code to check if a given list is ordered in an increasing order. lst = [1, 2, 3, 5, 4]","completion":"def is_increasing(lst): for i in range(len(lst)-1): if lst[i] >= lst[i+1]: return False return True"},{"prompt":"Write a Python program to replace the last element in a list with another given element. lst = [1, 2, 3, 4] element = 5","completion":"def replace_last(lst, element): lst[-1] = element return lst"},{"prompt":"Modify the following given program to print all prime number between 1 and n","completion":"def check_prime(n): if n == 1: return False for i in range(2, n): if n % i == 0: return False return True def print_prime_numbers(n): for num in range(1, n + 1): if check_prime(num): print(num)"},{"prompt":"Edit the following code to calculate the standard deviation of a given list","completion":"def calculate_std_dev(nums): mean = sum(nums)/len(nums) sum_deviation = 0 for num in nums: diff = num - mean squared_deviation = diff ** 2 sum_deviation += squared_deviation std_dev = (sum_deviation/(len(nums)-1)) ** 0.5 return std_dev"},{"prompt":"Modify the following code to generate the Fibonacci sequence up to the nth term","completion":"def fibonacci(n): a = 0 b = 1 if n < 0: print(\\"Incorrect input\\") elif n == 0: return a elif n == 1: return b else: for i in range(2,n+1): c = a + b a = b b = c return b"},{"prompt":"Write a code to retrieve tweets from a specific Twitter account by using their API. Twitter account: \\"@twitter","completion":"\\"\\"\\" Retrieve tweets from a specific Twitter account \\"\\"\\" import tweepy #Enter the respective information consumer_key = 'XXXXXXXXXX' consumer_secret = 'XXXXXXXXXX' access_token = 'XXXXXXXXXX' access_token_secret = 'XXXXXXXXXX' #Authentication using the given keys auth = tweepy.OAuthHandler(consumer_key, consumer_secret) auth.set_access_token(access_token, access_token_secret) #getting the API api = tweepy.API(auth) #fetch tweets related to \\"@twitter\\" tweets = api.user_timeline(\\"@twitter\\") #display first five tweets for tweet in tweets[:5]: print(tweet.text)"},{"prompt":"Write a code to establish a connection between your server and a remote database. Server host: 127.0.0.1 Database Name: my_db Username: root Password: pw123","completion":"\\"\\"\\" Establish a connection between your server and a remote database \\"\\"\\" import pymysql db = pymysql.connect(host='127.0.0.1', user='root', password='pw123', db='my_db')"},{"prompt":"Write a code to get the IP address of a system.","completion":"import socket hostname = socket.gethostname() IPAddr = socket.gethostbyname(hostname) print(\\"The IP address of the system is:\\" + IPAddr)"},{"prompt":"Create a code that removes all duplicate elements in a given array. Array: [5, 10, 5, 7, 10]","completion":"def unique_elements(arr): new_arr = [] for i in arr: if i not in new_arr: new_arr.append(i) return new_arr arr = [5, 10, 5, 7, 10] print(unique_elements(arr)) # [5, 10, 7]"},{"prompt":"Write a code to implement insertion sort on a given list. List: [4, 3, 6, 1, 5]","completion":"def insertionSort(arr): for i in range(1, len(arr)): key = arr[i] j = i-1 while j >= 0 and key < arr[j] : arr[j + 1] = arr[j] j -= 1 arr[j + 1] = key arr = [4, 3, 6, 1, 5] insertionSort(arr) print (\\"Sorted array is: \\") for i in range(len(arr)): print (\\"%d\\" %arr[i])"},{"prompt":"Modify a given code to sort a two-dimensional array (matrix) using bubble sort. Matrix: [[1, 5, 2], [8, 4, 6], [3, 7, 9]]","completion":"def bubble_sort(arr): n = len(arr) for i in range(n): for j in range(0, n-i-1): for k in range(0, 3): if arr[j][k] > arr[j+1][k] : arr[j][k], arr[j+1][k] = arr[j+1][k], arr[j][k] arr = [[1, 5, 2], [8, 4, 6], [3, 7, 9]] bubble_sort(arr) print(\\"Sorted matrix: \\") for row in arr: print(row)"},{"prompt":"Construct a Python class to represent a student with attributes such as name, age, and course. The class should have a method that returns the student information in a formatted output Student Name: John Smith Age: 17 Course: Computer Science","completion":"class Student: def __init__(self, name, age, course): self.name = name self.age = age self.course = course def get_info(self): return f\\"Name: {self.name}, Age: {self.age}, Course: {self.course}\\" student = Student(\\"John Smith\\", 17, \\"Computer Science\\") print(student.get_info()) # Name: John Smith, Age: 17, Course: Computer Science"},{"prompt":"Create a text classifier using a Random Forest algorithm. [['Ready Player One', 'Adventure'], ['IT', 'Drama'], ['Halloween', 'Horror'], ['Pirates of the Caribbean', 'Adventure']]","completion":"\\"\\"\\" Create a text classifier using a Random Forest algorithm \\"\\"\\" import pandas as pd from sklearn.ensemble import RandomForestClassifier # create the dataframe from the given input df = pd.DataFrame(columns=['text', 'category'], data=input) # define the features and labels X = df['text'] y = df['category'] # create and train the model model = RandomForestClassifier(n_estimators=100, random_state=0) model = model.fit(X, y)"},{"prompt":"Write a code to create a 3x3 matrix with all elements 1.","completion":"#import numpy library import numpy as np #create a 3x3 matrix with all elements 1 x = np.ones((3,3)) print(x)"},{"prompt":"Design a linked list data structure.","completion":"\\"\\"\\" Design a linked list data structure \\"\\"\\" class ListNode: def __init__(self, data): self.data = data self.next = None class LinkedList: def __init__(self): self.head = None def append(self, data): new_node = ListNode(data) if self.head is None: self.head = new_node else: current = self.head while current.next is not None: current = current.next current.next = new_node def search(self, target): current = self.head while current is not None: if current.data == target: return current current = current.next return None def print_list(self): current = self.head while current is not None: print(current.data) current = current.next"},{"prompt":"Create a script to remove HTML tags from a web page. <html> <head> <title>Example</title> </head> <body> <p>Welcome to example.com</p> </body> </html>","completion":"\\"\\"\\" Create a script to remove HTML tags from a web page \\"\\"\\" import re html_string = input # remove all html tags using regex v = re.compile(r'<.*?>') cleaned_string = re.sub(v, '', html_string) print(cleaned_string)"},{"prompt":"Create a FOR loop to print out the odd numbers between a given range. min = 1, max = 10","completion":"\\"\\"\\" Create a FOR loop to print out the odd numbers between a given range \\"\\"\\" # define the range min = input[0] max = input[1] # iterate through the range for i in range(min, max+1): # check for odd numbers if i % 2 == 1: print(i)"},{"prompt":"Create a class 'Employee' with the following fields: name, address, and salary.","completion":"class Employee: def __init__(self, name, address, salary): self.name = name self.address = address self.salary = salary"},{"prompt":"What does the \`filter()\` method do in Python?","completion":"The filter() method in Python takes in a function and a list as arguments. The function is called with all the items in the list and a new list is returned which contains items for which the function evaluates to True. It is typically used to filter out elements from a list based on a certain condition."},{"prompt":"Create a tuple \`numbers\` with the elements 1, 2, 3 and 4.","completion":"numbers = (1, 2, 3, 4)"},{"prompt":"Create a subclass 'Manager' of Employee and add the field 'experience'.","completion":"class Manager(Employee): def __init__(self, name, address, salary, experience): super().__init__(name, address, salary) self.experience = experience"},{"prompt":"Write a code to remove elements from a list using the \`remove()\` method. list = [1, 2, 3, 4]","completion":"list = [1, 2, 3, 4] list.remove(2) list.remove(3) # list is now [1, 4]"},{"prompt":"Create a dictionary with the name 'salary' and assign values to the employee names. Employee Names: \\"John\\", \\"Jane\\", \\"Tina\\".","completion":"salary = { \\"John\\": 0, \\"Jane\\": 0, \\"Tina\\": 0 }"},{"prompt":"Write a code to find the maximum of 3 arguments.","completion":"def find_max(a, b, c): max_value = a if b > max_value: max_value = b if c > max_value: max_value = c return max_value print(find_max(1, 2, 3)) # Output: 3"},{"prompt":"Create an array with the elements 1, 2, 3, and 4 and name it 'numbers'.","completion":"numbers = [1, 2, 3, 4]"},{"prompt":"Code an while loop statement to print a string with the value of the variable num. num = 10","completion":"while num > 0: print(\\"The value of num is \\" + str(num)) num -= 1"},{"prompt":"Create a function that takes two numbers as an argument and compares them to find the highest number. x = 5 y = 8","completion":"def highest_number(num1, num2): if num1 > num2: return num1 else: return num2 highest_number(x, y) # returns 8"},{"prompt":"Read the following code and identify all the objects present in it. class Person: name = 'John' age = 25","completion":"In the given code, the object is ‘Person’, and the two data attributes of the object are ‘name’ and ‘age’."},{"prompt":"Below is the code of a shopping list application. Modify it to add a function to calculate the total cost of all items in the list. shopping_list = { 'item1': 2.5, 'item2': 3.5, 'item3': 4.25 }","completion":"shopping_list = { 'item1': 2.5, 'item2': 3.5, 'item3': 4.25 } def calculate_cost(list): cost = 0 for item in list: cost += list[item] return cost total_cost = calculate_cost(shopping_list) print(total_cost) # prints 10.25"},{"prompt":"Write a code to input an array and find the maximum and minimum element in it. arr = [1, 2, 3, 4, 5, 6]","completion":"def find_min_max(arr): min_num = arr[0] max_num = arr[0] for num in arr: if num < min_num: min_num = num if num > max_num: max_num = num return max_num, min_num max_num, min_num = find_min_max(arr) print('Max element is', max_num, 'and min element is', min_num) # prints Max element is 6 and min element is 1"},{"prompt":"Generate a random string of length 10 that consists of characters 'a', 'b' and 'c'.","completion":"import random random_string = ''.join(random.choices(['a', 'b', 'c'], k=10)) print(random_string) # prints something like ccaacccaac"},{"prompt":"Write a Python code using list comprehension to get the power of each element in a list. list_num = [1, 2, 3, 4, 5]","completion":"power_list = [num**2 for num in list_num] print(power_list) # prints [1, 4, 9, 16, 25]"},{"prompt":"Edit the following code to insert a new item at the end of a given Python list. items = [1, 2, 3] new_item = 4","completion":"items = [1, 2, 3] + [new_item] print(items) # prints [1, 2, 3, 4]"},{"prompt":"Create a function that takes a string and a keyword, then delete all the occurrences of the keyword in the given string. str = \\"I am going to the market to buy apples\\" keyword = \\"apple","completion":"def delete_occurrences(string, keyword): new_str = string.replace(keyword, '') return new_str print(delete_occurrences(str, keyword)) # prints \\"I am going to the market to buy\\""},{"prompt":"Create a list of 5 integers and print out their product.","completion":"\\"\\"\\" Create a list of 5 integers and print out their product \\"\\"\\" list_of_ints = [1, 2, 3, 4, 5] product = 1 for i in list_of_ints: product *= i print(product)"},{"prompt":"Print the duplicated items in an array of integers. array: [1, 2, 3, 2, 5, 1]","completion":"\\"\\"\\" Print the duplicated items in an array of integers \\"\\"\\" public class DuplicateItems { public static void main(String[] args) { int [] array = {1, 2, 3, 2, 5, 1}; List<Integer> duplicates = new ArrayList<Integer>(); for(int i = 0; i < array.length-1; i++){ for(int j = i+1; j < array.length; j++){ if(array[i] == array[j] && !duplicates.contains(array[i])) { duplicates.add(array[i]); } } } System.out.println(\\"Duplicate items: \\" + duplicates); } }"},{"prompt":"Write a code in Java to print out the power of two of the given number. Number: 4","completion":"\\"\\"\\" Write a code in Java to print out the power of two of the given number \\"\\"\\" public class TwoPower { public static void main(String[] args) { int number = 4; double res = Math.pow(2,number); System.out.println(\\"2 to the power of \\" + number + \\" is \\" + res); } }"},{"prompt":"Write a code in Python to remove all the duplicate elements from a list and print the result. list: [2, 3, 3, 4, 5, 5]","completion":"\\"\\"\\" Write a code in Python to remove all the duplicate elements from a list and print the result \\"\\"\\" def remove_duplicates(lst): new_list = [] for i in lst: if i not in new_list: new_list.append(i) return new_list if __name__ == '__main__': lst = [2,3,3,4,5,5] print(\\"List with duplicates removed:\\", remove_duplicates(lst))"},{"prompt":"Evaluate the expression 3^2 + 5%2.","completion":"\\"\\"\\" Evaluate the expression 3^2 + 5%2 \\"\\"\\" int result = 3^2 + 5%2; System.out.println(\\"Result: \\"+ result); // Output: Result: 8"},{"prompt":"Given a string and two words, write a program to find the shortest sub sequence containing both words. String: the quick brown fox jumps over the lazy dog Two words: quick and dog","completion":"The sequence is \\"quick brown fox jumps over the lazy dog\\"."},{"prompt":"mplement a search algorithm to search a node in a binary search tree.","completion":"def search(node, key): if node is None or node.key == key: return node if node.key < key: return search(node.right, key) return search(node.left, key)"},{"prompt":"What is the Big O notation of the algorithm you wrote in Task 8?","completion":"The algorithm has an O(n) time complexity, where n is the size of the input."},{"prompt":"Write a code to traverse a matrix in spiral form.","completion":"def spiral_traverse(matrix): top = 0 left = 0 right = len(matrix[0])-1 bottom = len(matrix)-1 while top <= bottom and left <= right: for i in range(left, right+1): print(matrix[top][i], end = ' ') top += 1 for i in range(top, bottom+1): print(matrix[i][right], end = ' ') right -= 1 if top <= bottom: for i in range(right, left-1, -1): print(matrix[bottom][i], end = ' ') bottom -= 1 if left <= right: for i in range(bottom, top-1, -1): print(matrix[i][left], end = ' ') left += 1"},{"prompt":"What is abstraction in computer programming?","completion":"Abstraction in computer programming is the process of hiding details of how the code is implemented and only exposing the information that is necessary. It involves separating a complex task into simpler and smaller units in order to solve problems efficiently. It also helps to break down a complex system into its fundamental parts and allow a programmer to focus on the most important parts."},{"prompt":"Write a reusuable function in Python that takes two string variables and returns the longest string.","completion":"def longest_string(str1, str2): if len(str1) > len(str2): return str1 else: return str2"},{"prompt":"Extract all the words from a given sentence and save them to a list. Sentence: This is a sample sentence with words.","completion":"words = [\\"this\\", \\"is\\", \\"a\\", \\"sample\\", \\"sentence\\", \\"with\\", \\"words\\"]"},{"prompt":"Translate the following statement from English to Python code: \\"If the value of x is greater than 10, print 'x is greater than 10.","completion":"if x > 10: print(\\"x is greater than 10.\\")"},{"prompt":"Write a JavaScript statement to log a string onto the console. String: \\"Print this message","completion":"console.log(\\"Print this message\\");"},{"prompt":"Write a CSS rule to make all text appear in bold font.","completion":"body { font-weight: bold; }"},{"prompt":"Write an SQL query to select only the first name, last name, and email columns from a table named 'customers'.","completion":"SELECT first_name, last_name, email FROM customers;"},{"prompt":"w do you set up a local development environment for a Node.js application?","completion":"Setting up a local development environment for a Node.js application involves installing a compatible version of Node.js and setting up the necessary modules. After installation, node’s package manager, NPM, can be used to install the packages and dependencies for the application. Additionally, an IDE such as Visual Studio Code can be used for writing and running the code."},{"prompt":"Create a class called 'Product' in Python and assign the following attributes to it. name, price, descriptio","completion":"class Product: \\"\\"\\" A class that represents a product with its attributes. \\"\\"\\" def __init__(self, name, price, description): \\"\\"\\" Initialize a Product object. \\"\\"\\" self.name = name self.price = price self.description = description"},{"prompt":"Explain what is Cross-validation in Machine Learning.","completion":"Cross-validation is a technique used to evaluate a machine learning model by dividing the dataset into training and validation sets. The model is trained on the training set, and its performance is evaluated on the validation set. In other words, cross-validation is a method for selecting model hyperparameters and for assessing performance of a model. It is a technique used to ensure that we are not overfitting to the training data and evaluate the accuracy of a model on unseen data. This can be done by splitting the data into a set of folds, typically 5 - 10, and running model training and testing k times, with each time one of the folds as the validation set and the other folds as the training set. The result of this process is the average validation accuracy across the k folds of the data. This gives us a better understanding of how the model will perform in production."},{"prompt":"Suggest a way to generate random passwords using Python.","completion":"One way to generate random passwords using Python is to use the string module's methods. Using the string.ascii_letters and string.digits sequences, we can create a random sequence of alphanumeric characters. The string module's choice() function can then be used to randomly select characters from this sequence to create a new password string. The length of the password should be specified as an argument to the choice() function. For example, to generate an 8 character long password, you can use string.choice(string.ascii_letters + string.digits, 8)."},{"prompt":"Create a switch statement to convert an RGB value to HEX. rgb = (255, 205, 100)","completion":"const convertRGBtoHEX = (rgb) => { let hex = ''; switch (rgb) { case (rgb[0], rgb[1], rgb[2]): hex = (rgb[0] << 16 | rgb[1] << 8 | rgb[2]).toString(16); break; default: hex = \\"000000\\"; break; } return hex; } console.log(convertRGBtoHEX([255, 205, 100]))"},{"prompt":"Construct a loop that prints the even numbers from 0 to 20, one number per line.","completion":"for i in range(0, 21): if i % 2 == 0: print(i)"},{"prompt":"Write an SQL query that returns the total number of items per category.","completion":"SELECT category, COUNT(*) AS items FROM items GROUP BY category;"},{"prompt":"Generate a unique 9-digit hexadecimal code.","completion":"# 6ba62f1bf"},{"prompt":"Create a function that takes an array as a parameter and continuously adds each item to the total sum. arr = [6, 4, 3, 10]","completion":"def addItems(arr): total = 0 for number in arr: total = total + number return total"},{"prompt":"Count the number of occurrences of the letter “a” in a given string. string = \\"My favorite animal is a dog","completion":"# 3"},{"prompt":"Write a C++ program to make an average of given 10 numbers. arr = [3, 5, 8, 10, 14, 16, 22, 27, 33, 44]","completion":"#include<iostream> using namespace std; // Finds the average of given 10 numbers float Average(int arr[]) { float sum = 0; for (int i=0; i<10; i++) { sum = sum + arr[i]; } return (sum/10); } // Driver program to run above function int main() { int numbers[10] = {3, 5, 8, 10, 14, 16, 22, 27, 33, 44}; cout << Average(numbers); return 0; }"},{"prompt":"Transform the following array into an HTML unordered list. const veggies = [\\"Lettuce\\", \\"Carrot\\", \\"Cucumber\\"]","completion":"<ul> <li>Lettuce</li> <li>Carrot</li> <li>Cucumber</li> </ul>"},{"prompt":"Write a JavaScript function to check if a number is a whole number or has decimals.","completion":"const isWholeNumber = (num) => { if (num % 1 === 0) return true return false }"},{"prompt":"Should function A call function B or function B call function A? A: function getData() { // do something return data; } B: function processData(data) { // do something return processedData; }","completion":"Function B should call function A, since function A is the one that provides the data for the processing done by function B."},{"prompt":"Perform a bubble sort on the following array of numbers. const arr = [9, 5, 7, 11, 2]","completion":"let arr = [9, 5, 7, 11, 2]; function bubbleSort(arr) { let swapped; do { swapped = false; for (let i = 0; i < arr.length; i++) { if (arr[i] > arr[i+1]) { let temp = arr[i]; arr[i] = arr[i+1]; arr[i+1] = temp; swapped = true; } } } while (swapped); return arr; } bubbleSort(arr); // Output: [2, 5, 7, 9, 11]"},{"prompt":"Create a for loop that prints the contents of a list of strings. list_of_strings = [\\"John\\", \\"Bob\\", \\"Jill\\", \\"Sara\\"]","completion":"list_of_strings = [\\"John\\", \\"Bob\\", \\"Jill\\", \\"Sara\\"] for name in list_of_strings: print(name)"},{"prompt":"Find the longest word in a piece of text. The quick brown fox jumps over the lazy dog","completion":"# Find the longest word in a piece of text # Split the text into a list of words words = \\"The quick brown fox jumps over the lazy dog\\".split() # Initialize a variable to keep track of the longest word longest_word = \\"\\" # Loop over each word in the list for word in words: # Check if the current word is longer than the longest word if len(word) > len(longest_word): # Update the longest word longest_word = word # Print the longest word print(longest_word)"},{"prompt":"Create a program that assigns an ID to each element of an array. arr = [\\"Car\\", \\"Bike\\", \\"Bus\\"]","completion":"# Create program that assigns an ID to each element of an array arr = [\\"Car\\", \\"Bike\\", \\"Bus\\"] # Initialize a counter counter = 0 # Loop over each element of the array for element in arr: # Assign an ID to the element (in this case, the counter value) element_id = counter # Print the assigned ID print(f\\"Element {element} is assigned ID {element_id}\\") # Increment the counter counter += 1"},{"prompt":"What is the factorial of 5?","completion":"The factorial of 5 is 1"},{"prompt":"mplement a random number generator in Python that returns a random number in the range of 1-100.","completion":"import random def rand_num(): return random.randint(1, 100)"},{"prompt":"Find the longest substring of two characters that is a palindrome. string = \\"b","completion":"def longest_palindrome(string): # Create an empty substring longest_substring = '' # Iterate through the string for i in range(len(string)-1): for j in range(i+1, len(string)): substring = string[i:j+1] if substring == substring[::-1] and len(substring) > len(longest_substring): longest_substring = substring return longest_substring # Call the function longest_palindrome('banana') # returns 'anana'"},{"prompt":"Create a class in Python and define several functions for that class.","completion":"class MyClass: def __init__(self): pass def add(self, x, y): return x + y def subtract(self, x, y): return x - y def multiply(self, x, y): return x * y def divide(self, x, y): return x / y"},{"prompt":"Given an array of integers, write an algorithm to find the maximum difference between any two elements in the array. nums = [3, 2, 7, 1, 4]","completion":"def find_max_difference(nums): # Initialize a max difference max_diff = float('-inf') # Iterate through the array for i in range(1, len(nums)): diff = nums[i] - nums[i-1] if diff > max_diff: max_diff = diff return max_diff # Call the function find_max_difference([3, 2, 7, 1, 4]) # returns 6"},{"prompt":"Create a list in Python of elements 0-9 in random order.","completion":"import random # Generate a list of 10 numbers nums = [i for i in range(10)] # Shuffle the list random.shuffle(nums) # Print the shuffled list print(nums) # [5, 0, 2, 3, 9, 8, 4, 1, 7, 6]"},{"prompt":"Design a data structure to store books that keeps track of page numbers.","completion":"class Book: def __init__(self, title, num_pages): self.title = title self.num_pages = num_pages self.pages_read = 0 def read(self, num_pages): self.pages_read += num_pages # Create an instance book = Book(\\"War and Peace\\", 1220) # Read some pages book.read(50) # Check the number of pages read book.pages_read # returns 50"},{"prompt":"Edit a given sentence to make its sentence structure correct. sentence = \\"This is wrong sentence structure","completion":"sentence = \\"This sentence has an incorrect structure.\\""},{"prompt":"Create a function to calculate log base 10 in Python.","completion":"import math def log10(x): return math.log10(x) if __name__ == '__main__': print(log10(10))"},{"prompt":"Calculate the number of valid permutations of length n with respect to a given set of n distinct elements. n=5","completion":"#Calculate the number of valid permutations of length n with respect to a given set of n distinct elements. def num_permutations(n): if n == 0: return 0 else: return math.factorial(n) if __name__ == '__main__': print(num_permutations(5))"},{"prompt":"Calculate the total product of all numbers in an array in JavaScript. [5, 4, 2]","completion":"const product = arr => arr.reduce((finalProduct, num) => finalProduct * num); console.log(product([5,4,2]));"},{"prompt":"Create an SQL query to find the First Name and Age of all people with the same Year of Birth. noinpu","completion":"SELECT FirstName, Age FROM TableName WHERE YEAR(Birthday) = YEAR(NOW())"},{"prompt":"Write an algorithm to print all possible combinations of balanced parentheses.","completion":"def generateParenthesis(N): string = \\"\\" result = [] # dfs on the result def generate(left, right, string): if (left == 0 and right == 0): result.append(string) return if left > 0: generate(left - 1, right, string + \\"(\\") if left < right: generate(left, right - 1, string + \\")\\") # calling the function if N > 0: generate(N, N, string) return result # Driver function print(generateParenthesis(3))"},{"prompt":"Given an array of numbers, find the index of the first occurrence of a given number in Java.","completion":"public class FindIndex { public static int findIndex(int[] arr, int n) { int i; for (i = 0; i < arr.length; i++) { if (arr[i] == n) break; } if (i < arr.length) return i; else return -1; } }"},{"prompt":"Create a C++ program that uses command line arguments to print out the argument passed in as a string.","completion":"#include <iostream> using namespace std; int main(int argc, char* argv[]) { cout << argv[1]; return 0; }"},{"prompt":"Create an array of the first 10 natural numbers in JavaScript.","completion":"let numbers = [1,2,3,4,5,6,7,8,9,10];"},{"prompt":"Given a JSON object, write a Python program to convert it into a Pandas dataframe. { \\"name\\": \\"John\\", \\"age\\": 30, \\"city\\": \\"New York\\" }","completion":"import pandas as pd data = { \\"name\\": \\"John\\", \\"age\\": 30, \\"city\\": \\"New York\\" } df = pd.DataFrame([data])"},{"prompt":"Create a SQL query to print names starting with a certain letter. Letter:","completion":"SELECT name FROM table WHERE name LIKE 'A%';"},{"prompt":"Find the sum of the sequence of numbers from 1 to 10.","completion":"55"},{"prompt":"Write a Bash command to list all the subdirectories of a given directory. Path: /home/te","completion":"ls /home/test/*/"},{"prompt":"w is an \\"infinite loop\\" created?","completion":"An infinite loop is created by writing a loop that always evaluates to true, causing it to repeat indefinitely. This can be done by writing the loop with no condition, or a condition that can never be false. For example, a loop with the condition “i < 10” will run infinitely if it increments i by 1 each time, as its value will never reach 10."},{"prompt":"w is a 2D array declared and initialized in Java?","completion":"int[][] array 2D = new int[n][m]; //where n is the number of rows and m is the number of columns. //You can also create a 2D array by initializing elements with curly brackets, for example int[][] array2D = {{1,2,3},{4,5,6}};"},{"prompt":"What is \\"branching\\" in version control systems?","completion":"Branching is the ability to create a separate line of development within a version control system. This allows developers to have multiple versions of the same project, each with its own unique changes. Branches are used to isolate different features or bug fixes in different versions, without affecting the main line of development."},{"prompt":"Write code to sort a Python list of tuples based on their second element in the tuple. list_of_tuples = [('a', 5), ('b', 1), ('c', 10)]","completion":"list_of_tuples.sort(key=lambda tup: tup[1])"},{"prompt":"Create a SQL query to select the maximum salary for each department from the \\"Salary\\" table.","completion":"SELECT department, MAX(salary) FROM Salary GROUP BY department;"},{"prompt":"Construct a SQL query to select the names and ages of employees in the \\"Employees\\" table where the age is greater than 25.","completion":"SELECT name, age FROM Employees WHERE age > 25;"},{"prompt":"Modify the above C program to reverse a sentence.","completion":"#include<stdio.h> #include<string.h> void reverse(char *str) { int i = strlen(str) - 1, j = 0; while (i > j) { char temp = str[i]; str[i] = str[j]; str[j] = temp; i--; j++; } } void reverseSentence(char *str) { reverse(str); int start = 0, end; while (str[start] != '0') { if (str[start] == ' ') { start++; continue; } end = start + 1; while (str[end] != ' ' && str[end] != '0') end++; reverse(str + start, end - start); start = end; } } int main() { char str[100] = \\"How are you?\\"; reverseSentence(str); printf(\\"%s\\", str); return 0; }"},{"prompt":"Create a HTML page with a drop-down menu with values “green”, “blue” and “red”.","completion":"<!DOCTYPE html> <html> <body> <select name=\\"color\\"> <option value=\\"green\\">Green</option> <option value=\\"blue\\">Blue</option> <option value=\\"red\\">Red</option> </select> </body> </html>"},{"prompt":"Create a program in Python to remove duplicate values from a list. list_a = [1, 2, 2, 3, 4, 4]","completion":"def remove_duplicates(list): unique = [] for item in list: if item not in unique: unique.append(item) return unique list_a = [1, 2, 2, 3, 4, 4] list_a = remove_duplicates(list_a) print(list_a)"},{"prompt":"What is the definition of polymorphism in programming?","completion":"Polymorphism in programming is a principle allowing the same code to be used for objects of different types, or for a given object to behave differently in different contexts. Polymorphism is an essential element of object-oriented programming, as it allows for code reusability, among other benefits. Polymorphism is achieved in programming by using inheritance and abstraction, along with virtual functions and templates. Examples of polymorphism include the various forms of overloading and overriding, and type punning."},{"prompt":"Create a Python function that takes in a time string in the format hh:mm:ss and returns the time in seconds. time_string = '01:10:30'","completion":"def time_in_seconds(time_string): hour, minutes, seconds = map(int, time_string.split(':')) return second + minutes * 60 + hour * 3600 time_in_seconds(time_string) # 4290"},{"prompt":"Using the given HTML, add the class \\"container\\" to the <div> element. <div>Hello</div>","completion":"<div class=\\"container\\">Hello</div>"},{"prompt":"Using the following HTML, add an id attribute to the <div> element. <div>Hello</div>","completion":"<div id=\\"myDiv\\">Hello</div>"},{"prompt":"Write a C++ program to generate Fibonacci numbers up to a maximum of n values. n = 20","completion":"#include <iostream> int main() { int n = 20; int a = 0, b = 1, c; std::cout << a << \\" \\" << b << \\" \\"; for (int i = 2; i < n; ++i) { c = a + b; std::cout << c << \\" \\"; a = b; b = c; } return 0; }"},{"prompt":"Given the following HTML, change the text to \\"Hello World\\". <p>Hi there</p>","completion":"<p>Hello World</p>"},{"prompt":"Write a helper function in Haskell that prints out a given string in uppercase. str = \\"hello","completion":"uppercase str = map toUpper str"},{"prompt":"What is a hashmap, and what is it used for?","completion":"A hashmap (also known as a dictionary or associative array) is a data structure that stores key-value pairs. It is used to store and retrieve information using a keyword or search term as the key. The key can then be used to quickly fetch the associated value from the hashmap. This makes hashmaps a powerful tool for storing and accessing large amounts of data efficiently."},{"prompt":"Write a code snippet to add two numbers provided in two lists. list1 = [2, 4, 3] list2 = [5, 6, 4]","completion":"new_list = [] for i in range(len(list1)): new_list.append(list1[i] + list2[i]) print(new_list) # Output: [7, 10, 7]"},{"prompt":"Write a function in Python that takes an integer as an input and prints the number of digits in the integer. num = 1234","completion":"def countDigits(num): count = 0 while(num > 0): num = num//10 count += 1 return count print(countDigits(num)) # Output: 4"},{"prompt":"What data structure can you use to store a set of unique values?","completion":"A set is a data structure that stores a collection of unique values. A set is efficient for checking if a particular value exists in the collection, as the existence of the value can be checked in constant time."},{"prompt":"Convert this MySQL query to MongoDB. SELECT * FROM customers WHERE customer_id=1;","completion":"db.customers.find({ customer_id: 1 });"},{"prompt":"You are given two strings, A and B. Write a function to delete the characters in A that also appear in B. A = 'abcbbdef' B = 'abcdc'","completion":"def delete(A, B): for i in B: if i in A: A = A.replace(i, '') return A delete(A, B) # Output: 'bdef'"},{"prompt":"Explain the principle of dynamic programming.","completion":"Dynamic programming is a technique for solving complex problems by breaking them down into smaller subproblems. The subproblems are solved and stored in a table, which is reused to solve future subproblems. This technique allows for efficient solutions regardless of the complexity of the problem, as it exploits the overlapping subproblems property to reduce time complexity."},{"prompt":"You need to read a code and predict possible problems. def fib(n): if n == 0: return 0 elif n == 1: return 1 else: return (fib(n-1) + fib(n-2))","completion":"The main problem with this code is that it is not very efficient. It uses a recursive approach which requires solving the same subproblem multiple times, thus leading to a large time complexity. To improve the efficiency of the code, it could be rewritten to use iteration instead of recursion."},{"prompt":"Which language is used to develop applications for the Android platform?","completion":"The official language for developing applications for the Android platform is Java. Java is an object-oriented programming language, which allows developers to create robust and reliable applications for Android devices."},{"prompt":"Create a sorting algorithm in Python that will sort an array of numbers in ascending order [3, 1, 5, 2, 4, 6]","completion":"def sort_nums_asc(arr): for i in range(len(arr)): lowest_value_index = i for j in range(i + 1, len(arr)): if arr[j] < arr[lowest_value_index]: lowest_value_index = j arr[i], arr[lowest_value_index] = arr[lowest_value_index], arr[i] return arr"},{"prompt":"Generate a C program to count the frequency of each character in a given string String = “abcabcabc”","completion":"#include <stdio.h> #include <string.h> void characterCount(char str[]) { int count[256] = {0}; int len = strlen(str); // Count the frequency of each character in the string int i; for (i = 0; i < len; i++) count[str[i]]++; // print lowercase characters for (i = 0; i < 26; i++) if (count[i] != 0) printf(\\"'%c' has occurred %d time(s).n\\", i + 'a', count[i]); // print uppercase characters for (i = 65; i < 91; i++) if (count[i] != 0) printf(\\"'%c' has occurred %d time(s).n\\", i + 'A', count[i]); } int main() { char str[] = \\"abcabcabc\\"; characterCount(str); return 0; }"},{"prompt":"Write a node.js program to get the name of the day for a given date","completion":"const dateformat = require('dateformat'); const getDayName = (date) => { const dayName = dateformat(date,'dddd'); return dayName; };"},{"prompt":"Classify a given paragraph as having a positive or negative sentiment The customer service was horrible and the wait was too long.","completion":"Negative"},{"prompt":"Retrieve the data stored in a SQL database","completion":"SELECT * FROM database_name;"},{"prompt":"Edit a JavaScript program to input a number and output its factorial let n = 5;","completion":"function factorial(n) { let result = 1; for (let i = 2; i <= n; i++) result *= i; return result; } console.log( factorial(n) );"},{"prompt":"Create a bash script that sorts a list of numbers list = [3,12,1,4,5]","completion":"#!/bin/bash arr=(list) sort=\`echo {arr[*]} | tr \\" \\" \\"n\\" | sort -n\` echo sort"},{"prompt":"Write a function in Java to sum up all the elements in a two-dimensional array int arr[][]={{1,2,3},{4,5,6}};","completion":"public static int findSum(int[][] array) { int sum=0; for(int i=0;i<array.length;i++){ for(int j=0;j<array[i].length;j++){ sum = sum+array[i][j]; } } return sum; }"},{"prompt":"Create a Python class that processes a string of text String = \\"Hello World","completion":"class StringProcessor: def __init__(self, String): self.string = String def processString(self): myString = \\"\\" for char in self.string: if char.isalnum(): myString += char.lower() return myString"},{"prompt":"Generate a command to update a folder","completion":"git pull origin master"},{"prompt":"Generate a list comprehension in Python to get the cube of all the numbers between 1 to 10","completion":"cubes_list = [x**3 for x in range(1, 11)]"},{"prompt":"Create a C# class to serialize a JSON object","completion":"[DataContract] public class SampleObject { [DataMember(Name = \\"name\\")] public string Name { get; set; } [DataMember(Name = \\"age\\")] public int Age { get; set; } } public static string SerializeObject(SampleObject obj) { DataContractJsonSerializer serializer = new DataContractJsonSerializer(obj.GetType()); MemoryStream ms = new MemoryStream(); serializer.WriteObject(ms, obj); string json = Encoding.Default.GetString(ms.ToArray()); ms.Close(); return json; }"},{"prompt":"Create an array of length n, containing all even numbers starting from 0.","completion":"def create_array(n): arr = [] for i in range(0, n, 2): arr.append(i) return arr"},{"prompt":"Create an XML document with three elements \\"Company\\", \\"Product\\", and \\"Price\\".","completion":"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?> <root> <Company>Company Name</Company> <Product>Product Name</Product> <Price>Price in Dollars</Price> </root>"},{"prompt":"Write a Node.js program to generate a random 3-character string.","completion":"const randomString = function() { const alphabet = \\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\\"; let str = \\"\\"; for (let i = 0; i < 3; i++) str += alphabet[Math.floor(Math.random() * alphabet.length)]; return str; } console.log(randomString());"},{"prompt":"Write an SQL query to display the 10 most recently added products.","completion":"SELECT * FROM products ORDER BY date_created DESC LIMIT 10;"},{"prompt":"Train a SVM model on the given input data to classify the output as either \\"yes\\" or \\"no\\". x1, x2, y 2, 3, Yes 3, 4, Yes 3, 5, No","completion":"model = svm.SVC(kernel=\\"linear\\") model.fit(X, y)"},{"prompt":"Sort the given array [1, 7, 5, 4, 2] in ascending order.","completion":"let arr = [1, 7, 5, 4, 2]; arr.sort(function(a, b){return a-b}); console.log(arr); // [1, 2, 4, 5, 7]"},{"prompt":"Classify the following sentence into either Affective or Predicate. \\"She was beautiful.","completion":"Affective"},{"prompt":"Provide a MySQL query for selecting a record from a table called \\"inventory\\".","completion":"SELECT * FROM inventory WHERE id = 1;"},{"prompt":"Write a code in Java for creating an instance of an interface.","completion":"MyInterface myInterface = new MyInterface() { @Override public void myMethod() { // Implement your code here } };"},{"prompt":"Describe the working of a set in Python.","completion":"A set in Python is an unordered collection of unique elements. It is an efficient data structure which provides a variety of operations such as membership testing, intersection, union and difference. Sets in Python do not allow duplicate elements and also do not maintain any particular order of the elements. Sets are mutable meaning that elements can be added or removed from them."},{"prompt":"Create a function in R that will return the maximum number in a given vector. vec <- c(3,2,5,1,4,0)","completion":"max_num <- function(v){ return(max(v)) } max_num(vec)"},{"prompt":"Edit the following code so that it prints the first odd number in a given list. nums = [2, 3, 4, 5, 6]","completion":"for num in nums: if num % 2 == 1: print(num) break"},{"prompt":"Create a variable in JavaScript that holds the value of a number.","completion":"let number = 7;"},{"prompt":"Create a PHP class that has two properties, an id and name.","completion":"<?php class Person { public id; public name; public function __construct(id, name) { this->id = id; this->name = name; } }"},{"prompt":"Design a JSON object with two keys, \\"name\\" and \\"age\\".","completion":"{ \\"name\\": \\"John Doe\\", \\"age\\": 25 }"},{"prompt":"Create a JavaScript object that stores three pieces of digital contact data, an email address, a phone number, and a website URL.","completion":"const contact = { email: 'example@example.com', phone: '000-000-0000', website: 'www.example.com' };"},{"prompt":"Update the HTML structure with a <p> tag that contains the text \\"Welcome to my website\\". <html> <head> <title>My Website</title> </head> <body> </body> </html>","completion":"<html> <head> <title>My Website</title> </head> <body> <p>Welcome to my website</p> </body> </html>"},{"prompt":"Create an SQL table with three columns called id (int type), name (text type), and age (int type).","completion":"CREATE TABLE people ( id INT PRIMARY KEY, name TEXT, age INT );"},{"prompt":"Create a Python 3 script that prints out the total number of days in the current month.","completion":"import calendar print(calendar.monthrange(2020, 11)[1])"},{"prompt":"Design a PHP class that can be used to store a user's name, age and gender.","completion":"<?php class User { public name; public age; public gender; public function __construct(name, age, gender) { this->name = name; this->age = age; this->gender = gender; } }"},{"prompt":"Write a JavaScript program to take an array of numbers, and return an array in which each element is the result of squaring the original. [1,2,3,4]","completion":"[1,4,9,16]"},{"prompt":"Give an algorithm to delete a key, say k, from a binary search tree (BST).","completion":"1. If the tree is empty, then return 2. Find the key to be deleted in the tree and store it in a temporary node. 3. Check if the key to be deleted has zero children or one child. a. If the key has one child, then copy the child to the temporary node and delete the key. b. If the key has two children, then find inorder successor of the key, copy it to the temporary node and delete the key. 4. Free the memory occupied by the temporary node."},{"prompt":"Fill the missing statement for for-while loop based on following pseudocode: i = 1","completion":"while i <= 10: # write statement here print(i) i = i + 1"},{"prompt":"Write a function in JavaScript which takes a situation as a parameter and returns the probability of success. The probability of the stock market rising tomorrow.","completion":"function findProbability(situation) { // code to calculate probability return probability; }"},{"prompt":"Create a HTML page with a form that takes user input and performs some action when the user clicks the submit button.","completion":"<html> <head> <title>Form Demo</title> </head> <body> <form action=\\"form_action.php\\" method=\\"post\\"> <label for=\\"username\\">Username:</label> <input type=\\"text\\" name=\\"username\\"> <input type=\\"submit\\" name=\\"submit\\" value=\\"Submit\\"> </form> </body> </html>"},{"prompt":"Write a Bash script to check if the directory exists or not. my_directory","completion":"#!/bin/bash if [ -d \\"my_directory\\" ]; then echo \\"The directory exists\\" else echo \\"The directory does not exist\\" fi"},{"prompt":"Create a MySQL query to select the names of all the customers who have made a purchase in the past month.","completion":"SELECT name FROM customers WHERE purchase_date > NOW()-INTERVAL 1 MONTH;"},{"prompt":"Write a query to find the five highest scores in a leaderboard table.","completion":"SELECT * FROM leaderboard ORDER BY score DESC LIMIT 5;"},{"prompt":"Create a SQL query to find the total payments made a group of customers in the last 30 days.","completion":"SELECT customer_id, SUM(payment_amount) FROM payments WHERE payment_date > NOW() - INTERVAL 30 DAY GROUP BY customer_id;"},{"prompt":"mplement an algorithm to find all the sets of three numbers in an array which adds up to a given number. Array: [2, 5, 8], Number: 10","completion":"def three_sum(array, number): result_sets = [] for i in range(len(array) - 2): for j in range(i+1, len(array) - 1): for k in range(j+1, len(array)): if array[i] + array[j] + array[k] == number: result_sets.append([array[i], array[j], array[k]]) return result_sets print(three_sum([2, 5, 8], 10)) # Result: [[2, 5, 8]]"},{"prompt":"Create a query to find the total payments from one customer in the last 10 months.","completion":"SELECT SUM(payment_amount) FROM payments WHERE payment_date > NOW() - INTERVAL 10 MONTH AND customer_id = '<customer_id>';"},{"prompt":"Create an algorithm to find the longest common substring from two given strings. String1: 'Hello World', String2: 'Hey World'","completion":"def longest_common_substring(s1, s2): m = [[0] * (1 + len(s2)) for i in range(1 + len(s1))] longest, x_longest = 0, 0 for x in range(1, 1 + len(s1)): for y in range(1, 1 + len(s2)): if s1[x - 1] == s2[y - 1]: m[x][y] = m[x - 1][y - 1] + 1 if m[x][y] > longest: longest = m[x][y] x_longest = x else: m[x][y] = 0 return s1[x_longest - longest: x_longest] print(longest_common_substring('Hello World', 'Hey World')) # Result: 'ello Wo'"},{"prompt":"Write a SQL clause to get all the records from a table if the value in each column is greater than 5.","completion":"SELECT * FROM table_name WHERE col1 > 5 AND col2 > 5 AND col3 > 5 AND ...;"},{"prompt":"Suggest a way to convert the following XML code into JSON in Python. <data> <records> <record name=\\"John Smith\\" age=\\"27\\"> <address>123 Main Street</address> </record> <record name=\\"Jane Smith\\" age=\\"18\\"> <address>167 King Avenue</address> </record> </records> </data>","completion":"import json import xmltodict xml_data = \\"\\"\\" <data> <records> <record name=\\"John Smith\\" age=\\"27\\"> <address>123 Main Street</address> </record> <record name=\\"Jane Smith\\" age=\\"18\\"> <address>167 King Avenue</address> </record> </records> </data> \\"\\"\\" xml_dict = xmltodict.parse(xml_data) json_data = json.dumps(xml_dict) print(json_data)"},{"prompt":"Create a function that takes two arguments, a string and a character, and replaces all occurrences of the character with the string in JavaScript.","completion":"function replaceCharacter(str, char) { return str.replace(new RegExp(char,\\"g\\"), str); } let str = \\"Hello World\\"; let char = \\"l\\"; let result = replaceCharacter(str, char); console.log(result); // Output: Heooo Worod"},{"prompt":"Take the following array as an argument and output the sum of all the numbers in the array using Python. [1, 2, 3, 4, 5]","completion":"def sum_of_array(arr): return sum(arr) array = [1, 2, 3, 4, 5] result = sum_of_array(array) print(resutl) # Output: 15"},{"prompt":"Write a SQL query to get the average of all the number from a single column.","completion":"SELECT AVG(column_name) FROM table_name;"},{"prompt":"Extend the following HTML code to include a dropdown list. <select class=\\"form-control\\"> <option value=\\"\\">Select one</option> </select>","completion":"<select class=\\"form-control\\"> <option value=\\"\\">Select one</option> <option value=\\"Option 1\\">Option 1</option> <option value=\\"Option 2\\">Option 2</option> <option value=\\"Option 3\\">Option 3</option> </select>"},{"prompt":"Code a function in Python to calculate the nth value of the Fibonacci sequence.","completion":"def fibonacci(n): if n <= 0: return 0 elif n == 1: return 1 else: return fibonacci(n-1) + fibonacci(n-2)"},{"prompt":"Create a visualization to compare the customer preferences of two websites. Website 1 has 4000 customers and their favourite products are video games and consoles. Website 2 has 5000 customers and their favourite products are movies, music and books.","completion":"The customer preferences can be compared using a bar chart. The X-axis can have the labels ‘Website 1’ and ‘Website 2’ and the Y-axis can have ‘Video games/Consoles’, ‘Movies’, ‘Music’ and ‘Books’ on the axis. The bars can represent the percentage of customers with the corresponding favourite product."},{"prompt":"You need to generate a virtual object with React.js.","completion":"const VirtualObject = () => { const [state, setState] = React.useState({ height: 100, width: 100, backgroundColor: 'blue' }); return ( <div style={{ height: state.height, width: state.width, backgroundColor: state.backgroundColor }} > </div> ); };"},{"prompt":"Create an SQL query to search for customer names whose age is greater than 30","completion":"SELECT name FROM customers WHERE age > 30"},{"prompt":"Use nltk package in Python and remove stopwords from the given text. Text: \\"I am wondering what is the best way to learn English.","completion":"import nltk from nltk.corpus import stopwords txt = \\"I am wondering what is the best way to learn English.\\" words = nltk.word_tokenize(txt) filtered_words = [w for w in words if not w in stopwords.words('english')] print(filtered_words)"},{"prompt":"Construct a switch statement for the given pseudo-code. switch (day) case Sunday: print(\\"Sunday is a Day of Rest\\"); break; case Saturday: print(\\"Saturday is a Day of Work\\"); break;","completion":"switch (day) { case \\"Sunday\\": printf(\\"Sunday is a Day of Rest\\"); break; case \\"Saturday\\": printf(\\"Saturday is a Day of Work\\"); break; default: printf(\\"Default Action\\"); break; }"},{"prompt":"Build a web scraper in Python to fetch the restaurant details from the website. <uri of the website>","completion":"import requests from bs4 import BeautifulSoup page = requests.get(<uri of website>) soup = BeautifulSoup(page.content, 'html.parser') rests = soup.find_all('div', class_='restaurant-item') # Parse the details of restaurants one by one for rest in rests: name = rest.find('div', class_='restaurant-name') cuisine = rest.find('li', class_='cuisine-list-item') location = rest.find('li', class_='restaurant-location') rating = rest.find('span', class_='star-rating-text') # Print details of restaurant print(name.text, cuisine.text, location.text, rating.text)"},{"prompt":"Using SVG element and CSS properties, create an animation of a car moving in a straight line.","completion":"<svg width=\\"100%\\" height=\\"100%\\" viewBox=\\"0 0 500 500\\" > <rect x=\\"0\\" y=\\"0\\" width=\\"500\\" height=\\"500\\" fill=\\"black\\"/> <rect x=\\"20\\" y=\\"20\\" width=\\"20\\" height=\\"20\\" fill=\\"red\\" id=\\"car\\"/> <animate xlink:href=\\"#car\\" attributeName=\\"x\\" from=\\"20\\" to=\\"480\\" dur=\\"4s\\" repeatCount=\\"indefinite\\" /> </svg>"},{"prompt":"Develop a function in Java to display the prime numbers between 0 and 100.","completion":"public static void printPrimeNumbers(int n) { for (int i = 2; i < n; i++) { boolean isPrime = true; for (int j = 2; j < i; j++) { if (i % j == 0 ) { isPrime = false; } } if (isPrime) { System.out.print(i + \\" \\"); } } }"},{"prompt":"Given a JSON object, encode it using Base64. { \\"name\\":\\"John Doe\\", \\"age\\":25 }","completion":"import base64 json_object = '{\\"name\\":\\"John Doe\\",\\"age\\":25}' encoded_object = base64.b64encode(bytes(json_object, 'utf-8')) print(encoded_object)"},{"prompt":"Build a function to loop through an array and check if each key exists in the object. array = [1,2,3] object = { 1: 'one', 2: 'two' }","completion":"function checkKeys(array, object) { for (let i = 0; i < array.length; i++) { let key = array[i]; if (object.hasOwnProperty(key)) { console.log(\\"key \\"+key+\\" exists\\"); } else { console.log(\\"key \\"+key+\\" does not exist\\"); } } }"},{"prompt":"Develop a program to spell a given word. \\"Hello","completion":"def spellWord(word): words = list(word) for i in range(len(words)): print(words[i])"},{"prompt":"Fill in the blank to print a string 7 times.","completion":"for i in range(7): print(\\"Hello, World!\\")"},{"prompt":"Edit the following code to increment a variable by one when its value is less than 10. int i = 5;","completion":"int i = 5; if (i < 10) { i++; }"},{"prompt":"Write a Python program to remove the nth index character from a nonempty string. var_str = Python, n = 0","completion":"def remove_character(var_str, n): first_part = var_str[:n] last_part = var_str[n+1:] return first_part + last_part print(remove_character('Python', 0)) Output: ython"},{"prompt":"erate over a list and count the number of occurrences of each item. list1 = [10, 20, 30, 10, 10, 40, 10]","completion":"def count_instances(list1): count_dict = dict() for item in list1: if (item in count_dict): count_dict[item] += 1 else: count_dict[item] = 1 for key, value in count_dict.items(): print(f\\"{key} : {value}\\") count_instances(list1) Output: 10 : 4, 20 : 1, 30 : 1, 40 : 1"},{"prompt":"Determine the longest word in a given string. sentence = \\"I am Python Programmer","completion":"def longest_word(sentence): words = sentence.split() max_len = len(words[0]) for word in words: if len(word) > max_len: max_len = len(word) max_word = word return max_word print(longest_word('I am Python Programmer')) Output: Programmer"},{"prompt":"Given a number n, print “Hello” n times. n = 5","completion":"def print_hello(n): for i in range (n): print(\\"Hello\\") print_hello(5) Output: Hello Hello Hello Hello Hello"},{"prompt":"Given two strings, return True if either of the strings appears at the very end of the other string, ignoring upper/lower case differences. str1 = \\"Strawberry\\", str2 = \\"berry","completion":"def check_case_ignore(str1, str2): return str1.lower().endswith(str2.lower()) print(check_case_ignore('Strawberry', 'berry')) Output: True"},{"prompt":"Get all permutations of string. string = \\"abc","completion":"from itertools import permutations def permutations_string(string): return list(permutations(string)) permutations_string(\\"abc\\") Output: [('a', 'b', 'c'), ('a', 'c', 'b'), ('b', 'a', 'c'), ('b', 'c', 'a'), ('c', 'a', 'b'), ('c', 'b', 'a')]"},{"prompt":"You need to create an HTML page containing a table that contains at least 4 columns and 5 rows.","completion":"<!DOCTYPE html> <html> <head> <title>HTML Table</title> </head> <body> <table> <tr> <th>Column 1</th> <th>Column 2</th> <th>Column 3</th> <th>Column 4</th> </tr> <tr> <td>Row 1</td> <td>Row 1</td> <td>Row 1</td> <td>Row 1</td> </tr> <tr> <td>Row 2</td> <td>Row 2</td> <td>Row 2</td> <td>Row 2</td> </tr> <tr> <td>Row 3</td> <td>Row 3</td> <td>Row 3</td> <td>Row 3</td> </tr> <tr> <td>Row 4</td> <td>Row 4</td> <td>Row 4</td> <td>Row 4</td> </tr> <tr> <td>Row 5</td> <td>Row 5</td> <td>Row 5</td> <td>Row 5</td> </tr> </table> </body> </html>"},{"prompt":"You are given a list of numbers. Count how many of them are prime numbers. [1,2,3,4,5,6,7]","completion":"def count_primes(numbers): count = 0 for number in numbers: if is_prime(number): count += 1 return count def is_prime(number): if number <= 1: return False for i in range(2, number): if number % i == 0: return False return True"},{"prompt":"Edit the given code to ensure it outputs appropriate messages for successful and unsuccessful output. def handleInput(name): if len(name) > 0: print('Hello, ' + name)","completion":"def handleInput(name): if len(name) > 0: print('Hello, ' + name) else: print('No name provided.')"},{"prompt":"the following code syntactically correct? function addNumbers(a, b) { return a + b","completion":"Yes. The function is syntactically correct."},{"prompt":"Create a JS program that rotates a given string by 3 characters.","completion":"function rotateString(string) { return string.slice(3) + string.slice(0, 3); }"},{"prompt":"Modify the following code so that it takes a string as a parameter, reverses it and prints out the reversed string. str = \\"Hello World!","completion":"def reverse_string(str): reverse = \\"\\" # Traverse through each letter of the input string for i in range(len(str) - 1, -1, -1): reverse = reverse + str[i] print(reverse)"},{"prompt":"Find a way to randomly swap two elements of an array. [1, 2, 3, 4, 5]","completion":"import random # Function to swap two elements # in a list at positions i and j def swap(arr, i, j): arr[i], arr[j] = arr[j], arr[i] # Function to generate a random # permutation of arr[] def randomize ( arr, n ) : # Start from the last element and swap # one by one. We don't need to run for # the first element that's why i > 0 for i in range(n-1,0,-1): # Pick a random index from 0 # to i j = random.randint(0,i+1) # Swap arr[i] with the element # at random index swap(arr, i, j)"},{"prompt":"mplement a method that reverses a linked list head = 1 -> 2 -> 3 -> 4 -> 5 -> 6 -> null","completion":"// A linked list node class Node: # Constructor to create a new node def __init__(self, data): self.data = data self.next = None # Function to reverse the linked list def reverse(head): prev = None current = head while(current is not None): next = current.next current.next = prev prev = current current = next head = prev return head"},{"prompt":"Find a way to get the size of a linked list without traversing it. head: 1 -> 2 -> 3 -> 4 -> 5 -> null","completion":"def get_list_size(head): count = 0 temp = head while(temp): count += 1 temp = temp.next return count"},{"prompt":"Write a function to find the smallest subarray with a given sum. arr = [3, 4, 5, 6, 7], sum = 11","completion":"def smallest_subarray_sum(arr, sum): start = 0 end = 1 min_length = float('inf') current_sum = arr[start] while(end < len(arr)): while(current_sum < sum and end < len(arr)): current_sum += arr[end] end += 1 while(start < end and current_sum >= sum): min_length = min(min_length, end-start) current_sum -= arr[start] start += 1 return min_length"},{"prompt":"Edit the following code so that it prints out all powers of 2 up to 2^n n = 5","completion":"def power_of_2(n): result = 1 for i in range(n): print(result) result *= 2"},{"prompt":"Create a function that reverses a given string without using the built-in parity. str = 'I am here for the coding challenge","completion":"def reverse_string_without_parity(str): # Create empty string reversed_str = \\"\\" # Iterate through the input string in the reverse order for i in range(len(str)-1,-1,-1): reversed_str += str[i] return reversed_str"},{"prompt":"Find a way to calculate the power of a number without using * or ** base = 3 exponent = 4","completion":"def power(base, exponent): result = 1 for _ in range(exponent): result *= base return result"},{"prompt":"dentify the possible output types for the following task. Task: Write a Spark program to calculate the mean and the median of a set of numbers.","completion":"The possible output types for the given task are Double, Int, Float, and Long."},{"prompt":"Rewrite this SQL query in Postgres. SELECT id, prof_name FROM teachers WHERE rank = 'assistant'","completion":"SELECT id, prof_name FROM teachers WHERE rank = 'Associate Professor' // fixed the rank."},{"prompt":"Create a Java class for representing a student object.","completion":"public class Student { private String id; private String name; private int age; public Student(String id, String name, int age) { this.id = id; this.name = name; this.age = age; } public String getId() { return id; } public void setId(String id) { this.id = id; } public String getName() { return name; } public void setName(String name) { this.name = name; } public int getAge() { return age; } public void setAge(int age) { this.age = age; } }"},{"prompt":"Find the errors in this HTML page. <html> <title> My Webpage </title> <body> <h2>Welcome!</h2> </head> </html>","completion":"The error in the HTML page is that there is no closing <body> tag. The HTML page should have a closing </body> tag after the <h2>Welcome!</h2> tag."},{"prompt":"Explain the differences between OOP and procedural programming.","completion":"Object-oriented programming (OOP) is a programming paradigm that is based on the concept of objects which contain both data and methods. These objects can interact with each other to create complex systems. Procedural programming is a programming paradigm that is based on the concept of procedures or functions that are used to complete a task. The main difference between OOP and procedural programming is that OOP focuses on the utilization of objects to create complex system while procedural programming focuses on the utilization of procedures or functions."},{"prompt":"Rewrite this code into Python. ArrayList<Integer> arr = new ArrayList<>(); for (int i = 0; i < 10; i++) { arr.add(i); } int sum = 0; for(int num : arr){ sum += num; }","completion":"arr = [] for i in range(10): arr.append(i) sum = 0 for num in arr: sum += num"},{"prompt":"Build a package and deploy it in the cloud. The package is an API to authenticate users and the API should be able to authenticate users having different types of API keys.","completion":"Create a package containing API authentication logic and all the necessary API keys. Set up a cloud service, such as AWS or GCP, and deploy the package. Configure the cloud service to accept incoming requests and authenticate the user using the API keys."},{"prompt":"Write a SQL query to find the number of customers that have purchased a product more than 5 times. The database has three tables: customer(cust_id, cust_name, balance) product(prod_id, prod_name, price) sales(cust_id, prod_id, quantity)","completion":"SELECT count(*) FROM customer c JOIN sales s on c.cust_id = s.cust_id GROUP BY c.cust_id HAVING SUM(s.quantity) > 5;"},{"prompt":"Fix the following C++ code segment. #include <iostream> int main() { if (a == b) { cout << a;","completion":"#include <iostream> int main() { int a, b; cin >> a >> b; if (a == b) { cout << a; } return 0; }"},{"prompt":"Create a function that takes in two strings and determines of the strings are anagrams String 1: \\"spite\\" String 2: \\"p","completion":"def is_anagram(str1, str2): # convert the strings to lowercase str1 = str1.lower() str2 = str2.lower() # sorting both the strings s1 = sorted(str1) s2 = sorted(str2) if len(s1) != len(s2): return False # compare character by character for i in range(len(s1)): if s1[i] != s2[i]: return False return True # Driver code if is_anagram(\\"spite\\", \\"pists\\"): print(\\"Strings are anagrams\\") else: print(\\"Strings are not anagrams\\")"},{"prompt":"dentify any type error that is present in the following code. def sum_of_values(num_list): total = 0 for value in num_list: total += value return total/len(num_list) square_value = sum_of_values(5)","completion":"Type error: The function sum_of_values() takes a list as an argument, but the argument provided is an integer (5)."},{"prompt":"Given a list of integers, write a function to compute their average. List of integers: [1, 2, 3, 4, 5]","completion":"def compute_average(lst): total = 0 for num in lst: total += num # calculate the average avg = total / len(lst) return avg # Driver Code lst = [1, 2, 3, 4, 5] print(\\"Average of the list =\\", round(compute_average(lst), 2))"},{"prompt":"Explain what is the purpose of a classifier model in machine learning","completion":"The purpose of a classifier model in machine learning is to predict the class or category of an input data point. A classifier acts as a decision boundary between different categories of data points. It takes a set of input features, applies a set of mathematical operations to them, and uses them to make a prediction about the class of the input data point."},{"prompt":"Generate all combinations of the string \\"abcd\\".","completion":"def generate_combinations(string): result = [] for i in range(len(string)): for j in range(i + 1, len(string) + 1): result.append(string[i:j]) return result if __name__ == '__main__': string = \\"abcd\\" print(generate_combinations(string)) # outputs ['a', 'ab', 'abc', 'abcd', 'b', 'bc', 'bcd', 'c', 'cd', 'd']"},{"prompt":"Create a program to split the given string on a specific character. String: \\"A/B/C/D\\" Character: \\"/","completion":"def split_string(string, character): return string.split(character) if __name__ == '__main__': string = \\"A/B/C/D\\" character = \\"/\\" print(split_string(string, character)) # outputs ['A', 'B', 'C', 'D']"},{"prompt":"Create a REST API endpoint that returns a list of all user names from a list of users.","completion":"app.get('/users', (req, res) => { const users = [ { id: 1, name: 'John' }, { id: 2, name: 'Jane' }, { id: 3, name: 'Jack' }, ]; const userNames = users.map(user => user.name); res.status(200).json(userNames); });"},{"prompt":"Write a CSS style to turn all text in a document to italic.","completion":"* { font-style: italic; }"},{"prompt":"Create a Python class to hold a student's information: name, age and major.","completion":"class Student: def __init__(self, name, age, major): self.name = name self.age = age self.major = major def get_name(self): return self.name def get_age(self): return self.age def get_major(self): return self.major"},{"prompt":"Compile the following code in C++ and check for any warnings or errors. #include<iostream> using namespace std; int main() { cout << \\"Hello World!\\"; return 0; }","completion":"No output is produced when compiling the above code in C++. Any warnings or errors should be indicated while compiling."},{"prompt":"Create a JavaScript object that holds the global temperatures for the last 5 years.","completion":"const temperatures = { 2015: 34.7, 2016: 35.2, 2017: 35.7, 2018: 36.1, 2019: 36.7 };"},{"prompt":"Write an R function to calculate the binomial coefficient of n and k","completion":"binomial_coeff <- function(n, k) { if((k == 0) | (k == n)) return(1) else return(binomial_coeff(n-1, k-1) + binomial_coeff(n-1,k)) }"},{"prompt":"Create a Java program to print out the multiplication table for the first 10 numbers","completion":"public class MultiplicationTable { public static void main(String[] args) { for (int i = 1; i <= 10; i++) { for (int j = 1; j <= 10; j++) { System.out.print(i * j + \\" \\"); } System.out.println(); } } }"},{"prompt":"Write an Android app to display the current time and date","completion":"public class MainActivity extends AppCompatActivity { @Override protected void onCreate(Bundle savedInstanceState) { super.onCreate(savedInstanceState); setContentView(R.layout.activity_main); TextView tvTimeDate = findViewById(R.id.tvTimeDate); SimpleDateFormat dateFormat = new SimpleDateFormat(\\"dd MMM yyyy, hh:mm aa\\"); Date date = new Date(); String dateTime = dateFormat.format(date); tvTimeDate.setText(dateTime); } }"},{"prompt":"Extract words starting with 's' in this sentence. Sentence: I send a package to Steve.","completion":"send, Steve."},{"prompt":"Change the last line of the code to assign a list value to the variable x. x = None","completion":"x = []"},{"prompt":"Write a one-liner to print the elements from list L in reverse order. L = [\\"apple\\", \\"pear\\", \\"banana\\"]","completion":"print(*L[::-1])"},{"prompt":"What data type does the output of this Python code have? x = 5","completion":"integer"},{"prompt":"Change the code to make it a valid Python program. x = \\"hello world","completion":"x = \\"hello world\\""},{"prompt":"w can you access the third element of a tuple T?","completion":"T[2]"},{"prompt":"Change the code to make it an Expression Statement in Python x + 1","completion":"print(x + 1)"},{"prompt":"What is the command for cloning a GitHub repository?","completion":"The command for cloning a GitHub repository is \`git clone <repository-url>\`."},{"prompt":"Determine the output of this code snippet in C++: int x = 7; x = x + x + 2;","completion":"The output of the code snippet is 22, since the value of x will be incremented twice, from 7 to 16 and then again from 16 to 22."},{"prompt":"Create a dictionary where the numbers 1 to 100 are the keys and the strings \\"one\\" to \\"one hundred\\" are the values.","completion":"d = { 1: 'one', 2: 'two', 3: 'three', 4: 'four', 5: 'five', 6: 'six', 7: 'seven', 8: 'eight', 9: 'nine', 10: 'ten', 11: 'eleven', 12: 'twelve', 13: 'thirteen', 14: 'fourteen', 15: 'fifteen', 16: 'sixteen', 17: 'seventeen', 18: 'eighteen', 19: 'nineteen', 20: 'twenty', 21: 'twenty-one', 22: 'twenty-two', 23: 'twenty-three', 24: 'twenty-four', 25: 'twenty-five', 26: 'twenty-six', 27: 'twenty-seven', 28: 'twenty-eight', 29: 'twenty-nine', 30: 'thirty', 31: 'thirty-one', 32: 'thirty-two', 33: 'thirty-three', 34: 'thirty-four', 35: 'thirty-five', 36: 'thirty-six', 37: 'thirty-seven', 38: 'thirty-eight', 39: 'thirty-nine', 40: 'forty', 41: 'forty-one', 42: 'forty-two', 43: 'forty-three', 44: 'forty-four', 45: 'forty-five', 46: 'forty-six', 47: 'forty-seven', 48: 'forty-eight', 49: 'forty-nine', 50: 'fifty', 51: 'fifty-one', 52: 'fifty-two', 53: 'fifty-three', 54: 'fifty-four', 55: 'fifty-five', 56: 'fifty-six', 57: 'fifty-seven', 58: 'fifty-eight', 59: 'fifty-nine', 60: 'sixty', 61: 'sixty-one', 62: 'sixty-two', 63: 'sixty-three', 64: 'sixty-four', 65: 'sixty-five', 66: 'sixty-six', 67: 'sixty-seven', 68: 'sixty-eight', 69: 'sixty-nine', 70: 'seventy', 71: 'seventy-one', 72: 'seventy-two', 73: 'seventy-three', 74: 'seventy-four', 75: 'seventy-five', 76: 'seventy-six', 77: 'seventy-seven', 78: 'seventy-eight', 79: 'seventy-nine', 80: 'eighty', 81: 'eighty-one', 82: 'eighty-two', 83: 'eighty-three', 84: 'eighty-four', 85: 'eighty-five', 86: 'eighty-six', 87: 'eighty-seven', 88: 'eighty-eight', 89: 'eighty-nine', 90: 'ninety', 91: 'ninety-one', 92: 'ninety-two', 93: 'ninety-three', 94: 'ninety-four', 95: 'ninety-five', 96: 'ninety-six', 97: 'ninety-seven', 98: 'ninety-eight', 99: 'ninety-nine', 100: 'one hundred' }"},{"prompt":"Rewrite the following code so that the loop runs in reverse (decreases rather than increases). for i in range(0, 10): print(i)","completion":"for i in range(10, 0, -1): print(i)"},{"prompt":"Count how many words are in a string and output the count. string = \\"Hello world!","completion":"def count_words(str): \\"\\"\\"Counts how many words are in a string. Parameters: str (str): string to be counted \\"\\"\\" return len(str.split()) if __name__ == '__main__': string = \\"Hello world!\\" print(count_words(string))"},{"prompt":"Create a function to output true if the given string is a palindrome, otherwise output false. string = \\"racecar","completion":"def is_palindrome(str): \\"\\"\\"Checks if a given string is a palindrome. Parameters: str (str): string to be tested \\"\\"\\" str = str.lower() return str[::-1] == str if __name__ == '__main__': string = \\"racecar\\" print(is_palindrome(string))"},{"prompt":"Replace the comments in the code with the proper Python code. #TODO: get the date from the user #TODO: get the month from the user","completion":"date = int(input(\\"Enter the date: \\")) month = int(input(\\"Enter the month: \\"))"},{"prompt":"Find the number of different words in a string of unlimited length. string = \\"This is a long sentence about nothing.","completion":"def word_count(str): \\"\\"\\"Counts the number of different words in a string of unlimited length. Parameters: str (str): string to be counted \\"\\"\\" words = str.split() return len(set(words)) if __name__ == '__main__': string = \\"This is a long sentence about nothing.\\" print(word_count(string))"},{"prompt":"Write a code to check if a string contains only digits and output true or false. string = \\"1234567890","completion":"def is_digits(str): \\"\\"\\"Checks if a string contains only digits. Parameters: str (str): string to be tested \\"\\"\\" return str.isdigit() if __name__ == '__main__': string = \\"1234567890\\" print(is_digits(string))"},{"prompt":"Create a function that takes in an array of strings and outputs an array of tuples of the first and last word in each string. array = [\\"Hello World\\", \\"Foo Bar\\", \\"Goodbye Moon\\"]","completion":"def first_last_words(arr): \\"\\"\\"Gets the first and last word from each string. Parameters: arr (list): array of strings \\"\\"\\" result = [] for string in arr: words = string.split() result.append((words[0], words[-1])) return result if __name__ == '__main__': array = [\\"Hello World\\", \\"Foo Bar\\", \\"Goodbye Moon\\"] print(first_last_words(array))"},{"prompt":"Create an HTML webpage which when opened displays the current date in a paragraph.","completion":"<!DOCTYPE html> <html> <head> <title>Date Page</title> </head> <body> <p> <?php echo \\"Current date: \\" . date(\\"d-m-Y\\"); ?> </p> </body> </html>"},{"prompt":"Write a SQL query to find the top 3 highest paying employee’s name and salary.","completion":"SELECT TOP 3 name, salary FROM employees ORDER BY salary DESC;"},{"prompt":"Create a script in JavaScript for flipping a coin.","completion":"function coinFlip(){ let flipResult = Math.floor(Math.random() * 2); if (flipResult == 0){ return \\"Heads\\"; } else { return \\"Tails\\"; } } let result = coinFlip(); console.log(result);"},{"prompt":"Write an SQL query to find the number of employees working in a company with a salary over 50000.","completion":"SELECT COUNT(*) FROM employees WHERE salary > 50000;"},{"prompt":"Write a SQL query that finds the names and ages of employees who are older than 40 years.","completion":"SELECT name, age FROM employees WHERE age > 40;"},{"prompt":"Create a Python program that finds the highest number in a list of numbers. [2, 4, 32, 41, 19]","completion":"# Initializing list list_of_numbers = [2, 4, 32, 41, 19] # Finding the highest number max_number = max(list_of_numbers) # Printing the result print(max_number) # Output: 41"},{"prompt":"Create a Java program to compute the volume of a cube.","completion":"public class CubeVolume { public static void main(String[] args) { double sideLenght = 10; double volume; volume = sideLenght * sideLenght * sideLenght; System.out.println(\\"Volume of a cube with side lenght \\"+ sideLenght +\\" is: \\" + volume); } }"},{"prompt":"Create an asyncio event loop and execute a coroutine.","completion":"import asyncio async def myfunc(): print(\\"I'm in a coroutine\\") loop = asyncio.get_event_loop() try: loop.run_until_complete(myfunc()) finally: loop.close()"},{"prompt":"Write a query in SQL that returns all customers with the name \\"John\\". No inpu","completion":"SELECT * FROM customer WHERE customer_name = 'John';"},{"prompt":"Use a framework like React to create a button component that fires an event when clicked.","completion":"class Button extends React.Component { handleClick = () => { console.log('Button was clicked!') } render() { return ( <button onClick={this.handleClick}> Click Me! </button> ) } }"},{"prompt":"Create a function in Python that takes two integers N and M and prints out all possible combinations of numbers that add up to N and are at most M. N=8, M=3","completion":"def combinations_with_sum(n, m): for i in range(1, m): for j in range(i, m): if i + j == n: print(i, '+', j, '=', n)"},{"prompt":"Create a React class component that renders a paragraph of text from props.","completion":"class Paragraph extends React.Component { render() { return <p>{this.props.text}</p> } }"},{"prompt":"Multiply two input matrices using numpy. matrix A: [[1,2], [3,4]] matrix B: [[5,6], [7,8]]","completion":"import numpy as np A = np.array([[1,2], [3,4]]) B = np.array([[5,6], [7,8]]) C = np.matmul(A,B) print(C)"},{"prompt":"Re-write this Python code as a JavaScript function. def double_number(num): return num * 2","completion":"function doubleNumber(num) { return num * 2; }"},{"prompt":"Determine the type of data structure that is most suitable for the given case. Use case: You need to store multiple formats of information like a person's name (string), age (integer) and pets (array) in a data structure.","completion":"The most suitable data structure for this use case is an object, as it is capable of storing multiple values of various types."},{"prompt":"Create a CSS style that changes the color of links to red when visited.","completion":"a:link { color: blue; } a:visited { color: red; }"},{"prompt":"Explain the purpose of the %i in a Python format string.","completion":"The %i in Python is a special format specifier used to format integer numbers. When used in a format string, it will convert the number to an integer and insert it into the output string. This can be used to easily format numbers when printing output."},{"prompt":"Change the following code snippet to use a different method to display the alert. alert(\\"Hello World!\\");","completion":"console.log(\\"Hello World!\\");"},{"prompt":"Create an instance of an Apache Spark DataFrame using an existing Pandas dataframe. import pandas as pd df = pd.DataFrame({'A': [1, 2, 3], 'B': [4, 5, 6]})","completion":"from pyspark.sql import SparkSession # Create SparkSession object spark = SparkSession.builder.getOrCreate() # Create Spark DataFrame using Pandas df spark_df = spark.createDataFrame(df)"},{"prompt":"Compute the sum of all elements in a numpy array. import numpy as np arr = np.array([[1,2,3],[4,5,6]])","completion":"import numpy as np arr = np.array([[1,2,3],[4,5,6]]) # Get the sum of all elements in the array total_sum = np.sum(arr) # Print the sum print(total_sum)"},{"prompt":"Parse a string containing HTML markups and extract the text content. html_string = '<html><body><h1>Sample HTML String</h1>Hello there!</body></html>'","completion":"import html # Parse the string parsed_string = html.unescape(html_string) # Extract the text content text_content = parsed_string.split('>')[-1] # Print the content print(text_content)"},{"prompt":"Compare two strings and return the index of the first character that is unequal in the two strings. string1 = \\"Hello world!\\" string2 = \\"Howdy world!","completion":"def get_index_of_first_diff(string1, string2): # Get the length of the strings len_1 = len(string1) len_2 = len(string2) # Get the length of the shorter string len_shorter = min(len_1, len_2) # Compare the two strings character by character for i in range(len_shorter): if string1[i] != string2[i]: # Return the index of the first differing character return i # Get the index of first differing character index = get_index_of_first_diff(string1, string2) # Print the index print(index)"},{"prompt":"Perform a linear search on an array of 10 numbers and return the index for the target number. nums = [2, 8, -4, 1, 0, 5, 3, 9, 6, 10] target_num = 8","completion":"def linear_search(nums, target_num): # Get the length of the array len_nums = len(nums) # Loop through the array to find the index of the target number for i in range(len_nums): if nums[i] == target_num: # Return the index of the target number return i # Get the index of the target number index = linear_search(nums, target_num) # Print the index print(index)"},{"prompt":"Convert an array of tuples of 2 numbers into an array of complex numbers. tuple_array = [(3,4), (5,6), (7,8)]","completion":"import numpy as np # Convert the array of tuples into an array of complex numbers complex_arr = np.array(tuple_array, dtype=complex) # Print the complex array print(complex_arr)"},{"prompt":"Given a list of emails and corresponding info, write a code to keep only the emails and transform the list into a dictionary of emails and corresponding info. my_list = [('john@example.com', 'John Smith', '27'), ('sarah@example.com', 'Sarah Jane', '31'), ('paul@example.com', 'Paul Walker', '45')]","completion":"# Create a dictionary of emails and corresponding info email_dict = {email[0]: email[1:] for email in my_list} # Print the dictionary print(email_dict)"},{"prompt":"Create a list of unique elements from a list of numbers. nums = [1, 1, 2, 3, 3, 4, 4, 5, 6]","completion":"# Create a list of unique elements from given list unique_nums = list(set(nums)) # Print the list print(unique_nums)"},{"prompt":"Write a Python program to parse a date string and display the date in ISO 8601 format. date_string = '21 May 2021'","completion":"from datetime import datetime import re # Parse the date string date = datetime.strptime(date_string, '%d %B %Y') # Convert the date to ISO 8601 format iso_8601 = date.strftime(\\"%Y-%m-%d\\") # Print the ISO 8601 formatted date print(iso_8601)"},{"prompt":"Write a SQL query to retrieve the max and min values from a field. table_name = 'Users' column_name = 'age'","completion":"SELECT MAX(age) AS maximum, MIN(age) AS minimum FROM Users;"},{"prompt":"Create a for loop to traverse a list and print each element in the list in sequence. list_to_traverse = [1,2,3,4,5]","completion":"for item in list_to_traverse: print(item)"},{"prompt":"Using the input string, create a new string that contains all the characters in even indices. my_string = \\"abcdefgh","completion":"# Create an empty string new_string = \\"\\" # Iterate over the even indices for i in range(0, len(my_string), 2): new_string += my_string[i] # Print the new string print(new_string) # prints 'acegi'"},{"prompt":"Add a try-catch block around the code example that catches an exception if it is thrown. with open(\\"myfile.txt\\") as f: for line in f: print(line)","completion":"try: with open(\\"myfile.txt\\") as f: for line in f: print(line) except: print(\\"An exception has been thrown\\")"},{"prompt":"Write a Java program that creates two arrays and prints out the difference in number of elements between them. int[] arr1 = {1, 2, 3, 4, 5}; int[] arr2 = {1, 2, 3};","completion":"public class ArraySizeDiff { public static void main(String[] args) { int[] arr1 = {1, 2, 3, 4, 5}; int[] arr2 = {1, 2, 3}; int diff = arr1.length - arr2.length; System.out.println(\\"Difference in number of elements between the two arrays is: \\" + diff); } }"},{"prompt":"Using the input, create a new list of strings where all strings in the new list have an uppercase first letter. my_list = [\\"hello\\", \\"world\\", \\"how\\", \\"are\\", \\"you?\\"]","completion":"new_list = [] for string in my_list: new_list.append(string.capitalize()) print(new_list) # prints ['Hello', 'World', 'How', 'Are', 'You?']"},{"prompt":"Create a CSS rule to set the div width to 100px.","completion":"div { width: 100px; }"},{"prompt":"Create a regex pattern to match strings having at least 3 digits.","completion":"^d{3,}"},{"prompt":"Write a Ruby statement to check if the given number is even. num = 6","completion":"if num % 2 == 0 puts \\"The number is even\\" end"},{"prompt":"Using the input, classify whether the number is even or odd. num = 5","completion":"if num % 2 == 0 puts \\"The number is even\\" else puts \\"The number is odd\\" end"},{"prompt":"Create an object-oriented JavaScript class to represent a point in two-dimensional space.","completion":"class Point { constructor(x, y) { this.x = x; this.y = y; } distance(other) { let dx = this.x - other.x; let dy = this.y - other.y; return Math.sqrt(dx * dx + dy * dy); } }"},{"prompt":"Create a SQL query to select the top 5 customers whose address is in the USA.","completion":"SELECT TOP 5 customers.* FROM customers WHERE customers.address LIKE '%USA%' ORDER BY customers.name"},{"prompt":"Calculate the following expression using Java: (3^3+11) × (3+3)","completion":"int result = (int)Math.pow(3, 3) + 11 * (3 + 3); // result = 144"},{"prompt":"Complete the following HTML template with appropriate tags: <html> <head> </head> <body> </body> </html>","completion":"<html> <head> <title> Title of page </title> </head> <body> <h1> Header title </h1> <p> This is a sample content of a web page. </p> </body> </html>"},{"prompt":"Suggest a technique to detect plagiarism in programming assignments.","completion":"One technique to detect plagiarism in programming assignments is to compute the similarity between submissions and reference solutions. This can be done by extracting the key pieces of code from submissions, such as functions and loops, and then comparing them against the reference solution. If the extracted pieces of code are more similar than would be expected by chance, it could be an indication of plagiarism."},{"prompt":"Create a python program that takes a string as input and prints the length of the longest substring without repeatingcharacters. \\"abcabcbb","completion":"def find_longest_substring(s): max_length = 0 start = 0 usedChar = {} for i in range(len(s)): if s[i] in usedChar and start <= usedChar[s[i]]: start = usedChar[s[i]] + 1 else: max_length = max(max_length, i - start + 1) usedChar[s[i]] = i return max_length input_string = \\"abcabcbb\\" print(\\"The length of longest substring without repeating characters is: {}\\".format(find_longest_substring(input_string)))"},{"prompt":"Write an HTML code for the following requirements Create an anchor tag with the following text: “Click Here to Learn More”.","completion":"<a href=\\"\\">Click Here to Learn More</a>"},{"prompt":"Create a function in C++ that will sort a given array of integers in ascending order of their values. unsorted_arr = {45, 21, 12, 56, 7, 47, 34}","completion":"#include<iostream> using namespace std; void sort(int arr[], int n){ int i, key, j; for (i = 1; i < n; i++) { key = arr[i]; j = i - 1; while (j >= 0 && arr[j] > key) { arr[j + 1] = arr[j]; j = j - 1; } arr[j + 1] = key; } } // Driver Code int main() { int unsorted_arr[] = {45, 21, 12, 56, 7, 47, 34}; int n = sizeof(unsorted_arr) / sizeof(unsorted_arr[0]); cout << \\"Array before sorting: n\\"; for (int i = 0; i < n; i++) cout << unsorted_arr[i] << \\" \\"; cout << endl; sort(unsorted_arr, n); cout << \\"Array after sorting: n\\"; for (int i = 0; i < n; i++) cout << unsorted_arr[i] << \\" \\"; cout << endl; return 0; }"},{"prompt":"Change the code so it will output the multiplication result when \\"multiply\\" is clicked. <button class=\\"button\\" onclick=\\"calc()\\">Multiply</button> <script> let result; function calc() { // TODO: Output the multiplication result } <\/script>","completion":"<button class=\\"button\\" onclick=\\"calc()\\">Multiply</button> <script> let result; function calc() { result = 4*9 alert(\`The result of the multiplication is: {result}\`) } <\/script>"},{"prompt":"Generate a MySQL query to display all the columns of a table called \\"employee","completion":"SELECT * FROM employee;"},{"prompt":"Create a SQL query to find the employee who is earning the highest salary.","completion":"SELECT name, MAX(salary) FROM employee GROUP BY name;"},{"prompt":"Create a JavaScript snippet to display the current date in the format \\"Monday, DD-MM-YYYY","completion":"let today = new Date(); let options = { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' }; let dateText = today.toLocaleDateString('en-GB', options); console.log(dateText); // Monday, DD-MM-YYYY"},{"prompt":"Generate an expression in R that returns the number of elements in a vector vec_1 <- c(1, 3, 5, 7)","completion":"length(vec_1)"},{"prompt":"Create a java program that checks if a given string has any special characters String str = \\"This is a string!","completion":"public class CheckSpecialChar { public static void main(String[] args) { String str = \\"This is a string!\\"; boolean flag = false; String specialChar = \\"[^a-zA-Z0-9]\\"; if(str.matches(specialChar)) { flag = true; } System.out.println(\\"Does the string contains special character : \\" + flag); } }"},{"prompt":"Create a SQL query to edit the contents of the \\"employee\\" table Update the column \\"salary\\" of the employee with ID = 5","completion":"UPDATE employee SET salary=10000 WHERE id=5;"},{"prompt":"Create a MongoDB query to find all the documents with the \\"status\\" field equal to \\"completed","completion":"db.collection.find({status: \\"completed\\"});"},{"prompt":"Write an HTML code to display the results of a survey Survey Results: - Option A: 40% - Option B: 30% - Option C: 20% - Option D: 10%","completion":"<div class=\\"survey-results\\"> <p>Survey Results:</p> <ul> <li>Option A: 40%</li> <li>Option B: 30%</li> <li>Option C: 20%</li> <li>Option D: 10%</li> </ul> </div>"},{"prompt":"Generate a correct SQL statement to select the employees with their name, gender, age and salary","completion":"SELECT name, gender, age, salary FROM employee;"},{"prompt":"Create two classes 'Circle' and 'Rectangle' in Java which print the circumference and area of their respective shapes.","completion":"class Circle { private double radius; public Circle(double radius) { this.radius = radius; } public double getCircumference() { return 2 * Math.PI * this.radius; } public double getArea() { return Math.PI * this.radius * this.radius; } } class Rectangle { private double width; private double length; public Rectangle(double width, double length) { this.width = width; this.length = length; } public double getCircumference() { return 2*(this.width + this.length); } public double getArea() { return this.width * this.length; } }"},{"prompt":"What is an HTML tag?","completion":"An HTML tag is an element in an HTML document that is used to structure and format the content of the page. Tags are used to create HTML elements like headings, paragraphs, and links. Tags typically contain attributes which provide additional information about the element, and also define how the element's content should be displayed. Tags are surrounded by angle brackets and typically follow the syntax <tag_name attribute=\\"value\\">content</tag_name>."},{"prompt":"Write a function in Java to instantiate an Employee class with a given name and age.","completion":"public class Employee { private String name; private int age; public Employee(String name, int age) { this.name = name; this.age = age; } public String getName() { return name; } public int getAge() { return age; } public void setName(String name) { this.name = name; } public void setAge(int age) { this.age = age; } }"},{"prompt":"Explain the difference between subclasses and superclasses.","completion":"A superclass is a class from which other classes can inherit methods and properties. A subclass is a class that has inherited a superclass' methods and properties. In object-oriented programming (OOP), a class can be both a superclass and a subclass simultaneously. When a class inherits from another class it is said to extend the superclass, thereby creating a subclass. As such, a subclass has all the properties and methods of its superclass, as well as additional properties and methods that are unique to the subclass itself."},{"prompt":"Write a Python program to prompt the user for a string and print the number of unique characters it contains.","completion":"user_string = input(\\"Please enter a string: \\") unique_chars = set() for char in user_string: unique_chars.add(char) print(\\"The string contains\\", len(unique_chars), \\"unique character(s).\\")"},{"prompt":"Create a JavaScript function that takes an array of numbers and returns true if every element is an even number and false otherwise","completion":"function checkEven(array) { for (var i = 0; i < array.length; i++) { if (array[i] % 2 !== 0) { return false; } } return true; }"},{"prompt":"Write a SQL query to retrieve all rows from the table 'movies' whose genre is 'comedy'","completion":"SELECT * FROM movies WHERE genre = 'comedy';"},{"prompt":"Create a class in Python named 'Car' with attributes 'color' and 'make', and methods 'start' and 'stop'.","completion":"class Car: def __init__(self, color, make): self.color = color self.make = make def start(self): print(\\"Car started.\\") def stop(self): print(\\"Car stopped.\\")"},{"prompt":"Given two strings, print the one that is longer. string1 = \\"Hello\\" string2 = \\"World!","completion":"if len(string1) > len(string2): print(string1) else: print(string2)"},{"prompt":"Write a paint program that displays a 10x10 blue square on the screen.","completion":"import tkinter as tk # Create a window root = tk.Tk() # Create a canvas canvas = tk.Canvas(root, width=100, height=100) # Create a blue square canvas.create_rectangle(0, 0, 100, 100, fill=\\"blue\\") # Pack the canvas canvas.pack() # Display the window root.mainloop()"},{"prompt":"Using the turtle module, create a drawing of a triangle. import turtle <noinput>","completion":"import turtle # create an instance of Turtle class my_turtle = turtle.Turtle() my_turtle.speed(0) # draw a triangle my_turtle.forward(100) my_turtle.left(120) my_turtle.forward(100) my_turtle.left(120) my_turtle.forward(100) # finish the drawing my_turtle.done()"},{"prompt":"Construct a dictionary from the provided list of tuples such that the keys and values are switched. tuples = [('Hello', 5), ('World', 10)]","completion":"#Create a new dictionary newDict = {} #Iterate through the list and swap the keys and values for tup in tuples: key, value = tup newDict[value] = key #Print the new dictionary print(newDict)"},{"prompt":"Output the sum of the largest and smallest numbers from the provided list. list2 = [3, 4, 5, 8, 9]","completion":"#Get the largest and smallest numbers and assign them to variables largestNumber = max(list2) smallestNumber = min(list2) #Calculate the sum sumOfExtremes = largestNumber + smallestNumber #Print the sum print(sumOfExtremes)"},{"prompt":"Output the length of the string passed to the function. def getLengthOfString(inputString)","completion":"def getLengthOfString(inputString): #Get the length of the string length = len(inputString) #Return the length of the string return length"},{"prompt":"Replace the placeholder words in the string with the provided words. This is a PLACEHOLDER1 sentence with PLACEHOLDER2 words. placeholder1 = \\"sample\\" placeholder2 = \\"three","completion":"#Replace the words in the string modifiedString = \\"This is a \\" + placeholder1 + \\" sentence with \\" + placeholder2 + \\" words.\\" #Print the modified string print(modifiedString)"},{"prompt":"Create a dictionary such that each element in the list is a key and the respective value is its length. words = ['cat', 'dog', 'elephant']","completion":"#Create a new dictionary wordLengths = {} #Fill in the dictionary with the words as keys and their respective lengths as values for word in words: wordLengths[word] = len(word) #Print the populated dictionary print(wordLengths)"},{"prompt":"Create a method that parses the provided HTML and returns a list of all the <p> tags. <html> <p>This is a test.</p> <a href=\\"\\">link</a> <p>Another test.</p> </html>","completion":"#Create a method to parse the HTML def getPTags(html): #Create an empty list pTags = [] #Iterate over the HTML for line in html.split(\\"n\\"): #Check if the line is a <p> tag if \\"<p>\\" in line: #Add the tag to the list pTags.append(line) #Return the list return pTags #Print the list print(getPTags(html))"},{"prompt":"Create a function that filters the numbers in the list and returns a list of prime numbers only. list3 = [3, 4, 5, 7, 11, 13]","completion":"def primeNums(inputList): #Create an empty list primes = [] #Iterate over the list for num in inputList: #Check if the number is prime isPrime = True for i in range(2, num): if num % i == 0: isPrime = False #Add the number to the list if prime if isPrime: primes.append(num) #Return the list return primes #Print the list print(primeNums(list3))"},{"prompt":"Construct an SQL query to delete records from the \\"users\\" table that have a name of \\"John\\" or \\"David\\".","completion":"DELETE FROM users WHERE name IN ('John', 'David');"},{"prompt":"Depending on the provided boolean value, set the result to 0 or 1. bool1 = False","completion":"#Set the result based on the boolean value if bool1: result = 1 else: result = 0 #Print the result print(result)"},{"prompt":"Write a function to calculate the perimeter of a provided triangle by using its three side lengths.","completion":"def calculatePerimeter(s1, s2, s3): \\"\\"\\"This function will calculate the perimeter of a triangle given its three side lengths\\"\\"\\" #Calculate the perimeter perimeter = s1 + s2 + s3 #Return the perimeter return perimeter"},{"prompt":"Calculate the average of the given two integers. Integer 1: 2 Integer 2: 5","completion":"The average of 2 and 5 is 3.5."},{"prompt":"Provide an example of a Python class and its elements.","completion":"class Car: def __init__(self, color, make, model): self.color = color self.make = make self.model = model def start(self): print(\\"Engine started!\\") ford_mustang = Car('Red', 'Ford', 'Mustang') ford_mustang.start()"},{"prompt":"Use regular expressions to filter words beginning with 't' from a given sentence. Sentence: The quick brown fox jumps over the lazy dog.","completion":"import re sentence = \\"The quick brown fox jumps over the lazy dog.\\" filtered_words = re.findall(r\\"b[tT]w+\\", sentence) print(filtered_words) # Output: ['The', 'that', 'the']"},{"prompt":"Write a code in SQL to select the employee information from 'employee' table where the salary is greater than 2000 and is less than 3000.","completion":"SELECT * FROM employee WHERE salary > 2000 AND salary < 3000;"},{"prompt":"Construct a linked list data structure in C language.","completion":"#include <stdio.h> #include <stdlib.h> // Node of a linked list struct Node { int data; struct Node *next; }; // Function to create a new node struct Node *newnode(int data) { struct Node *temp = (struct Node*)malloc(sizeof(struct Node)); temp->data = data; temp->next = NULL; return temp; } // Function to insert a node at the beginning of the Linked List void insertAtBeginning(struct Node** head, int data) { // Create the new node struct Node* new_node = newnode(data); // Make the next of new node as head node new_node->next = *head; // Move the head to point to the new node *head = new_node; } // Function to insert a node at the end of the Linked List void append(struct Node** head, int data) { struct Node* new_node = newnode(data); // If the Linked List is empty, // then make new_node as head if (*head == NULL) { *head = new_node; return; } // Else traverse to the end of the Linked List struct Node *last = *head; while (last->next != NULL) last = last->next; // Change the next of last node last->next = new_node; return; }"},{"prompt":"Write a code in C to print a given integer in binary. Integer: 10","completion":"#include <stdio.h> void printBinary(unsigned int num) { if (num == 0) printf(\\"0\\"); else { printBinary(num / 2); printf(\\"%d\\", num % 2); } } int main() { int n = 10; printf(\\"The binary representation of %d is: \\", n); printBinary(n); printf(\\"n\\"); return 0; } # Output: The binary representation of 10 is: 1010"},{"prompt":"Replace each character of a string with the next character in alphabetic order.","completion":"def replace_chars(s): chars = list(s) res = \\"\\" for char in chars: res += chr(ord(char) + 1) return res"},{"prompt":"Edit a given JSON string to set a specific value in it. JSON String: { \\"name\\": \\"John Doe\\", \\"age\\": 20, \\"address\\": { \\"street\\": \\"1 Main Street\\", \\"city\\": \\"New York\\" } } Set the age to 25.","completion":"{ \\"name\\": \\"John Doe\\", \\"age\\": 25, \\"address\\": { \\"street\\": \\"1 Main Street\\", \\"city\\": \\"New York\\" } }"},{"prompt":"Create a table that lists the output of the given SQL query. SELECT course_id, COUNT(*) as count FROM students GROUP BY course_id","completion":"course_id | count ----------+------ C1 | 10 C2 | 5 C3 | 3"},{"prompt":"Refactor the following code in C++ to incorporate dynamic memory allocation. #include <stdio.h> int main() { int a[20]; int n = 20; for (int i=0; i<n; i++) scanf(\\"%d\\", &a[i]); return 0; }","completion":"#include <stdio.h> #include <stdlib.h> int main() { int* a; int n = 20; a = (int *)malloc(n * sizeof(int)); for (int i=0; i<n; i++) scanf(\\"%d\\", &a[i]); free(a); return 0; }"},{"prompt":"Edit the following JSON to add a new key. { \\"name\\" : \\"Bob\\", \\"age\\" : 32 }","completion":"{ \\"name\\" : \\"Bob\\", \\"age\\" : 32, \\"profession\\" : \\"dentist\\" }"},{"prompt":"Create an HTML page with a text input box, a submit button and a table to display the results.","completion":"<html> <head> <title>Inputs</title> </head> <body> <form> <input type=\\"text\\" id=\\"inputText\\"> <input type=\\"submit\\" value=\\"Submit\\"> </form> <table> <thead> <tr> <th>Input Text</th> </tr> </thead> <tbody> <tr> <td id=\\"displayValue\\"></td> </tr> </tbody> </table> </body> </html>"},{"prompt":"Create a function in JavaScript to extract the words from a given sentence that contains a specific letter. Sentence: The quick brown fox jumps over the lazy dog Letter: o","completion":"function extractWordsWithLetter(sentence, letter) { let words = sentence.split(' '); let result = []; words.forEach(word => { if (word.includes(letter)) { result.push(word); } }); return result; }"},{"prompt":"Create a C# class that stores student information such as name, age, and classes.","completion":"public class Student { public string name; public int age; public string[] classes; public Student(string name, int age, string[] classes) { this.name = name; this.age = age; this.classes = classes; } }"},{"prompt":"Create an array of items and calculate the average of the items. [1, 5, 9, 8, 2]","completion":"const input = [1, 5, 9, 8, 2]; const average = input.reduce((sum, item) => sum + item) / input.length; console.log(average); // 5"},{"prompt":"Update the code so that it prints out the first ten multiples of 5. for (i=1; i<5; i++) { console.log(i * 2); }","completion":"for (i=1; i<11; i++) { console.log(i * 5); }"},{"prompt":"Create a class named 'Shape' which has a method 'getArea' which returns the area of the shape.","completion":"class Shape { constructor() { } getArea() { return 0; } }"},{"prompt":"Create an array of length 7 and set the values to the first 7 letters of the alphabet.","completion":"const array = ['a', 'b', 'c', 'd', 'e', 'f', 'g'];"},{"prompt":"Answer the following question: what language is HTML typically written in?","completion":"HTML is typically written in a markup language such as XML or XHTML."},{"prompt":"mprove the function below to make it more efficient def swap_case(x): y = \\"\\" for i in x: if i.isupper(): y += i.lower() else: y += i.upper() return y","completion":"def swap_case(x): return x.swapcase()"},{"prompt":"Generate code to remove duplicate characters from a string. string = \\"google","completion":"def remove_duplicates(string): res = \\"\\" for i in string: if i not in res: res = res + i return res"},{"prompt":"Give an example of the binary search algorithm","completion":"def binary_search(arr, target): low = 0 high = len(arr) - 1 while low <= high: mid = (low+high) // 2 # Check if target is present at mid if arr[mid] == target: return mid # If target is greater than mid, ignore left half elif arr[mid] < target: low = mid + 1 # If target is smaller than mid, ignore right half else: high = mid - 1 # If we reach here, then the element was not present return -1"},{"prompt":"Generate a program that finds the sum of all natural numbers from 0 to n","completion":"def find_sum(n): sum = 0 for i in range(n+1): sum += i return sum"},{"prompt":"Change the response to now fulfill the following purpose Find the number of ones in a binary number 101011","completion":"def find_ones(n): count = 0 while n > 0: if n % 10 == 1: count += 1 n //= 10 return count"},{"prompt":"Generate a Java program to sort an array of n elements in ascending order","completion":"public static void sort(int arr[]) { int n = arr.length; // Build heap (rearrange array) for (int i = n / 2 - 1; i >= 0; i--) heapify(arr, n, i); // One by one extract an element from heap for (int i=n-1; i>=0; i--) { // Move current root to end int temp = arr[0]; arr[0] = arr[i]; arr[i] = temp; // call max heapify on the reduced heap heapify(arr, i, 0); } } // To heapify a subtree rooted with node i which is // an index in arr[]. n is size of heap static void heapify(int arr[], int n, int i) { int largest = i; // Initialize largest as root int l = 2*i + 1; // left = 2*i + 1 int r = 2*i + 2; // right = 2*i + 2 // If left child is larger than root if (l < n && arr[l] > arr[largest]) largest = l; // If right child is larger than largest so far if (r < n && arr[r] > arr[largest]) largest = r; // If largest is not root if (largest != i) { int swap = arr[i]; arr[i] = arr[largest]; arr[largest] = swap; // Recursively heapify the affected sub-tree heapify(arr, n, largest); } }"},{"prompt":"Generate a SQL query to select all distinct numbers from a column named 'nums'","completion":"SELECT DISTINCT nums FROM table;"},{"prompt":"Generate a SQL query to update existing row in a table Table = employee Set salary = 5000 where id = 2","completion":"UPDATE employee SET salary = 5000 WHERE id = 2;"},{"prompt":"Modify the code provided so it prints the first 10 prime numbers. def is_prime(n): if n == 1: return False for i in range(2, n): if n % i == 0: return False return True","completion":"def is_prime(n): if n == 1: return False for i in range(2, n): if n % i == 0: return False return True def print_primes(): count = 0 number = 2 while(count != 10): if is_prime(number): print(number) count += 1 number += 1 print_primes()"},{"prompt":"Design a function that takes in an integer and prints the multiplication table till that input number.","completion":"def print_multiplication_table(n): for i in range(1, n+1): for j in range(1, n+1): print(i*j, end=\\" \\") print() print_multiplication_table(n)"},{"prompt":"Create a program that reads a sentence, replaces all spaces with hyphens, and prints the modified sentence. sentence = \\"This is a sentence","completion":"def replace_space_with_hyphen(sentence): return sentence.replace(\\" \\", \\"-\\") print(replace_space_with_hyphen(sentence))"},{"prompt":"Design a function to take a string input and reverse the order of its words. string = \\"This is a sentence","completion":"def reverse_words_order(string): words = string.split(' ') words_reversed = words[::-1] return ' '.join(words_reversed) print(reverse_words_order(string))"},{"prompt":"Create a program to solve a math equation given in a string. equation = \\"6 + 3*2","completion":"def solve_math_equation(equation): return eval(equation) print(solve_math_equation(equation))"},{"prompt":"Create a MySQL query to select all customers who have purchased items from a specific store in the last seven days. store_id = 12345","completion":"SELECT * FROM Customers WHERE store_id = 12345 AND purchases_date > DATE_SUB(CURDATE(), INTERVAL 7 DAY)"},{"prompt":"Write an SQL query to calculate the sum of all prices of items purchased by customers.","completion":"SELECT SUM(price) FROM Purchases;"},{"prompt":"Create an HTML page to display a heading, a table and a button. headline = “List of Products” table_headers = [“Name”, “Price”, “Quantity”]","completion":"<!DOCTYPE html> <html> <head> <title>My Webpage</title> </head> <body> <h1>List of Products</h1> <table> <thead> <tr> <th>Name</th> <th>Price</th> <th>Quantity</th> </tr> </thead> <tbody> <!-- Table Data Here --> </tbody> </table> <button>Submit</button> </body> </html>"},{"prompt":"Write a C++ program to insert an element into a given vector.","completion":"#include <iostream> #include <vector> void InsertElement(std::vector<int> &vec, int element, int index) { vec.insert(vec.begin() + index, element); // Print vector after inserting element std::cout << \\"Vector elements after insertion: \\"; for (int i = 0; i < vec.size(); ++i) std::cout << vec[i] << \\" \\"; std::cout << std::endl; } int main() { // Initialize vector std::vector<int> vec = {1, 2, 3, 4}; // Print vector before inserting element std::cout << \\"Vector elements before insertion: \\"; for (int i = 0; i < vec.size(); ++i) std::cout << vec[i] << \\" \\"; std::cout << std::endl; // Insert element int element = 5; int index = 3; InsertElement(vec, element, index); return 0; }"},{"prompt":"Create a C++ program to count the number of trailing 0s in a given number.","completion":"#include <iostream> int trailing_zeroes(int n) { int cnt = 0; while (n > 0) { if (n % 10 == 0) cnt++; else break; n /= 10; } return cnt; } // Driver code int main() { int num = 102450; std::cout << trailing_zeroes(num); return 0; } // Output : 2"},{"prompt":"Using Java, create a program that takes a list of strings, and returns the longest one. strings = [\\"hello\\", \\"world\\", \\"this\\", \\"is\\", \\"a\\", \\"test\\"]","completion":"public static String getLongestString(String[] strings) { int maxLength = 0; String longestString = null; for (String s: strings) { if (s.length() > maxLength) { maxLength = s.length(); longestString = s; } } return longestString; }"},{"prompt":"mplement a function which will take two strings as input and reverse their order while maintaining the same character at each index. s1 = \\"hello\\" s2 = \\"world","completion":"def reverse_string_order(s1, s2): result = \\"\\" for i in range(len(s1)): result += s2[i] + s1[i] return result"},{"prompt":"Find the bug in the following C++ program and suggest a fix. #include <iostream> using namespace std; int main() { int a = 3; int b = 4; if(a < b) return 0; else return 1; }","completion":"#include <iostream> using namespace std; int main() { int a = 3; int b = 4; if(a < b) return 0; else return 1; } // fix: making it an if-else statement instead of using the return statements if (a < b) { return 0; } else { return 1; }"},{"prompt":"Train a model to classify text into two categories, positive and negative.","completion":"import nltk from sklearn.feature_extraction.text import CountVectorizer from sklearn.model_selection import train_test_split from sklearn.naive_bayes import MultinomialNB # tokenize text def tokenize(text): tokens = nltk.word_tokenize(text) return tokens # build a Bag of Words model countVec = CountVectorizer(tokenizer=tokenize) # load training data trainData, trainLabels = loadTrainingData() # Learn a vocabulary dictionary countVec.fit(trainData) # transform training data into a document-term matrix X_train = countVec.transform(trainData) # split data into training and validation sets X_train, X_valid, y_train, y_valid = train_test_split(X_train, trainLabels, test_size = 0.2, random_state = 0) # train a Multinomial Naive Bayes classifier clf = MultinomialNB().fit(X_train, y_train) # predict sentiment on validation data predicted = clf.predict(X_valid)"},{"prompt":"Suggest the best way to store the following data structure in a MySQL database. [ { \\"id\\": 25, \\"questions\\": [ { \\"question_id\\": 39, \\"question\\": \\"What is the capital of India?\\" } ] } ]","completion":"The best way to store the above data in a MySQL database is to create three tables: 1. A \\"Questions\\" table with the following fields: - id (Primary key) - question 2. An \\"Answers\\" table with the following fields: - id (Primary key) - question_id (Foreign key to the \\"Questions\\" table) 3. Allocations table with the following fields: - id (Primary key) - answer_id (Foreign key to the \\"Answers\\" table) - questions_id (Foreign key to the \\"Questions\\" table) The \\"Questions\\" and \\"Answers\\" table should be related to each other by the \\"question_id\\" field. And the \\"Questions\\" and \\"Answers\\" table should be related to the \\"Allocations\\" table by the \\"question_id\\" and \\"answer_id\\" fields respectively."},{"prompt":"Use Django to create a basic website for a restaurant.","completion":"We can use Django to create a basic website for a restaurant by following the steps below: 1. Design a template for the website using HTML and CSS 2. Create a Django project with the basic layout as given by the template 3. Create views that will be used to render different pages (eg. home page, menu page, contact page, etc.) 4. Create models in the Django project which will store information related to the restaurant, such as menu items, pricing, opening times, etc. 5. Create URLs for each of the views 6. Add the necessary code to link the models and views together 7. Create a form for customers to submit their queries 8. Add necessary functionality to the website, such as a search feature and ordering system"},{"prompt":"Using Java, build a program that will convert a given number from one base to another.","completion":"public static int convertBase(int num, int fromBase, int toBase) { int result = 0; int power = 1; while (num > 0) { result += (num % toBase) * power; power *= fromBase; num /= toBase; } return result; }"},{"prompt":"Create a program in JavaScript that will take a list of numbers and return the first index of the highest value. list = [1, 2, 5, 4, 4]","completion":"function findIndexOfHighestValue(list){ let highest = list[0]; let highestIndex = 0; for (let i=0; i<list.length; i++){ if (list[i] > highest){ highest = list[i]; highestIndex = i; } } return highestIndex; }"},{"prompt":"Use Node.js to create a program which will take an array of strings and remove any duplicate values.","completion":"function dedupeArray(arr){ let uniqueArray = []; arr.forEach(item => { if(uniqueArray.indexOf(item) === -1){ uniqueArray.push(item); } }); return uniqueArray; }"},{"prompt":"Suggest an algorithm in Python that will detect an anomaly in time-series data.","completion":"We can use Gaussian Mixture Models to detect anomalies in time-series data. This method takes the time-series data as input and trains a model using the data. The model defines a probability distribution for the time-series data, and the anomalies are detected as those data points which have a low probability of occurring according to the distribution."},{"prompt":"Create a program in Go that will take an array of integers and return the smallest number.","completion":"func min(numbers []int) int { min := numbers[0] for _, number := range numbers { if min > number { min = number } } return min }"},{"prompt":"Why is using the+= operator more efficient than using a+=b on strings in Java?","completion":"Using the += operator is more efficient on strings than using a+=b in Java because += operator creates only one string object in memory, whereas a+=b creates a new string every time and requires two string objects. This means that using += operator for strings is faster and uses less memory than using a+=b. This is because if we use a+=b then the expression is evaluated as a = new String(a+b). On the other hand when we use +=, then the expression is evaluated as a = a + b."},{"prompt":"Explain how to use Binary Search in Python?","completion":"Binary search is an efficient search algorithm for sorted arrays. In Python, the bisect module can be used for binary search. The bisect.bisect() function finds the position of the number in the list or a place for the number if it is not present. The bisect.bisect_left() function does the same, but carefully chooses its insertion point to the left of any existing entries of the same value. For example, to search for an element in a list, one can use the following code: import bisect def binary_search(list, item): pos = bisect.bisect_left(list, item) if pos != len(list) and list[pos] == item: return pos else: return -1 list = [1, 2, 4, 7, 8] print(binary_search(list, 2)) # Outputs 1"},{"prompt":"w to check if a given number is an Armstrong number in Python?","completion":"#Function to check if a number is an Armstrong number def isArmstrong(number): sum = 0 temp = number while temp > 0: digit = temp % 10 sum += digit ** 3 temp //= 10 if number == sum: return True else: return False #Usage number = 9 if(isArmstrong(number)): print(f\\"{number} is an Armstrong number\\") else: print(f\\"{number} is not an Armstrong number\\")"},{"prompt":"Construct an SQL query that retrieves the first 20 rows from a table.","completion":"SELECT * FROM table_name LIMIT 20;"},{"prompt":"Parse the following text and remove all non-alphanumeric characters Hello#@, this is a te*x&","completion":"text = 'Hello, this is a text' out_text = re.sub('[^a-zA-Z0-9]', '', text) print(out_text)"},{"prompt":"Select the Python data types which can store a sequence of items.","completion":"Sequence data types in Python include lists, tuples and range objects."},{"prompt":"Write a SQL query to find all records from the table 'products' with a price equal to 10.","completion":"SELECT * FROM products WHERE price = 10;"},{"prompt":"Construct a python code to print the following text in reverse. Hello World","completion":"text = 'Hello World' print(text[::-1])"},{"prompt":"Count the number of parameters for the given function. def add_names(name1, name2, name3, name4, name5): names = [name1, name2, name3, name4, name5] return name","completion":"5 parameters."},{"prompt":"Create a program that prints the greatest common divisor between two numbers. num1 = 99 num2 = 77","completion":"def gcd(num1, num2): if(num2 == 0): return num1 else: return gcd(num2, num1 % num2) # Driver code num1 = 99 num2 = 77 print (\\"The GCD of\\", num1, \\"and\\", num2, \\"is\\", gcd(num1, num2))"},{"prompt":"Change the given array to a singly linked list without using a loop. array = [1, 2, 3, 4, 5]","completion":"class Node: def __init__(self, data): self.data = data self.next = None def convertToLinkedList(arr): # Last Node last = None # convert given array to linked list for i in range(len(arr) - 1, -1, -1): # create a new node node = Node(arr[i]) # link existing list with new node node.next = last last = node return node # Driver code array = [1, 2, 3, 4, 5] head = convertToLinkedList(array) while head != None: print(head.data) head = head.next"},{"prompt":"Generate a code to reverse a string without using any loop. Input String = \\"Hello World!","completion":"input_string = 'Hello World!' def reverse_string(input_string): if len(input_string) == 0: return \\"\\" else: return reverse_string(input_string[1:]) + input_string[0] res = reverse_string(input_string) print(res)"},{"prompt":"Write a function that returns the length of the longest common substring between two strings. s1 = 'abcde' s2 = 'abfghe'","completion":"def longest_common_substring(s1, s2): m = len(s1) n = len(s2) # initialize matrix L = [[0 for x in range(n + 1)] for x in range(m + 1)] # To store the length of longest common substring length = 0 # Comparing each character of s1 and s2 for i in range(m + 1): for j in range(n + 1): # If current character of s1 and s2 matches if i == 0 or j == 0: L[i][j] = 0 elif s1[i - 1] == s2[j - 1]: L[i][j] = L[i - 1][j - 1] + 1 length = max(length, L[i][j]) else: L[i][j] = 0 return length # Driver code s1 = 'abcde' s2 = 'abfghe' print(\\"Length of Longest Common Substring is: \\", longest_common_substring(s1, s2))"},{"prompt":"Evaluate the following expression and report the result 3 * (4 + 2) / 5","completion":"5.2"},{"prompt":"Output true if the given string contains the word \\"Hello\\", otherwise output false. \\"Hello world!","completion":"true"},{"prompt":"Print out the product of all the even numbers between 0 and 10","completion":"384"},{"prompt":"Output the Fibonacci sequence up to 50","completion":"0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55"},{"prompt":"Complete the following function to output a reversed string","completion":"def reverse(s): rev = \\"\\" i = len(s) while i > 0: rev += s[ i - 1 ] i = i - 1 return rev"},{"prompt":"Write a JSON script that keeps track of the number of times a user has visited a website.","completion":"{ \\"user1\\": { \\"visit_count\\": 0 }, \\"user2\\": { \\"visit_count\\": 0 } }"},{"prompt":"Given an integer n, write a program to print out the prime numbers up to n.","completion":"def is_prime(n): if n <= 1: return False for i in range(2, int(n**0.5) + 1): if n % i == 0: return False return True def find_prime_numbers(n): primes = [] for i in range(2, n + 1): if is_prime(i): primes.append(i) return primes"},{"prompt":"Given a 2D array of characters, replace each '0' entry with 'x'. [ ['1', '0', '1'], ['0', '1', '0'], ['1', '0', '1'], ]","completion":"[ ['1', 'x', '1'], ['x', '1', 'x'], ['1', 'x', '1'], ]"},{"prompt":"Create a function in SQL to find the maximum salary of an employee.","completion":"CREATE FUNCTION getMaxSalary() RETURNS int BEGIN DECLARE @maxSalary int; SELECT @maxSalary = MAX(salary) FROM employees; RETURN @maxSalary; END"},{"prompt":"Modify the following code to convert it from JavaScript to Java. function getAverage(a, b) { return (a + b) / 2; }","completion":"public float getAverage(float a, float b) { return (a + b) / 2; }"},{"prompt":"Create a PHP script to return whether a given number is divisible by 7","completion":"<?php function isDivisibleBy7(num) { return (num % 7 == 0); } ?>"},{"prompt":"Create a Java class which sorts the given array of numbers. [9, 2, 4, 3, 6, 1]","completion":"class ArraySort { void sort(int arr[]) { int n = arr.length; // One by one move boundary of unsorted subarray for (int i = 0; i < n-1; i++) { // Find the minimum element in unsorted array int min_index = i; for (int j = i+1; j < n; j++) if (arr[j] < arr[min_index]) min_index = j; // Swap the found minimum element with the first element int temp = arr[min_index]; arr[min_index] = arr[i]; arr[i] = temp; } } // Prints the array void printArray(int arr[]) { int n = arr.length; for (int i=0; i<n; ++i) System.out.print(arr[i] + \\" \\"); System.out.println(); } // Driver code to test above public static void main(String args[]) { ArraySort ob = new ArraySort(); int arr[] = {9, 2, 4, 3, 6, 1}; ob.sort(arr); System.out.println(\\"Sorted array\\"); ob.printArray(arr); } }"},{"prompt":"Create a function in JavaScript to sum two numbers.","completion":"function addNumbers(a, b) { return a + b; }"},{"prompt":"Create an HTML page which displays Hello World in the center of the page.","completion":"<!DOCTYPE html> <html> <head> <title>Hello World</title> <style> body { display: flex; justify-content: center; align-items: center; margin: 0; } </style> </head> <body> <h1>Hello World</h1> </body> </html>"},{"prompt":"Turn the following sentence into an imperative sentence. Let's print \\"Hello World","completion":"Print \\"Hello World\\"."},{"prompt":"Compose a program to reverse a list of numbers","completion":"def reverse_nums(num_list): n = len(num_list) for i in range(n//2): num_list[i], num_list[n-i-1] = num_list[n-i-1], num_list[i] return num_list"},{"prompt":"Modify the given code to ensure that the input is a number num = input(\\"Enter a number: \\")","completion":"num = input(\\"Enter a number: \\") try: num = int(num) except ValueError: print(\\"Input must be a number\\")"},{"prompt":"Program a function to remove all the even numbers from an array","completion":"def remove_even(arr): new_arr = [] for num in arr: if num % 2 != 0: new_arr.append(num) return new_arr"},{"prompt":"Modify the code for the given purpose string = input(\\"Enter a string: \\")","completion":"string = input(\\"Enter a string: \\") if not string.isalpha(): print(\\"Input must contain only letters\\")"},{"prompt":"Rewrite the program to get the same output def find_sum(x): sum = 0 for i in range(1,x): if i % 3 == 0 or i % 5 == 0: sum += i return sum","completion":"def find_sum(x): sum = 0 for i in range(1, x): if i % 3 == 0: sum += i elif i % 5 == 0: sum += i return sum"},{"prompt":"Create a program to determine if a number is divisible by another number","completion":"def is_divisible(n, m): if n % m == 0: return True return False"},{"prompt":"Modify the given code to set the third parameter to 0 def foo(x, y, z): print(x, y, z)","completion":"def foo(x, y, z = 0): print(x, y, z)"},{"prompt":"Write a code to encode a given body of text into base64 text=\\"Hello World","completion":"import base64 def encode_base64(text): return base64.b64encode(text.encode()).decode()"},{"prompt":"Write a code to determine if a given list contains a particular element nums=[1,2,3,4]","completion":"def contains(nums, element): return element in nums"},{"prompt":"Write a code to decrypt a given cipher text using the Caesar cipher cipher_text=\\"dfwlrq","completion":"def decrypt_caesar_cipher(cipher_text): alphabet=\\"abcdefghijklmnopqrstuvwxyz\\" output=\\"\\" for char in cipher_text: i=(alphabet.index(char)-3)%26 output+=alphabet[i] return output"},{"prompt":"Write an HTML tag for a blockquote.","completion":"<blockquote> </blockquote>"},{"prompt":"Write a JavaScript function that takes an array and counts the occurence of each element in the array. [1, 4, 2, 4, 1]","completion":"function countOccurences(arr){ let count = {}; arr.forEach(function(i) { count[i] = (count[i]||0) + 1;}); return count; }"},{"prompt":"Create an HTML page that contains two textboxes. The first textbox is for the user to type in their name and the second textbox is for the user to type in their age.","completion":"<html> <head> <title>Text Boxes</title> </head> <body> <form> Name: <input type=\\"text\\" name=\\"name\\" /> <br><br> Age: <input type=\\"text\\" name=\\"age\\" /> <br><br> <input type=\\"submit\\" value=\\"Submit\\"> </form> </body> </html>"},{"prompt":"Analyze the code below and suggest three ways to address the memory leak issue. import os def function(): message = \\"\\" while True: message += \\"a\\" * 1024","completion":"1. Explicitly deallocate any unnecessary memory by using \`del\`: \`del message\` 2. Close any open files or resources by using the \`with\` block for better resource management: \`\`\` with open(\\"file_name\\",\\"w\\") as f: # process the file \`\`\` 3. Avoid using dynamic memory allocation where possible. You could use a fixed-sized string instead of a dynamically-allocated one. For example, you could use a \`char\` array: \`char message[1500000]\`"},{"prompt":"Output the below tree structure in Python.","completion":"print(' * ') print(' *** ') print('*****')"},{"prompt":"dentify the correct data type for the value \\"37.45\\".","completion":"float"},{"prompt":"Create a function in C++ to print the Fibonacci numbers between 0 and 50.","completion":"#include <iostream> void print_fibonacci(int n) { int first = 0, second = 1, next; while (first <= n) { std::cout << first << \\" \\"; next = first + second; first = second; second = next; } } int main () { int n = 50; print_fibonacci(n); return 0; }"},{"prompt":"Explain how the Naive Bayes classifier works.","completion":"The Naive Bayes classifier is a probabilistic learning model that is based on the Bayes' theorem. It is a supervised learning algorithm that uses prior probabilities and uses it to observe the relationship between the dependent variable and the independent variable. This algorithm assumes that the different features are independent of each other, which is known as the \\"naive\\" assumption. It then computes the posterior probabilities of the target variable given the feature inputs, which is then used to classify the observation into one of the classes."},{"prompt":"Write a function that sorts an array of strings in ascending order based on the number of distinct characters in each string.","completion":"def sort_by_distinct_characters(strings): strings.sort(key=lambda x: len(set(list(x)))) return strings"},{"prompt":"Take an array of integers and return true if there is a triplet whose sum is equals to the given target. arr = [1, 4, 45, 6, 10, -8], target = 16","completion":"def find_triplet_sum(arr, target): arr.sort() for i in range(0, len(arr)-2): left = i + 1 right = len(arr) - 1 while left < right: curr_sum = arr[i] + arr[left] + arr[right] if curr_sum == target: return True elif curr_sum < target: left += 1 else: right -= 1 return False"},{"prompt":"Compile a function that checks if a number is prime. Output true if prime, false if not.","completion":"def is_prime(num): # form 2 to num-1 for i in range(2, num): # percentage to check, output False if divisible by any number if num % i == 0: return False return True"},{"prompt":"Take an array of strings and return a new array containing only the strings with the longest length.","completion":"def longest_strings(str_arr): longest = 0 strings = [] for string in str_arr: if len(string) > longest: strings = [string] longest = len(string) elif len(string) == longest: strings.append(string) return strings"},{"prompt":"Output the longest consecutive character string in a given string.","completion":"def longest_consecutive_str(s): longest_str = \\"\\" cur_str = \\"\\" for char in s: if not cur_str or char == cur_str[-1]: cur_str += char else: if len(cur_str) > len(longest_str): longest_str = cur_str cur_str = char if len(cur_str) > len(longest_str): longest_str = cur_str return longest_str"},{"prompt":"Create a function that takes a matrix (MxN array) and returns the transposed matrix.","completion":"def transpose(matrix): tr_matrix = [[None for i in range(len(matrix))] for j in range(len(matrix[0]))] for i, row in enumerate(matrix): for j, col in enumerate(row): tr_matrix[j][i] = col return tr_matrix"},{"prompt":"Take an array of strings and a character and return an array containing only the strings containing the given character.","completion":"def filter_by_character(str_arr, char): filtered_arr = [] for string in str_arr: if char in string: filtered_arr.append(string) return filtered_arr"},{"prompt":"Construct an SQL query to read the contents of a table called \\"users\\".","completion":"SELECT * FROM users;"},{"prompt":"Create a web page with a login form that has 2 input fields.","completion":"<!DOCTYPE html> <html lang=\\"en\\"> <head> <meta charset=\\"UTF-8\\"> <meta name=\\"viewport\\" content=\\"width=device-width, initial-scale=1.0\\"> <title>My Login Page</title> </head> <body> <form action=\\"/login\\" method=\\"post\\"> <label for=\\"username\\">Username:</label><br> <input type=\\"text\\" id=\\"username\\" name=\\"username\\" placeholder=\\"Username\\"><br> <label for=\\"password\\">Password:</label><br> <input type=\\"password\\" id=\\"password\\" name=\\"password\\" placeholder=\\"Password\\"><br><br> <input type=\\"submit\\" value=\\"Submit\\"> </form> </body> </html>"},{"prompt":"Using Numpy, create an array of size 10 and fill it with random integer numbers between 0 and 9.","completion":"import numpy as np arr = np.random.randint(low=0, high=10, size=10)"},{"prompt":"mplement a sorting algorithm which takes an array of integers as input and sorts it in ascending order. [34, 19, 42, -9, 2018, 0, 105]","completion":"def sorting_algorithm(arr): for i in range(len(arr)-1): for j in range(i+1, len(arr)): if arr[i] > arr[j]: arr[i], arr[j] = arr[j], arr[i] return arr # Test arr = [34, 19, 42, -9, 2018, 0, 105] print(sorting_algorithm(arr)) # [-9, 0, 19, 34, 42, 105, 2018]"},{"prompt":"Create a class called \\"Computer\\" with two attributes \\"name\\" and \\"model\\" and two methods \\"get_name\\" and \\"get_model\\".","completion":"class Computer: def __init__(self, name, model): self.name = name self.model = model def get_name(self): return self.name def get_model(self): return self.model"},{"prompt":"Create a dictionary of all the capital cities of Europe as key-value pairs.","completion":"europe_capitals = { 'France': 'Paris', 'Germany': 'Berlin', 'Russia': 'Moscow', 'Greece': 'Athens', 'Norway': 'Oslo', 'Denmark': 'Copenhagen', 'Italy': 'Rome', 'Poland': 'Warsaw', 'Spain': 'Madrid', 'Sweden': 'Stockholm' }"},{"prompt":"Generate a 10 character random user password with at least one Upper Case letter, one lower case letter, one number, and one special character.","completion":"import random import string def generate_password(length): char_types = list(string.ascii_lowercase + string.ascii_uppercase + string.digits + string.punctuation) password = [] for _ in range(length): ch = random.choice(char_types) while ch in password: ch = random.choice(char_types) password.append(ch) return ''.join(password) password = generate_password(10) print(password) # e.W8.vHc2e"},{"prompt":"Generate a 4 by 4 multiplication table.","completion":"for i in range(1, 5): for j in range(1, 5): print(i*j, end=\\"t\\") print() # Output 1 2 3 4 2 4 6 8 3 6 9 12 4 8 12 16"},{"prompt":"Design a web page with a top navigation bar and 2 different color sidebars.","completion":"<!DOCTYPE html> <html lang=\\"en\\"> <head> <meta charset=\\"UTF-8\\"> <meta name=\\"viewport\\" content=\\"width=device-width, initial-scale=1.0\\"> <title>My Web Page</title> <style> body { margin: 0; padding: 0; } .top-nav { position: fixed; background-color: #222; left: 0; top: 0; width: 100%; text-align: center; } .sidebar-left { float: left; width: 25%; height: 100%; background-color: #f1f1f1; } .sidebar-right { float: right; width: 25%; height: 100%; background-color: #ccc; } .main { margin-left: 25%; margin-right: 25%; } </style> </head> <body> <nav class=\\"top-nav\\"> <ul> <li>{Your navigation items here}</li> </ul> </nav> <div class=\\"sidebar-left\\"></div> <div class=\\"main\\"> {Your main content here} </div> <div class=\\"sidebar-right\\"></div> </body> </html>"},{"prompt":"Given a target number, find two numbers in the list whose sum is equal to the target number. list = [2, 7, 11, 15], target = 9","completion":"list = [2, 7, 11, 15] target = 9 for i in range(0, len(list) - 1): for j in range(i + 1, len(list)): if list[i] + list[j] == target: print('The two numbers in the list whose sum is equal to the target number are %d and %d' %(list[i], list[j]))"},{"prompt":"Given an array of numbers, find the maximum product of any three numbers in the array. arr = [2, 5, 6, 9, -2, -7, -1]","completion":"arr = [2, 5, 6, 9, -2, -7, -1] # create an empty list to store the products of all triplets triplets = [] # loop through the array for i in range(len(arr)): for j in range(i+1,len(arr)): for k in range(j+1,len(arr)): # calculate and append the product of each triplet to the list triplets.append(arr[i]*arr[j]*arr[k]) # get the maximum product from the list max_product = max(triplets) print(\\"The maximum product of any three numbers in the array is:\\", max_product)"},{"prompt":"Extract a character's count from a given string. string = \\"this is a sample string","completion":"def count_characters(string): '''This function takes a string as argument and returns a dictionary that contains the count of characters in the given string.''' # create an empty dictionary char_count = {} # iterate over the characters and add to dictionary if not already present for char in string: if char not in char_count: char_count[char] = 1 else: # Increment the count if already present char_count[char] += 1 return char_count"},{"prompt":"Concatenate two given strings and return the result. string1 = \\"Hello \\", string2 = \\"World","completion":"string1 = \\"Hello \\" string2 = \\"World\\" # use '+' operator for string concatenation result_string = string1 + string2 print(\\"The concatenated string is:\\", result_string)"},{"prompt":"Given an array of integers, find the longest subarray with total sum less than the given sum. arr = [1, -2, 2, 4, 3], sum = 3","completion":"arr = [1, -2, 2, 4, 3] sum = 3 # create an empty list to store the longest subarray longest = [] # loop through the array for i in range(len(arr)): # set the sum of current subarray to 0 curr_sum = 0 # another loop to check if any subarray of the array # has a sum less than the given sum for j in range(i, len(arr)): curr_sum += arr[j] # if any subarray is found update the longest list if curr_sum < sum: longest = arr[i: j + 1] print(\\"The longest subarray with total sum less than the given sum is:\\", longest)"},{"prompt":"Sort a given array in ascending order based on the second element of each array element pair. arr = [(3, 5), (4, 1), (1, 4), (2, 2)]","completion":"arr = [(3, 5), (4, 1), (1, 4), (2, 2)] # sort the array based on the second element in each pair arr.sort(key=lambda x: x[1]) print(\\"The array sorted in ascending order based on the second element of each array element pair is:\\", arr)"},{"prompt":"Write a Java program to remove n characters from a given string, starting from a specified position. str = \\"This is a sample string\\" n = 5 pos = 8","completion":"public static String removeCharAt(String s, int pos, int n) { return s.substring(0, pos) + s.substring(pos + n); } // Driver Code public static void main(String[] args) { String str = \\"This is a sample string\\"; int n = 5; int pos = 8; System.out.println(removeCharAt(str, pos, n)); }"},{"prompt":"Write a SQL query to find the 10 longest surnames from a given table of surnames.","completion":"SELECT surname, LENGTH(surname) FROM table ORDER BY LENGTH(surname) DESC LIMIT 10;"},{"prompt":"Write a snippet of code for looping over a list of numbers. myList = [1, 2, 3, 4]","completion":"for x in myList: print(x)"},{"prompt":"Given a list of student records, write a Python code snippet to find all the students who scored above 80. studentList = [ {'name': 'John', 'score': 80}, {'name': 'Jane', 'score': 90}, {'name': 'Tom', 'score': 75}, {'name': 'Eric', 'score': 85} ]","completion":"highScoringStudents = [student for student in studentList if student['score'] > 80]"},{"prompt":"Create a function to check if the two strings can be made equal by replacing the letters with asterisks in the same order. String s1 = \\"aaabbcc\\"; String s2 = \\"a*a*b*c*\\";","completion":"public boolean canBeEqual(String s1, String s2) { if (s1.length() != s2.length()) return false; int len = s1.length(); for (int i = 0; i < len; i++) { if (s1.charAt(i) != s2.charAt(i) && s2.charAt(i) != '*') return false; } return true; }"},{"prompt":"Write a JavaScript program to parse and evaluate a simple mathematical expression entered as a string. String str = \\"2 + 3 * 4 - 5 / 3\\";","completion":"function evaluateExpression(str) { let expression = str.split(' ').map(el => { if (el === '+' || el === '-' || el === '*' || el === '/') { return el; } return parseInt(el); }); let stack = []; let result; for (let i = 0; i < expression.length; i++) { let el = expression[i]; if (typeof el === 'number') { stack.push(el); } else { let secondOperand = stack.pop(); let firstOperand = stack.pop(); switch (el) { case '+': result = firstOperand + secondOperand; break; case '-': result = firstOperand - secondOperand; break; case '*': result = firstOperand * secondOperand; break; case '/': result = firstOperand / secondOperand; break; } stack.push(result); } } return stack.pop(); } console.log(evaluateExpression(\\"2 + 3 * 4 - 5 / 3\\"));"},{"prompt":"Create a SQL query to find the first name, last name, and the total number of orders placed for all customers, sorted by Number of orders in descending order.","completion":"SELECT c.first_name, c.last_name, COUNT(o.customer_id) as num_orders FROM customers c JOIN orders o WHERE c.id = o.customer_id GROUP BY c.id ORDER BY num_orders DESC;"},{"prompt":"Create a SQL query to get the names of the customers who have placed orders more than 3 times.","completion":"SELECT c.first_name, c.last_name FROM customers c JOIN orders o WHERE c.id = o.customer_id GROUP BY c.id HAVING COUNT(o.customer_id) > 3 ORDER BY c.first_name ASC;"},{"prompt":"Calculate the total number of unique elements in this array. array = [[1, 1], [2, 2], [3, 3], [4, 4]]","completion":"total_items = len(array) unique_items = len(set(sum(array, []))) total_unique_items = total_items - unique_items print(total_unique_items) # Output: 4"},{"prompt":"Parse this HTML document and print out the text inside the first <h1> tag. html_doc = \\"<html><head><title>Sample Website</title></head><body><h1>Hello World!</h1><p>This is a sample website.</p><ul><li>Item 1</li><li>Item 2</li><ul></body></html>","completion":"from bs4 import BeautifulSoup soup = BeautifulSoup(html_doc, 'html.parser') h1_text = soup.find(\\"h1\\").text print(h1_text) # Output: Hello World!"},{"prompt":"Using the comment as a guide, insert a for loop in the following code to print out all numbers from 0 to 10. # TODO: Insert a for loop here","completion":"for i in range(0, 11): print(i)"},{"prompt":"Find the longest palindromic substring of this string. string = \\"carrace","completion":"def longest_palindrome_substring(string): n = len(string) t = [[False for _ in range(n)] for _ in range(n)] max_length = 1 i = 0 while (i < n): t[i][i] = True i = i + 1 start = 0 i = 0 while i < n - 1: if (string[i] == string[i + 1]): t[i][i + 1] = True start = i max_length = 2 i = i + 1 k = 3 while k <= n: i = 0 while i < (n - k + 1): j = i + k - 1 if (t[i + 1][j - 1] and string[i] == string[j]): t[i][j] = True if (k > max_length): start = i max_length = k i = i + 1 k = k + 1 longest_palindrome = string[start:start+max_length] return longest_palindrome print(longest_palindrome_substring(string)) # Output: carrac"},{"prompt":"Group the elements in this array into pairs and print them. arr = [1, 2, 3, 4, 5]","completion":"i = 0 while i < len(arr): pair = (arr[i], arr[i+1]) print(pair) i += 2 # Output: (1, 2) (3, 4) (5, None)"},{"prompt":"Write a function in Python to sort this dictionary by values. my_dict = {\\"Jerry\\": 10, \\"Marcus\\": 3, \\"Hanna\\": 5}","completion":"def sort_dict_by_values(d): sorted_dict = dict(sorted(d.items(), key=lambda x: x[1])) return sorted_dict print(sort_dict_by_values(my_dict)) # Output: {'Marcus': 3, 'Hanna': 5, 'Jerry': 10}"},{"prompt":"Flatten this nested list into a single list. nested_list = [[1,2], [3,4], [5,6]]","completion":"import itertools flattened_list = list(itertools.chain.from_iterable(nested_list)) print(flattened_list) # Output: [1, 2, 3, 4, 5, 6]"},{"prompt":"Create a set from this list where no duplicates will be present. my_list = [1, 2, 1, 2, 3, 4]","completion":"my_set = set(my_list) print(my_set) # Output: {1, 2, 3, 4}"},{"prompt":"Generate all possible permutations of this list. my_list = [1, 2, 3]","completion":"from itertools import permutations permutation_list = list(permutations(my_list)) print(permutation_list) # Output: [(1, 2, 3), (1, 3, 2), (2, 1, 3), (2, 3, 1), (3, 1, 2), (3, 2, 1)]"},{"prompt":"Use regex to extract words from the sentence 'Some of my favorite words are pencil, dinosaur, and coffee.'","completion":"var words = 'Some of my favorite words are pencil, dinosaur, and coffee.'; var result = words.match(/[a-zA-Z]+/g); console.log(result); // Result: [\\"Some\\", \\"of\\", \\"my\\", \\"favorite\\", \\"words\\", \\"are\\", \\"pencil\\", \\"dinosaur\\", \\"and\\", \\"coffee\\"]"},{"prompt":"Design a function in Python to automate the extraction of emails from a single HTML page. <html> <body> Janice's email is janice@example.com, and Susie's is susie@example.com. </body> </html>","completion":"def extract_emails(html_page): emails = [] soup = BeautifulSoup(html_page) for a in soup.find_all('a'): if a.get('href') and (a.get('href').startswith('mailto:')): emails.append(a.get('href')[7:]) return emails # Usage page = '<html> <body> Janice's email is janice@example.com, and Susie's is susie@example.com. </body> </html>' emails = extract_emails(page) print(emails) # Output: ['janice@example.com', 'susie@example.com']"},{"prompt":"Given an array of integers, write a program in JavaScript to find the sum of the elements of the given array?","completion":"let array = [2,4,5,7,1]; let sumOfArrayElements = 0; for(let i = 0; i < array.length; i++) { sumOfArrayElements += array[i]; } console.log(sumOfArrayElements); // Output: 19"},{"prompt":"Write a Python script which checks if an input string is a palindrome.","completion":"def is_palindrome(input_string): input_string = input_string.lower() if len(input_string) == 0: return False if len(input_string) == 1: return True if input_string[0] == input_string[-1]: return is_palindrome(input_string[1:-1]) return False # Usage string = 'RADAR' result = is_palindrome(string) print(result) # Output: True"},{"prompt":"Design a function in Python to toggle whether a given HTML tag has a given class. <div class=\\"myClass\\">Hello world</div>","completion":"def toggle_class(html_string, tag, tag_class): soup = BeautifulSoup(html_string, 'html.parser') tag_html = soup.find(tag) if tag_html: classes = tag_html.get('class') if classes and tag_class in classes: classes.remove(tag_class) else: classes.append(tag_class) tag_html['class'] = classes return soup.decode() # Usage html_string = '<div class=\\"myClass\\">Hello world</div>' tag = 'div' tag_class = 'myClass' new_html_string = toggle_class(html_string, tag, tag_class) print(new_html_string) # Output: <div>Hello world</div>"},{"prompt":"Design a function in Python to format a given string as a URL slug. string = \\"This is a sample string to be converted","completion":"def format_as_slug(string): slug = string.lower() slug = slug.strip() slug = slug.replace(' ', '-') slug = re.sub('[^a-zA-Z0-9_-]', '', slug) return slug # Usage string = \\"This is a sample string to be converted\\" result = format_as_slug(string) print(result) # Output: this-is-a-sample-string-to-be-converted"},{"prompt":"Create a script in JavaScript to sort the elements of an array in ascending order.","completion":"let array = [1, 9, 4, 2, 5, 7]; let sortedArray = array.sort(function(a, b){return a-b}); console.log(sortedArray); // Output: [1, 2, 4, 5, 7, 9]"},{"prompt":"Build a class in Python with three methods.","completion":"class MyClass: def __init__(self): # initialization code self.data = [] self.count = 0 def add_data(self, data_element): # add data to a list self.data.append(data_element) self.count += 1 def get_data_count(self): # return number of data elements return self.count"},{"prompt":"Compile the given C++ code. #include <iostream> using namespace std; int main() { cout << \\"Hello World!\\"; return 0; }","completion":"g++ file.cpp -o file"},{"prompt":"Add a try-catch block to the given code snippet. def divide(num1, num2): return num1 / num2","completion":"def divide(num1, num2): try: return num1 / num2 except: print('Error: Unable to perform division')"},{"prompt":"Create a stored procedure in SQL for selecting all the records from a customers table.","completion":"CREATE PROCEDURE select_customers AS BEGIN SELECT * FROM customers; END;"},{"prompt":"Explain what is meant by a backtracking algorithm.","completion":"A backtracking algorithm is an algorithmic technique that is used to find all (or some) solutions to a problem by incrementally building a solution and testing it against the given constraints. If the solution is not feasible or the constraints are not satisfied, the algorithm takes a step back and explores a different path of solution construction. The process continues until a solution is found or all the possibilities are exhausted."},{"prompt":"Fix the following code so that it works without errors. \`\`\` def remove_characters(name, characters): for c in characters: name.replace(c, '') return name name = \\"Alice\\" characters = [\\"A\\", \\"e\\"] \`\`\`","completion":"\`\`\` def remove_characters(name, characters): for c in characters: name = name.replace(c, '') return name name = \\"Alice\\" characters = [\\"A\\", \\"e\\"] \`\`\`"},{"prompt":"Sort the list of numbers by increasing order. [4, 6, 0, 1, 7, 9]","completion":"[0, 1, 4, 6, 7, 9]"},{"prompt":"Write the code for a function that takes two parameters n and m and returns the sum of the first n odd integers starting with m.","completion":"def sum_of_odd_integers(n,m): total_sum = 0 for i in range(m,m+(2*n-1),2): total_sum += i return total_sum"},{"prompt":"Determine how many elements in the list are greater than zero. [2, -1, -5, 6, 7]","completion":"4"},{"prompt":"Write the code to create a one-dimensional array and initialize it with random numbers of length 4.","completion":"import random def create_random_array(): lst = [] for i in range(4): lst.append(random.randint(1,10)) return lst"},{"prompt":"Write the code to produce a new array that includes all elements from two given arrays.","completion":"def merge_two_arrays(arr1, arr2): merged_arr = arr1 + arr2 return merged_arr"},{"prompt":"Create a class with the name \\"Animal\\" and add the methods \\"make_sound\\" and \\"eat\\".","completion":"class Animal: def make_sound(self): \\"\\"\\"Makes a sound specific to the animal.\\"\\"\\" pass def eat(self): \\"\\"\\"Eats food.\\"\\"\\" pass"},{"prompt":"Connect to a remote database using a JDBC connection. host:localhost port: 3306 username: user password:password database: sampledb","completion":"import java.sql.Connection; import java.sql.DriverManager; String host = \\"localhost\\"; int port = 3306; String username = \\"user\\"; String password = \\"password\\"; String database = \\"sampledb\\"; String connectionString = \\"jdbc:mysql://\\"+host+\\":\\"+port+\\"/\\"+database; Connection connection = DriverManager.getConnection(connectionString , username, password);"},{"prompt":"Find the inverse of the given matrix [ [1, 2], [3, 4] ]","completion":"# Find the inverse of the given matrix A = [[1,2], [3,4]] inverse_A = [[round(A[1][1]*A[0][0] - A[0][1]*A[1][0]), round(-A[1][0]*A[0][0] + A[0][1]*A[1][1])], [round(-A[1][1]*A[0][1] + A[0][0]*A[1][0]), round(A[1][1]*A[0][1] - A[0][0]*A[1][0])]] print(inverse_A) # [[4,-2],[-3,1]]"},{"prompt":"Replace words with corresponding synonyms in the given text text: \\"The cat is lazy and likes to sleep.\\" word: \\"sleep\\" synonym: \\"nap","completion":"# Replace words with corresponding synonyms in the given text text = \\"The cat is lazy and likes to sleep.\\" # Replace the word text = text.replace(\\"sleep\\", \\"nap\\") print(text) # \\"The cat is lazy and likes to nap.\\""},{"prompt":"Write an assembly language program to generate a Fibonacci series with n number of elements.","completion":".section __DATA, \\"rw\\" arraylength: .int 2 array: .int 0, 1 .text .global _start _start: mov r1, #0 loop: sub r2, r1, #1 add r3, array, r2 ldr r2, [r3] sub r3, r1, #2 add r4, array, r3 ldr r3, [r4] add r5, r2, r3 add r3, array, r1 str r5, [r3] ldr r1, =arraylength add r2, r1, #1 str r1, =arraylength cmp r1, r2 bne loop"},{"prompt":"Write a Swift code to split a string into an array of strings by a specific separator. let string = \\"Hello, World!\\" let separator = \\",","completion":"let string = \\"Hello, World!\\" let separator = \\",\\" let array = string.components(separatedBy: separator) print(array) // [\\"Hello\\", \\" World!\\"]"},{"prompt":"Write a MATLAB code to count how many element in an array is greater than a given number. array = [4, 5, 2, 8, 9]; number = 6;","completion":"array = [4, 5, 2, 8, 9]; number = 6; % Count the number of elements in the array that are greater than the given number count = 0; for i=1:length(array) if array(i) > number count = count + 1; end end disp(count); % Output: 2"},{"prompt":"Create a SQL query gives the total counts of a particular type of traffic on a given website","completion":"SELECT COUNT(*) FROM traffic WHERE type = 'website' AND date = '<date>'"},{"prompt":"Find the sum of the first 10 positive integers","completion":"The sum of the first 10 positive integers is 55."},{"prompt":"Develop a code to get the current date and time and print it","completion":"from datetime import datetime def get_current_datetime(): # Get the current date and time current_datetime = datetime.now() # Print the current date and time print(\\"Current date and time:\\", current_datetime) # Call the function get_current_datetime()"},{"prompt":"Generate a Huffman code for a given set of symbols and probabilities Symbols: ['A', 'B', 'C', 'D'] Probabilities: [0.2, 0.3, 0.3, 0.2]","completion":"A: 00 B: 01 C: 10 D: 11"},{"prompt":"Suggest a machine learning algorithm suitable for predicting the next seven days of weather","completion":"A suitable machine learning algorithm for predicting the next seven days of weather would be an Long Short Term Memory (LSTM) Recurrent Neural Network (RNN). An LSTM RNN can be trained on historical weather data to learn the patterns and relationships between various weather variables. By utilizing these patterns and relationships, the model can then make predictions about the next seven days of weather."},{"prompt":"Suggest an optimisation algorithm for a minimisation problem","completion":"A suitable optimisation algorithm for a minimisation problem is Gradient Descent. Gradient Descent works by calculating the gradient of the cost function with respect to the input variables. This gradient is then used to update the input variables in order to reduce the cost. The process is repeated until an optimum value is reached."},{"prompt":"Write a python code to insert a new node at the head of a linked list","completion":"# Node class class Node: # Function to initialise the node object def __init__(self, data): self.data = data # Assign data self.next = None # Initialize next as null # Linked List class class LinkedList: # Function to initialize head def __init__(self): self.head = None # Function to insert a new node at the beginning def insert_at_head(self, new_data): # Create a new node new_node = Node(new_data) # update the new nodes next to old head new_node.next = self.head # update head to new node self.head = new_node"},{"prompt":"Given a range of numbers, write a python program to find the sum of the elements within that range. range: 1 to 10","completion":"def sum_range(start, end): res = 0 for i in range(start, end+1): res += i return res sum_range(1, 10)"},{"prompt":"Decompose the following code into two different functions. def calculateMinimumDifference(nums): if len(nums) <= 1: return 0 min_diff = float('inf') for x in range(1, len(nums)): min_diff = min(min_diff, abs(nums[x] - nums[x-1])) return min_diff","completion":"def calculate_diff(arr): return abs(arr[0] - arr[1]) def calculate_minimum_difference(nums): if len(nums) <= 1: return 0 min_diff = float('inf') for x in range(1, len(nums)): min_diff = min(min_diff, calculate_diff(nums[x-1:x+1])) return min_diff"},{"prompt":"Count and return the number of lowercase and uppercase characters in a given string. my_str = \\"Hello World!","completion":"def count_cases(s): num_lower = 0 num_upper = 0 for char in s: if char.islower(): num_lower += 1 elif char.isupper(): num_upper += 1 return num_lower, num_upper"},{"prompt":"Create a function that takes a list of strings as an argument and returns a list containing only non-duplicate strings. my_list = [\\"Apple\\", \\"Orange\\", \\"Grapes\\", \\"Apple\\", \\"Watermelon\\"]","completion":"def remove_duplicates(arr): final_list = [] for i in arr: if i not in final_list: final_list.append(i) return final_list"},{"prompt":"What is the unit of measurement for the average speed of a car?","completion":"The unit of measurement for the average speed of a car is kilometers per hour (km/h) or miles per hour (mph)."},{"prompt":"Create a SQL query that returns the records with the highest salary from the Employees table. Employees table columns: id | name | salary 1 | John | 120000 2 | Jane | 150000 3 | Jack | 160000","completion":"SELECT * FROM Employees ORDER by Salary DESC LIMIT 1;"},{"prompt":"Create a SQL query that returns the names and salaries of all employees who are earning more than 100,000. Employees table columns: id | name | salary 1 | John | 120000 2 | Jane | 150000 3 | Jack | 160000","completion":"SELECT name, salary FROM Employees WHERE salary > 100000;"},{"prompt":"Create a CSS stylesheet for a webpage that centers the heading and makes the background color gray.","completion":"body { background-color: gray; } h1 { text-align: center; }"},{"prompt":"Rewrite the following code segment in C#. for (i = 0; i < n; i++) { j = j + i; }","completion":"int j = 0; for (int i = 0; i < n; i++) { j += i; }"},{"prompt":"Parse the following XML document and print its content. <people> <person> <name>John Doe</name> <age>45</age> </person> <person> <name>Jane Doe</name> <age>32</age> </person> </people>","completion":"Name: John Doe Age: 45 Name: Jane Doe Age: 32"},{"prompt":"Create an array of descending numbers starting from 10 to 1 using a for loop.","completion":"numberArray = [] for x in range(10, 0, -1): numberArray.append(x) print(numberArray) # [10, 9, 8, 7, 6, 5, 4, 3, 2, 1]"},{"prompt":"w would you implement a function to determine if a number is even or odd in Python?","completion":"def even_odd(number): if number % 2 == 0: print(\\"Even\\") else: print(\\"Odd\\")"},{"prompt":"Create a Flask route for handling GET requests with the path \\"/hello\\".","completion":"from flask import Flask app = Flask(__name__) @app.route(\\"/hello\\", methods=[\\"GET\\"]) def hello(): return \\"Hello!\\""},{"prompt":"Modify the following HTML to create a link that opens in a new window. <a href=\\"www.example.com\\">Example Link</a>","completion":"<a href=\\"www.example.com\\" target=\\"_blank\\">Example Link</a>"},{"prompt":"Write a JavaScript code to traverse through a given 2D array. [ [1, 2], [3, 4], [5, 6] ]","completion":"function traverse2DArray(arr) { for(let i=0; i<arr.length; i++) { for(let j=0; j<arr[i].length; j++) { console.log(arr[i][j]); } } }"},{"prompt":"Create a print statement in Python to print the first 5 elements in a list. [2, 3, 4, 5, 6, 7, 8]","completion":"print(list[:5])"},{"prompt":"w do you pass a parameter to a function in JavaScript?","completion":"function foo(param) { // do something with param } foo(param); // pass the parameter here"},{"prompt":"w can you make an AJAX request using jQuery?","completion":".ajax({ url: \\"test.html\\", context: document.body }).done(function() { ( this ).addClass( \\"done\\" ); });"},{"prompt":"Modify the code so that it prints \\"Python is the best language\\" five times. for i in range(10): print(\\"Python is great!\\")","completion":"for i in range(5): print(\\"Python is the best language!\\")"},{"prompt":"Write an SQL query that retrieves all rows from the \\"Employees\\" table where the salary is above 30000.","completion":"SELECT * FROM Employees WHERE salary > 30000;"},{"prompt":"Modify the program so that the \\"count\\" variable counts from 0 to 10 11. count = 0 while count < 10: print(count)","completion":"count = 0 while count <= 10: print(count) count = count + 1"},{"prompt":"Rewrite the code as a single line with a one-line lambda function. def square(x): return x * x","completion":"square = lambda x: x * x"},{"prompt":"Write a Python program to compare two lists and print the elements which are not common between the two. list_a = [1, 2, 3, 4, 5] list_b = [3, 4, 5, 6, 7]","completion":"list_a = [1, 2, 3, 4, 5] list_b = [3, 4, 5, 6, 7] not_common_elements = [i for i in list_a if not(i in list_b)] + [i for i in list_b if not(i in list_a)] print(not_common_elements)"},{"prompt":"Write a jQuery script to hide the element with ID \\"hidden-element\\".","completion":"(\\"#hidden-element\\").hide();"},{"prompt":"Write a MongoDB query that retrieves the documents from the inventory collection where the quantity field is greater than 10.","completion":"db.inventory.find( { quantity: { gt: 10 } } )"},{"prompt":"Rewrite the loop as a generator expression. arr = [] for i in range(5): arr.append(i)","completion":"arr = [i for i in range(5)] arr = (i for i in range(5))"},{"prompt":"Write a JavaScript function that generates an array of numbers from 1 to 10 with their cubes.","completion":"function getCubes(){ var arr = []; for(var i = 1; i <= 10; i++){ arr.push(i*i*i); } return arr; }"},{"prompt":"Construct a loop that prints out the first 10 elements in a given list. my_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]","completion":"for i in range(10): print(my_list[i])"},{"prompt":"Create a function that returns true if the given number is a prime number. number = 9","completion":"def is_prime(number): if number < 2: return False for i in range(2, number // 2 + 1): if number % i == 0: return False return True if is_prime(number): print(\\"The number is a prime number\\") else: print(\\"The number is not a prime number\\")"},{"prompt":"Write a code that will delete a node in a Linked List at a given position. # Node class class Node: # Function to initialise the node object def __init__(self, data): self.data = data # Assign data self.next = None # Initialize next as null # Linked List class class LinkedList: # Function to initialize head def __init__(self): self.head = None # Given Position position = 5","completion":"# Node class class Node: # Function to initialise the node object def __init__(self, data): self.data = data # Assign data self.next = None # Initialize next as null # Linked List class class LinkedList: # Function to initialize head def __init__(self): self.head = None # Function to delete given node at position def delete_node(self, position): # If linked list is empty if self.head == None: return # Store head node temp = self.head # If head needs to be removed if position == 0: self.head = temp.next temp = None return # Find previous node of the node to be deleted for i in range(position -1 ): temp = temp.next if temp is None: break # If position is more than number of nodes if temp is None: return if temp.next is None: return # Node temp.next is the node to be deleted # store pointer to the next of node to be deleted next = temp.next.next # Unlink the node from linked list temp.next = None temp.next = next # Given Position position = 5 # Create a linked list with four nodes linked_list = LinkedList() linked_list.head = Node(1) second = Node(2) third = Node(3) fourth = Node(4) # Now connect the linked list linked_list.head.next = second second.next = third third.next = fourth # Delete the node from given position linked_list.delete_node(position)"},{"prompt":"Write a code that will check if a given string is a palindrome or not without using extra space. string = \\"level","completion":"def is_palindrome(string): left, right = 0, len(string)-1 while right >= left: if string[left] != string[right]: return False left += 1 right -= 1 return True if is_palindrome(string): print(\\"The string is a palindrome\\") else: print(\\"The string is not a palindrome\\")"},{"prompt":"Generate a Matrix with random integers between 1-50 and output the Matrix. rows = 5 columns = 6","completion":"import random rows = 5 columns = 6 matrix = [[random.randint(1,50) for c in range(columns)]for r in range(rows)] for row in matrix: print(row)"},{"prompt":"Construct a Python program to print out the biggest number from a given list. my_list = [6, 5, 9, 1, 8, 2]","completion":"def find_max(my_list): max_num = my_list[0] for num in my_list: if num > max_num: max_num = num return max_num print(find_max(my_list))"},{"prompt":"Create an HTML NavBar so that clicking on Home takes the user to a Home page <html> <body> </body> </html>","completion":"<html> <body> <nav> <ul> <li><a href=\\"index.html\\">Home</a></li> </ul> </nav> </body> </html>"},{"prompt":"Update the given function to return a list of tuples where each tuple contains the name and age of each person. def get_person_info(name, age): \\"\\"\\"Returns a tuple containing name and age.\\"\\"\\" return \\"Person \\" + name + \\" is \\" + age + \\" years old.","completion":"def get_person_info(name, age): \\"\\"\\"Returns a list of tuples containing name and age.\\"\\"\\" return [(name, int(age))]"},{"prompt":"Using the given list of strings, create a new list that contains only the lowercase letters. words = [\\"Alphabet\\", \\"Marble\\", \\"Buttons\\"]","completion":"words = [\\"Alphabet\\", \\"Marble\\", \\"Buttons\\"] lowercase_letters = [word.lower() for word in words] print(lowercase_letters) # Output: ['alphabet', 'marble', 'buttons']"},{"prompt":"Write a JavaScript function to convert the given 12-hour time format to 24-hour format. time = \\"12:05 PM","completion":"function convertTo24Hour(timeString) { let [hours, minutes, period] = timeString.split(' '); let [hoursString, minutesString] = hours.split(':'); let hoursInteger = parseInt(hoursString); if (period === 'AM' && hoursInteger === 12) { hoursInteger = 0; } else if (period === 'PM' && hoursInteger !== 12) { hoursInteger += 12; } return \`{hoursInteger.toString().padStart(2, '0')}:{minutesString}\`; } let result = convertTo24Hour(time); console.log(result); // Outputs: \\"00:05\\""},{"prompt":"Update the given function to return the greatest common divisor of two numbers. def divisor_function(a, b): \\"\\"\\"Returns the greatest common divisor of two numbers.\\"\\"\\" return a % b","completion":"def divisor_function(a, b): \\"\\"\\"Returns the greatest common divisor of two numbers.\\"\\"\\" if b == 0: return a else: return divisor_function(b, a % b)"},{"prompt":"Create a function to print the numbers from 1 to 20, and also print \\"skip\\" for multiplies of 3 and 5.","completion":"def print_numbers(): '''This function prints numbers from 1 to 20, and also prints \\"skip\\" for the multiplies of 3 and 5.''' for num in range(1, 21): if num % 3 == 0 and num % 5 == 0: print(\\"skip\\") else: print(num) print_numbers() # Output: 1 2 skip 4 5 skip 7 8 skip 10 11 skip 13 14 skip 16 17 skip 19 20"},{"prompt":"Using the given list of names, create a new set that contains only the names with length greater than 6. names = [\\"John\\", \\"Jacob\\", \\"Sophia\\", \\"Olivia\\", \\"Michael\\"]","completion":"names = [\\"John\\", \\"Jacob\\", \\"Sophia\\", \\"Olivia\\", \\"Michael\\"] long_names = {name for name in names if len(name) > 6} print(long_names) # Output: {'Sophia', 'Olivia', 'Michael'}"},{"prompt":"Create a decision tree to classify if a given student's grade ranges from A to D.","completion":"# Decision Tree def classify_grades_decision_tree(grade): if grade in range(90, 101): # A range return 'A' elif grade in range(80,90): # B range return 'B' elif grade in range(70,80): # C range return 'C' elif grade in range(60,70): # D range return 'D' else: return 'Error: Grade not in range' # Driver code # Testing print(classify_grades_decision_tree(87)) # Output: B"},{"prompt":"Suggest a completion for the following HTML code to demonstrate items in a unordered list. <ul> <li></li> </ul>","completion":"<ul> <li>Apple</li> <li>Orange</li> <li>Banana</li> <li>Grapes</li> </ul>"},{"prompt":"Assign a class of 'active' to the last <a> element in the given HTML code. <div> <a href=\\"#\\">Home</a> <a href=\\"#\\">About</a> <a href=\\"#\\">Contact</a> </div>","completion":"<div> <a href=\\"#\\">Home</a> <a href=\\"#\\">About</a> <a href=\\"#\\" class=\\"active\\">Contact</a> </div>"},{"prompt":"Suggest a completion to the following python code to print the square of a number. number = 5 print(number)","completion":"number = 5 print(number*number) # Output: 25"},{"prompt":"Create a class in Python that creates an immutable list.","completion":"class ImmutableList: def __init__(self, list_values): self._dict = dict() for i, elem in enumerate(list_values): self._dict[i] = elem def __getitem__(self, item): return self._dict[item] def __len__(self): return len(self._dict)"},{"prompt":"Write an SQL query to find the name of customers who have ordered more than two items this month.","completion":"SELECT C.name FROM Customers C INNER JOIN Orders O ON C.customer_id = O.customer_id WHERE O.order_date >= CURRENT_DATE - INTERVAL '1' MONTH GROUP BY C.name HAVING COUNT(*) > 2;"},{"prompt":"Write an SQL query to find the top 10 highest-priced items in the products table.","completion":"SELECT item_name, price FROM products ORDER BY price DESC LIMIT 10;"},{"prompt":"Sort the list below using insertion sort in Python: list = [1,12,1,4,8,10,13]","completion":"list = [1,1,4,8,10,12,13] def insertion_sort(arr): for i in range(1, len(arr)): key = arr[i] j = i-1 while j >=0 and key < arr[j] : arr[j+1] = arr[j] j -= 1 arr[j+1] = key arr = [1,12,1,4,8,10,13] insertion_sort(arr) print (arr)"},{"prompt":"Write an algorithm in JavaScript to print all the elements inside a given array. var names = [\\"Harry\\", \\"Ron\\", \\"Hermione\\"]","completion":"for (var i = 0; i < names.length; i++) { console.log(names[i]); }"},{"prompt":"Describe an algorithm to convert an array of numbers into an array of its squares.","completion":"def calculate_squares(arr): result = [] for num in arr: result.append(num ** 2) return result"},{"prompt":"Produce a snippet of C++ code to subtract two given numbers a and b.","completion":"int a = 5; int b = 2; int c = a - b;"},{"prompt":"Write a regular expression to match the following pattern: words that consist only of capital letters.","completion":"^[A-Z]+"},{"prompt":"Suggest the best algorithm to reverse a string.","completion":"# Algorithm to reverse a string def reverse_string(s): # Create a result string result = \\"\\" # Iterate through the string in reverse order for i in range(len(s)-1, -1, -1): result += s[i] return result"},{"prompt":"Create a function to add two integers x and y.","completion":"def add_two_integers(x, y): return x + y"},{"prompt":"Construct a regular expression that matches a string containing numbers from 0 to 9 within a range of 8 and 16 digits.","completion":"^[0-9]{8,16}"},{"prompt":"Explain why software design patterns are important in software development.","completion":"Software design patterns are important because they allow developers to create extensible and maintainable software applications. Design patterns provide a way of reusing the same code and structure across multiple applications, while allowing the application to remain logically organized. This can reduce the amount of time it takes to develop and debug applications, as well as prevent bugs from arising due to unfamiliar code structures. Additionally, well-designed applications can be easier for new developers to understand and contribute to. Lastly, design patterns can help improve the overall organization and scalability of a codebase."},{"prompt":"Create a shell script to find the first ten prime numbers","completion":"#!/bin/bash # num will be the number to be checked num=2 # counter to count the number of Prime numbers counter=0 echo \\"First 10 prime numbers are:\\" while [ counter -lt 10 ] do # isPrime will take value 0 or 1, 1 if prime isPrime=1 # i will start from 2, because 2 is the smallest prime number i=2 # this loop will run from 2 to less than given number while [ i -lt num ] do if [ \`expr num % i\` -eq 0 ] then # if modulus comes out to be 0, then it is not prime isPrime=0 fi i=\`expr i + 1\` done # if prime, then counter should be incremented if [ isPrime -eq 1 ] then echo num counter=\`expr counter + 1\` fi # increment the number for next loop num=\`expr num + 1\` done"},{"prompt":"Write a SQL query to generate a report which display the total number of customers in each country.","completion":"SELECT COUNT(*) AS Customer_Count, Country FROM Customers GROUP BY Country;"},{"prompt":"Write an HTML code to design a form which contain two fields, Name and Age. The form should have a button with text \\"Submit\\".","completion":"<form action=\\"form-handler.php\\" method=\\"post\\"> <label>Name:</label><br> <input type=\\"text\\" name=\\"name\\"><br> <label>Age:</label><br> <input type=\\"text\\" name=\\"age\\"><br> <input type=\\"submit\\" value=\\"Submit\\"> </form>"},{"prompt":"Create a HTML document which show \\"Hello World!\\" text with red color in Times New Roman font.","completion":"<html> <head> <title>Hello World</title> </head> <body> <p style=\\"color: red; font-family: Times New Roman;\\">Hello World!</p> </body> </html>"},{"prompt":"Write a Java program to print all the Armstrong numbers between 100 to 500. An Armstrong number is a number that is equal to the sum of its own digits each raised to the power of the total number of digits.","completion":"public class ArmstrongNumbers { public static void main(String[] args) { int min = 100; int max = 500; for (int number = min; number <= max; number++) { int digits = 0; int result = 0; int originalNumber = number; while (originalNumber != 0) { originalNumber /= 10; digits++; } originalNumber = number; while (originalNumber != 0) { int remainder = originalNumber % 10; result += Math.pow(remainder, digits); originalNumber /= 10; } if (result == number) { System.out.println(number); } } } }"},{"prompt":"Create a web page using HTML and CSS to display the current date and time.","completion":"<!DOCTYPE html> <html> <head> <title>Current Date and Time</title> <style> p { font-size: 3em; font-family: Arial, sans-serif; } </style> </head> <body> <p id=\\"time\\"></p> <script> const today = new Date(); const time = \`{today.toLocaleString()}\`; document.getElementById(\\"time\\").innerHTML = time; <\/script> </body> </html>"},{"prompt":"Write a code to add two integers without any type conversion.","completion":"function addIntWithoutTypeConversion(a, b) { let sum = 0; let carryin = 0; let k = 0; let temp_a = a; let temp_b = b; while (k < 32) { let ak = a >> k & 1; let bk = b >> k & 1; let carryout = (ak & bk) | (ak & carryin) | (bk & carryin); sum |= (ak ^ bk ^ carryin) << k; carryin = carryout << 1; k++; } return sum; } const result = addIntWithoutTypeConversion(1, 2); console.log(result); // 3"},{"prompt":"Write a SQL query to group the records from a table named 'countries' by their population greater than 10 million.","completion":"SELECT population, COUNT(*) as count FROM countries WHERE population > 10e6 GROUP BY population;"},{"prompt":"Create a C++ program to print a pattern's series of numbers.","completion":"#include <iostream> using namespace std; void printPattern(int n) { int i, j, num; num = 1; // Prints the upper half for (i = 0; i <= n; i++) { // Start with printing number 1 num = 1; // Print 2*i+1 stars for (j = 0; j < 2 * i + 1; j++) { cout << num << \\" \\"; if (i % 2 == 0) num++; else num--; } // Move to the next line cout << endl; } // Prints the lower half for (i = n; i > 0; i--) { // Start with printing number 1 num = 1; // print 2*i-1 stars for (j = 0; j < 2 * i - 1; j++) { cout << num << \\" \\"; if (i % 2 == 0) num++; else num--; } // Move to the next line cout << endl; } } int main() { int n = 9; printPattern(n); return 0; }"},{"prompt":"Write a MySQL query to count the number of book titles in the 'books' table having the word 'the' in their title.","completion":"SELECT COUNT(*) FROM books WHERE title LIKE '%the%';"},{"prompt":"Write a Java code to create a thread and process the tasks in separate threads.","completion":"public class Main { public static void main(String[] args) { Thread thread1 = new Thread(new Runnable(){ public void run(){ //task 1 } }); Thread thread2 = new Thread(new Runnable(){ public void run(){ //task 2 } }); thread1.start(); thread2.start(); } }"},{"prompt":"Write a SQL query that returns the sum of the values in a 'salary' column in a table named 'employees'.","completion":"SELECT SUM(salary) FROM employees;"},{"prompt":"Create a class in Python named 'Circle' with a parameterized constructor to take the radius of the circle as input.","completion":"class Circle(): def __init__(self, radius): self.radius = radius"},{"prompt":"Write an SQL query to retrieve the employee’s name from a table with the employee’s id. employees (id, name, age)","completion":"SELECT name FROM employees WHERE id = ?"},{"prompt":"Create a JSON string that represents a dictionary of two key-value pairs.","completion":"{ \\"key1\\": \\"value1\\", \\"key2\\": \\"value2\\" }"},{"prompt":"Write HTML to create a paragraph with the text \\"This is a paragraph\\".","completion":"<p>This is a paragraph</p>"},{"prompt":"Construct a regular expression that matches an email address that ends in .com.","completion":"/S+@S+.com/"},{"prompt":"Convert the following matrix into a list of lists in Python. [[1, 2, 3], [4, 5, 6], [7, 8, 9]]","completion":"list_of_lists = [[1,2,3], [4,5,6], [7,8,9]]"},{"prompt":"Using Swift, generate a random integer between 0 and 10.","completion":"let randomNumber = Int.random(in: 0..<10)"},{"prompt":"Write a Perl program to remove the last element from an array and return the resulting array.","completion":"@array = (\\"one\\",\\"two\\",\\"three\\",\\"four\\"); # remove the last element pop(@array); # print the resulting array print \\"@arrayn\\";"},{"prompt":"Create a function in C++ that generates a random number between 0 and 1.","completion":"#include <stdlib.h> #include <time.h> float genRandomNum(){ srand (time(NULL)); float randomNum = (float)rand()/(float)(RAND_MAX); return randomNum; }"},{"prompt":"mplement a C program which will check if user input is an integer number or not.","completion":"#include <stdio.h> int isInteger(int x) { // Your code here if(x == (int) x) return 1; else return 0; } int main() { int num; printf(\\"Enter a number: \\"); scanf(\\"%d\\", &num); if(isInteger(num)){ printf(\\"It is an integer number.\\"); } else{ printf(\\"It is not an integer number.\\"); } return 0; }"},{"prompt":"Write a SELECT statement in SQL to get the count of customers with a salary greater than 40,000.","completion":"SELECT COUNT(*) FROM customers WHERE salary > 40000;"},{"prompt":"Write a Bash script which will retrieve system information, including memory, storage and IP address.","completion":"#!/bin/bash #Program to Retrieve System Information memory=(free -m | awk 'NR==2{printf \\"Memory Usage: %s/%sMB (%.2f%%)n\\", 3,2,3*100/2 }') #Storage Information storage=(df -h | awk 'NF==\\"/\\"{printf \\"Disk Usage: %d/%dGB (%s)n\\", 3,2,5}') #IP Address ipaddress=(ip addr | awk '/^[0-9]+: / {}; /inet.*global/ {print \\"IP Address: \\" 2}') #Print Info echo \\"memory\\" echo \\"storage\\" echo \\"ipaddress\\""},{"prompt":"mplement an R program to calculate the median of an integer array. [2, 3, 4, 5]","completion":"calculate median <- function(arr){ sorted <- sort(arr) n <- length(arr) if(n%%2 == 0){ mid <- n/2 median <- (sorted[mid] + sorted[mid + 1] ) / 2 } else { mid <- (n + 1) / 2 median <- sorted[mid] } return(median) } calculate_median(c(2, 3, 4, 5))"},{"prompt":"Create an HTML page with a table which contains three rows and three columns.","completion":"<html> <head> <title>Table Example</title> </head> <body> <table> <tr> <td>Row 1, Column 1</td> <td>Row 1, Column 2</td> <td>Row 1, Column 3</td> </tr> <tr> <td>Row 2, Column 1</td> <td>Row 2, Column 2</td> <td>Row 2, Column 3</td> </tr> <tr> <td>Row 3, Column 1</td> <td>Row 3, Column 2</td> <td>Row 3, Column 3</td> </tr> </table> </body> </html>"},{"prompt":"Create a JavaFX program that allows a user to move a square shape in 3 different directions using the arrow keys.","completion":"import javafx.application.Application; import javafx.scene.Scene; import javafx.scene.input.KeyCode; import javafx.scene.layout.Pane; import javafx.scene.paint.Color; import javafx.scene.shape.Rectangle; import javafx.stage.Stage; public class MoveSquare extends Application { public static void main(String[] args) { launch(args); } public void start(Stage primaryStage) { Rectangle rect = new Rectangle(30, 30); rect.setFill(Color.BLUE); Pane root = new Pane(); root.getChildren().add(rect); Scene scene = new Scene(root); scene.setOnKeyPressed(event -> { KeyCode keyPressed = event.getCode(); if (keyPressed == KeyCode.UP) { rect.setY(rect.getY() - 5); } else if (keyPressed == KeyCode.DOWN) { rect.setY(rect.getY() + 5); } else if (keyPressed == KeyCode.LEFT) { rect.setX(rect.getX() - 5); } else if (keyPressed == KeyCode.RIGHT) { rect.setX(rect.getX() + 5); } }); primaryStage.setTitle(\\"Move Square\\"); primaryStage.setScene(scene); primaryStage.setWidth(300); primaryStage.setHeight(300); primaryStage.show(); scene.requestFocus(); } }"},{"prompt":"Create a C++ class called Employee with two data fields age and name.","completion":"class Employee { int age; string name; public: int getAge() { return age; } string getName() { return name; } void setAge(int age) { this->age = age; } void setName(string name) { this->name = name; } };"},{"prompt":"Convert the following paragraph from English to Python code: \\"Given a list of numbers, find the largest number\\".","completion":"def find_largest(nums): largest = nums[0] for num in nums: if num > largest: largest = num return largest"},{"prompt":"dentify the bug in the following python code: def foo(x): x[0] = 2 [0, 1, 2]","completion":"This code is trying to modify an immutable object (a tuple) as it is attempting to assign a value to the first element in a tuple. The correct way to do this is with a list, not a tuple. The code should be changed to: def foo(x): x[0] = 2 where the input x is a list instead of a tuple."},{"prompt":"Generate a stack trace for the following JavaScript code: function foo(n) { return n + 1; } foo(2);","completion":"Traceback (most recent call last): File \\"code.js\\", line 3, in <module> foo(2) File \\"code.js\\", line 1, in foo return n + 1 TypeError: unsupported operand type(s) for +: 'int' and 'str'"},{"prompt":"mplement a for loop in Python to iterate through a given list of numbers. [1, 2, 3, 4]","completion":"for num in [1, 2, 3, 4]: print(num)"},{"prompt":"Analyze the following code and explain what it does: def func(n): if n == 0: return 0 else: return n + func(n - 1)","completion":"This code implements a recursive function to compute the sum of numbers from 1 to n. Specifically, the base case is when n is 0, and the recursive case is when n is greater than 0. In the recursive case, the function will call itself with n-1 as the argument, and then adds n to the result of that call. Thus, each recursive call will add one more number until it reaches the base case. This is known as the base case and recursion principle. The result of the function will be the sum of the numbers from 1 to n."},{"prompt":"dentify the data type of the following Python expression: {\\"name\\": \\"John\\", \\"age\\": 40}","completion":"This expression is a dictionary, which is a type of data structure in Python. A dictionary is a key-value pair, where the key is unique and the value can be a list of data items or a single item. In this example, the key is \\"name\\" and the value is \\"John\\", and the key is \\"age\\" and the value is 40."},{"prompt":"Rewrite the following code snippet in Python to print out the word \\"Hello\\": print(\\"Hello\\")","completion":"print(\\"Hello\\")"},{"prompt":"Divide two floating-point numbers without using the '/' operator. A = 5.0, B = 3.0","completion":"A * (1.0 / B)"},{"prompt":"Create a SQL query that lists all entries from a table that have a given parameter in the distinct column. Table: employee Parameter: name","completion":"SELECT DISTINCT name FROM employee;"},{"prompt":"Using Javascript, create an object that has a property of message with a value of \\"Hello, World","completion":"let obj = { message: \\"Hello, World\\" }"},{"prompt":"Create a method in Java that takes two integers and finds the maximum of them.","completion":"public static int findMax(int num1, int num2) { return (num1 > num2) ? num1 : num2; }"},{"prompt":"Create a for loop in C++ to print out all the even numbers from 0 to a given number.","completion":"for (int i = 0; i <= n; i+=2) { cout << i << \\" \\"; }"},{"prompt":"Construct an object in JavaScript to store the details of a person with the fields \\"name\\",\\"age\\" and \\"address\\".","completion":"let person = { \\"name\\": \\"John Doe\\", \\"age\\": 25, \\"address\\": \\"123 Main St, New York, NY 10001\\" }"},{"prompt":"Create a React component that takes two props, a message and a color, and displays the message with the desired color.","completion":"const Message = (props) => { return ( <div style={{color: props.color}}>{props.message}</div> ) }"},{"prompt":"Using the comment as a guide, edit the code to handle the error appropriately. try: # TODO: Make API call except Exception: # TODO: Handle error","completion":"try: # Make API call except Exception as e: # Handle error print(\\"An error occurred:\\", e)"},{"prompt":"Create a function in Haskell that takes an integer and returns a string representing its factorial.","completion":"factorial :: Integer -> String factorial n = show product [1..n]"},{"prompt":"Create an array of size 10 with each element being a random integer between 0 and 1.","completion":"arr = [random.randint(0, 1) for _ in range(10)]"},{"prompt":"mplement a function that returns the reversed version of a given string.","completion":"def reverse_string(string): return string[::-1]"},{"prompt":"Write a JavaScript code to sort the characters of a string alphabetically.","completion":"function sortString(str) { return str.split(\\"\\").sort().join(\\"\\"); }"},{"prompt":"Create a Java method to interpret a given string into an integer.","completion":"public static int stringToInteger(String s) { int result = 0; int power = 0; for (int i = s.length() - 1; i >= 0; i--) { char ch = s.charAt(i); result += (ch - '0') * Math.pow(10, power); power++; } return result; }"},{"prompt":"Create a Node.js script that logs a string.","completion":"const fs = require('fs'); // Logs the specified string function logString(str) { console.log(str); } logString('Log this string');"},{"prompt":"Create a Java class with an empty constructor and a parameterized constructor","completion":"public class TestConstructor { public TestConstructor() { } public TestConstructor(int n) { // code to run when constructor with parameter is called } }"},{"prompt":"Create an HTML page with two <div> elements","completion":"<html> <body> <div> Content </div> <div> Content </div> </body> </html>"},{"prompt":"Design a C++ class to count the occurrences of a character","completion":"class CharCounter{ private: char charToCount; int counter; public: CharCounter(char c) : charToCount{c}, counter{0} {} void countChar(char c); int getCounter(); }; void CharCounter::countChar(char c){ if (c == this->charToCount) this->counter++; } int CharCounter::getCounter(){ return this->counter; }"},{"prompt":"Write a Java program that takes an array of integers and prints the numbers that are divisible by 5 [10, 20, 25, 15]","completion":"// Create the array of integers int[] numbers = {10, 20, 25, 15}; // Iterate over array and print numbers divisible by 5 for (int number : numbers) { if (number % 5 == 0) { System.out.println(number); } } // Output: 10 20 25"},{"prompt":"Modify the following code to compute the sum of squares of the numbers from k to n. def sum(k, n): sum = 0 for i in range(k, n+1): sum += i return sum","completion":"def sum_squares(k, n): sum = 0 for i in range(k, n+1): sum += i**2 return sum"},{"prompt":"Categorize the following phrases into the given categories. phrase, category This is a big mess, Disaster That was a nice evening, Joy I am feeling thirsty, Discomfor","completion":"phrase, category This is a big mess, Disaster That was a nice evening, Joy I am feeling thirsty, Discomfort"},{"prompt":"the following code snippet, what will be the output of the print statement ? x = 10 y = 5 x = x + y print(x)","completion":"x = 10 y = 5 x = x + y print(x) # Prints 15"},{"prompt":"Design a function which takes two numbers as input and returns the largest one as output.","completion":"def largest_of_two(num1, num2): if num1 > num2: return num1 else: return num2"},{"prompt":"Assign the correct data type for the following variable. name = \\"John Smith","completion":"name = \\"John Smith\\" # str"},{"prompt":"Design a function which prints all the permutations of a given list of numbers.","completion":"def permutations(nums): if len(nums) == 1: return [nums] res = [] for i in range(len(nums)): for p in permutations(nums[:i] + nums[i+1:]): res.append([nums[i]] + p) return res if __name__ == '__main__': nums = [1, 2, 3] print(permutations(nums)) # [[1, 2, 3], [1, 3, 2], [2, 1, 3], [2, 3, 1], [3, 1, 2], [3, 2, 1]]"},{"prompt":"Create an algorithm that iterates through a given string and returns the number of alphabets present in the string. \\"abracadabr","completion":"def count_alphabets(string): count = 0 for i in range(len(string)): if string[i].isalpha(): count += 1 return count"},{"prompt":"Write a function in R that takes a vector as an argument and returns a new vector in which each element is the average of that element with its two neighbors from the original vector. c(1, 4, 2, 8, 6)","completion":"average_three <- function(x) { c(mean(c(x[2], x[1])), mean(x), mean(c(x[2], x[3]))) }"},{"prompt":"Create a regular expression pattern in JavaScript that checks if a given string is a valid mobile phone number in India.","completion":"^[6-9]d{9}"},{"prompt":"Create a machine learning model in Python using the given data that classifies the data into either 'positive' or 'negative'. <contents of the dataset>, data type: binary classificatio","completion":"# Load the dataset X, y = <contents of the dataset> # Split the dataset X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=0) # Train the model model = LogisticRegression() model.fit(X_train, y_train) # Evaluate the model y_pred = model.predict(X_test) accuracy = accuracy_score(y_test, y_pred) print(\\"Accuracy score: \\", accuracy)"},{"prompt":"mplement a data structure in Java that implements a stack with the following methods: 'push', 'pop', 'peek', and 'isEmpty'.","completion":"import java.util.*; public class StackImplementation { private Stack<Integer> stack; public StackImplementation() { stack = new Stack<>(); } public void push(int x) { stack.push(x); } public int pop() { if (stack.isEmpty()) { System.out.println(\\"Stack is empty\\"); return -1; } return stack.pop(); } public int peek() { if (stack.isEmpty()) { System.out.println(\\"Stack is empty\\"); return -1; } return stack.peek(); } public boolean isEmpty() { return stack.isEmpty(); } }"},{"prompt":"Create a web page using HTML and CSS where the font size of the content increases with the screen size.","completion":"<!DOCTYPE html> <html> <head> <style> h1{ font-size: 1.5em; } @media only screen and (min-width: 600px) { h1 { font-size: 2em; } } @media only screen and (min-width: 900px) { h1 { font-size: 2.5em; } } </style> </head> <body> <h1>My Title</h1> </body> </html>"},{"prompt":"Create a Ruby program that takes a group of strings and returns the number of strings longer than 5 characters. [\\"Hello\\", \\"World\\", \\"Foo\\", \\"Bar\\", \\"Baz\\"]","completion":"strings = [\\"Hello\\", \\"World\\", \\"Foo\\", \\"Bar\\", \\"Baz\\"] count = 0 strings.each do |str| if str.length > 5 count += 1 end end puts \\"The number of strings longer than 5 characters is: #{count}\\""},{"prompt":"Find the minimum value from a given array. [3, -2, 4, 7]","completion":"def findMin(arr): current_min = arr[0] for num in arr: if num < current_min: current_min = num return current_min"},{"prompt":"Describe how a linked list data structure works in pseudo code.","completion":"A linked list is a linear data structure that consists of a sequence of elements, each element containing a pointer to the next element in the list. Some implementations may also contain a pointer to the previous element in the list. Pseudo-code would look like: START Class Node int data Node next END Class Node head // the start of the list // traverse the list while (current != NULL) { // process node current = current.next } END"},{"prompt":"Develop a Python code to extract all words from a sentence that begin with a specific letter. sentence = \\"I love coding in Python\\" letter = \\"P","completion":"sentence = \\"I love coding in Python\\" letter = \\"P\\" words_starting_with_P = [word for word in sentence.split() if word.startswith(letter)] print(words_starting_with_P) # Output: ['Python']"},{"prompt":"Create a new array of integers which contains the sum of corresponding elements of two existing arrays. arr1 = [1, 2, 3] arr2 = [4, 5, 6]","completion":"arr1 = [1, 2, 3] arr2 = [4, 5, 6] # Initialize new array arr_sum = [0 for _ in range(len(arr1))] # Add the values of both arrays for i in range(len(arr1)): arr_sum[i] = arr1[i] + arr2[i] print(arr_sum) # Output: [5, 7, 9]"},{"prompt":"Write a method to implement binary search using Java.","completion":"public static int binarySearch(int[] array, int x) { int low = 0, high = array.length - 1; while (low <= high) { int mid = (low + high) / 2; if (array[mid] < x) low = mid + 1; else if (array[mid] > x) high = mid - 1; else return mid; } return -1; }"},{"prompt":"Construct an SQL query for fetching all rows from a table named \\"Employees\\".","completion":"SELECT * FROM Employees;"},{"prompt":"Create a regular expression for validating a lowercase alphabet, number, or underscore.","completion":"^[a-z0-9_]*"},{"prompt":"Construct a for loop for iterating 10 times and executing a block of code.","completion":"for (int i=0; i<10; i++) { // execute block of code }"},{"prompt":"Style the following title with css. <h1>My Webpage</h1>","completion":"<h1 style=\\"display: block; text-align: center; font-size: 2em; color: #FF0000;\\">My Webpage</h1>"},{"prompt":"Debug the following function. def f(n): i = 0 while i < n: i+=1 if i % 5 == 0: print(i)","completion":"def f(n): i = 0 while i < n: i+=1 # Fixed missing indentation if i % 5 == 0: print(i) # Added missing closing bracket after print() statement"},{"prompt":"Construct an object-oriented code for a Book class.","completion":"class Book: def __init__(self, title, author, year): self.title = title self.author = author self.year = year def get_title(self): return self.title def get_author(self): return self.author def get_year(self): return self.year def set_title(self, new_title): self.title = new_title def set_author(self, new_author): self.author = new_author def set_year(self, new_year): self.year = new_year"},{"prompt":"Create an algorithm that can recognize handwriting.","completion":"The algorithm should use pre-processing techniques like image cropping, normalization, and thresholding to convert the raw input image into a binary image. It should then use feature extraction techniques like contours, corner detection, and Hough Transform to detect and separate the characters from the image. The algorithm should then use machine learning techniques like error-backpropagation and convolutional neural networks to classify and recognize the characters in the image."},{"prompt":"Suggest a better algorithm for calculating Fibonacci sequence.","completion":"A better algorithm for calculating Fibonacci sequence is the iterative method. Instead of making recursive calls, this method computes each element of the Fibonacci sequence in a loop. This method is more efficient and requires less memory overhead. The algorithm is as follows: def iterative_fibonacci(n): a = 0 b = 1 for i in range(1,n+1): c = a + b a = b b = c return a"},{"prompt":"Write a generic code for traversing a tree.","completion":"def traverse_tree(root): if root is None: return traverse_tree(root.left) print(root.data) traverse_tree(root.right)"},{"prompt":"Write a regular expression that matches all English alphabets.","completion":"RegEx: [a-zA-Z]"},{"prompt":"Create a new view controller class named \\"MainViewController\\".","completion":"class MainViewController: UIViewController { override func viewDidLoad() { super.viewDidLoad() } }"},{"prompt":"Write a JavaScript program to iterate through a 1D array, and print each value. array = [1,2,3,4]","completion":"const array = [1,2,3,4]; for (let i = 0; i < array.length; i++) { console.log(array[i]); }"},{"prompt":"What is an SQL JOIN?","completion":"An SQL JOIN is a clause that allows for combining data from multiple tables in a relational database. A JOIN combines records from two or more tables based on the values from one or more columns. It is used in SELECT statement to join the results of two or more tables and then display the result set. There are four types of JOINs: INNER JOIN, LEFT JOIN, RIGHT JOIN, and FULL OUTER JOIN. Each one produces a different result set."},{"prompt":"Create a new View subclass of UIView and name it \\"MainView\\".","completion":"class MainView: UIView { override func draw(_ rect: CGRect) { // code to customize the main view } }"},{"prompt":"What is HTML5 Canvas?","completion":"HTML5 Canvas is an HTML element that can be used to draw graphics and animation with JavaScript scripts. It provides the ability to render graphics on the fly without the need for any plugins. Canvas elements are rendered as bitmap images which can be manipulated with code to create dynamic effects."},{"prompt":"Create a Swift enum to represent the different mobile phone brands.","completion":"enum MobilePhoneBrand { case Apple case Samsung case Huawei case Oppo case Vivo case Xiaomi }"},{"prompt":"Write a CSS rule to center a container with class \\"main\\".","completion":".main { margin: 0 auto; width: 100%; display: block; text-align: center; }"},{"prompt":"Construct an SQL statement to retrieve data from a table called \\"users\\".","completion":"SELECT * FROM users;"},{"prompt":"dentify the type of layout used in this HTML structure. <div class=\\"container\\"> <div class=\\"row\\"> <div class=\\"column\\"><h1>Title</h1></div> </div> <div class=\\"row\\"> <div class=\\"column\\"><p>Content</p></div> <div class=\\"column\\"><p>Content</p></div> <div class=\\"column\\"><p>Content</p></div> </div> </div>","completion":"The type of layout used in this HTML structure is a Grid Layout. The columns are divided into equal widths, which creates a grid pattern. The content within each column is arranged horizontally."},{"prompt":"w does recursion work?","completion":"Recursion is a method of problem solving where the solution to a problem relies on solving smaller instances of the same problem. In computing, recursion is a process by which a method calls itself continuously. A base case is used to terminate the recursion, and each time the method calls itself, it works on a smaller version of the problem. Recursive algorithms can be used to solve a wide range of problems, from sorting and searching algorithms, to graph traversal and problems in computer graphics."},{"prompt":"Create a C# class named \\"Car\\" that models a car.","completion":"class Car { private string make; private string model; private int year; public Car(string make, string model, int year) { this.make = make; this.model = model; this.year = year; } public string getMake() { return this.make; } public string getModel() { return this.model; } public int getYear() { return this.year; } public void setMake(string make) { this.make = make; } public void setModel(string model) { this.model = model; } public void setYear(int year) { this.year = year; } }"},{"prompt":"Suggest a way of sorting an array of integers A in descending order. A = [4, 7, 2, 9, 6];","completion":"A.sort(reverse=True);"},{"prompt":"Edit the following HTML code so that it displays a black, 100px border-radius circle. <div class=\\"circle\\"></div>","completion":"<div class=\\"circle\\" style=\\"border-radius: 100px; background-color: black; height: 100px; width: 100px;\\"></div>"},{"prompt":"Rewrite the following code using try and except blocks. if (len(list) == 0): print(\\"List is empty\\")","completion":"try: if (len(list) == 0): print(\\"List is empty\\") except: print(\\"No list is given\\")"},{"prompt":"Run the following program and provide the console output. def multiply(x, y): return x * y print(multiply(2, 5))","completion":"10"},{"prompt":"Suggest a way to display the following list in a readable format. list = [3,5,7,9,11]","completion":"print(\\", \\".join(str(x) for x in list)) # Output: 3, 5, 7, 9, 11"},{"prompt":"Suggest a way of replacing all the vowels in a string with a star (*). string = \\"Hello World!","completion":"print(''.join([x if x not in 'aeiou' else '*' for x in string])) # Output: H*ll* W*rld!"},{"prompt":"Suggest a way of encrypting text using a Caesar cipher. plaintext = \\"Hello World","completion":"def caesar_encrypt(plaintext, k): ciphertext = \\"\\" # traverse text for i in range(len(plaintext)): char = plaintext[i] # Encrypt uppercase characters if (char.isupper()): ciphertext += chr((ord(char) + k-65) % 26 + 65) # Encrypt lowercase characters else: ciphertext += chr((ord(char) + k - 97) % 26 + 97) return ciphertext print(caesar_encrypt(plaintext, 3)) # Output: Khoor Zruog"},{"prompt":"Suggest a way of decoding a string encoded using Base64. encoded_string = \\"SGVsbG8gV29ybGQ=","completion":"import base64 def decodeBase64(encoded_string): return base64.b64decode(encoded_string).decode('utf-8') print(decodeBase64(encoded_string)) # Output: Hello World"},{"prompt":"Write a RabbitMQ consumer in Java to listen to a particular queue.","completion":"import com.rabbitmq.client.ConnectionFactory; import com.rabbitmq.client.Connection; import com.rabbitmq.client.Channel; import com.rabbitmq.client.DeliverCallback; public class Consumer { public static void main(String[] args) throws Exception { // establish a connection to the RabbitMQ broker ConnectionFactory factory = new ConnectionFactory(); factory.setHost(\\"hostname\\"); Connection connection = factory.newConnection(); Channel channel = connection.createChannel(); // declare a queue String queueName = \\"myQueue\\"; channel.queueDeclare(queueName, false, false, false, null); // set up a consumer that will listen to the declared queue DeliverCallback deliverCallback = (consumerTag, delivery) -> { String message = new String(delivery.getBody()); System.out.println(\\"Received '\\" + message + \\"'\\"); }; channel.basicConsume(queueName, true, deliverCallback, consumerTag -> { }); } }"},{"prompt":"dentify and correct the bug in the following program. def square_numbers(lst): lst_sq = [] lst_sq.append(lst[i] ** 2 for i in range(len(lst))) return lst_sq","completion":"def square_numbers(lst): lst_sq = [] for i in range(len(lst)): lst_sq.append(lst[i] ** 2) return lst_sq"},{"prompt":"Create a program to generate the n-th Fibonacci number.","completion":"def fibonacci(n): '''This function returns the n-th Fibonacci number.''' if n == 0 or n == 1: return n fib_n_1 = 0 fib_n_2 = 1 for i in range(2, n+1): fib_n = fib_n_1 + fib_n_2 fib_n_1, fib_n_2 = fib_n_2, fib_n return fib_n"},{"prompt":"Extract the strings that match the following regex pattern from a text block text block = “hotel #9888, school #9876, airport #987” regex pattern = #[0-9]{4}","completion":"['#9888', '#9876', '#987']"},{"prompt":"Create a Ruby program that asks for a user's name and greets them with their name","completion":"puts \\"What is your name?\\" name = gets.chomp puts \\"Hello, #{name}!\\""},{"prompt":"Create a class in Java with three private fields and three public functions to access those fields.","completion":"public class MyClass{ private int num; private double dbl; private char c; public int getNum(){ return num; } public void setNum(int num){ this.num = num; } public double getDbl(){ return dbl; } public void setDbl(double dbl){ this.dbl = dbl; } public char getChar(){ return c; } public void setChar(char c){ this.c = c; } }"},{"prompt":"Update the below HTML snippet to make all the section heading elements center aligned. <h1>Section 1</h1> <h2>Section 2</h2> <h3>Section 3</h3>","completion":"<h1 style=\\"text-align: center;\\">Section 1</h1> <h2 style=\\"text-align: center;\\">Section 2</h2> <h3 style=\\"text-align: center;\\">Section 3</h3>"},{"prompt":"w do you test a web application using Selenium webdriver?","completion":"In order to test a web application using Selenium webdriver, you need to create a Selenium script that navigates the web application, verifies the expected output, and records test results. You would then run the script on different browsers or devices to verify the application's functionality across various environments."},{"prompt":"Replace the placeholders in the following Python code snippet with appropriate values. for x in range(__, __): print(x)","completion":"for x in range(0, 10): print(x)"},{"prompt":"Rewrite the below C statement using a ternary operator. if (condition) { result = 5; } else { result = 10; }","completion":"result = (condition) ? 5 : 10;"},{"prompt":"dentify the division of numbers 10 and 5.","completion":"The division of 10 and 5 is 2."},{"prompt":"Create a multi-dimensional array in Python.","completion":"arr = [[1,2,3], [4,5,6], [7,8,9]]"},{"prompt":"Print the maximum element in a linked list. head - [1, 3, 4, 10, 8]","completion":"def maximum(head): max = head.data while head is not None: if max < head.data: max = head.data head = head.next return max"},{"prompt":"Create a loop in Python to multiply each element of a list with 10. lst = [1, 2, 3, 4, 5]","completion":"def multiply_list(lst): for i in range(len(lst)): lst[i] *= 10 return lst"},{"prompt":"Given an array of integers and a target value, modify the array such that each element is the multiplication of the previous element and the target value. arr = [2, 4, 5], target = 3","completion":"arr = [2, 8, 24] # [2 * 3, 4 * 3, 5 * 3]"},{"prompt":"Compute the average of the elements of the given list. nums = [8, 19, 2, 5, 6]","completion":"average = 8.4 # (8 + 19 + 2 + 5 + 6)/5"},{"prompt":"Find the closest number to given value using a binary search algorithm. arr = [2, 4, 7, 10, 11, 12], val = 6","completion":"closest_num = 7 # 10 is the closest number to 6 in the array"},{"prompt":"Print the value corresponding to the given key in a dictionary. dic = {'name': 'John', 'age': 18}, key = 'name'","completion":"John # The value associated with 'name' is 'John'"},{"prompt":"Create a class that contains two methods: one to generate a random number between a given range, and one to create a list of \\"n\\" random numbers. n = 10, min = 0, max = 100","completion":"class RandomNumberList: def __init__(self): self.numbers = [] def generate_random(self, min, max): return random.randint(min, max) def create_list(self, n, min, max): # Generate a list of n random numbers between min and max self.numbers = [self.generate_random(min, max) for _ in range(n)] return self.numbers"},{"prompt":"Calculate the sum of all the integers in the range of m to n (inclusive). m = 10, n = 20","completion":"sum = 165 # 10 + 11 + 12 + ... + 20 = 165"},{"prompt":"Suggest an improvement to make the code more efficient. a = [1,2,3,4,5] loop_count = len(a) while loop_count > 0: print(loop_count) loop_count -= 1","completion":"a = [1,2,3,4,5] for number in a: print(number) // Instead of looping through the number of items in 'a', loop through the items of 'a' directly."},{"prompt":"Complete the following JavaScript function so that it reads the string parameter and prints all the uppercase letters. function print_uppercase_letters(string) { }","completion":"function print_uppercase_letters(string) { for (let i = 0; i < string.length; i++) { let char = string[i]; if (char === char.toUpperCase()) { console.log(char); } } }"},{"prompt":"Suggest a method to search for a specified character in a string.","completion":"One approach is to loop through each character in the string and check if it matches the character to be searched for. If it does, the index of the character can be returned, or a boolean indicating whether the character is present in the string or not can be returned. Another approach is to use built-in string functions such as .indexOf() or .includes() to search for the specified character."},{"prompt":"Suggest a way to make the following code more concise. if i == 0: result = \\"zero\\" elif i == 1: result = \\"one\\" elif i == 2: result = \\"two","completion":"result = [\\"zero\\", \\"one\\", \\"two\\"][i] // Using a list and indexing can shorten the code."},{"prompt":"Suggest a way to change the following code so that it does not use a nested loop. for n in range(10): for i in range(n): print('*', end='') print()","completion":"for n in range(10): print('*' * n) // The code can be rewritten to use one single line and one loop only."},{"prompt":"Suggest a data structure that can be used to store contacts information (name, email, phone number).","completion":"A hash table can be used to store the contacts information as it provides a key-value mapping of the information. Keys can be either the name, email or phone number depending on the mapping pattern desired. A set or LinkedList can also be used for this purpose, as the information does not have any orders associated with it."},{"prompt":"Write a regular expression that matches URLs that end with \\".net\\".","completion":"/(.*).net/ // Matches URLs that end with \\".net\\"."},{"prompt":"Suggest one line of code that should be added to the following function to make it more efficient. def search_prime_numbers(n): for num in range(2, n + 1): for i in range(2, num): if num % i == 0: break else: print(num)","completion":"def search_prime_numbers(n): for num in range(2, n + 1): if num > 2 and num % 2 == 0: // This line can be added to make the function more efficient by avoiding the check for even numbers greater than 2. continue for i in range(2, num): if num % i == 0: break else: print(num)"},{"prompt":"Generate a random password of 8 characters containing numbers and letters.","completion":"jK9xz39V"},{"prompt":"Use regular expression to create a pattern to identify email addresses in a string. ‘This is an example of an email: xyz@example.com’","completion":"pattern = re.compile(r'[w.-]+@[w.-]+')"},{"prompt":"Write a LINQ query in C# to select customers from the USA.","completion":"var filteredResult = from customer in customers where customer.Country == \\"USA\\" select customer;"},{"prompt":"Create a user-defined type in Python to store information about a person.","completion":"class Person: def __init__(self, firstname, lastname, age): self.firstname = firstname self.lastname = lastname self.age = age person1 = Person('John', 'Smith', 25)"},{"prompt":"Write a query in MySQL to delete a record from a table named 'customers' where the address field is ‘Unknown’.","completion":"DELETE FROM customers WHERE address = 'Unknown';"},{"prompt":"Define a JavaScript class to store information about a circle.","completion":"class Circle { constructor(radius) { this.radius = radius; this.diameter = radius * 2; } area() { return Math.PI * this.radius * this.radius; } circumference() { return Math.PI * this.diameter; } }"},{"prompt":"Create a stored procedure in SQL to insert a new entry into a 'products' table.","completion":"CREATE PROCEDURE InsertProduct (@Name varchar(50), @Price decimal(2,2)) AS BEGIN INSERT INTO products(name, price) VALUES (@Name, @Price) SELECT @@IDENTITY As NewId END;"},{"prompt":"Use a template in HTML and JavaScript to create a table with 10 columns.","completion":"<table> <thead> <tr> <th>Col1</th> <th>Col2</th> <th>Col3</th> <th>Col4</th> <th>Col5</th> <th>Col6</th> <th>Col7</th> <th>Col8</th> <th>Col9</th> <th>Col10</th> </tr> </thead> <tbody> <script> for (var i = 0; i < 10; i++){ document.write(\\"<tr><td>\\" + i + \\"</td></tr>\\"); } <\/script> </tbody> </table>"},{"prompt":"mplement a class to implement a Huffman coding algorithm.","completion":"class HuffmanCoding: def __init__(self, inp_string): self.inp_string = inp_string self.string_length = len(inp_string) self.frequency_table = self.get_frequency_table(inp_string) self.huff_tree = self.build_huffman_tree(self.frequency_table) def get_frequency_table(self, inp_string): # Create dictionary to store frequencies freq_table = {} # Count frequency of characters in the string for char in inp_string: if char in freq_table: freq_table[char] += 1 else: freq_table[char] = 1 # Return the frequency table return freq_table def build_huffman_tree(self, frequency_table): # Create a priority queue to store the trees pq = PriorityQueue() # Create a tree for each value for value in frequency_table: pq.put((frequency_table[value], Node(value))) # Start the loop with two trees while pq.qsize() > 1: left_node = pq.get() right_node = pq.get() combined_freq = left_node[0] + right_node[0] new_node = Node(left=left_node[1], right=right_node[1]) pq.put((combined_freq, new_node)) # Return the tree return pq.get()[1]"},{"prompt":"What is the workflow of a deep learning project?","completion":"The workflow of a deep learning project typically consists of the following steps: 1. Data Collection, Preparation and Analysis: Collecting and preparing the data for the project, including data exploration, feature engineering, and data cleaning. 2. Model Design & Training: Designing the architecture of the deep learning model and selecting the best hyperparameters that will lead to the highest possible performance on a given task. 3. Model Evaluation: Evaluating the performance of the model on test data to determine its accuracy. 4. Model Deployment: Deploying the model in the form of an application or service."},{"prompt":"mplement the bottom up cut rod algorithm in Python.","completion":"def bottomUpCutRod(prices, n): # Create an array of size n+1 temp_array = [0 for i in range(n+1)] for i in range(1, n+1): tempval = -float('inf') for j in range(i): tempval = max(tempval, prices[j] + temp_array[i-j-1]) temp_array[i] = tempval return temp_array[n]"},{"prompt":"w can you handle errors in Python?","completion":"Python provides two ways to handle errors: 1. The try and except statement, and 2. The raise statement. The try and except statement is used to catch and handle exceptions, while the raise statement is used to explicitly raise an exception."},{"prompt":"Describe the working of a Recurrent Neural Network (RNN).","completion":"A Recurrent Neural Network (RNN) is a type of artificial neural network that is widely used for natural language processing, dialogue systems, and time series prediction. RNNs have the ability to process data sequences, which gives them an advantage over traditional neural networks. This is done by using recurrent connections between the hidden layers of the network. In this type of network architecture, the outputs from the previous layer are used as inputs to the next layer. This allows the network to remember the context of the data sequentially, which makes it suitable for problems with a temporal component. RNNs can also be used to train the model to produce a sequence output by predicting the next item in the sequence."},{"prompt":"Provide a function to implement a Binary Tree traversal.","completion":"def printTree(root): # Check if tree is empty if root == None: return # First print the root data print(root.data, end=\\" \\") # First recur on left child printTree(root.left) # the recur on right child printTree(root.right)"},{"prompt":"Create a correlation heatmap in Python using a given dataset. import pandas as pd import numpy as np data = pd.DataFrame(np.random.randint(0,100,size=(100, 4)), columns=list('ABCD'))","completion":"import seaborn as sns import matplotlib.pyplot as plt corr = data.corr() sns.heatmap(corr, xticklabels=corr.columns, yticklabels=corr.columns) plt.show()"},{"prompt":"For a given programming language, list the data types supported by that language.","completion":"In Java, the supported data types include primitive data types like int, float, char, as well as non-primitive types such as String, Array, List, Set, and Map."},{"prompt":"Generate the Fibonacci sequence in a given range in Python. n = 8","completion":"def Fibonacci(n): a = 0 b = 1 if n < 0: print(\\"Incorrect input\\") elif n == 0: return a elif n == 1: return b else: for i in range(2,n): c = a + b a = b b = c return b Fibonacci(n)"},{"prompt":"Write code to convert a given string to all uppercase letters in Python.","completion":"string_org = \\"convert this to uppercase\\" string_uppercase = string_org.upper() print(string_uppercase) # OUTPUT: CONVERT THIS TO UPPERCASE"},{"prompt":"Generate a random 9-digit id in Java.","completion":"import java.util.Random; public class Example { public static void main(String[] args) { Random random = new Random(); int random_number = 1000000000 + random.nextInt(900000000); System.out.println(random_number); } }"},{"prompt":"Create a url parser in JavaScript that can return the path from a given url.","completion":"function getPathFromURL(url) { const urlObj = new URL(url); const path = urlObj.pathname; return path; }"},{"prompt":"Write a code to print out a multiplication table of a number in Python.","completion":"def print_multiplication_table(num): for i in range(1,11): print(num,'x',i,'=',num*i) print_multiplication_table(5) # OUTPUT: 5 x 1 = 5 5 x 2 = 10 5 x 3 = 15 5 x 4 = 20 5 x 5 = 25 5 x 6 = 30 5 x 7 = 35 5 x 8 = 40 5 x 9 = 45 5 x 10 = 50"},{"prompt":"Create a C# class with an interface that can be used to store and manipulate data.","completion":"public class DataManipulator { public interface IDataManipulator { void StoreData(string data); void ManipulateData(); } }"},{"prompt":"Write a SQL query to select all the vehicles from a table that are owned by John. Table name: vehicles Columns: owner_name, vehicle","completion":"SELECT vehicle FROM vehicles WHERE owner_name = 'John'"},{"prompt":"What is the ASCII character for the code “97”?","completion":"The ASCII character for the code “97” is 'a'."},{"prompt":"the following code, what is the variable a? var a = 3 + 4;","completion":"The variable a is the result of the expression 3 + 4, which is 7."},{"prompt":"Write a recurrence relation for the following algorithm. Algorithm A: n = n - 3 if n ≥ 0 then A(n)","completion":"The recurrence relation for Algorithm A is A(n) = A(n - 3), n ≥ 0."},{"prompt":"Are string and array objects mutable or immutable in JavaScript?","completion":"In JavaScript, strings and arrays are both mutable objects. This means that these objects can be changed after they have been created, and can be modified in place. Other primitive data types, such as numbers and booleans, are immutable and cannot be changed after they have been created."},{"prompt":"Suggest a machine learning model for predicting stock prices.","completion":"A possible machine learning model for predicting stock prices is the Long Short-Term Memory (LSTM) Neural Network. This model is widely used for forecasting time-series data, such as stock prices. It is capable of capturing long-term dependencies and has been used successfully to make accurate predictions in many areas."},{"prompt":"Write CSS code to position a div in the middle and bottom of the page.","completion":"div { position: absolute; bottom: 0; left: 50%; transform: translateX(-50%); }"},{"prompt":"w would you design a game of hangman using object-oriented programming?","completion":"In designing a game of hangman using object-oriented programming, one could create separate classes for a Hangman game, a player, a puzzle, and a set of words. The Hangman class would be responsible for managing the game overall and for handling the interactions between the player and the puzzle. The player class would store the players name, number of guesses, and score. The puzzle class would manage the state of the puzzle and handle updates when new letters are guessed. Finally, the Words class would handle the management and loading of word data."},{"prompt":"Convert the following block of code into a more concise version using more appropriate looping mechanisms. myList = [\\"one\\", \\"two\\", \\"three\\", \\"four\\"] newList = [] for element in myList: newList.append(element[0])","completion":"myList = [\\"one\\", \\"two\\", \\"three\\", \\"four\\"] newList = [element[0] for element in myList]"},{"prompt":"Generate a new array by selecting the menu entries associated with each table. table1 = [\\"burger\\", \\"fries\\"] table2 = [\\"pizza\\", \\"bbq chicken\\"]","completion":"menu = [] menu.extend(table1) menu.extend(table2)"},{"prompt":"Write a code snippet that prints out each name and its length. names = [\\"John\\", \\"Alice\\", \\"Paul\\"]","completion":"for name in names: print(name, len(name))"},{"prompt":"Generate a list containing all multiples of 3 from 0 to 30.","completion":"multiples_of_3 = [0, 3, 6, 9, 12, 15, 18, 21, 24, 27, 30]"},{"prompt":"Sort the string list across both key and value. list =[(\\"hello\\", 1), (\\"world\\", 2), (\\"today\\", 4), (\\"is\\", 3)]","completion":"list =[(\\"hello\\", 1), (\\"world\\", 2), (\\"today\\", 4), (\\"is\\", 3)] sorted_list = sorted(list, key = lambda kv:(kv[0], kv[1])) print(sorted_list)"},{"prompt":"Describe a short code fragment that imports xml as an object.","completion":"import xml.etree.ElementTree as ET tree = ET.parse(\\"doc.xml\\") root = tree.getroot()"},{"prompt":"Modify the code to make it compatible with Python 3. mylist = range(20) for i in mylist: print","completion":"mylist = list(range(20)) for i in mylist: print(i)"},{"prompt":"Remove the empty tuples in the list. mylist = [(), (1,), (1, 2), (), (3, 4), (), (5)]","completion":"mylist = [(), (1,), (1, 2), (), (3, 4), (), (5)] filtered_list = list(filter(None, mylist)) print(filtered_list)"},{"prompt":"Modify the following code to print all words with more than 5 characters in a given string. text = \\"This is an example string","completion":"text = \\"This is an example string\\" words = text.split() for word in words: if len(word) > 5: print(word)"},{"prompt":"Write a python program to replace the character ‘e' with the character ‘E' for strings of length more than 5 text = \\"Hello world!","completion":"def replace_char(text): if len(text) > 5: return text.replace('e','E') else: return text"},{"prompt":"Write a Python function to split a list of items into groups of n. list = [\\"red\\", \\"green\\", \\"orange\\", \\"blue\\", \\"pink\\", \\"purple\\"]","completion":"def split_list(data, n): output = [data[i:i+n] for i in range(0, len(data), n)] return output"},{"prompt":"Write a Python program to check if a list contains a specific item. data = [3, 4, 5, 6, 7]","completion":"def contains_item(data, item): return item in data"},{"prompt":"Given a string s, create a function to find the character that appears the most and return its index. s = \\"Big D","completion":"def most_freq_char(s): freq_dict = {} for char in s: if char in freq_dict: freq_dict[char] += 1 else: freq_dict[char] = 1 max_freq = 0 max_char = \\"\\" for key in freq_dict: if max_freq < freq_dict[key]: max_freq = freq_dict[key] max_char = key return s.index(max_char)"},{"prompt":"Parse a HTML page and find all text content within the page.","completion":"from bs4 import BeautifulSoup html_doc = \\"\\"\\" <html><head><title>Page Title</title></head> <body> <h1>Header Text</h1> <p>Paragraph 1</p> <p>Paragraph 2</p> </body> </html> \\"\\"\\" soup = BeautifulSoup(html_doc, 'html.parser') text_content = soup.find_all(text=True) for content in text_content: print(content)"},{"prompt":"Create a SQL query to return top five rows from a table named 'employees'.","completion":"SELECT * FROM employees ORDER BY salary DESC limit 5;"},{"prompt":"Given a list of strings, write a function to sort them alphabetically. [\\"orange\\", \\"apple\\", \\"banana\\"]","completion":"def sort_strings(lst): return sorted(lst, key=str.lower)"},{"prompt":"Generate a token based on the given parameters. Parameters: Algorithm (SHA-256), Size (32 characters), Encode (Hexadecimal)","completion":"import hashlib def generate_token(algorithm, size, encoding): token = hashlib.sha256(os.urandom(size//2)).hexdigest()[:size] return token"},{"prompt":"Assign the values of list_2 to the same positions of list_1. list_1 = [1, 2, 5, 8] list_2 = [3, 6, 9, 12]","completion":"list_1[0] = 3 list_1[1] = 6 list_1[2] = 9 list_1[3] = 12"},{"prompt":"Analyze the given HTML code. <div> <h3>Title</h3> <p>paragraph</p> <button>Button</button> </div>","completion":"This code creates a div element which contains an h3 for a title, a p for a paragraph, and a button element. It will be rendered as a box with the title at the top, followed by the paragraph and button below it."},{"prompt":"What does a function call statement look like in JavaScript?","completion":"A function call statement in JavaScript looks like: functionName(parameter1, parameter2, ...);"},{"prompt":"Describe the purpose of the else statement in an if-else statement.","completion":"The else statement in an if-else statement is used to execute a block of code when the expression in the if statement returns false. It provides an alternate option if the condition in the if statement is not satisfied. The else statement can be followed by an additional if-else statement in order to create an if-else-if ladder."},{"prompt":"Create a C++ program to sum two integers and output the value. 2 3","completion":"#include <iostream> int main() { int a = 2; int b = 3; int sum = a + b; std::cout << sum << std::endl; return 0; }"},{"prompt":"Create a Swift program that takes three numbers and outputs the maximum between them. 6 10 2","completion":"let num1 = 6 let num2 = 10 let num3 = 2 let max = Swift.max(num1, num2, num3) print(max)"},{"prompt":"Generate a C# program to print out the results of a multiplication table from 1 to 10.","completion":"for (int i = 1; i <= 10; i++) { for (int j = 1; j <= 10; j++) { Console.WriteLine(\\"{0} * {1} = {2}\\", i, j, (i * j)); } Console.WriteLine(); }"},{"prompt":"Convert a given number from binary to hexadecimal using C programming language. 10101","completion":"#include <stdio.h> #include <math.h> int main() { int binary=10101; int decimal=0, i=0, rem; while (binary!=0) { rem=binary%10; decimal=decimal+rem*pow(2,i); binary=binary/10; ++i; } printf(\\"The hexadecimal equivalent is : %x\\", decimal); return 0; }"},{"prompt":"SQL, write an expression to output all valid email addresses from a table of users.","completion":"SELECT email FROM users WHERE email LIKE '%@%.%';"},{"prompt":"Change the given program code to swap the values of two variables 'a' and 'b'. let a = 8; let b = 12;","completion":"let a = 12; let b = 8;"},{"prompt":"Write the output for the following Java program. public class OddNumber { public static void main(String[] args) { for(int i=10; i<20; i++) { if(i % 2 == 1) { System.out.println(i); } } } }","completion":"11 13 15 17 19"},{"prompt":"Convert the given hashmap ['name1': 'value1', 'name2': 'value2' ] to JSON.","completion":"{ \\"name1\\": \\"value1\\", \\"name2\\": \\"value2\\" }"},{"prompt":"w is an exception handled in a C# program?","completion":"An exception is handled in a C# program by using the try/catch statement. The statement provides a way to handle any potential errors that may occur while executing the program. It allows you to define a section of code that can execute even if an exception or error is encountered."},{"prompt":"Describe how to debug a HTML web page.","completion":"Debugging a HTML page involves inspecting the page elements to detect any errors and identify the source of any issues. Many web browsers have a Developer Tools feature that can be used to inspect and debug the page. It allows you to view the page HTML and JavaScript, as well as view any errors and warning messages that may appear."},{"prompt":"Construct a while loop in order to traverse through an array.","completion":"arr = [1, 2, 3, 4, 5] i = 0 while i < len(arr): element = arr[i] print(element) i += 1"},{"prompt":"Suggest a SQL query to retrieve the employee records with an age greater than 30.","completion":"SELECT * FROM employees WHERE age > 30;"},{"prompt":"Suggest a way to find all the divisors of a number, n.","completion":"We can find all the divisors of a number by using a for loop to iterate from 1 to n. For each number, we check if it is a divisor of n. If it is, then we add it to a list of divisors. At the end of the loop, we will have the list of all divisors of n."},{"prompt":"Describe the process of writing a recursive program.","completion":"Writing a recursive program involves identifying a base case, which is a situation where the answer has been found and doesn’t need to be recomputed. This is followed by defining the recursive case which involves breaking the problem down into smaller and smaller subproblems until the base case is reached. Each recursive call should pass the necessary information to the next call for solving the subproblem. The computed results are eventually combined to solve the original problem."},{"prompt":"Create a function that takes an integer n as an argument and returns the sum of all numbers from 1 to n. n = 10","completion":"def sum_to_n(n): total = 0 for i in range(1, n + 1): total += i return total"},{"prompt":"Using JavaScript, write a function that takes a string as an argument and prints out whether the string is a Palindrome. str = \\"racecar","completion":"function isPalindrome(str) { var i; var len = str.length; for (i = 0; i < len/2; i++) { if (str[i] !== str[len - 1 - i]) { return false; } } return true; }"},{"prompt":"Find the max 2 numbers in a list of 5 numbers without using any comparison operator. arr = [3, 10, 2, 5, 9]","completion":"def findMax2Numbers(arr): max1 = 0 max2 = 0 for i in range(len(arr)): temp = arr[i] + max1 max2 = max1 if temp > max2: max1 = temp elif max2 > temp: max1 = max2 return max1, max2"},{"prompt":"Generate a for-loop that prints out the square of the first 10 natural numbers.","completion":"for i in range(1,11): print(i ** 2)"},{"prompt":"Assume that you want to create a directory called 'testDir' in the current working directory. Write the command that can be used to do this in Linux.","completion":"mkdir testDir"},{"prompt":"Rewrite the following code snippet (written in Java), such that the same purpose is accomplished but with fewer lines of code. public static void printList(List<String> list) { for (int i = 0; i < list.size(); i++) { System.out.println(list.get(i)); } }","completion":"public static void printList(List<String> list){ list.forEach(s -> System.out.println(s)); }"},{"prompt":"Given a list of numbers, write a function that returns the sum without using the built-in 'sum()' function. arr = [3, 4, 2, 5, 9]","completion":"def add_nums(arr): total = 0 for x in arr: total += x return total"},{"prompt":"Create a SQL statement that updates a table called 'students' with a new entry. name = \\"John Doe\\" age = 21","completion":"INSERT INTO students (name, age) VALUES (\\"John Doe\\", 21);"},{"prompt":"Develop a C++ program to implement a basic calculator that performs addition, subtraction, multiplication and division.","completion":"#include <iostream> // Perform addition, subtraction, multiplication and division. int main() { char operate; float num1, num2; std::cout << \\"Enter an operator +, -, *, or /: \\"; std::cin >> operate; std::cout << \\"Enter two numbers: \\"; std::cin >> num1 >> num2; switch (operate) { case '+': std::cout << num1 + num2; break; case '-': std::cout << num1 - num2; break; case '*': std::cout << num1 * num2; break; case '/': std::cout << num1 / num2; break; default: std::cout << \\"Error! No valid operator provided\\"; } return 0; }"},{"prompt":"Write a Java code snippet to check whether or not a number is a prime.","completion":"public static boolean isPrime(int number) { if (number == 2 || number == 3) return true; if (number % 2 == 0 || number % 3 == 0) return false; int sqrtN = (int)Math.sqrt(number) + 1; for (int i = 6; i <= sqrtN; i += 6) { if (number % (i - 1) == 0 || number % (i + 1) == 0) return false; } return true; }"},{"prompt":"Write a Python program to create a random string of size 10 consisting of alphabets and digits.","completion":"import random def randomString(stringLength=10): lettersAndDigits = string.ascii_letters + string.digits return ''.join(random.choice(lettersAndDigits) for i in range(stringLength))"},{"prompt":"Write an SQL query to get all employee salaries whose salaries are more than 50000.","completion":"SELECT salary FROM employees WHERE salary > 50000;"},{"prompt":"Write a C# program to print the number of occurrences of the given number in a given array. int[] arr = {2, 4, 8, 8, 8, 10}, k = 8","completion":"int count = 0; foreach (int num in arr) { if (num == k) count++; } Console.WriteLine(\\"Number of occurrences of {0} is {1}.\\", k, count);"},{"prompt":"Write a C++ program to create a new array from a given array of integers, removing negative numbers. int arr[] = {-4, 3, 2, -2, 6, -7}","completion":"int new_arr[6]; int j = 0; for (int i = 0; i < 6; i++) { if (arr[i] >= 0) { new_arr[j] = arr[i]; j++; } }"},{"prompt":"Construct a SQL query to get the names of all employees who joined after January 1st 2018.","completion":"SELECT Name FROM Employees WHERE JoinDate > '2018-01-01';"},{"prompt":"Write an SQL query to display the name of the employees and their managers.","completion":"SELECT E1.Name AS EmployeeName, E2.Name AS ManagerName FROM Employees E1 INNER JOIN Employees E2 ON E1.ManagerId = E2.EmployeeId;"},{"prompt":"Write a C# program to interchange the elements of the first and last columns of a given matrix. int[,] matrix = { { 11, 21, 31, 41 }, { 12, 22, 32, 42 }, { 13, 23, 33, 43 } };","completion":"for (int i = 0; i < matrix.GetLength(0); i++) { int temp = matrix[i, 0]; matrix[i, 0] = matrix[i, matrix.GetLength(1)-1]; matrix[i, matrix.GetLength(1)-1] = temp; }"},{"prompt":"Write a Java program to print the elements (i, j) of a two dimensional array. int[][] matrix = {{1, 2, 3}, {4, 5, 6}, {7, 8, 9}}","completion":"for (int i = 0; i < matrix.length; i++) { for (int j = 0; j < matrix[i].length; j++) System.out.print(matrix[i][j] + \\" \\"); System.out.println(); }"},{"prompt":"Construct an SQL query to display the titles of movies with more than 10 awards.","completion":"SELECT Title FROM Movies WHERE Awards > 10;"},{"prompt":"Construct an HTML page with a centered text heading.","completion":"<!DOCTYPE html> <html> <head> <title>Centered text heading</title> </head> <body> <h1 align=\\"center\\">Heading</h1> </body> </html>"},{"prompt":"Write an Android program to detect if the device is connected to the Internet.","completion":"public class NetworkUtil { public static boolean isConnected(Context context){ ConnectivityManager connectivityManager = (ConnectivityManager) context.getSystemService(Context.CONNECTIVITY_SERVICE); NetworkInfo activeNetwork = connectivityManager.getActiveNetworkInfo(); return activeNetwork != null && activeNetwork.isConnectedOrConnecting(); } }"},{"prompt":"Write an SQL query to change the column type of a table. table: people column: age type: INT","completion":"ALTER TABLE people MODIFY age INT;"},{"prompt":"Create a function in Python to replace a specified element in a given list","completion":"def replace_in_list(list, old_element, new_element): for i, element in enumerate(list): if element == old_element: list[i] = new_element return list"},{"prompt":"Write the shortest code to print Hello World","completion":"print('Hello World')"},{"prompt":"Generate a function in Java to calculate the minimum of two values","completion":"public int minValue(int a, int b) { if (a < b) { return a; } else { return b; } }"},{"prompt":"Store the following information in a JavaScript object Name: John, Age: 24","completion":"let john = { name: \\"John\\", age: 24 };"},{"prompt":"Write a Python class to print the sum of an array elements","completion":"class ArraySum: def __init__(self, arr): self.arr = arr def sum(self): total = 0 for i in self.arr: total += i return total"},{"prompt":"Extract the first half of a given string. string = \\"This is an example of string","completion":"first_half = string[0:len(string)//2] # \\"This is an\\""},{"prompt":"Create an array containing the last three prime numbers.","completion":"last_three_primes = [97, 89, 83]"},{"prompt":"Write a function to identify leap year.","completion":"def isLeapYear(year): if (year % 4 == 0 and year % 100 != 0) or year % 400 == 0: return True else: return False"},{"prompt":"Compile a given Java program. A java program containing the following lines class Sample { public static void main(String args[]) { System.out.println(\\"Hello World\\"); } }","completion":"javac Sample.java"},{"prompt":"Create a regular expression pattern to find all words ending with \\"able\\".","completion":"pattern = re.compile(r\\"w+ableb\\")"},{"prompt":"Create a LINQ query to count the number of elements with a specific value. List<int> arr = [1, 2, 3, 4, 5, 5];","completion":"int count = arr.Count(x => x == 5);"},{"prompt":"Define a C++ function to calculate the volume of a sphere.","completion":"double sphereVolume(double radius) { return (4.0/3.0) * 3.14159 * radius * radius * radius; }"},{"prompt":"Design a regular expression to match strings that begin with the letter \\"a\\".","completion":"^a.*"},{"prompt":"Rewrite the following code to delete the elements from the list which are not even. x = [1, 2, 3, 4, 5]","completion":"x = [i for i in x if i % 2 == 0]"},{"prompt":"Write a query in SQL to retrieve the records that have the highest salary.","completion":"SELECT * FROM Employees ORDER BY salary DESC LIMIT 1;"},{"prompt":"Construct a JSON object which contains the elements \\"name\\", \\"age\\", and \\"occupation\\".","completion":"{ \\"name\\": \\"John Doe\\", \\"age\\": 24, \\"occupation\\": \\"Software Engineer\\" }"},{"prompt":"Construct an HTML form with input elements for name and email.","completion":"<form> <label for=\\"name_field\\">Name:</label> <input type=\\"text\\" id=\\"name_field\\" name=\\"name\\"/> <br /> <label for=\\"email_field\\">Email:</label> <input type=\\"text\\" id=\\"email_field\\" name=\\"email\\"/> <br /> <input type=\\"submit\\" value=\\"Submit\\"/> </form>"},{"prompt":"Given a two lists, combine the contents of both lists into a new list. list1 = [1, 2, 3, 4] list2 = [5, 6, 7, 8]","completion":"new_list = list1+list2"},{"prompt":"Create a variable to store your name.","completion":"name = \\"John\\""},{"prompt":"Convert a given JSON string to its Python dictionary equivalent. json_string = '{\\"name\\":\\"John\\",\\"age\\":30}'","completion":"import json python_dict = json.loads(json_string)"},{"prompt":"Write a for loop to iterate through a list of integers and print out the square of each value. numbers = [1, 2, 3, 4]","completion":"for num in numbers: print(num**2)"},{"prompt":"Find the index of the first occurence of the given element in a list. my_list = [2, 5, 6, 8, 10] element = 8","completion":"index = my_list.index(element)"},{"prompt":"What do we mean by immutability in Python?","completion":"Immutability in Python refers to the concept of objects that are unable to be modified. Immutable objects are specified when they are created and cannot be changed beyond that point. For example, tuples and strings are always immutable."},{"prompt":"Strip the white spaces from a given string. my_string = \\" Hello World","completion":"stripped_string = my_string.strip()"},{"prompt":"Create an array with 3 elements of your choice.","completion":"my_array = [\\"John\\", 25, True]"},{"prompt":"Parse the sentence and extract all the verbs from it. Sentence: \\"She ran quickly to catch the bus.","completion":"def extract_verbs(sentence): verbs = [] words = sentence.split(\\" \\") for w in words: if w.endswith(\\"ed\\") or w.endswith(\\"ing\\"): verbs.append(w) return verbs"},{"prompt":"Train a Machine Learning model using scikit-learn that can solve a binary classification problem. Dataset - number of samples 1000, number of features 5, target label - binary","completion":"from sklearn.model_selection import train_test_split from sklearn.linear_model import LogisticRegression X_train, X_test, y_train, y_test = train_test_split(X, y, random_state=0) logreg = LogisticRegression(random_state=0).fit(X_train, y_train)"},{"prompt":"Create a class named Student. Give it two fields - name and age.","completion":"class Student: def __init__(self, name, age): self.name = name self.age = age"},{"prompt":"Find the two adjacent elements in the array with the largest sum. Array: [3, 6, 8, -10, 5]","completion":"def find_adjacent(arr): max_sum = -1 for i in range(len(arr)-1): if arr[i] + arr[i+1] > max_sum: max_sum = arr[i] + arr[i+1] return max_sum"},{"prompt":"Generate a dictionary that contains all the words in a string of text, and the number of times each word occurs. Text: \\"I like dogs and cats and I like cats more than dog","completion":"def create_dict(text): text_list = text.split(' ') count_dict = {} for word in text_list: count_dict[word] = count_dict.get(word, 0) + 1 return count_dict"},{"prompt":"Create a list of dictionaries, with each dictionary containing a person's name, age, and city. Name1: Alice; Age1: 24; City1: Boston Name2: Bob; Age2: 32; City2: New York Name3: Chris; Age3: 28; City3: San Francisco","completion":"persons = [ {'name': 'Alice', 'age': 24, 'city': 'Boston'}, {'name': 'Bob', 'age': 32, 'city': 'New York'}, {'name': 'Chris', 'age': 28, 'city': 'San Francisco'}, ]"},{"prompt":"Edit the sentence to make it grammatically correct. Sentence: \\"I work at the library did.","completion":"I worked at the library."},{"prompt":"Classify the given animals into two categories: mammal or reptile [dog, snake, turtle, elephant]","completion":"Mammal: dog, elephant Reptile: snake, turtle"},{"prompt":"Create a new list object by selecting the names that start with a ‘A’ from the given list [Alfred, John, Anthony, Paula]","completion":"Name_list = [name for name in input_list if name[0] == 'A']"},{"prompt":"Generate a valid SQL query to get the total number of people in each job type","completion":"SELECT job_type, COUNT(*) FROM table_name GROUP BY job_type;"},{"prompt":"Edit the following Python code to print out “The answer is X” print(\\"X + 5 = 10\\")","completion":"print(\\"The answer is \\" + str(10 - 5))"},{"prompt":"Create a rectangle using the turtle library in Python","completion":"import turtle t = turtle.Turtle() t.forward(100) t.left(90) t.forward(50) t.left(90) t.forward(100) t.left(90) t.forward(50) t.left(90)"},{"prompt":"Build a HTML table using the given JSON data data = { \\"col1\\": [\\"One\\", \\"Two\\", \\"Three\\"], \\"col2\\": [\\"Alpha\\", \\"Beta\\",\\"Gamma\\"] }","completion":"<table> <tr> <th>Col1</th> <th>Col2</th> </tr> <tr> <td>One</td> <td>Alpha</td> </tr> <tr> <td>Two</td> <td>Beta</td> </tr> <tr> <td>Three</td> <td>Gamma</td> </tr> </table>"},{"prompt":"Edit the following Java code so that it will output the length of a string String name = \\"Joh","completion":"String name = \\"John\\"; System.out.println(\\"Length of string is: \\" + name.length());"},{"prompt":"Use JavaScript to illustrate the concept of inheritance with an example.","completion":"In JavaScript, inheritance is an object-oriented programming concept where an object inherits the properties and methods from its parent object. To illustrate this concept, consider the example of a Person being a parent object and a Student being the child object. The Person object would have properties such as age, name, and gender, while the Student object would inherit all of those properties and have additional properties such as grade and student_ID."},{"prompt":"Create a pandas dataframe containing the following columns and their respective values: A, B, C A= 12, 15, 20 B= 30, 25, 35 C= 40, 45, 50","completion":"df = pd.DataFrame({\\"A\\": [12,15,20], \\"B\\": [30,25,35], \\"C\\": [40,45,50]})"},{"prompt":"Summarize the article 'X' in one or two paragraphs. Article 'X': This article is about the history of the city of Rome. Rome was founded in 753 BCE by two brothers, Romulus and Remus. Since then, Rome has been a powerful city that has played a huge role in the formation of Western civilization. The Roman Republic was established in 509 BCE, and the Roman Empire followed in 27 BCE. During its long reign, Rome expanded its borders and implemented various laws and policies that shaped the legal systems of many countries.","completion":"Rome is one of the oldest cities in the world, having been founded in 753 BCE by Romulus and Remus. Following its founding, Rome quickly developed into a powerful city-state, establishing the Roman Republic in 509 BCE and the Roman Empire in 27 BCE. During its reign, Rome significantly expanded its reach and instituted laws and policies that influenced much of Western civilization. It eventually fell in 476 CE, yet its legacy continues to impact many countries today."},{"prompt":"Compile a C++ program using gcc. filename.cpp","completion":"gcc -o filename filename.cpp"},{"prompt":"Find the index of the first occurrence of the word 'data' in the text 'The data here is important'.","completion":"The index of the first occurrence of 'data' is 4."},{"prompt":"Construct a matrix using the given list of numbers. numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]","completion":"matrix = [[1, 2, 3], [4, 5, 6], [7, 8, 9], [10]]"},{"prompt":"Given a positive integer number, generate the Fibonacci series.","completion":"def Fibonacci(n): if n<0: print(\\"Incorrect input\\") # First Fibonacci number is 0 elif n==1: return 0 # Second Fibonacci number is 1 elif n==2: return 1 else: return Fibonacci(n-1)+Fibonacci(n-2)"},{"prompt":"Create a HTML button with an id of \\"my-button\\".","completion":"<button id=\\"my-button\\">Click Me</button>"},{"prompt":"Make a matrix multiplication program that takes an arbitrary number of matrices as input.","completion":"def matrix_multiplication(*matrices): res = [[0 for _ in range(len(matrices[0][0]))] for _ in range(len(matrices[0]))] for y in range(len(matrices[0])): for x in range(len(matrices[0][0])): for m in range(len(matrices)): res[y][x] += matrices[m][y][x] return res"},{"prompt":"Write a computer program to print all primes in an inputted range.","completion":"def print_primes(start, end): for num in range(start, end + 1): # all prime numbers are greater than 1 if num > 1: for i in range(2, num): if (num % i) == 0: break else: print(num)"},{"prompt":"Create an Android app to accept user input and calculate the area of a circle.","completion":"public class MainActivity extends AppCompatActivity { EditText radiusEditText; TextView outputTextView; @Override protected void onCreate(Bundle savedInstanceState) { super.onCreate(savedInstanceState); setContentView(R.layout.activity_main); radiusEditText = findViewById(R.id.radiusEditText); outputTextView = findViewById(R.id.outputTextView); findViewById(R.id.calculateButton).setOnClickListener(new View.OnClickListener() { @Override public void onClick(View v) { calculateAreaOfCircle(); } }); } private void calculateAreaOfCircle() { double radius = Double.parseDouble(radiusEditText.getText().toString()); double area = Math.PI * radius * radius; outputTextView.setText(String.valueOf(area)); } }"},{"prompt":"Select the overlapping elements between two lists list1 = [1, 2, 3, 4, 5, 6] list2 = [3, 4, 5, 6, 7, 8]","completion":"[3, 4, 5, 6]"},{"prompt":"mplement a function for searching an item in the given list. list = [1, 4, 5, 6, 8, 9] item = 5","completion":"def search(list, item): for i in range(len(list)): if list[i] == item: return True return False"},{"prompt":"Create a function that takes a string and checks if it's a valid email or not. string = 'example[at]gmail.com'","completion":"import re def isValidEmail(string): # regex to check for valid email address regex = '^w+([.-]?w+)*@w+([.-]?w+)*(.w{2,3})+' if(re.search(regex,string)): return True else: return False"},{"prompt":"Write a function for removing duplicates from a given list list = [1, 2, 3, 3, 4, 2]","completion":"def removeDuplicates(list): # create a new set with unique elements from list unique_set = set(list) # convert set back to list unique_list = list(unique_set) return unique_list"},{"prompt":"Write a code to print out a two-dimensional array. A = [[1, 2, 3], [4, 5, 6], [7, 8, 9]]","completion":"for row in A: for elem in row: print(elem, end=' ') print()"},{"prompt":"Compare two strings and count the number of characters that are different. str1 = 'hello' str2 = 'hallo'","completion":"def countTextDifference(str1, str2): # store length of both strings len1 = len(str1) len2 = len(str2) # store the number of characters # which are different count = 0 # compare and count the number # of characters which are different for i in range(0, len1): if (i >= len2): count += (len1 - len2) break if (str1[i] == str2[i]): continue else: count += 1 # return different character count return count"},{"prompt":"Generate a dictionary with the name of the person as key and the cower letter of their name as value. names = ['John', 'Max', 'Alice']","completion":"result = {} for name in names: # get the first letter from the name first_letter = name[0] result[name] = first_letter print(result) # {'John': 'J', 'Max': 'M', 'Alice': 'A'}"},{"prompt":"Compare two strings and return true if both strings have the same number of characters. string1 = \\"hello\\" string2 = \\"world","completion":"def compare_strings(string1, string2): \\"\\"\\"Compare two strings and return True if both strings have the same number of characters.\\"\\"\\" if len(string1) == len(string2): return True else: return False"},{"prompt":"Write code to determine if a word is a palindrome or not. word = \\"noo","completion":"def palindrome_check(word): \\"\\"\\"Check if a given word is a palindrome.\\"\\"\\" # reverse the given word reversed_word = word[::-1] if word == reversed_word: return True else: return False"},{"prompt":"Create a function to convert a character to its ASCII code. character = 'a'","completion":"def char_to_ascii(character): \\"\\"\\"Convert a character to its ASCII code.\\"\\"\\" ascii_code = ord(character) return ascii_code"},{"prompt":"Calculate the maximum value in a dictionary. d = {'a': 1, 'b': 3, 'c': 5}","completion":"def get_max_value(d): \\"\\"\\"Calculate the maximum value in a dictionary.\\"\\"\\" max_value = 0 for key in d: if d[key] > max_value: max_value = d[key] return max_value"},{"prompt":"Assign a random value to each item in a given list. my_list = [1, 2, 3]","completion":"import random def assign_random_value(my_list): \\"\\"\\"Assign a random value to each item in a given list.\\"\\"\\" # iterate through each item in the list for i in range(len(my_list)): # generate a random integer between 0 and 1 random_int = random.randint(0, 1) # assign the random integer to the current item in the list my_list[i] = random_int return my_list"},{"prompt":"Edit this regression model to predict continuous values. import numpy as np def model(x): return np.mean(x)","completion":"import numpy as np def model(x): return np.mean(x) + np.poly1d(np.polyfit(x, y, 2))(x)"},{"prompt":"What should the following function return? def calculate_sd(numbers)","completion":"def calculate_sd(numbers): mean = sum(numbers) / len(numbers) variance = sum((x - mean) ** 2 for x in numbers) / len(numbers) sd = variance ** 0.5 return sd"},{"prompt":"What should the following code print out? def f(n): if n == 0: return 0 else: return n + f(n-1) print(f(5))","completion":"def f(n): if n == 0: return 0 else: return n + f(n-1) print(f(5)) # prints 15"},{"prompt":"What should this function take as input and return? def find_longest_word(words)","completion":"def find_longest_word(words): '''This function takes a list of words as input and returns a string containing the longest word''' longest_word = '' for word in words: if len(word) > len(longest_word): longest_word = word return longest_word"},{"prompt":"Suggeste a completion of the following code: def flatten(nested_list)","completion":"def flatten(nested_list): flat_list = [] for item in nested_list: if isinstance(item, list): flat_list.extend(flatten(item)) else: flat_list.append(item) return flat_list"},{"prompt":"Reverse the words of the following sentence. This is a sentence","completion":"sentence a is This"},{"prompt":"Create a quicksort alogorithm in the following language Jav","completion":"import java.util.ArrayList; public class Qsort { public static int partition(ArrayList<Integer> array, int low, int high) { int pivot = array.get(high); int i = low-1; for (int j=low; j<high; j++) { if (array.get(j) < pivot) { i++; int temp = array.get(i); array.set(i, array.get(j)); array.set(j, temp); } } int temp = array.get(i+1); array.set(i+1, array.get(high)); array.set(high, temp); return i+1; } public static void quicksort(ArrayList<Integer> array, int low, int high) { if (low < high) { int pivot_position = partition(array, low, high); quicksort(array, low, pivot_position-1); quicksort(array, pivot_position+1, high); } } }"},{"prompt":"Create an array named \`\`students\`\` which contains the elements \`\`John\`\`, \`\`Jane\`\`, \`\`Emily\`\`, and \`\`Michael\`\`.","completion":"const students = ['John', 'Jane', 'Emily', 'Michael'];"},{"prompt":"Write a JavaScript code to calculate the remainder when the variable \`\`num\`\` is divided by \`\`5\`\`. let num = 10;","completion":"let remainder = num % 5; // remainder is equal to 0"},{"prompt":"Make a function in javascript that takes two parameters \`\`name1\`\` and \`\`name2\`\` and returns both of the names together with a dash between them. let name1 = 'John', name2 = 'Smith';","completion":"function combineNames(name1, name2) { return name1 + '-' + name2; }"},{"prompt":"Write a SQL query to group all actors by the country they are from.","completion":"SELECT country, array_agg(actor) FROM actors GROUP BY country;"},{"prompt":"Define a python function called \`\`string_length\`\` that can take a string as an argument and output the length of that string.","completion":"def string_length(str): return len(str)"},{"prompt":"Create an if/else statement in JavaScript that checks if a variable \`\`age\`\` is greater than 18 and prints \\"Adult\\" if it is, and \\"Minor\\" if it isn't. let age = 22;","completion":"if (age > 18) { console.log('Adult'); } else { console.log('Minor'); }"},{"prompt":"Find an element in a JavaScript array called \`\`names\`\` using the index position 3. let names = ['John', 'Jane', 'Emily', 'Michael', 'David'];","completion":"let element = names[3]; // element is equal to 'Michael'"},{"prompt":"Write a C++ code to find the sum of all numbers in a vector. std::vector<int> numbers = {2, 3, 4, 5};","completion":"#include <iostream> #include <vector> int main() { std::vector<int> numbers = {2, 3, 4, 5}; int sum = 0; for (int i = 0; i < numbers.size(); i++) { sum += numbers[i]; } std::cout << \\"Sum: \\" << sum << std::endl; return 0; }"},{"prompt":"f a singly linked list is represented only by its head pointer, how would you reverse it?","completion":"public static ListNode reverseList(ListNode head) { // Initialize current, previous and // next pointers ListNode current = head; ListNode prev = null; ListNode next = null; while (current != null) { // Store next next = current.next; // Reverse current node's pointer current.next = prev; // Move pointers one position ahead. prev = current; current = next; } head = prev; return head; }"},{"prompt":"You are given a 2-D array named \\"matrix\\" and its size is MxN. Print the matrix in a spiral form. int matrix[][] = {{1, 2, 3}, {4, 5, 6}, {7, 8, 9}}","completion":"1 2 3 6 9 8 7 4 5"},{"prompt":"w would you solve the FizzBuzz problem in C#?","completion":"for (int i = 1; i <= 100; i++) { if (i % 15 == 0) Console.WriteLine(\\"FizzBuzz\\"); else if (i % 3 == 0) Console.WriteLine(\\"Fizz\\"); else if (i % 5 == 0) Console.WriteLine(\\"Buzz\\"); else Console.WriteLine(i); }"},{"prompt":"You are given a string \\"hello\\". Write a function to print out all the possible subsets of that string.","completion":"def generate_subsets(string): if len(string) == 0: return [''] else: results = list() for s in generate_subsets(string[1:]): results.append(s) results.append(string[0] + s) return results print(generate_subsets('hello'))"},{"prompt":"Given two non-empty linked lists representing two non-negative integers. The digits are stored in reverse order, and each of their nodes contains a single digits. Add the two numbers and return the sum as a linked list.","completion":"class Solution: def addTwoNumbers(self, l1, l2): # Initialize current, previous and # next pointers curr1 = l1 curr2 = l2 head = None prev = None carry = 0 while curr1 != None or curr2 != None or carry != 0: val1 = 0 if curr1 != None: val1 = curr1.val curr1 = curr1.next val2 = 0 if curr2 != None: val2 = curr2.val curr2 = curr2.next val = val1 + val2 + carry carry = val // 10 temp = ListNode(val%10) if prev == None: head = temp else: prev.next = temp prev = temp return head"},{"prompt":"Analyze the following code and determine if there any potential errors. def foo(X, Y): for i in range(1, X): for j in range(1, Y): print i retur","completion":"Yes, there is a potential error. The outer loop iterates over the range of 1 to X, but the inner loop iterates over the range of 1 to Y. Because of this, the loop will only be executed Y-1 times. The output will only print the first Y-1 elements of X. To fix this, the outer loop should iterate over the range of 1 to Y instead."},{"prompt":"Edit the following HTML code to enable a toggle to show and hide a DIV element when a button is clicked. <div> <button>Toggle</button> <p>This is a text paragraph.</p> </div>","completion":"<div> <button onclick=\\"toggleFunction()\\">Toggle</button> <p>This is a text paragraph.</p> <div id=\\"myDIV\\" style=\\"display:none;\\"> <p>This is the toggleable content.</p> </div> <script> function toggleFunction() { let x = document.getElementById(\\"myDIV\\"); if (x.style.display === \\"none\\") { x.style.display = \\"block\\"; } else { x.style.display = \\"none\\"; } } <\/script> </div>"},{"prompt":"Answer the following question: What is the purpose of software testing?","completion":"Software testing is the process of evaluating a software product in order to identify any potential issues and ensure that the end product meets the user's requirements. It is an essential part of the software development process, as it provides feedback about the product's quality and performance. Testing also helps ensure that a product is safe and secure, as it can detect potential problems and errors before the product is released."},{"prompt":"Using CSS, style the following HTML code to center align the text. <p>This is a text.</p>","completion":"<style> p{ text-align: center; } </style> <p>This is a text.</p>"},{"prompt":"Classify the following news article into one of the 8 major topics: \\"Politics\\", \\"Economy\\", \\"Tech\\", \\"Science\\", \\"Culture\\", \\"Education\\", \\"Sports\\" or \\"Lifestyle\\". A new study by scientists from the University of California has found a link between diet and depression.","completion":"Science"},{"prompt":"Edit the following code to update an existing item in a MongoDB database with the name “John”. db.collection(\\"users\\").findOne({ name: \\"John\\" });","completion":"db.collection(\\"users\\").updateOne( { name: \\"John\\" }, { set: { name: \\"John\\", age: 32 } } );"},{"prompt":"Construct a loop that iterates over the characters of a given string and prints each character in uppercase. string = \\"Hello World!","completion":"for ch in string: print(ch.upper())"},{"prompt":"Replace the \\"TODO\\" comment in the given code with appropriate code. if <condition>: # TODO","completion":"if <condition>: print(\\"Condition is satisfied\\")"},{"prompt":"Create a algorithm to calculate the fibonacci number of nth term.","completion":"def fib(n): a = 0 b = 1 if n == 0: return a elif n == 1: return b else: for i in range(2,n): c = a + b a = b b = c return b"},{"prompt":"What is the purpose of Java virtual machine?","completion":"The purpose of the Java virtual machine (JVM) is to provide a runtime environment for Java applications, in which programs are able to run independently of the underlying operating system. It is responsible for providing a secure and portable environment for the Java program's execution, as well as for providing several useful features, such as garbage collection and memory management. Additionally, it is also capable of providing platform independence, as it is capable of running bytecode on any platform, regardless of the underlying operating system and hardware."},{"prompt":"Construct a SQL query to add a new row to a column in a table Table Name: \\"customers\\" Column Name: \\"name\\" New row: \\"John Doe","completion":"INSERT INTO customers (name) VALUES ('John Doe');"},{"prompt":"Create an array filtering function using JavaScript","completion":"function filterArray(array){ let newArray = []; for(let i=0; i<array.length; i++){ if(array[i] >= 0){ newArray.push(array[i]); } } return newArray; }"},{"prompt":"Create a Visual Basic function to print the contents of an array.","completion":"Public Sub PrintArray(arr() As Integer) For i = 0 To arr.Length - 1 Console.WriteLine(arr(i)) Next End Sub"},{"prompt":"What is the purpose of a library in software development?","completion":"The purpose of a library in software development is to provide a collection of related functions and data structures that can be used by a program. Libraries are used to simplify or abstract away the details of how a particular operation is implemented or offer prepackaged functionality. Libraries offer code reuse, faster development time, and optimized performance. They also act as the interface between the application and the system or the environment it is running on."},{"prompt":"Generate code to print all unique 4 digit combos","completion":"def unique_4_digit_combos(): # initialize a set to store the combinations combos = set() # loop through integers between 0000 and 9999 for i in range(10000): # convert integer to string digits = str(i).zfill(4) # check if not repeated characters if len(digits) == len(set(digits)): # add to set combos.add(digits) # print the combinations for c in combos: print(c)"},{"prompt":"Write a function to calculate the cost of purchasing X items at a given cost X = 5 and Cost per item= 2.00","completion":"def cost(x, price): return x*price cost(5, 2.00) # returns 10.00"},{"prompt":"Develop a method to achieve the linear interpolation between two given points","completion":"def linear_interpolation(x1, y1, x2, y2): # slope m = (y2 - y1) / (x2 - x1) # intercept c = y2 - (m * x2) return m, c"},{"prompt":"Generate code for printing a given 2D matrix in spiral order matrix = [[1, 2, 3], [4, 5, 6], [7, 8, 9]]","completion":"def print_spiral(matrix): # matrix is an 2D array row_start = 0 row_end = len(matrix)-1 col_start = 0 col_end = len(matrix[0])-1 while row_start <= row_end and col_start <= col_end: # print top row for i in range(col_start, col_end+1): print(matrix[row_start][i]) # increment row start row_start += 1 # print right column for i in range(row_start, row_end+1): print(matrix[i][col_end]) # decrement col end col_end -= 1 # print bottom row if row_start <= row_end: for i in range(col_end, col_start-1, -1): print(matrix[row_end][i]) # decrement row end row_end -= 1 # print left column if col_start <= col_end: for i in range(row_end, row_start-1, -1): print(matrix[i][col_start]) # increment col start col_start += 1"},{"prompt":"Create a TensorFlow program to implement a multi-layer neural network","completion":"import tensorflow as tf # create the model model = tf.keras.models.Sequential() # add layers to the model model.add(tf.keras.layers.Dense(128, activation='relu')) model.add(tf.keras.layers.Dense(64, activation='relu')) model.add(tf.keras.layers.Dense(32, activation='relu')) model.add(tf.keras.layers.Dense(16, activation='relu')) model.add(tf.keras.layers.Dense(8, activation='sigmoid')) model.add(tf.keras.layers.Dense(4, activation='softmax')) # compile the model model.compile(loss='categorical_crossentropy', optimizer='adam', metrics=['accuracy'])"},{"prompt":"Create a data structure to store the 5 highest scores of a given game","completion":"# create a priority queue # score will be the priority and name will be stored as data import queue scores = queue.PriorityQueue(maxsize=5) def add_score(score, name): if scores.full(): min_score = scores.get() if min_score[0] < score: scores.put((score, name)) else: scores.put(min_score) else: scores.put((score, name))"},{"prompt":"Write an algorithm to store the data in a 2D array. [[1,2,3,4], [5,6,7,8], [9,10,11,12], [13,14,15,16]]","completion":"def storeDataIn2DArray(data): rowLength = len(data[0]) columnLength = len(data) twoDArray = [] for row in range(rowLength): twoDArrayRow = [] for column in range(columnLength): twoDArrayRow.append(data[column][row]) twoDArray.append(twoDArrayRow) return twoDArray"},{"prompt":"Create a function to print the contents of a binary tree in pre-order format.","completion":"def printPreOrder(root): if root != None: print(root.data, end=\\" \\") printPreOrder(root.left) printPreOrder(root.right)"},{"prompt":"Alter the following code to create a function called \\"find_largest\\" to find the largest number in a given list. [9, 11, 7, 16, 20]","completion":"def find_largest(lst): largest_number = lst[0] for num in lst: if num > largest_number: largest_number = num return largest_number"},{"prompt":"Create a bash script to retrieve the IP address of a given domain name.","completion":"#!/bin/bash # Retrieve the IP address of a given domain name DOMAIN=\\"1\\" if [[ -n \\"DOMAIN\\" ]] ; then IP_ADDRESS=(getent ahostsv4 \\"DOMAIN\\" | tail -1 | cut -d\\" \\" -f1) echo -e \\"The IP address of DOMAIN is IP_ADDRESS\\" else echo -e \\"Please enter a domain name nExample: www.example.com\\" fi"},{"prompt":"Write a python code to print every key and its corresponding value in a dictionary. {\\"Name\\": \\"John\\", \\"Age\\": 20, \\"Country\\": \\"USA\\"}","completion":"dic = {\\"Name\\": \\"John\\", \\"Age\\": 20, \\"Country\\": \\"USA\\"} for key, value in dic.items(): print(key + \\" : \\" + str(value))"},{"prompt":"Alter the following code to detect a loop in a linked list","completion":"def detectLoop(head): slow_p = head fast_p = head while (slow_p and fast_p and fast_p.next): slow_p = slow_p.next fast_p = fast_p.next.next if slow_p == fast_p: return 1 return 0"},{"prompt":"Create a function in Javascript to convert hour in 24-hours format to hour in 12-hours format. 14","completion":"function convert24HourFormatTo12HourFormat(hours) { if (hours > 12) { return (hours - 12) + \\"PM\\"; } else if (hours == 12) { return hours + \\"PM\\"; } else if (hours == 0) { return 12 + \\"AM\\"; } else { return hours + \\"AM\\"; } }"},{"prompt":"Suggest a way to serialize a binary tree in python.","completion":"def serializeBinaryTree(root): if root == None: return \\"#\\" serializedTree = \\"\\" serializedTree += str(root.val) + ',' serializedTree += serializeBinaryTree(root.left) + ',' serializedTree += serializeBinaryTree(root.right) return serializedTree"},{"prompt":"Alter the code to return the last element of a linked list.","completion":"def getLastElement(head): # Base case if head == None: return None # If list is not empty, traverse # to the last node start = head while (start.next != None): start = start.next # return last element return start"},{"prompt":"Suggest a python code to print a 2D board with 'X' and 'O'. [['X', 'O', 'X'], ['O', 'X', 'O'], ['X', 'X', 'O']]","completion":"board = [['X', 'O', 'X'], ['O', 'X', 'O'], ['X', 'X', 'O']] for row in board: for cell in row: print(cell, end=\\" \\") print()"},{"prompt":"Compute the sum of the integers in the given array. Integers in the array: [1, 2, 3, 4, 5]","completion":"The sum of the integers in the array is 15."},{"prompt":"w would you print \\"Goodbye\\" ten times in Python?","completion":"for i in range(10): print(\\"Goodbye\\")"},{"prompt":"Sort the list \`\`\`[5, 3, 1, 4, 2]\`\`\` numerically.","completion":"The sorted list is [1, 2, 3, 4, 5]."},{"prompt":"Create a linked list to store the values \`\`\`[10, 20, 30]\`\`\`.","completion":"class Node: def __init__(self, data): self.data = data self.next = None class LinkedList: def __init__(self): self.head = None list = [10, 20, 30] llist = LinkedList() llist.head = Node(list[0]) temp = llist.head for i in range(1, len(list)): temp.next = Node(list[i]) temp = temp.next"},{"prompt":"What data type would you use to store the title of a book?","completion":"You would use a String data type to store the title of a book."},{"prompt":"Create an object method to calculate the area of a triangle in Python.","completion":"def calculate_area(self): return (self.base * self.height) / 2"},{"prompt":"w would you cast a float to an integer in C++?","completion":"You can cast a float to an integer in C++ using the (int) operator."},{"prompt":"Edit the following code to make the loop run for 10 iterations. for (int i = 0; i < 5; i++) { System.out.println(i); }","completion":"for (int i = 0; i < 10; i++) { System.out.println(i); }"},{"prompt":"Name five different Python libraries used for visualization.","completion":"Matplotlib, Seaborn, Bokeh, Plotly, and Altair."},{"prompt":"Create a function in Java to print out all substrings of an input string.","completion":"public static void printSubstrings(String str) { for (int i = 0; i < str.length(); i++) { for (int j = i + 1; j <= str.length(); j++) { System.out.println(str.substring(i, j)); } } }"},{"prompt":"What kind of data structure is used for a queue in Java?","completion":"A queue in Java is typically implemented using a linked list or an array."},{"prompt":"Create a text classification model using Scikit-learn to classify a message with either \\"positive\\" or \\"negative\\" sentiment.","completion":"from sklearn.feature_extraction.text import CountVectorizer from sklearn.linear_model import LogisticRegression # Vectorize the message into a format that the model can accept vect = CountVectorizer().fit(X_train) X_train_vectorized = vect.transform(X_train) # Train a Logistic Regression model model = LogisticRegression() model.fit(X_train_vectorized, y_train) # Use the model to predict the sentiment of a given message message_sentiment = model.predict([vect.transform([message])])"},{"prompt":"Write a MySQL query to select the first 3 rows of the student table.","completion":"SELECT * FROM student LIMIT 3;"},{"prompt":"Write an SQL query to select the gender, age and count of people from the people table for people aged 20-30.","completion":"SELECT gender, age, COUNT(*) FROM people WHERE age BETWEEN 20 AND 30 GROUP BY gender, age;"},{"prompt":"Create a function that returns a list of all the factors of a given number. 64","completion":"def factor(x): factors = [] for i in range(1, x + 1): if x % i == 0: factors.append(i) return factors print(factor(64)) # Output: [1, 2, 4, 8, 16, 32, 64]"},{"prompt":"Write a code to convert a given string of English characters to corresponding Morse code. \\"Hello World!","completion":"def morse_encode(input_string): morse_encoder = { \\"A\\":\\".- \\", \\"B\\":\\"-... \\", \\"C\\":\\"-.-. \\", \\"D\\":\\"-.. \\", \\"E\\":\\" . \\", \\"F\\":\\"..-. \\", \\"G\\":\\"--. \\", \\"H\\":\\".... \\", \\"I\\":\\".. \\", \\"J\\":\\".--- \\", \\"K\\":\\"-.- \\", \\"L\\":\\".-.. \\", \\"M\\":\\"-- \\", \\"N\\":\\"-. \\", \\"O\\":\\"--- \\", \\"P\\":\\".--. \\", \\"Q\\":\\"--.- \\", \\"R\\":\\".-. \\", \\"S\\":\\"... \\", \\"T\\":\\"- \\", \\"U\\":\\"..- \\", \\"V\\":\\"...- \\", \\"W\\":\\".-- \\", \\"X\\":\\"-..- \\", \\"Y\\":\\"-.-- \\", \\"Z\\":\\"--.. \\", \\" \\": \\" \\" } morse_string = [] for char in input_string.upper(): encoded_char = morse_encoder.get(char) morse_string.append(encoded_char) return ''.join(morse_string) print(morse_encode(\\"Hello World!\\")) # Output: \\".... . .-.. .-.. --- .-- --- .-. .-.. -.. ! \\""},{"prompt":"Define a function to check whether string a is an anagram of string b. \\"silent\\" \\"liste","completion":"def is_anagram(a, b): a = a.lower() b = b.lower() if len(a) != len(b): return False for char in a: if char not in b: return False b = b.replace(char, '', 1) return True print(is_anagram(\\"silent\\", \\"listen\\")) # Output: True"},{"prompt":"Write a code for linear search algorithm. [4, 5, 2, 3] 2","completion":"def linear_search(arr, target): for i in range(len(arr)): if arr[i] == target: return i return None print(linear_search([4, 5, 2, 3], 2)) # Output: 2"},{"prompt":"Compare two Python lists having integers and write a function to output the differences list_a = [1, 2, 3] list_b = [2, 3, 4]","completion":"def get_diff(list_a, list_b): diff = list_a for i in list_b: if i in list_a: diff.remove(i) return diff"},{"prompt":"Generate a dictionary out of two lists by matching each element in the two lists list_a =[2, 3, 4] list_b = [\\"a\\", \\"b\\", \\"c\\"]","completion":"def make_dict(list_a, list_b): dict = {} for a, b in zip(list_a, list_b): dict[a] = b return dict"},{"prompt":"Write a Python code to convert a binary tree to its mirror tree","completion":"def mirror_tree(root): if root is None: return # Do the postorder traversal to traverse down to leaf nodes mirror_tree(root.left) mirror_tree(root.right) # Swap the pointers in this node root.left, root.right = root.right, root.left"},{"prompt":"Find all the possible moves of a knight in a chessboard","completion":"def knight_moves(x, y): result = [] # Move 1 on x-axis, 2 on the y-axis result.append((x + 1, y + 2)) # Move 2 on x-axis, 1 on the y-axis result.append((x + 2, y + 1)) # Move 1 on x-axis, -2 on the y-axis result.append((x + 1, y - 2)) # Move -2 on x-axis, 1 on the y-axis result.append((x - 2, y + 1)) # Move -1 on x-axis, 2 on the y-axis result.append((x - 1, y + 2)) # Move 2 on x-axis, -1 on the y-axis result.append((x + 2, y - 1)) # Move -1 on x-axis, -2 on the y-axis result.append((x - 1, y - 2)) # Move -2 on x-axis, -1 on the y-axis result.append((x - 2, y - 1)) return result"},{"prompt":"Design a data structure that can efficiently store the capitals of different countries and their respective populations.","completion":"class CountryCapitalPopulation{ HashMap<String, Integer> countryCapPop; public CountryCapitalPopulation(){ countryCapPop = new HashMap<String, Integer>(); } public void addCountryCapitalPopulation(String country, String capital, int population){ countryCapPop.put(country+capital, population); } public int getPopulation(String country, String capital){ return countryCapPop.get(country+capital); } }"},{"prompt":"Compose an SQL query to identify which employees were born after January 1, 1984.","completion":"SELECT * FROM employees WHERE date_of_birth > '1984-01-01';"},{"prompt":"Develop a HTML5 program to display a box with the text \\"Hello World!","completion":"<!DOCTYPE html> <html> <head> <title>Hello World!</title> </head> <body> <div class=\\"box\\">Hello World!</div> </body> </html>"},{"prompt":"Create a robust Helper Function in PHP that returns an array containing the N most frequent words in a string Input String: \\"The quick brown fox jumps over the lazy dog\\" N: 3","completion":"function get_freq_words(str, n) { arr = explode(\\" \\", str); freq = array_count_values(arr); arsort(freq); return array_slice(array_keys(freq), 0, n); }"},{"prompt":"Develop a Python script to sum up all the individual digits of a given number 354","completion":"def sum_digits(input_number): sum_of_digits = 0 while input_number > 0: last_digit = input_number % 10 sum_of_digits += last_digit input_number //= 10 return sum_of_digits sum_digits(354)"},{"prompt":"Design a NodeJS script to call a remote API and convert the response to a csv object.","completion":"const fetch = require('node-fetch'); const csv = require('csvtojson'); async function callAPIAndConverttoCSV(url) { try { const response = await fetch(url); const jsonData = await response.json(); const csvData = await csv().fromString(jsonData); return csvData; } catch (err) { throw err; } }"},{"prompt":"For the following HTML code, how could you style the \`nav\` element to make it scrollable? <nav> <a href=\\"#\\">Link 1</a> <a href=\\"#\\">Link 2</a> <a href=\\"#\\">Link 3</a> <a href=\\"#\\">Link 4</a> </nav>","completion":"<nav style=\\"overflow-y: scroll; max-height: 200px;\\"> <a href=\\"#\\">Link 1</a> <a href=\\"#\\">Link 2</a> <a href=\\"#\\">Link 3</a> <a href=\\"#\\">Link 4</a> </nav>"},{"prompt":"Write a SQL query to select the latest registration record for each user.","completion":"SELECT * FROM registrations WHERE registration_date IN (SELECT MAX(registration_date) FROM registrations GROUP BY user_id);"},{"prompt":"w could you read a specific compression format such as .zip in Python?","completion":"Python has a built-in zipfile module which provides support for reading and writing zip archives in native Python code. The module provides a ZipFile object with methods to read and extract contents of the archive, as well as a class representing individual entries such as files and directories. For example, to extract an archive using the ZipFile object, you can do the following: import zipfile with zipfile.ZipFile(\\"path/to/archive.zip\\", \\"r\\") as zf: zf.extractall(\\"path/to/destination/directory\\")"},{"prompt":"Write an R script to find correlation between two columns in a given Data Frame.","completion":"# Load the data df = read.csv(\\"data.csv\\") # Find the correlation correlation = cor(dfcolumn1, dfcolumn2) print(correlation)"},{"prompt":"Edit the following React component to make the text input to accept only number values. <input type=\\"text\\" value={value} onChange={handleChange} />","completion":"<input type=\\"number\\" value={value} onChange={handleChange} />"},{"prompt":"Create an Angular service to authenticate a user using an API endpoint.","completion":"import { Injectable } from '@angular/core'; import { HttpClient } from '@angular/common/http'; @Injectable({ providedIn: 'root' }) export class AuthService { constructor(private http: HttpClient) { } authenticateUser(username: string, password: string) { const body = { username: username, password: password }; return this.http.post('/api/auth', body); } }"},{"prompt":"Find the average of five numbers. 11, 15, 20, 7, 19","completion":"def avg(nums): sum = 0 for num in nums: sum += num return sum/len(nums)"},{"prompt":"Given a list of strings, reverse the order of each string in the list. [\\"hello\\", \\"world\\", \\"this\\", \\"is\\", \\"amazing\\"]","completion":"def reverse_words(words): reversed_words = [] for word in words: reversed_words.append(word[::-1]) return reversed_words"},{"prompt":"Generate a random 10 character password with at least one uppercase letter and one number.","completion":"import random def generate_password(): uppercase_characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' numbers = '0123456789' password = '' for i in range(5): password += random.choice(uppercase_characters) password += random.choice(numbers) password += random.choice(list(set(uppercase_characters + numbers))) return password if __name__ == '__main__': print(generate_password())"},{"prompt":"Return the \\"name\\" field of the JSON object given below. { \\"name\\": \\"John Doe\\", \\"age\\": 28, \\"country\\": \\"United States\\" }","completion":"import json input_json = { \\"name\\": \\"John Doe\\", \\"age\\": 28, \\"country\\": \\"United States\\" } def get_name(json): json_dict = json.loads(json) name = json_dict['name'] return name if __name__ == '__main__': print(get_name(input_json))"},{"prompt":"Create a database schema for a books table with id, name, author, and date fields.","completion":"CREATE TABLE books ( id INT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255), author VARCHAR(255), date DATE );"},{"prompt":"Parse the following HTML string and return the list of id's. <form> <input name=\\"user_id\\" type=\\"text\\" id=\\"user_id\\" value=\\"123456\\"> <input name=\\"name\\" type=\\"text\\" id=\\"name\\" value=\\"John Doe\\"> <input name=\\"email\\" type=\\"text\\" id=\\"email\\" value=\\"john@example.com\\"> <input name=\\"password\\" type=\\"password\\" id=\\"password\\" value=\\"password123\\"> </form>","completion":"import lxml.html input_html = ''' <form> <input name=\\"user_id\\" type=\\"text\\" id=\\"user_id\\" value=\\"123456\\"> <input name=\\"name\\" type=\\"text\\" id=\\"name\\" value=\\"John Doe\\"> <input name=\\"email\\" type=\\"text\\" id=\\"email\\" value=\\"john@example.com\\"> <input name=\\"password\\" type=\\"password\\" id=\\"password\\" value=\\"password123\\"> </form> ''' def get_id_list(html): root = lxml.html.fromstring(html) ids = root.xpath('//*[@id]') return [id.attrib['id'] for id in ids] if __name__ == '__main__': print(get_id_list(input_html))"},{"prompt":"Create an array of prime numbers between 0 and 100 and print them out.","completion":"Array = [] for num in range(2,101): if all(num % i != 0 for i in range(2,num)): Array.append(num) print(Array)"},{"prompt":"Create a function that takes 3 parameters and returns the maximum of them. 6, 7, 4","completion":"def find_max_of_three(a, b, c): \\"\\"\\" This function finds the maximum of three numbers \\"\\"\\" return max(a, b, c) if __name__ == '__main__': a = 6 b = 7 c = 4 print(find_max_of_three(a, b, c))"},{"prompt":"Rotate a list of elements by a certain number of times. [1, 2, 3, 4], 2","completion":"def rotate_array(arr, n): \\"\\"\\" This function rotates a list of elements by a certain number of times \\"\\"\\" return arr[n:] + arr[:n] if __name__ == '__main__': arr = [1, 2, 3, 4] n = 2 print(rotate_array(arr, n))"},{"prompt":"Output a list of the elements that appear both in list a and list b. list a: [1, 3, 5, 7, 9] list b: [2, 4, 6, 8]","completion":"[]"},{"prompt":"Create a class in Python that contains the following methods:","completion":"class Student: def __init__(self, name, grade): self.name = name self.grade = grade def getName(self): return self.name def getGrade(self): return self.grade"},{"prompt":"Edit the following JavaScript function to throw an error when the user enters a negative number. function printSquare(num) { console.log(num * num); }","completion":"function printSquare(num){ if (num < 0){ throw new Error('Negative number is not allowed'); } console.log(num * num); }"},{"prompt":"Construct a function to convert a string of length one to a capitalized version.","completion":"def capitalize(string): return string.capitalize()"},{"prompt":"Construct a regex expression that matches a valid US zip code.","completion":"^d{5}(?:[-s]d{4})?"},{"prompt":"Construct a function that removes any non-alphanumeric characters from a string. Hello world!","completion":"def remove_non_alphanumeric(string): return ''.join(c for c in string if c.isalnum()) remove_non_alphanumeric(\\"Hello world!\\")"},{"prompt":"Write a SQL query that reverses the order of entries in table 'students'.","completion":"SELECT * FROM students ORDER BY id DESC;"},{"prompt":"dentify the loop control statement used in the below program for (i = 0; i < 10; i++) { printf(\\"%d \\", i); }","completion":"for (i = 0; i < 10; i++)"},{"prompt":"What type of sorting algorithm does the following Python code implement? def sort(nums): for i in range(len(nums)): for j in range(i+1, len(nums)): if nums[j] < nums[i]: nums[j], nums[i] = nums[i], nums[j]","completion":"The code implements Bubble Sort, which is a type of comparison sorting algorithm. It works by repeatedly swapping adjacent elements if they are in the wrong order."},{"prompt":"What is the Big O notation of the algorithm below? def myfunc(n): total = 0 for i in range(n): for j in range(n): total += 1 return total","completion":"The Big O notation for the algorithm is O(n^2). This indicates that the time complexity is proportional to the square of n."},{"prompt":"Edit the below program to print the square of numbers from 0 to 10. def printSquare(): for i in range(10): print(i)","completion":"def printSquare(): for i in range(10): print(i**2)"},{"prompt":"Write a code snippet to display the Fibonacci sequence up to 50 numbers.","completion":"def Fibonacci(n): a = 0 b = 1 if n < 0: print(\\"Incorrect input\\") elif n == 0: return a elif n == 1: return b else: for i in range(2,n): c = a + b a = b b = c return b # Driver Code print(\\"Fibonacci Sequence:\\") for i in range(50): print(Fibonacci(i), end = ' ')"},{"prompt":"dentify the data structure used in the given implementation. class Node: def __init__(self, value): self.value = value self.next = None","completion":"The given implementation is of a Linked List data structure. Linked Lists are a type of linear data structure which consists of nodes, with each node pointing to the next node in the list."},{"prompt":"What is the output of the following JavaScript code? let x = 0; while(x <= 5) { console.log(x); x++; }","completion":"The output of the code will be 0, 1, 2, 3, 4, 5. The loop will run until the condition (x <= 5) is satisfied and print out the current value of x each time."},{"prompt":"Explain what happens when executing this C++ for loop. for(int i=0;i<10;i++){ cout << i << endl; }","completion":"This for loop will execute the code within it 10 times. On each iteration of the loop, the variable i will be incremented by 1. The starting value of variable i will be 0, then the loop condition will check if the variable i is less than 10. If the condition is true, the code in the loop will execute and the variable i will be incremented by 1. This process will repeat until the variable i is no longer less than 10, at which point the loop will stop executing. Within the loop, the current value of i will be printed using the cout statement."},{"prompt":"Debug this Java code and explain what was wrong. public static int add(int a, int b){ int c = a b; return c; }","completion":"The code contained a syntax error. In the second line of the code, the operator being used was \\"b\\" instead of \\"+\\". The correct line should be \\"int c = a + b;\\". This error was causing the program to return the wrong value, as it was attempting to perform the wrong calculation."},{"prompt":"Find the runtime complexity of this Python program. def EvenOrOdd(items): if len(items) == 0: return 0 even_count = 0 for item in items: if item % 2 == 0: even_count += 1 return even_cou","completion":"This program has a runtime complexity of O(n), where n is the number of items in the list. This is because the time taken to complete the program increases linearly with the number of items in the list."},{"prompt":"Write a function to get the length of a given string without using any built-in function. text = \\"Hello world!","completion":"def get_length(text): counter = 0 for i in text: counter += 1 return counter res = get_length(text) print(res)"},{"prompt":"Create a Node class with two properties: 'data' and 'next'.","completion":"class Node: def __init__(self, data): self.data = data self.next = None"},{"prompt":"w would you sum up the elements in an array represented by an integer array? arr = [10, 15, 25, 20]","completion":"total = 0 for i in arr: total += i print(total)"},{"prompt":"Compute the sum of two matrices of size m x n. A = [[1, 2], [4, 5]] B = [[3, 6], [7, 8]]","completion":"def matrix_sum(A, B): m = len(A) n = len(A[0]) C = [[0 for i in range(n)] for j in range(m)] for i in range(m): for j in range(n): C[i][j] = A[i][j] + B[i][j] return C A = [[1, 2], [4, 5]] B = [[3, 6], [7, 8]] res = matrix_sum(A, B) print(res)"},{"prompt":"Modify the function to include a message about the length of the string. message = \\"The length of the string","completion":"def find_length(string): count = 0 for char in string: count += 1 print(message, count) return count"},{"prompt":"Create a new branch in Git with the name \\"feature-X\\" and switch to it.","completion":"git branch feature-X git checkout feature-X"},{"prompt":"Build a function in Python for selecting all rows from a Pandas DataFrame where a column value is equal to a given value. df = pd.DataFrame({'A':[1, 2, 3, 4, 5], 'B':[2, 3, 4, 5, 6], 'C':[3, 4, 5, 6, 7], 'D':[4, 5, 6, 7, 8]}) col_1 = 'A' value = 3","completion":"def select_rows(df, col_1, value): return df[df[col_1] == value]"},{"prompt":"Merge two sorted lists of integers using Python. list_1 = [2, 5, 9] list_2 = [1, 4, 6, 7]","completion":"def merge_lists(list_1, list_2): merged_list = [] l1, l2 = 0, 0 while l1 < len(list_1) and l2 < len(list_2): if list_1[l1] <= list_2[l2]: merged_list.append(list_1[l1]) l1 += 1 else: merged_list.append(list_2[l2]) l2 += 1 merged_list += list_1[l1:] merged_list += list_2[l2:] return merged_list"},{"prompt":"Create a neural network class in Python using NumPy.","completion":"import numpy as np class NeuralNetwork(): def __init__(self): np.random.seed(1) self.weights = 2 * np.random.random((3,1)) - 1 def sigmoid(self, x): return 1 / (1 + np.exp(-x)) def sigmoid_derivative(self, x): return x * (1 - x) def train(self, training_inputs, training_outputs, training_iterations): for iteration in range(training_iterations): output = self.think(training_inputs) error = training_outputs - output adjustments = np.dot(training_inputs.T, error * self.sigmoid_derivative(output)) self.weights += adjustments def think(self, inputs): inputs = inputs.astype(float) output = self.sigmoid(np.dot(inputs, self.weights)) return output"},{"prompt":"What is bitwise AND operation?","completion":"A bitwise AND operation is a binary operation that takes two equal-length binary representations and performs the logical AND operation on each pair of corresponding bits. The result in each position is 1 only if both bits are 1; otherwise, the result is 0."},{"prompt":"w do you estimate the complexity of selection sort algorithm?","completion":"The complexity of selection sort is O(n^2) in the worst case, O(n) in the best case, and O(n^2) on average. Selection sort is not a very efficient sorting algorithm compared to other algorithms like quicksort and merge sort."},{"prompt":"Modify the function to return the least common multiple instead.","completion":"def lcm(a, b): return (a*b) // gcd(a, b)"},{"prompt":"You need to search for a specific character within a string and return its index. let str = 'hello world!'; let char = 'r';","completion":"function getIndexOfChar(str, char) { let index = str.indexOf(char); return index; } let result = getIndexOfChar(str, char); console.log(result); // 10"},{"prompt":"You need to clean a given string by removing all the special characters. let str = 'Hello.., World!';","completion":"function removeSpecialChars(str) { let regex = /[^a-zA-Z0-9]/g; let cleanString = str.replace(regex, ''); return cleanString; } let result = removeSpecialChars(str); console.log(result); // HelloWorld"},{"prompt":"Write a code that takes a list of numbers, and outputs the 10th largest value. mylist = [2, 4, 54, 31, 34, 77, 29, 11, 44, 78, 65, 23]","completion":"def find_10th_largest(input_list): sorted_list = sorted(input_list) return sorted_list[-10] if __name__ == '__main__': mylist = [2, 4, 54, 31, 34, 77, 29, 11, 44, 78, 65, 23] print(find_10th_largest(mylist))"},{"prompt":"Create a class called Player that has a member called name.","completion":"class Player: def __init__(self, name): self.name = name"},{"prompt":"What is the value of \\"arr\\" after executing this code arr = [1, 2, 3] arr = arr.append(4)","completion":"None, since the append() method returns None and not a list. The updated value of the list is [1, 2, 3, 4]."},{"prompt":"Using the comment as a guide, write the proper code to calculate the sum of the values in an array arr = [1, 2, 3, 4, 5] # TODO: write code to calculate the sum of the values in arr","completion":"def calculate_sum(arr): sum = 0 for x in arr: sum += x return sum if __name__ == '__main__': arr = [1, 2, 3, 4, 5] print(calculate_sum(arr))"},{"prompt":"Create a function that takes two integers, A and B, and returns the largest common divisor between A and B.","completion":"def get_largest_common_divisor(a, b): while a != 0 and b != 0: if a > b: a %= b else: b %= a return a + b if __name__ == '__main__': print(get_largest_common_divisor(15, 9))"},{"prompt":"What is the best way to check if a given input is an integer?","completion":"The best way to check if a given input is an integer is to use the isinstance() function. For example, to check if a variable x is an integer, you can run the following code: isinstance(x, int)"},{"prompt":"Write a function that takes an array and returns the number of elements that are even. arr = [1, 5, 7, 4, 9, 17]","completion":"def count_even_elements(arr): even_count = 0 for num in arr: if num % 2 == 0: even_count += 1 return even_count if __name__ == '__main__': arr = [1, 5, 7, 4, 9, 17] print(count_even_elements(arr))"},{"prompt":"Using the comment as a guide, replace the placeholder with the proper code to remove all duplicates from a list. mylist = [1, 2, 3, 2, 4, 2] # TODO: write code to remove all duplicates from myl","completion":"def remove_duplicates(mylist): mylist = list(dict.fromkeys(mylist)) return mylist if __name__ == '__main__': mylist = [1, 2, 3, 2, 4, 2] print(remove_duplicates(mylist))"},{"prompt":"Given a list of numbers and a number k, return whether any two numbers from the list add up to k. nums = [10, 15, 3, 7] k = 17","completion":"def two_sum(nums, k): for i in range(len(nums)): for j in range(i + 1, len(nums)): if nums[i] + nums[j] == k: return True return False"},{"prompt":"Given a string, write a regular expression to extract the last three words of the string. text = \\"My name is Bill Gate","completion":"reg = r\\"(w+(sw+){2})\\""},{"prompt":"Veriyif if a given string is a valid email address. email = \\"email@example.com","completion":"import re def is_valid_email(email): regex = r\\"^[a-zA-Z0-9.!#%&amp;'*+/=?^_\`{|}~-]+@[a-zA-Z0-9-]+(?:.[a-zA-Z0-9-]+)*\\" return re.match(regex, email)"},{"prompt":"Srot the strings in ascening order. items = [\\"Red\\", \\"Blue\\", \\"Yellow\\", \\"Green\\"]","completion":"sorted_items = sorted(items) # sorted_items = [\\"Blue\\", \\"Green\\", \\"Red\\", \\"Yellow\\"]"},{"prompt":"Prepare a code to select all rows that have more than one occurrence of the same value in a given column. column = \\"color\\" data = { \\"color\\": [\\"red\\", \\"blue\\", \\"red\\", \\"yellow\\", \\"blue\\"] }","completion":"def duplicate_rows(column, data): duplicates = [] for row in data: if data[column].count(row[column]) > 1: duplicates.append(row) return duplicates"},{"prompt":"Write a code to show the rating of a movie based on the review comments rev_comments = [\\"Great movie!\\", \\"The movie was average.\\", \\"Didn't enjoy it that much\\"]","completion":"def rating(reviews): score = 0 positive = [\\"great\\", \\"amazing\\", \\"funny\\", \\"entertaining\\"] negative = [\\"bad\\", \\"mediocre\\", \\"average\\", \\"boring\\"] for comment in reviews: for word in positive: if word in comment.lower(): score += 1 for word in negative: if word in comment.lower(): score -= 1 return score / len(reviews)"},{"prompt":"Rewrite the following code snippet without using any loops. for i in range(10): print(i)","completion":"[print(i) for i in range(10)]"},{"prompt":"Generate a code to evaluate a expression of the form a * (b + c). a = 10 b = 5 c = 6","completion":"def evaluate_expression(a, b, c): return a * (b + c)"},{"prompt":"Create a function to calculate the total cost of the items in a cart. items = [{\\"item\\":\\"apple\\", \\"cost\\":3.00}, {\\"item\\":\\"orange\\", \\"cost\\":2.50}]","completion":"def total_cost(items): total = 0 for item in items: total += item['cost'] return total"},{"prompt":"Add a class \\"MyClass\\" to the given Java code and then create two objects for that class. public class Demo { public static void main(String[] args) { } }","completion":"public class Demo { public static void main(String[] args) { MyClass m1 = new MyClass(); MyClass m2 = new MyClass(); } } class MyClass { }"},{"prompt":"Create an HTML page with a title and a heading.","completion":"<html> <head> <title>My Page</title> </head> <body> <h1>My Page</h1> </body> </html>"},{"prompt":"Describe the purpose of an iterator class in Java.","completion":"An iterator class in Java is used to traverse through a collection to access its elements. It allows for the convenient looping and retrieval of elements from the collection in an orderly fashion."},{"prompt":"Update the following JavaScript code to add a new item to the end of an array using the push() method. let myArr = ['a', 'b', 'c']","completion":"let myArr = ['a', 'b', 'c']; myArr.push('d');"},{"prompt":"What tags need to be included in HTML to make a form?","completion":"To create a form in HTML, the <form> tag should be included. Additionally, the <input>, <button>, <select>, and <textarea> tags should be included for creating the form elements."},{"prompt":"Explain how to use a break statement in a for loop in Java.","completion":"The break statement can be used to prematurely exit a for loop. The break statement is placed within the loop and causes an immediate exit from the loop once it is reached. This can be useful when a certain condition must be met before the loop should continue to execute."},{"prompt":"Create a Python variable a with value 5.","completion":"a = 5"},{"prompt":"Given a variable arr containing integers, write python code to remove all duplicate elements from the array and return the new array. arr = [1, 2, 2, 3, 4, 4, 4, 5, 6, 6]","completion":"arr = list(set(arr)) # [1, 2, 3, 4, 5, 6]"},{"prompt":"Python, how could you print a list from the last element to the first element?","completion":"for element in reversed(my_list): print(element)"},{"prompt":"Create a dictionary in Python whose keys are the integers from 1 to 10 and whose values are the squares of the keys.","completion":"d = {i: i*i for i in range(1, 11)} # {1:1, 2:4, etc.}"},{"prompt":"Write an algorithm to find the missing number in an array of n consecutive integers in Python. arr = [1, 2, 3, 5, 6, 7, 8]","completion":"def find_missing_num(arr): missing = 0 for i in range(arr[0], arr[-1] + 1): if i not in arr: missing = i return missing # 4"},{"prompt":"Count the number of occurrences of a given string in another string in Python. string1 = 'A quick brown fox jumps over the lazy dog.' string2 = 'dog'","completion":"string1.count(string2) # 1"},{"prompt":"Given a list of strings, write a program to return a new list of all strings which have length greater than 4 in Python. lst = ['cat', 'dog', 'apple', 'banana']","completion":"new_lst = [x for x in lst if len(x) > 4] # ['apple', 'banana']"},{"prompt":"Replace the underlined phrase with a single word that means the same thing: He was very argumentative throughout the meeting.","completion":"He was very contentious throughout the meeting."},{"prompt":"Create a method with the following signature: int calculateSum(int x,int y).","completion":"public int calculateSum(int x, int y) { return x + y; }"},{"prompt":"Rewrite the following sentence so that it has a different meaning: We should try and solve this problem.","completion":"Let's attempt to solve this problem."},{"prompt":"Name three popular programming languages.","completion":"Java, Python and JavaScript."},{"prompt":"Design a user interface for a book library application.","completion":"The user interface should include a search bar to search for books, a list of books with details such as title, author, year published, and a button to select a book and checkout. Additionally, it should include a navigation header with various sections such as 'My Books', 'Favorites', 'Recommendations' and 'Account Settings'."},{"prompt":"Generate a for loop for summing up the first 5 positive even numbers.","completion":"int sum = 0; for (int i = 2; i < 10; i += 2) { sum += i; } Console.WriteLine(\\"The sum of the first 5 positive even numbers is: \\" + sum);"},{"prompt":"Read the following code and suggest an optimization. int[] array = {7, 14, 23, 27, 33}; int sum = 0; foreach (int value in array) { sum += value; }","completion":"int[] array = {7, 14, 23, 27, 33}; int sum = 0; int i = 0; for (; i < array.Length; ++i) { sum += array[i]; }"},{"prompt":"Create a for loop for printing all the alphabets in the lowercase.","completion":"for letter in range(97, 123): print(chr(letter))"},{"prompt":"Suggest a sorting algorithm that is suitable for a large, unsorted integer array.","completion":"The Merge Sort algorithm is suitable for a large, unsorted integer array. It is a divide and conquer algorithm, which divides the array into two halves, recursively sorts them, and then merges them together. It has a time complexity of O(n log n)."},{"prompt":"Edit the given code snippet and make it run in O(N) time complexity. int[] arr = {1, 2, 3, 4, 5}; int result = 0; for (int i = 0; i < arr.Length; i++) { for (int j = 0; j < arr.Length; j++) { if (arr[i] % arr[j] == 0) { result += arr[i]; } } }","completion":"int[] arr = {1, 2, 3, 4, 5}; int result = 0; for (int i = 0; i < arr.Length; i++) { result += arr[i]; for (int j = i + 1; j < arr.Length; j++) { if (arr[i] % arr[j] == 0) { result += arr[j]; } } }"},{"prompt":"Create a class in Java for a student and define variables for name, date of birth and grade.","completion":"public class Student { private String name; private Date dob; private int grade; public Student(String name, Date dob, int grade) { this.name = name; this.dob = dob; this.grade = grade; } // Additional methods/Getters and Setters }"},{"prompt":"Generate a while loop in python to find out the sum of first 5 even numbers.","completion":"i = 2 sum = 0 while i < 10: sum += i i += 2 print(\\"The sum of first 5 even numbers is: \\", sum)"},{"prompt":"You need to generate a Javascript program that prints \\"Hello World\\".","completion":"console.log(\\"Hello World\\");"},{"prompt":"Design a Java program to find the longest increasing sub-sequence of an array.","completion":"public static int longestIncreasingSubsequence(int[] arr) { int[] dp = new int[arr.length]; int maxLength = 1; dp[0] = 1; for (int i=1; i<arr.length; i++) { int maxVal = 0; for (int j=0; j<i; j++) { if (arr[j] < arr[i] && dp[j] > maxVal) { maxVal = dp[j]; } } dp[i] = maxVal + 1; if (dp[i] > maxLength) { maxLength = dp[i]; } } return maxLength; }"},{"prompt":"Write a Python program that prints out the magnitude of the three-dimensional vector with the following components: (x, y, z). (1, 2, 3)","completion":"import math def magnitude(x, y, z): return math.sqrt(x * x + y * y + z * z) print(magnitude(1, 2, 3))"},{"prompt":"Create an array of elements that are the squares of the integers between 1 and 10","completion":"squares = [x**2 for x in range(1, 11)]"},{"prompt":"Write a function to calculate median of array elements","completion":"def get_median(arr): sorted_arr = sorted(arr) length = len(sorted_arr) if length % 2 == 0: median1 = sorted_arr[int(length/2) - 1] median2 = sorted_arr[int(length/2)] median = (median1 + median2) / 2 else: median = sorted_arr[int((length-1)/2)] return median"},{"prompt":"Create a switch-case statement for a shopping cart to print out the items and their prices. Item1: 25.00 Item2: 13.50 Item3: 3.99","completion":"def items_and_prices(item1, item2, item3): switch = { 'item1': item1, 'item2': item2, 'item3': item3 } for key, value in switch.items(): print(key + \\": \\" + str(value)) items_and_prices(25.00, 13.50, 3.99)"},{"prompt":"Create an array that contains the numbers 1 through 10.","completion":"var arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];"},{"prompt":"Create an angle converter function which converts degrees to radians.","completion":"function degToRad(deg) { return deg * (Math.PI/180); }"},{"prompt":"Construct a necessary SQL query to update the name attribute in the User table. User table | id | name | |----|--------| | 1 | Johnny | Name to be updated: Daniel","completion":"UPDATE User SET name = 'Daniel' WHERE id = 1;"},{"prompt":"Design a CSS selector for a div with a text of \\"Hello World\\".","completion":"div[text=\\"Hello World\\"] { // CSS rules go here }"},{"prompt":"Produce an HTML webpage that shows a table of 10 colors and their corresponding hexcodes.","completion":"<html> <head> </head> <body> <table> <thead> <tr> <th>Color</th> <th>Hexcode</th> </tr> </thead> <tbody> <tr> <td>Red</td> <td>#FF0000</td> </tr> <tr> <td>Blue</td> <td>#0000FF</td> </tr> <tr> <td>Green</td> <td>#00FF00</td> </tr> <tr> <td>Yellow</td> <td>#FFFF00</td> </tr> <tr> <td>Orange</td> <td>#FFA500</td> </tr> <tr> <td>Pink</td> <td>#FFC0CB</td> </tr> <tr> <td>Purple</td> <td>#800080</td> </tr> <tr> <td>Cyan</td> <td>#00FFFF</td> </tr> <tr> <td>Brown</td> <td>#A52A2A</td> </tr> <tr> <td>White</td> <td>#FFFFFF</td> </tr> </tbody> </table> </body> </html>"},{"prompt":"Build a Keras model to predict whether a patient has cancer.","completion":"model = keras.Sequential([ keras.layers.Dense(64, activation='relu', input_shape=(len(features.keys()),)), keras.layers.Dense(32, activation='relu'), keras.layers.Dense(1, activation='sigmoid') ]) model.compile(optimizer='adam', loss='binary_crossentropy', metrics=['accuracy'])"},{"prompt":"Design a pipeline in Scikit-learn to preprocess a given dataset.","completion":"from sklearn.preprocessing import StandardScaler from sklearn.decomposition import PCA pipeline = Pipeline(steps=[ ('scaler', StandardScaler()), ('pca', PCA()) ])"},{"prompt":"w to convert a binary string to an integer number? binaryNum = \\"1101","completion":"intNum = int(binaryNum, 2)"},{"prompt":"w to decode a Base64 string to its corresponding string representation in Python? base64_string = \\"SGVsbG8gV29ybGQ=","completion":"import base64 string = base64.b64decode(base64_string).decode(\\"utf-8\\")"},{"prompt":"w to remove the last character of a string in Python? word = \\"Hello","completion":"word = word[:len(word)-1]"},{"prompt":"Create an Excel spreadsheet that compares the performance of an employee over two different months. January data: Sales: 20,000, Hours worked: 200 February data: Sales: 25,000 Hours worked: 250","completion":"Create a Spreadsheet with the following columns: Month, Sales (), Hours Worked. Fill in the rows with the data given above."},{"prompt":"What is a multithreaded program?","completion":"A multithreaded program is a software program or application that uses multiple threads to execute different parts of its code simultaneously. This allows for faster execution of the program by using more than one processor core at the same time."},{"prompt":"Create an HTML table that displays the data in a given JSON object. { \\"cols\\":[\\"location\\", \\"age\\", \\"name\\"], \\"rows\\":[ [\\"Paris\\", 28, \\"John\\"], [\\"Berlin\\", 32, \\"Mary\\"], [\\"London\\", 21, \\"Andy\\"] ] }","completion":"<table> <tr> <th>location</th> <th>age</th> <th>name</th> </tr> <tr> <td>Paris</td> <td>28</td> <td>John</td> </tr> <tr> <td>Berlin</td> <td>32</td> <td>Mary</td> </tr> <tr> <td>London</td> <td>21</td> <td>Andy</td> </tr> </table>"},{"prompt":"Write a SQL script to display the top 5 average sales by employee. Table: SALES columns: EmployeeId, Sale","completion":"SELECT EmployeeId, AVG(Sales) as SalesAverage FROM SALES GROUP BY EmployeeId ORDER BY SalesAverage DESC LIMIT 5;"},{"prompt":"Build an HTML page to display the current temperature in major cities.","completion":"<html> <head> <title>City Temperature Monitor</title> </head> <body> <h1>City Temperature Monitor</h1> <table> <thead> <tr> <th>City</th> <th>Temperature</th> </tr> </thead> <tbody> <tr> <td>London</td> <td><!-- Add code to get London's temperature --></td> </tr> <tr> <td>New York</td> <td><!-- Add code to get New York's temperature --></td> </tr> <tr> <td>Tokyo</td> <td><!-- Add code to get Tokyo's temperature --></td> </tr> </tbody> </table> </body> </html>"},{"prompt":"Build a bash script that prints out a string of characters. string=\\"Hello World","completion":"#!/bin/bash string=\\"Hello World\\" echo string"},{"prompt":"Write a java code to accept a student name and display a greeting.","completion":"import java.util.Scanner; public class GreetStudent { public static void main(String[] args) { // Create a Scanner object Scanner scanner = new Scanner(System.in); // Accept a student name System.out.println(\\"Please enter student name:\\"); String studentName = scanner.nextLine(); // Display a greeting System.out.println(\\"Hello, \\" + studentName + \\"!\\"); } }"},{"prompt":"Write an R script to generate a word cloud of a given text. text = \\"This is a sample text to generate a word cloud.","completion":"# Install packages install.packages(\\"wordcloud\\") # Load libraries library(tm) library(wordcloud) # Create a text corpus text_corpus <- Corpus(VectorSource(text)) # Generate a word cloud wordcloud(text_corpus, min.freq = 1,random.order=FALSE,rot.per=0.35,max.words= 100)"},{"prompt":"Define a class in C++ to represent a point in 3-dimensional space.","completion":"#include<iostream> class Point { private: int x; int y; int z; public: Point(int x, int y, int z) { this->x = x; this->y = y; this->z = z; } int getX() { return x; } int getY() { return y; } int getZ() { return z; } }; int main() { Point p(1, 2, 3); return 0; }"},{"prompt":"Write a Javascript code to add four numbers and print the result. numbers = [1, 2, 3, 4]","completion":"let numbers = [1, 2, 3, 4]; let result = numbers.reduce((a, b) => a + b); console.log(\\"Result: \\" + result);"},{"prompt":"Create a bash script to concatenate two given strings. string1=\\"Hello\\" string2=\\"World","completion":"#!/bin/bash string1=\\"Hello\\" string2=\\"World\\" echo string1string2"},{"prompt":"Show the query to find the 3rd smallest salary in the 'employee' table","completion":"SELECT MIN(salary) FROM (SELECT salary FROM employee ORDER BY salary ASC LIMIT 2, 1) as result;"},{"prompt":"Describe the effects when sorting a list using bubble sort","completion":"Bubble sort works by comparing adjacent elements of the list and swapping them if they are out of order. It passes through the list multiple times, with each pass through the list moving the highest value elements to their correct position. This process continues until the list is fully sorted."},{"prompt":"Sort a list of integers using quicksort list = [4,2,1,5,3]","completion":"def quicksort(arr): if len(arr) <= 1: return arr pivot = arr[len(arr) // 2] left = [x for x in arr if x < pivot] middle = [x for x in arr if x == pivot] right = [x for x in arr if x > pivot] return quicksort(left) + middle + quicksort(right) sorted_list = quicksort(list)"},{"prompt":"Extract the domain names from the given list of URLs url_list = [ \\"www.abcd.com\\", \\"www.something.co.in\\", \\"www.example.ng\\" ]","completion":"def extract_domain(url_list): domains = list() for url in url_list: url_parts = url.split('.') domains.append(url_parts[-2]+'.'+url_parts[-1]) return domains domain_list = extract_domain(url_list)"},{"prompt":"Generate a code in Java for sorting an array using Mergesort.","completion":"public static void sortMerge (int [] array) { //Array must have more than one element if (array.length > 1) { int len = array.length; //Split vector into two halves int mid = len/2; int left [] = Arrays.copyOfRange (array, 0, mid); int right [] = Arrays.copyOfRange (array, mid, len); //Sort each half sortMerge (left); sortMerge (right); //Merge the sorted halves int i = 0; int j = 0; int k = 0; while (i<left.length && j<right.length) { if (left[i]<right[j]) { array[k]= left[i]; k++; i++; } else { array [k] = right[j]; k++; j++; } } while (i<left.length) { array[k] = left[i]; k++; i++; } while (j<right.length) { array[k] = right[j]; k++; j++; } } }"},{"prompt":"Generate a correct Python code for a data structure which supports the following operations - insert(key, value) get(key) delete(key)","completion":"class Map(object): def __init__(self): # a dictionary-based data structure # to store (key, value) pairs self.data = {} # insert the given value with the given key def insert(self, key, value): self.data[key] = value # get the value for the given key def get(self, key): return self.data[key] # delete the datapoint with the given key def delete(self, key): self.data.pop(key)"},{"prompt":"Write a script in Java for printing the first n Fibonacci numbers.","completion":"public class Fibonacci { static int fib(int n) { int f[] = new int[n+2]; // 1 extra to handle case, n = 0 int i; /* 0th and 1st number of the series are 0 and 1*/ f[0] = 0; f[1] = 1; for (i = 2; i <= n; i++) { f[i] = f[i-1] + f[i-2]; } return f[n]; } public static void main (String args[]) { int n = 5; System.out.println(fib(n)); } }"},{"prompt":"Modify the following Python program to contain an input. num1 = 10 num2 = 20 sum = num1 + num2 print(\\"The sum of two numbers is\\",sum)","completion":"num1 = int(input(\\"Enter the first number: \\")) num2 = int(input(\\"Enter the second number: \\")) sum = num1 + num2 print(\\"The sum of the two numbers is\\", sum)"},{"prompt":"Write a Python function to analyze the performance of different sorting algorithms. List = [6, 8, 0, 1, 4, 5, 7, 3, 2, 9]","completion":"def analyze_sorting_performance(list): \\"\\"\\" Analyze the performance of different sorting algorithms on the given list. \\"\\"\\" insertion_sort_list = list.copy() insertion_sort(insertion_sort_list) bubble_sort_list = list.copy() bubble_sort(bubble_sort_list) merge_sort_list = list.copy() merge_sort(merge_sort_list) quick_sort_list = list.copy() quick_sort(quick_sort_list) print(\\"Insertion Sort: {}\\".format(insertion_sort_list)) print(\\"Bubble Sort: {}\\".format(bubble_sort_list)) print(\\"Merge Sort: {}\\".format(merge_sort_list)) print(\\"Quick Sort: {}\\".format(quick_sort_list))"},{"prompt":"Create a class in Python that can be used to store the details of a student.","completion":"class Student: def __init__(self, name, age, gender): self.name = name self.age = age self.gender = gender def set_details(self, name, age, gender): self.name = name self.age = age self.gender = gender def get_details(self): return f'Name: {self.name}, Age: {self.age}, Gender: {self.gender}'"},{"prompt":"Given a list of integers and a target sum, write a function that returns a pair of said integers that add up to the target sum. list = [3, 9, -4, 0, -7, 8] and target sum = -4","completion":"def find_pair(lst, target_sum): \\"\\"\\" Given a list of integers and a target sum, this function returns a pair of said integers that add up to the target sum. \\"\\"\\" seen = set() for num in lst: inverse = target_sum - num if inverse in seen: return (num, inverse) seen.add(num)"},{"prompt":"mplement a binary search algorithm in Python for searching for a specific element in a given list of numbers. list = [1, 3, 5, 7, 9, 11 ] and target number =7","completion":"def binary_search(lst, target): \\"\\"\\" Implements a binary search algorithm in Python for searching for a specific element in the given list of numbers. \\"\\"\\" low = 0 high = len(lst)-1 while low <= high: mid = (low + high)//2 if lst[mid] == target: return mid elif lst[mid] < target: low = mid + 1 else: high = mid - 1 return -1"},{"prompt":"Write a comprehensive SQL query that returns all the female students who are over 18 years old. Table Students | id | gender | age | |-----|--------|-----| | 1 | female | 20 | | 2 | male | 21 | | 3 | female | 17 | | 4 | female | 19 |","completion":"SELECT * FROM Students WHERE gender = 'female' AND age >= 18"},{"prompt":"Write a regular expression in Python to find all words that start with \\"A\\".","completion":"import re words = re.findall(r'bAw+', text)"},{"prompt":"Create a HTML page that contains a table with given data. <html> <head> <title>Data Table</title> </head> <body> <table> <tr> <th>Name</th> <th>Age</th> <th>Occupation</th> </tr> <tr> <td>John</td> <td>32</td> <td>Engineer</td> </tr> <tr> <td>Max</td> <td>28</td> <td>Doctor</td> </tr> <tr> <td>Jill</td> <td>23</td> <td>Teacher</td> </tr> </table> </body> </html>","completion":"<html> <head> <title>Data Table</title> </head> <body> <table> <tr> <th>Name</th> <th>Age</th> <th>Occupation</th> </tr> <tr> <td>John</td> <td>32</td> <td>Engineer</td> </tr> <tr> <td>Max</td> <td>28</td> <td>Doctor</td> </tr> <tr> <td>Jill</td> <td>23</td> <td>Teacher</td> </tr> </table> </body> </html>"},{"prompt":"Write a JavaScript statement to switch the value of two variables.","completion":"[a, b] = [b, a];"},{"prompt":"Write a CSS rule to give a 1000px margin to the left of an element.","completion":"margin-left: 1000px;"},{"prompt":"Generate a Java program to get the maximum number from a given array.","completion":"public class MaxNumber { public static int getMaxNumber(int[] arr) { int max = arr[0]; for (int i = 1; i < arr.length; i++) { if (arr[i] > max) { max = arr[i]; } } return max; } }"},{"prompt":"Construct a SQL query to list the unique countries from table countries.","completion":"SELECT DISTINCT country FROM countries;"},{"prompt":"Construct a SQL query to count the number of distinct cities from table cities.","completion":"SELECT COUNT(DISTINCT city_name) FROM cities;"},{"prompt":"Create a C++ vector of strings containing names.","completion":"#include <iostream> #include <vector> #include <string> int main() { std::vector<std::string> names; names.push_back(\\"John\\"); names.push_back(\\"Paul\\"); names.push_back(\\"Adam\\"); names.push_back(\\"Linda\\"); names.push_back(\\"James\\"); return 0; }"},{"prompt":"Construct a query to calculate the average age of all users from table users.","completion":"SELECT AVG(age) FROM users;"},{"prompt":"Given a string, write a Java program to verify if it is a valid email address.","completion":"public static boolean isValidEmail(String email){ String emailRegex = \\"^[a-zA-Z0-9_+&*-]+(?:.[a-zA-Z0-9_+&*-]+)*@(?:[a-zA-Z0-9-]+.)+[a-zA-Z]{2,7}\\"; Pattern pat = Pattern.compile(emailRegex); if (email == null) return false; return pat.matcher(email).matches(); }"},{"prompt":"w would you merge two sorted linked lists into one?","completion":"def mergeLists(l1, l2): dummy = curr = ListNode(0) while l1 and l2: if l1.val < l2.val: curr.next = l1 l1 = l1.next else: curr.next = l2 l2 = l2.next curr = curr.next curr.next = l1 or l2 return dummy.next"},{"prompt":"Analyze the sentiment of the sentence \\"I am so delighted\\".","completion":"Positive sentiment."},{"prompt":"Explain how to handle exceptions using try-catch block in Java.","completion":"Exceptions can be handled in Java using try-catch blocks. A try-catch block includes a try statement followed by the catch clauses. The try statement defines the code which can throw an exception, and the catch clause defines an exception handler which handles the exception thrown by the try statement. In the catch block, an object is declared which stores information about the exception that occurred. If an exception is thrown, the control of the program immediately jumps to the catch block. Finally, the catch block executes the catch clause which addresses the issue and the program resumes execution."},{"prompt":"Compute the factorial of the number 7.","completion":"5040"},{"prompt":"Create a SQLite database named \\"mydb\\" with two tables \\"employees\\" and \\"departments\\".","completion":"CREATE DATABASE mydb; CREATE TABLE employees ( employee_id INTEGER PRIMARY KEY, name VARCHAR(50), department_id INTEGER ); CREATE TABLE departments ( department_id INTEGER PRIMARY KEY, name VARCHAR(50) );"},{"prompt":"Remove the duplicates from the array [1, 2, 2, 4, 5, 5]. [1, 2, 2, 4, 5, 5]","completion":"[1, 2, 4, 5]"},{"prompt":"Construct a Python class to save details of student.","completion":"class Student(): def __init__(self, name, age, year): self.name = name self.age = age self.year = year def get_name(self): return self.name def get_age(self): return self.age def get_year(self): return self.year"},{"prompt":"Change the following code to use the ternary operator. def compare_num(a, b): if a < b: return -1 elif a == b: return 0 else: return 1","completion":"def compare_num(a, b): return -1 if a < b else 0 if a == b else 1"},{"prompt":"Given a binary tree, find the height of the tree.","completion":"def maxDepth(self, root: TreeNode): if root is None: return 0 leftDepth = self.maxDepth(root.left) rightDepth = self.maxDepth(root.right) return max(leftDepth, rightDepth) + 1"},{"prompt":"Describe a sorting algorithm that works by putting an algorithm that works by putting elements in the right place.","completion":"Insertion sort is an in-place comparison sort algorithm that works by iterating through the input array, removing one element at a time and inserting it in the correct position in the sorted array. It is a comparison-based algorithm that blocks an element from its position until it finds the correct location for it in the sorted array by comparing with adjacent element and shifting it until the correct position is found."},{"prompt":"mplement a priority queue.","completion":"class PriorityQueue(): def __init__(self): self.elements = [] def is_empty(self): return len(self.elements) == 0 def enqueue(self, item, priority): self.elements.append((item, priority)) def dequeue(self): max_priority_index = 0 for index, element in enumerate(self.elements): if element[1] > self.elements[max_priority_index][1]: max_priority_index = index element = self.elements[max_priority_index] del self.elements[max_priority_index] return element"},{"prompt":"Reverse a linked list.","completion":"def reverseList(node): prev = None while (node != None): next = node.next node.next = prev prev = node node = next return prev"},{"prompt":"Write a function that returns 'true' if the number is an even number, and 'false' otherwise.","completion":"def is_even(num): if(num % 2 == 0): return True else: return False"},{"prompt":"Create a css style that changes the color of the text in the div with the ID \\"example\\".","completion":"#example { color: red; }"},{"prompt":"Create a for loop to iterate through the given array from the last index to the first. array = [1, 2, 3, 4, 5]","completion":"for i in range(len(array)-1, -1, -1): print(array[i])"},{"prompt":"Create two classes, \\"Animal\\" and \\"Dog\\", in which the \\"Dog\\" class inherits from the \\"Animal\\" class.","completion":"class Animal: pass class Dog(Animal): pass"},{"prompt":"Using the given code, construct a json request payload. data = { \\"name\\": \\"John Doe\\", \\"age\\": 30 }","completion":"import json request_payload = json.dumps(data)"},{"prompt":"Visualize the given data using a bar chart. data = [['January', 10], ['February', 15], ['March', 20], ['April', 17]]","completion":"import matplotlib.pyplot as plt months = [x[0] for x in data] values = [x[1] for x in data] plt.bar(months, values) plt.xlabel(\\"Month\\") plt.ylabel(\\"Number\\") plt.show()"},{"prompt":"Create a class \\"Person\\" and add two instance variables \\"name\\" and \\"age\\".","completion":"class Person: def __init__(self, name, age): self.name = name self.age = age"},{"prompt":"erate through the given array and print the even numbers. array = [1, 2, 3, 4, 5, 6]","completion":"for x in array: if x % 2 == 0: print(x)"},{"prompt":"Using DOM manipulation, replace the paragraph text with \\"Hello World\\". <p>My first web page</p>","completion":"document.querySelector('p').innerHTML = 'Hello World';"},{"prompt":"Using the given code, write a function that finds the highest value in the array. array = [5, 2, 8, 7, 1]","completion":"def find_largest(array): largest = array[0] for x in array: if x > largest: largest = x return largest"},{"prompt":"Using JavaScript, create an interactive web page that displays a list of strings taken from the user's inputs.","completion":"// JavaScript Code let list = []; const addToList = (str) => { list.push(str); } const createList = () => { let html = \\"<ul>n\\"; for(let i = 0; i < list.length; i++) { html += \`<li>{list[i]}</li>n\`; } html += \\"</ul>\\"; document.getElementById('list').innerHTML = html; }"},{"prompt":"Given a JSON object, write a JavaScript function to flatten the object keys. { \\"name\\": { \\"first\\": \\"John\\", \\"last\\": \\"Smith\\" }, \\"age\\": 25 }","completion":"// JavaScript Code function flattenKeys(obj) { let flattened = {}; for (let key in obj) { if (typeof obj[key] === 'object') { for (let subkey in obj[key]) { flattened[\`{key}_{subkey}\`] = obj[key][subkey]; } } else { flattened[key] = obj[key]; } } return flattened; }"},{"prompt":"Create a Python program that takes a comma-separated string and outputs a dictionary of words and the frequency of their occurrences. apple, banana, apple, orange","completion":"def get_word_frequency(string): words = string.split(', ') frequencies = {} for word in words: if word in frequencies: frequencies[word] += 1 else: frequencies[word] = 1 return frequencies"},{"prompt":"Using JavaScript, create a program to check whether two given strings are an anagram or not.","completion":"// JavaScript Code function checkAnagrams(str1, str2) { const s1 = str1.split('').sort().join(''); const s2 = str2.split('').sort().join(''); return s1 === s2; }"},{"prompt":"Write a Python function to calculate the sum of the areas of a given list of circles, where each circle is defined as a dictionary containing 'radius' and 'x' as keys. [{'radius': 3, 'x': 5}, {'radius': 4, 'x': 7}, {'radius': 5, 'x': 9}]","completion":"def sum_areas(circles): total = 0 for circle in circles: area = 3.14 * circle['radius'] ** 2 total += area return total"},{"prompt":"Write an SQL query to sort a table named 'products' based on the price in ascending order.","completion":"SELECT * FROM products ORDER BY price ASC;"},{"prompt":"Using Java, create a program to find the maximum sum of a sub-array within a given array.","completion":"// Java Code public class MaximumSubArraySum { public static int maxSubArraySum(int[] nums) { int maxSum = Integer.MIN_VALUE; int currentSum = 0; for (int num : nums) { currentSum += num; if (currentSum > maxSum) maxSum = currentSum; if (currentSum < 0) currentSum = 0; } return maxSum; } public static void main(String[] args) { int[] nums = {-2, 1, -3, 4, -1, 2, 1, -5, 4}; int maxSum = maxSubArraySum(nums); System.out.println(\\"Maximum Sub Array Sum: \\" + maxSum); } }"},{"prompt":"Write a Python program to delete a given key from a dictionary.","completion":"def delete_key(d, key): if key in d: del d[key] d = {'a':1, 'b':2} delete_key(d, 'a')"},{"prompt":"Create a class in C++ representing a 2D vector which has components (x, y).","completion":"class Vector2D { private: int x; int y; public: Vector2D(int x, int y); int GetX() { return x; } int GetY() { return y; } void SetX(int newX) { x = newX; } void SetY(int newY) { y = newY; } }; Vector2D::Vector2D(int x, int y) { this->x = x; this->y = y; }"},{"prompt":"Write a Java class to represent a student record with a student_name, grade and score fields.","completion":"public class StudentRecord { private String studentName; private int grade; private double score; public StudentRecord(String studentName, int grade, double score) { this.studentName = studentName; this.grade = grade; this.score = score; } public String getStudentName() { return studentName; } public int getGrade() { return grade; } public double getScore() { return score; } public void setStudentName(String studentName) { this.studentName = studentName; } public void setGrade(int grade) { this.grade = grade; } public void setScore(double score) { this.score = score; } }"},{"prompt":"Design a MongoDB database with a customers collection which contains the following fields: name, city, phone, and address.","completion":"{ \\"_id\\": ObjectID( 0000000001 ), \\"name\\": \\"John Doe\\", \\"city\\": \\"New York\\", \\"phone\\": \\"123-456-7890\\", \\"address\\": \\"123 Main Street\\" }"},{"prompt":"Create a database structure in MySQL for a shopping cart application containing a user, product and order table.","completion":"CREATE TABLE users ( id INT AUTO_INCREMENT PRIMARY KEY, first_name VARCHAR(255), email VARCHAR(255) UNIQUE NOT NULL ); CREATE TABLE products ( id INT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255), price NUMERIC ); CREATE TABLE orders ( id INT AUTO_INCREMENT PRIMARY KEY, user_id INT NOT NULL, product_id INT NOT NULL, quantity INT NOT NULL, FOREIGN KEY (user_id) REFERENCES users (id), FOREIGN KEY (product_id) REFERENCES product (id) );"},{"prompt":"Design a SQL query to find the top 3 customers with the highest spendings.","completion":"SELECT CustomerName, SUM(TotalPrice) AS TotalSpend FROM Orders GROUP BY CustomerName ORDER BY TotalSpend DESC LIMIT 3;"},{"prompt":"Create a SQLite query to find the names and ages of the youngest and oldest customers.","completion":"SELECT MAX(name, age) AS OldestCustomer, MIN(name, age) AS YoungestCustomer FROM Customers GROUP BY age;"},{"prompt":"Write a function in JavaScript to partition the array into even and odd numbers.","completion":"function partitionArray(arr) { const evenArr = []; const oddArr = []; for (let i = 0; i < arr.length; i++) { if (arr[i] % 2 == 0) { evenArr.push(arr[i]); } else { oddArr.push(arr[i]); } } return [evenArr, oddArr]; }"},{"prompt":"Create a class in C# to represent a 2D circle which has a radius field.","completion":"public class Circle2D { private double radius; public Circle2D() { radius = 0; } public Circle2D(double radius) { this.radius = radius; } public double getRadius() { return radius; } public void setRadius(double radius) { this.radius = radius; } }"},{"prompt":"mplement a function in Python that prints out the grade for a student, given their marks in a particular subject. marks = 90","completion":"def get_grade(marks): if marks>=90: return \\"A\\" elif marks>=80 and marks<90: return \\"B\\" elif marks>=70 and marks<80: return \\"C\\" elif marks>=60 and marks<70: return \\"D\\" else: return \\"F\\" print(get_grade(marks))"},{"prompt":"Create a function in HTML that creates a text box element with the given label. label = \\"Name","completion":"<form> <label>Name: </label> <input type=\\"text\\" id=\\"name\\" name=\\"name\\"> </form>"},{"prompt":"Develop a function in Java that, given a positive number, returns the factorial of that number. num = 5","completion":"public static int factorial(int num){ if (num == 0){ return 1; } else{ int factorial = num * factorial(num - 1); return factorial; } }"},{"prompt":"Write a function that, given a string, returns a dictionary of all the characters in the string and their respective frequencies. text = \\"Hello World","completion":"def letter_frequency(text): d = {} for char in text: if char not in d: d[char] = 1 else: d[char] += 1 return d print(letter_frequency(text))"},{"prompt":"Design a MySQL table of 10 rows to store information about cities.","completion":"CREATE TABLE cities ( city_id INT AUTO_INCREMENT PRIMARY KEY, city_name VARCHAR(255) NOT NULL, population INT NOT NULL, country VARCHAR(255), area INT );"},{"prompt":"Code a calculation to find the mean of numbers stored in an array in Java. numbers = {1, 2, 3, 4, 5}","completion":"public static double mean(int[] numbers) { double sum = 0.0; for (int i = 0; i < numbers.length; i++) sum += numbers[i]; return sum / numbers.length; }"},{"prompt":"Use a for-loop in PHP to generate a random number between 0 and 10.","completion":"<?php for (i=1; i<=10; i++){ rand_num = rand(0, 10); echo rand_num . \\"n\\"; } ?>"},{"prompt":"Use a regular expression to find the capital letter in the provided string. text = \\"This is a string with a Capital","completion":"import re def find_capital_letter(text): pattern = r\\"[A-Z]\\" result = re.findall(pattern, text) return result[0] print(find_capital_letter(text))"},{"prompt":"Create a method to compute the sum of squares of numbers from 0 up to n. n = 4","completion":"def sum_of_squares(n): total_sum = 0 for i in range(n + 1): total_sum += i ** 2 return total_sum"},{"prompt":"w would you write a function to find the mode in an array of numbers? nums = [2, 3, 4, 5, 5, 6, 7, 8]","completion":"def find_mode(nums): mode = 0 max_occurrence = 0 for num in nums: occurrences = nums.count(num) if occurrences > max_occurrence: max_occurrence = occurrences mode = num return mode"},{"prompt":"Create a function to calculate Fibonacci sequence number based on the index of the number. index = 6","completion":"def calc_fibonacci_number(index): if index == 0 or index == 1: return index first_num = 0 second_num = 1 for i in range(2, index+1): next_num = first_num + second_num first_num, second_num = second_num, next_num return second_num"},{"prompt":"Generate a python class for calculating prime numbers up to n. n = 10","completion":"class PrimeCalculator: def __init__(self, n): self.n = n def get_primes(self): primes = [] for number in range(2, self.n+1): is_prime = True for divisor in range(2, number): if number % divisor == 0: is_prime = False break if is_prime: primes.append(number) return primes"},{"prompt":"mplement a linear search in a list. list = [1, 5, 9, 10]","completion":"def linear_search(list, key): for index, value in enumerate(list): if value == key: return index return -1"},{"prompt":"elp complete the implementation of the following function def true_false_sum(x): true_sum = 0 false_sum = 0 for i in range(x): if x[i] == booleanTrue: * return true_sum, false_sum","completion":"def true_false_sum(x): true_sum = 0 false_sum = 0 for i in range(x): if x[i] == booleanTrue: true_sum += 1 else: false_sum += 1 return true_sum, false_sum"},{"prompt":"w would you write a function to find the highest frequency character in a string? string = \\"Hello world!","completion":"def find_highest_freq_char(string): counts = {} max_freq_char = \\"\\" max_freq = 0 for ch in string: counts[ch] = counts.get(ch, 0) + 1 if counts[ch] > max_freq: max_freq = counts[ch] max_freq_char = ch return max_freq_char"},{"prompt":"Create a method to find all valid IP addresses that can be formed using a given string. string = \\"25525511135","completion":"def find_all_valid_ip_addresses(string): valid_ips = [] for i in range(1,4): for j in range(1,4): for k in range(1,4): if i+j+k == len(string): ip_string = string[:i]+\\".\\"+string[i:i+j]+\\".\\"+string[i+j:i+j+k]+\\".\\"+string[i+j+k:] if is_valid_ip_address(ip_string): valid_ips.append(ip_string) return valid_ips def is_valid_ip_address(ip_string): nums = ip_string.split(\\".\\") for num in nums: if (int(num) < 0 or int(num) > 255): return False return True"},{"prompt":"Explain why using \\"For\\" loops can be a better choice than using \\"While\\" loops in Python.","completion":"For loops are better than while loops in Python because they provide a clearer syntax and are easier to debug due to their predictable and structured behavior. For loops are also more efficient than while loops since they don't require explicit initialization and condition checking, while while loops need to check if a condition is true on each iteration. This makes for loops faster and more memory-efficient, as it requires fewer operations compared to while loops."},{"prompt":"Edit the given CSS code to achieve the desired effect. CSS code to change the colour of font in a text box to red: textarea { color: #000; }","completion":"textarea { color: #ff0000; }"},{"prompt":"Given a Binary search tree, write a C++ program to find the lowest common ancestor (LCA) of two given nodes in the BST. Tree: 8 / 3 10 / / 1 6 14","completion":"struct TreeNode { struct TreeNode* left; struct TreeNode* right; int data; }; TreeNode* LCA(TreeNode* root,TreeNode* node1, TreeNode* node2) { int small = min(node1->data, node2->data); int large = max(node1->data, node2->data); if (root == NULL) return NULL; if (root->data >= small && root->data <= large) return root; if (root->data > large) return LCA(root->left, node1, node2); return LCA(root->right, node1, node2); }"},{"prompt":"Provide a context-free grammar to generate strings that contain only a’s and b’s and which have the same number of a’s as b’s.","completion":"S -> bAa A -> AaA | aAa | bAb | abB | ε"},{"prompt":"Write a SQL query to show the name and date of birth of all employees born after 1st January 1980.","completion":"SELECT name, date_of_birth FROM Employees WHERE date_of_birth > '1980-01-01'"},{"prompt":"Rewrite the given code to use JavaScript Promises instead of callbacks. function doSomething(callback) { // do something callback(\\"Done!\\"); } function main() { doSomething(function(result) { console.log(result); }); } main();","completion":"function doSomething() { return new Promise((resolve, reject) => { // do something resolve(\\"Done!\\"); }); } function main() { doSomething() .then((result) => { console.log(result); }) .catch((err) => { console.log(err); }); } main();"},{"prompt":"Explain how a quicksort algorithm works.","completion":"Quicksort is an efficient comparison-based sorting algorithm that works by taking a pivot element and partitioning the list/array into two parts: elements smaller than the pivot element and elements larger than the pivot element. The quicksort algorithm then sorts both sublists recursively until the list is fully sorted. As such, quicksort has a best case complexity of O(nlogn) and a worst case complexity of O(n^2)."},{"prompt":"Create a class in python to store a collection of words and their frequency count.","completion":"class FreqCollection(object): def __init__(self): self.words = {} def add_word(self, word): if word in self.words: self.words[word] += 1 else: self.words[word] = 1 def get_word_freq(self, word): if word in self.words: return self.words[word] return 0"},{"prompt":"Create a list of the top 3 highest valued elements in the following array. arr = [7, 5, 8, 4, 9, 6, 1, 3, 2]","completion":"arr = [7, 5, 8, 4, 9, 6, 1, 3, 2] # Create a list of the top 3 highest valued elements top_three = [max(arr)] # start with the maximum elements arr.remove(max(arr)) # remove the maximum element from the list top_three.append(max(arr)) #Add the second maximum element to top_three arr.remove(max(arr)) # remove the second maximum element from the list top_three.append(max(arr)) # Add the third maximum element to top_three print(top_three) # Output: [9, 8, 7]"},{"prompt":"Format the output of a number to contain comma-separated thousands. num = 323456789","completion":"# Format the output of a number to contain comma-separated thousands def format_number(num): return '{:,}'.format(num) # Get the formatted output print(format_number(323456789)) # Output: 323,456,789"},{"prompt":"Recreate this nested for loop in a single line of code. Final_list = [] for i in range(10): for j in range(10): Final_list.append(i+j)","completion":"Final_list = [i+j for i in range(10) for j in range(10)]"},{"prompt":"Write an expression to check if a given number is a perfect square num = 16","completion":"# Write an expression to check if a given number is a perfect square import math def is_perfect_square(num): return math.sqrt(num).is_integer() # Check the given number print(is_perfect_square(16)) # Output: True"},{"prompt":"List all the different types of sorting algorithms.","completion":"Different types of sorting algorithms include Bubble Sort, Insertion Sort, Selection Sort, Heap Sort, Merge Sort, Quick Sort, Radix Sort, Shell Sort, Counting Sort, and Bucket Sort."},{"prompt":"Parse the following JSON structure and store each element into a variable. { \\"items\\": [\\"apple\\", \\"orange\\", \\"banana\\"], \\"quantity\\": [4, 2, 7], \\"cost\\": [2.00, 1.50, 3.00] }","completion":"items = [\\"apple\\", \\"orange\\", \\"banana\\"] quantity = [4, 2, 7] cost = [2.00, 1.50, 3.00]"},{"prompt":"Generate a SQL query that selects all the fruit names from a table.","completion":"SELECT fruit_name FROM fruits_table;"},{"prompt":"Create a JavaScript function that reverse alphabetically sort an array of numbers. [9, 2, 8, 4, 7]","completion":"function reverseSort(array){ return array.sort(function(a, b){ return b - a; }); } reverseSort([9,2,8,4,7]); // Output: [9,8,7,4,2]"},{"prompt":"Calculate the minimum, maximum and average of the following array. [2, 3, 1, 5, 9, 12, 8]","completion":"Minimum: 1 Maximum: 12 Average: 6.14"},{"prompt":"Create an Applescript that displays an alert message saying 'hello world'.","completion":"display alert \\"hello world\\""},{"prompt":"w would you create a for-loop in Python to iterate through all the integers from 1 to 10?","completion":"for i in range(1,11): print(i)"},{"prompt":"Make the following sentence compliant with PEP 8. nums=[1,2,3,4]","completion":"nums = [1, 2, 3, 4]"},{"prompt":"Calculate the sum of the following numbers using JavaScript. [1, 4, 8, 10]","completion":"let sum = 0; for(i = 0; i < arr.length; i++){ sum += arr[i]; } console.log(sum); // Output: 23"},{"prompt":"Calculate the greatest common factor of 18 and 12.","completion":"The greatest common factor of 18 and 12 is 6."},{"prompt":"Suggest a SQL query to select all countries from the table. Table name: countries Columns: - name (text) - population (integer) - area (float) - capital_city (text)","completion":"SELECT name FROM countries;"},{"prompt":"Find the total area of all countries from the table. Table name: countries Columns: - name (text) - population (integer) - area (float) - capital_city (text)","completion":"SELECT SUM(area) FROM countries;"},{"prompt":"Generate a ternary tree data structure in Python.","completion":"class Node: def __init__(self, value): self.value = value self.left = None self.center = None self.right = None"},{"prompt":"Construct an algorithm to check if two strings have the same characters and same frequency of characters. String A: hello String B: ollhe","completion":"def is_anagram(str1, str2): char_map1 = {} char_map2 = {} for char in str1: if char in char_map1: char_map1[char] += 1 else: char_map1[char] = 1 for char in str2: if char in char_map2: char_map2[char] += 1 else: char_map2[char] = 1 return char_map1 == char_map2"},{"prompt":"Add the following comment to the following piece of code. def func_name(val1): val2 = val1 * 5","completion":"def func_name(val1): # Multiply the value by 5 val2 = val1 * 5"},{"prompt":"Deploy a model server on AWS Lambda to serve a machine learning model.","completion":"import json import os import boto3 import numpy as np import io from PIL import Image import tensorflow as tf from tensorflow.keras.models import load_model model_path = os.environ['MODEL_PATH'] model_class_name = os.environ['MODEL_CLASS_NAME'] model = load_model(model_path) def model_predict(event, context): body = json.loads(event['body']) img_data = body['img_data'] img_bytes = base64.b64decode(img_data) pil_img = Image.open(io.BytesIO(img_bytes)) # compress the image img_raw = pil_img.resize((224, 224)) # convert image to array input_img = np.expand_dims(np.array(img_raw), axis=0) # predict results = model.predict(input_img) res = { 'statusCode': 200, 'body': json.dumps(results.tolist()) } return res"},{"prompt":"Rewrite the following recursive function such that it runs in iterative manner. def f(n): if n <= 1: return n else: return f(n-1) + f(n-2)","completion":"def f(n): if n <= 1: return n else: a, b = 1, 1 for _ in range(n-1): a, b = b, a+b return b"},{"prompt":"Construct a program to find the index of a given element in a sorted array with binary search. list = [-1, 0, 2, 3, 9, 10] target = 3","completion":"def binarySearch(arr, target): start = 0 end = len(arr) - 1 while start <= end: mid = (start + end)//2 if arr[mid] == target: return mid elif arr[mid] > target: end = mid - 1 else: start = mid + 1 return -1 index = binarySearch([-1, 0, 2, 3, 9, 10], 3)"},{"prompt":"Create a SQL query that returns 10 rows of the table 'exampleTable'.","completion":"SELECT * FROM exampleTable LIMIT 10;"},{"prompt":"Write an SQL query that updates the values in the 'exampleTable' so that all the numbers in the 'number' column are increased by 10.","completion":"UPDATE exampleTable SET number = number + 10;"},{"prompt":"Create two variables that store two different strings.","completion":"string1 = 'Hello World!' string2 = 'This is a test!'"},{"prompt":"Change the output format of the following code to convert it to a dictionary. list1 = [('a', 1), ('b', 2), ('c', 3), ('d', 4)]","completion":"dict1 = dict(list1) print(dict1)"},{"prompt":"Edit the following HTML code to add the class \\"highlighted\\" to the paragraph. <p>This is a test paragraph</p>","completion":"<p class=\\"highlighted\\">This is a test paragraph</p>"},{"prompt":"Create a class in Java called Employee with the following fields (name, ID, department).","completion":"class Employee { // Field String name; int id; String department; // Constructor Employee(String name, int id, String department) { this.name = name; this.id = id; this.department = department; } }"},{"prompt":"Create a React component with two TextInputs.","completion":"import React from 'react'; const TwoTextInputsForm = () => { return ( <> <TextInput label=\\"Email Address\\" /> <TextInput label=\\"Password\\" /> </> ); }; export default TwoTextInputsForm;"},{"prompt":"Write a Bash script to accept two command line arguments (username and password) and echo them out.","completion":"#!/bin/bash username=1 password=2 echo \\"Username: {username}\\" echo \\"Password: {password}\\""},{"prompt":"Generate a sentence using GPT-3. GPT-3 is an AI language model developed by OpenAI.","completion":"GPT-3 is an advanced AI language model that can generate sentences and paragraphs of text that are relevant and coherent to a given context."},{"prompt":"Create a list of strings in Python with 4 elements.","completion":"mylist = ['Hello', 'World', 'This', 'Is']"},{"prompt":"Write a MATLAB function for calculating the sum of two matrices.","completion":"function s = addMatrices(A,B) s = A + B; end"},{"prompt":"Describe a classification problem in machine learning.","completion":"In machine learning, classification is the process of predicting a class label for an input sample. A class label is a discrete value that describes a group or category that an input belongs to. The input may have multiple features, also known as attributes or predictors, that can be used in the prediction process. A classification algorithm takes these features as input and assigns a label to the given input sample. Examples of classification problems include image recognition, medical diagnosis, language processing, and fraud detection."},{"prompt":"Create a data visualization of the following data set with the target variable as red and the predictor variables as blue. data = [[1, 2, 1, 0], [2, 4, 0, 1], [2, 3, 0, 1], [3, 6, 1, 0]]","completion":"import matplotlib.pyplot as plt x_1 = [1, 2, 2, 3] x_2 = [2, 4, 3, 6] target = [1, 0, 1, 0] for i in range(len(x_1)): c = 'r' if target[i] == 1 else 'b' plt.scatter(x_1[i], x_2[i], marker='o', c=c) plt.title(\\"Data Visualization\\") plt.xlabel(\\"x_1\\") plt.ylabel(\\"x_2\\") plt.show()"},{"prompt":"Design an Android application to store a user's sensor data","completion":"The application will allow users to store their sensor data such as location, temperature and pressure with a timestamp. The application will have a user interface to allow users to input their sensor data as well as view their stored data. The application will also have a settings page where they can configure the kinds of sensor data they want to store."},{"prompt":"Create a for loop to print out the square of the numbers between 10 and 20","completion":"for i in range(10,21): print(i**2)"},{"prompt":"Use RegEx to identify words in a string String: I have 2 apples and 3 b","completion":"import re string = \\"I have 2 apples and 3 bananas\\" words = re.findall(r'w+', string) print(words) # Output ['I', 'have', '2', 'apples', 'and', '3', 'bananas']"},{"prompt":"Compute the length of a string String: Hello World","completion":"length = len(\\"Hello World\\") print(length) # Output 11"},{"prompt":"Write a class with a 'hello world' method","completion":"class HelloWorld: def hello_world(self): print(\\"Hello World\\")"},{"prompt":"Generate a HTML page with a table","completion":"<html> <head> <title>Table</title> </head> <body> <table> <tr> <th>Name</th> <th>Age</th> </tr> <tr> <td>John</td> <td>20</td> </tr> <tr> <td>Bob</td> <td>22</td> </tr> </table> </body> </html>"},{"prompt":"Create a query in SQL that will display the first name, last name and department of all employees in the table. Employee Table: |first_name | last_name | department | -------------------------------------- | John | Doe | Marketing |","completion":"SELECT first_name, last_name, department FROM Employee;"},{"prompt":"w can we sort an array of numbers in ascending order in Python?","completion":"sorted_numbers = sorted(numbers) # returns a sorted list of numbers in ascending order."},{"prompt":"Generate a Bash script that runs a command and print the output. Command: echo \\"Hello, World!","completion":"#!/bin/bash echo \\"Hello, World!\\""},{"prompt":"Transform the following array into a string of comma-separated values in Python. [1, 2, 3, 4]","completion":"','.join([str(i) for i in [1, 2, 3, 4]]) # returns \\"1,2,3,4\\""},{"prompt":"write a function in R that rounds a number to two decimal places","completion":"round_two_places <- function(x) { return (round(x, 2)) }"},{"prompt":"Modify the following HTML code to add a new div element inside the existing div. <div> Hello, world! </div>","completion":"<div> <div>New div element</div> Hello, world! </div>"},{"prompt":"Create a query in MySQL that returns the names and ages of all people in the table over 18. Table: People | name | age | -------------- | John | 21 |","completion":"SELECT name, age FROM People WHERE age > 18;"},{"prompt":"Transform the following string in Python into a dictionary whose keys are the names of the colors and the values are the hex codes for the colors. \\"red #FF0000, blue #0000FF, green #00FF00","completion":"colors = 'red #FF0000, blue #0000FF, green #00FF00' dict_colors = {i.split()[0]:i.split()[1] for i in colors.split(', ')} # returns {'red': '#FF0000', 'blue': '#0000FF', 'green': '#00FF00'}"},{"prompt":"Write a function in Java that can be used to search an array and return the index of the element.","completion":"public static int searchArray(int[] arr, int x) { for(int i = 0; i < arr.length; i++) { if (arr[i] == x) return i; } return -1; }"},{"prompt":"Edit the following HTML code to include a JavaScript alert that appears when a user clicks the button. <button>Click Me!</button>","completion":"<button onclick=\\"alert('You have clicked the button!')\\">Click Me!</button>"},{"prompt":"Create an SQL query that returns all customers in New York state who have purchased a product in the last 6 months.","completion":"SELECT * FROM customers WHERE state = 'New York' AND purchase_date >= DATE_SUB(NOW(), INTERVAL 6 MONTH)"},{"prompt":"Design an algorithm that determines the greatest common multiple of two numbers.","completion":"def gcm(x, y): if(x > y): gcm = x else: gcm = y while(True): if((gcm % x == 0) and (gcm % y == 0)): return gcm gcm = gcm + 1 # Driver Program x = 12 y = 18 print(gcm(x, y))"},{"prompt":"Write a JavaScript function that takes two numbers and a mathematical operator as parameters and returns the result of the specified operation. x = 6, y = 3, operator = '*'","completion":"function calculate(x, operator, y) { switch (operator) { case '+': return x + y; case '-': return x - y; case '*': return x * y; case '/': return x / y; case '%': return x % y; default: return NaN; } } let result = calculate(6, '*', 3); console.log(result); // 18"},{"prompt":"Create a Python script that sets the value of a variable from the command-line.","completion":"import sys # Set a variable variableName = sys.argv[1] # Get a value from command line argument value = sys.argv[2] # Set the value of the variable exec(variableName + \\"=\\" + value) print(variableName)"},{"prompt":"Create an object-oriented C# program that prints \\"Hello, World!\\".","completion":"class Program { static void Main(string[] args) { // create an object of type Hello Hello helloObject = new Hello(); // call the SayHello method of the helloObject helloObject.SayHello(); } } // Create a class named Hello public class Hello { public void SayHello() { Console.WriteLine(\\"Hello, World!\\"); } }"},{"prompt":"Design an algorithm that calculates the sum of all numbers in a given array. [2, 4, 7, 10]","completion":"def array_sum(arr): total = 0 # Iterate through arr and add elements to total for i in range (0, len(arr)): total += arr[i] return total # Driver code arr = [2, 4, 7, 10] sum = array_sum(arr) print (sum) # -> 23"},{"prompt":"Create a for loop that iterates over a string and prints out every letter. string = \\"Hello","completion":"string = \\"Hello\\" for letter in string: print(letter) # Outputs: # H # e # l # l # o"},{"prompt":"Create a header comment for the following python script. def add(x, y): return x + y","completion":"\\"\\"\\" This python script contains a function which takes in two arguments and returns the sum of the two arguments. \\"\\"\\" def add(x, y): return x + y"},{"prompt":"Modify the given code to handle errors in the following Python script. num = int(input('Enter a number')) print(num * 5)","completion":"try: num = int(input('Enter a number')) print(num * 5) except Exception as e: print(\\"Error: {}\\".format(e))"},{"prompt":"Suggest an enhancement to the following code to support unicode strings. def replace_char(string, char_old, char_new): for i in range(len(string)): if string[i] == char_old: string[i] = char_new return string","completion":"def replace_char(string, char_old, char_new): new_string = '' for char in string: if char == char_old: new_string = new_string + char_new else: new_string = new_string + char return new_string"},{"prompt":"Write a logic to obtain boolean output from a given comparison.","completion":"def compare(a, b): if a < b: return True else: return False"},{"prompt":"Write a SQL query to list the unique office locations which are older than 5 years.","completion":"SELECT DISTINCT location FROM office WHERE (CURRENT_DATE - date_established) > (5 YEARS)"},{"prompt":"Construct an HTML page with a navigation bar and two sections.","completion":"<html> <head> <title>Navigation Bar Example</title> </head> <body> <ul> <li>Home</li> <li>About</li> <li>Contact</li> </ul> <div> <h1>Home</h1> <p>This is the home page.</p> </div> <div> <h1>About</h1> <p>This is the about page.</p> </div> </body> </html>"},{"prompt":"Write a function that takes two strings and compare to see if they have the same set of characters. string1 = \\"Listen\\" string2 = \\"Sile","completion":"def are_char_sets_equal(string1, string2): set1 = set(string1.lower()) set2 = set(string2.lower()) return set1 == set2"},{"prompt":"Find all prime numbers up to a given number.","completion":"def list_primes(n): primes = [] for num in range(2, n+1): prime=True for i in range(2, int(num/2)+1): if num%i == 0: prime=False if prime: primes.append(num) return primes"},{"prompt":"Write a function to compute the maximum depth of binary tree from a given list of numbers. nums = [3,9,20,None,None,15,7]","completion":"def get_max_depth(nums): max_depth = 0 curr_depth = 0 for n in nums: if n is None: max_depth = max(max_depth, curr_depth) curr_depth -= 1 else: curr_depth += 1 return max_depth"},{"prompt":"For each tuple in a given list, write a function to get the first element. [(1,2), (3,4), (5,6)]","completion":"def get_first_element(tuples): return [t[0] for t in tuples]"},{"prompt":"Given a list of valid times, return the duration in seconds between two times. time1 = \\"23:45:17\\" time2 = \\"01:30:12","completion":"def calculate_duration_in_seconds(time1, time2): start = datetime.strptime(time1, \\"%H:%M:%S\\") end = datetime.strptime(time2, \\"%H:%M:%S\\") duration = end-start return int(duration.total_seconds())"},{"prompt":"Find the nth Fibonacci number in a given range.","completion":"def get_nth_fibonacci_number(n): if n==0: return 0 elif n==1: return 1 else: return get_nth_fibonacci_number(n-1)+get_nth_fibonacci_number(n-2)"},{"prompt":"Create a class that can be used to filter a given list of numbers using a given condition. nums = [3,6,7,2,1,12,14] condition = lambda x: x>5","completion":"class FilterList: def __init__(self, nums, condition): self.nums = nums self.condition = condition def __iter__(self): for num in self.nums: if self.condition(num): yield num"},{"prompt":"Construct an algorithm that checks if the given sequence is an arithmetic sequence.","completion":"def is_arithmetic_sequence(sequence): is_arithmetic = True diff = 0 for i in range(1, len(sequence)): if i ==1: diff = sequence[i]-sequence[i-1] else: new_diff = sequence[i]-sequence[i-1] if new_diff != diff: is_arithmetic = False break return is_arithmetic"},{"prompt":"Write a function to sort a dictionary of dictionaries in descending order based on a given key. d = {'dict1': {'name':'tom','age':20}, 'dict2': {'name':'jerry','age':25}, 'dict3': {'name':'bill','age':24}} key = 'age'","completion":"def sort_dict_of_dicts(d, key): sorted_dict = dict(sorted(d.items(), key = lambda kv:(kv[1][key], kv[0]),reverse=True)) return sorted_dict"},{"prompt":"Create a function that takes a string representation of a JSON object and converts it into a Python dictionary.","completion":"def json_to_dict(json_str): return json.loads(json_str)"},{"prompt":"Write a function to create an new array of given size by copying the elements of given array. input_list = [1, 2, 3, 4, 5] size = 3","completion":"def create_new_list(input_list, size): return input_list[:size]"},{"prompt":"Swap the first and last items in a given list. my_list = [3, 4, 8, 11, 5]","completion":"def swap_first_last(my_list): my_list[0], my_list[-1] = my_list[-1], my_list[0] return my_list"},{"prompt":"Develop a program to identify the highest number in a given array. Array: [2, 5, 15, 4, 7, 10]","completion":"int highestNum = 0; foreach (int num in array) { if (num > highestNum) { highestNum = num; } } Console.WriteLine(\\"The highest number in the array is \\" + highestNum);"},{"prompt":"Produce a Java program that converts miles to kilometers. Miles: 10","completion":"class MilesToKilometers { public static void main(String[] args) { // Convert miles to kilometers double miles = 10; double kilometers = miles * 1.60934; System.out.println(\\"Miles: \\" + miles); System.out.println(\\"Kilometers: \\" + kilometers); } }"},{"prompt":"Calculate the final price of a product after applying a 5% discount. Price: 100","completion":"var price = 100; var discount = 0.05; var finalPrice = price - (price * discount); console.log(\\"Final Price: \\" +finalPrice);"},{"prompt":"Create a method to delete items from a specified array. Array: [1, 2, 3, 4, 5]","completion":"function deleteItems(arr, itemToDelete) { return arr.filter(item => item !== itemToDelete); } let array = [1, 2, 3, 4, 5]; let itemToDelete = 3; let newArray = deleteItems(array, itemToDelete); console.log(newArray); // [1,2,4,5]"},{"prompt":"mplement a class method in C++ that takes a string parameter, checks to see if it is all uppercase, and outputs a Boolean value.","completion":"class MyClass { public: bool isUpper(string str) { for(int i = 0; i < str.length(); i++) { if (islower(str[i])) return false; } return true; } };"},{"prompt":"Generate five lines of code that will calculate the area of the following regular triangle. base = 5 height = 4","completion":"base_square = base * base height_square = height * height base_times_height = base * height area_numerator = base_square + height_square + base_times_height area_denominator = 2 area = area_numerator / area_denominator"},{"prompt":"Create one line of code to sum the contents in a given array. my_array = [2, 3, 5, 7, 11]","completion":"sum_of_array = sum(my_array)"},{"prompt":"Construct a loop that will print the upside down triangle shape below. * ** *** **** *****","completion":"for i in range(1, 6): print('*'*i)"},{"prompt":"mplement a function that will take a parameter input and return the length of the parameter.","completion":"def get_length(param): return len(param)"},{"prompt":"Construct a one-liner that takes a dictionary and reverses the keys and values of the dictionary. my_dict = {'Tony': 3, 'Peter': 4}","completion":"my_dict = dict(zip(my_dict.values(), my_dict.keys()))"},{"prompt":"Write a JavaScript function that checks if a given parameter is a leap year.","completion":"function isLeapYear(year) { return (year % 400 === 0) || ((year % 4 === 0) && (year % 100 != 0)); }"},{"prompt":"Design a MySQL table with two columns, id and name.","completion":"CREATE TABLE table_name ( id INT NOT NULL PRIMARY KEY AUTO_INCREMENT, name VARCHAR(30) NOT NULL );"},{"prompt":"Create a program that takes a number n and prints the pattern given below. n = 3","completion":"for i in range(n): for j in range(i+1): print('*', end=\\" \\") print()"},{"prompt":"Alter the following program such that it returns the complement of the given list. def get_complement(lst): new_lst = [] for i in range(len(lst)): new_lst.append(1 - lst[i]) return new_l","completion":"def get_complement(lst): return [1 - item for item in lst]"},{"prompt":"mplement a quicksort algorithm in Python to sort a list of 6 integers [52,85,23,6,37,77]. [52,85,23,6,37,77]","completion":"def quicksort(nums): if len(nums) <= 1: return nums else: pivot = nums[0] less = [i for i in nums[1:] if i <= pivot] greater = [i for i in nums[1:] if i > pivot] return quicksort(less) + [pivot] + quicksort(greater) print(quicksort([52,85,23,6,37,77]))"},{"prompt":"Generate a random 3x3 array using Java.","completion":"Random r = new Random(); int[][] arr = new int[3][3]; for (int i = 0; i < 3; i++) { for(int j = 0; j < 3; j++){ arr[i][j] = r.nextInt(); } }"},{"prompt":"Construct a SQL query to list the titles and prices of books from the \\"Books\\" table.","completion":"SELECT title, price FROM Books;"},{"prompt":"Compute the square root of 150 using C++.","completion":"#include <iostream> #include <math.h> using namespace std; int main() { double n = 150; cout << \\"The square root of \\" << n << \\" is: \\" << sqrt(n) << endl; return 0; }"},{"prompt":"Construct an if/else statement in Javascript to display a message depending on the value of a variable called \\"age\\". let age = 17","completion":"if (age < 18) { console.log(\\"You are not old enough to access this page.\\"); } else { console.log(\\"Welcome to the page!\\"); }"},{"prompt":"Rewrite the code to make it run asynchronously in Node.js. const userData = getUserDataSync(); const posts = getPostsSync(userData.username); displayPosts(posts);","completion":"getUserData(userData => { getPosts(userData.username, posts => { displayPosts(posts); }); });"},{"prompt":"Construct a loop in PHP to add all elements from an array [2, 3, 8, 9]. [2, 3, 8, 9]","completion":"<?php ary = [2, 3, 8, 9]; sum = 0; foreach (ary as value) { sum += value; } echo \\"The sum is \\" . sum; ?>"},{"prompt":"Write a function to search in a 1D array of integers, and return the index of the target if it is present. arr = [1, 4, 5, 6, 7, 9, 3, 2] target = 8","completion":"def linear_search(arr, target): for i in range(len(arr)): if arr[i] == target: return i return -1 # target not found"},{"prompt":"Edit the following html code by bolding and italicizing the \\"Hello World\\" text. <h1>Hello World</h1>","completion":"<h1><b><i>Hello World</i></b></h1>"},{"prompt":"Write a function to return the count of all prime numbers from 1 to n (inclusive).","completion":"def count_primes(n): count = 0 for i in range(2, n+1): is_prime = True for j in range(2, i): if i % j == 0: is_prime = False break if is_prime: count += 1 return count"},{"prompt":"Find an example of a sorting algorithm in Python.","completion":"Example of a sorting algorithm in Python: def selection_sort(arr): for i in range(len(arr)): # Find the minimum element in remaining # unsorted array min_idx = i for j in range(i + 1, len(arr)): if arr[min_idx] > arr[j]: min_idx = j # Swap the found minimum element with # the first element arr[i], arr[min_idx] = arr[min_idx], arr[i]"},{"prompt":"Suggest a way of converting the following JSON object into CSV format. data = { \\"Name\\": \\"John Doe\\", \\"Age\\": \\"50\\", \\"Gender\\": \\"Male\\" }","completion":"import csv def json_to_csv(data): csv_data = [list(data.values())] with open('data.csv', 'w') as f: writer = csv.writer(f) writer.writerows(csv_data) json_to_csv(data)"},{"prompt":"Write a function to convert a given integer number toRoman numerals.","completion":"def intToRoman(num): val = [ 1000, 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1 ] rom_num = [ \\"M\\", \\"CM\\", \\"D\\", \\"CD\\", \\"C\\", \\"XC\\", \\"L\\", \\"XL\\", \\"X\\", \\"IX\\", \\"V\\", \\"IV\\", \\"I\\" ] res = \\"\\" i = 0 while num > 0: # Find the greatest value smaller # than the given number num div = num // val[i] # Update the number after each # iteration num = num % val[i] # Concatenate the roman characters # equal to the power value of div while div > 0: res = res + rom_num[i] div = div - 1 i = i + 1 return res # Driver code num = 12 print(intToRoman(num))"},{"prompt":"You need to code a function in JavaScript that takes in a string and checks if the length of string is greater than 5 characters.","completion":"function checkStringLength(str) { return str.length > 5; }"},{"prompt":"Code an algorithm in Java to check if a given array contains duplicate elements. arr = [3, 6, 5, 4, 6, 9]","completion":"public static boolean checkDuplicates(int[] arr) { Set<Integer> set = new HashSet<>(); for(int number : arr ) { if(!set.add(number)) { return true; } } return false; }"},{"prompt":"Create a SQL query to find the employees with the highest salary in each job role.","completion":"SELECT a.job_role, a.emp_name, a.salary FROM employees a INNER JOIN ( SELECT job_role, MAX(salary) car_max FROM employees GROUP BY job_role ) b ON a.job_role=b.job_role AND a.salary=b.car_max;"},{"prompt":"Develop an algorithm in C++ to reverse a linked list.","completion":"// reversing the linked list Node* reverse(Node* head) { Node* prev = NULL; Node* current = head; Node* next; while (current != NULL) { // Store next next = current->next; // Reverse current node's pointer current->next = prev; // Move pointers one position ahead. prev = current; current = next; } head = prev; return head; }"},{"prompt":"Develop an SQL query to find the name and email address of the employees who do not have any job role.","completion":"SELECT emp_name, email_address FROM Employees WHERE job_role IS NULL;"},{"prompt":"Modify the Python code so that it can be used to find the GCD of 3 numbers. def gcd(a, b): while b != 0: a, b = b, a % b return","completion":"def gcd(a, b, c): if(b==0 and c==0): return a if(c==0): return gcd(b, a % b) return gcd(gcd(a, b), c)"},{"prompt":"Compute the sum of the prime numbers from 0 to n using Java. n = 10","completion":"public class PrimeSum{ public static int sumOfPrime(int n){ int sum = 0; for(int i=2; i<=n; i++){ if(isPrime(i)) sum += i; } return sum; } private static boolean isPrime(int n){ for(int i=2; i<n; i++){ if(n%i == 0) return false; } return true; } }"},{"prompt":"Create a query in SQL to list all the employees with their salary, who work in the IT department and have more than 10 years of experience.","completion":"SELECT e.name AS \\"Employee\\", e.salary AS \\"Salary\\" FROM employee e WHERE e.department = 'IT' AND e.experience > 10;"},{"prompt":"Write a script in Python to remove the characters from the given string which are not in the alphabet. string=\\"!!Hell%o W..orld!!","completion":"new_string = \\"\\" for char in string: if char.isalpha(): new_string += char print (new_string)"},{"prompt":"debug the following code in Java to list all the prime numbers until 50 class Main { public static void main(String[] args) { for(int i = 0; i < 50; i++) { if (isPrime(i)) { System.out.println(i); } } } static boolean isPrime(int n){ } }","completion":"class Main { public static void main(String[] args) { for(int i = 0; i < 50; i++) { if (isPrime(i)) { System.out.println(i); } } } static boolean isPrime(int n){ if (n <= 1) { return false; } for (int i = 2; i < n; i++) { if (n % i == 0) { return false; } } return true; } }"},{"prompt":"Create a Swift program to remove duplicates from a given array.","completion":"func removeDuplicates(_ array: inout [Int]) -> [Int] { var encountered = Set<Int>() var result: [Int] = [] for element in array { if encountered.contains(element) { // Do not add a duplicate element. } else { // Add value to the set. encountered.insert(element) // Append the element. result.append(element) } } return result }"},{"prompt":"Write a Java program to ask the user to enter a number and then find and print the corresponding Fibonacci number.","completion":"public class Fibonacci{ public static int findFibonacci(int n){ if(n == 0){ return 0; } if(n == 1){ return 1; } return findFibonacci(n-1) + findFibonacci(n-2); } public static void main(String args[]){ Scanner in = new Scanner(System.in); System.out.println(\\"Enter a number:\\"); int n = in.nextInt(); System.out.println(\\"The Fibonacci number is \\" + findFibonacci(n)); } }"},{"prompt":"Structure an HTML form taking inputs of name, age, and email address.","completion":"<form> <label>Name:</label> <input type=\\"text\\" name=\\"name\\" /> <label>Age:</label> <input type=\\"number\\" name=\\"age\\" /> <label>Email:</label> <input type=\\"email\\" name=\\"email\\" /> </form>"},{"prompt":"What is a function pointer?","completion":"A function pointer is a variable that holds the address of a function. It can be used to invoke a specific function based on the address stored in the pointer. It is commonly used in C and C++."},{"prompt":"What is the significance of include guard in C++?","completion":"Include guards are used to prevent multiple declarations of the same header file. They are typically used to ensure that a header file is included only once in a project. This helps to avoid potential conflicts between different declarations of the same header file in different places."},{"prompt":"Modify the following python program to return the sum of even numbers from the input list. def sum_list(input): sum = 0 for num in input: sum += num return sum","completion":"def sum_list(input): sum = 0 for num in input: if num % 2 == 0: sum += num return sum"},{"prompt":"Write an SQL query to select distinguish the records with 'Yes' and 'No' for the field 'full_time' from 'employees' table.","completion":"SELECT full_time FROM employees WHERE full_time IN ('Yes','No');"},{"prompt":"Create an object in JavaScript to store the name, age, and email address of a person.","completion":"let person = { name: \\"John Doe\\", age: 25, email: \\"john.doe@example.com\\" }"},{"prompt":"Create a database in SQL and name it \\"Contacts\\".","completion":"CREATE DATABASE Contacts;"},{"prompt":"Removes all elements from an array in JavaScript. let arr = [1, 2, 3, 4, 5];","completion":"arr.length = 0;"},{"prompt":"Create a class named \\"Car\\" with attributes like \\"model\\" and \\"speed\\".","completion":"class Car { constructor(model, speed) { this.model = model; this.speed = speed; } getModel() { return this.model; } getSpeed() { return this.speed; } }"},{"prompt":"Write a shell script that takes an input string, calculates its length and prints it out. str=”Hello world”","completion":"#!/bin/bash str=\\"Hello world\\" length={#str} echo length"},{"prompt":"Using python, limit the number of characters printed in the following statement to only 10: statement = \\"Hello, World!","completion":"statement = \\"Hello, World!\\" print(statement[:10])"},{"prompt":"Name three principles of Object-Oriented Programming.","completion":"The three principles of Object-Oriented Programming (OOP) are encapsulation, abstraction, and inheritance. Encapsulation is the process of combining together data and functions in a single unit, such as a class. Abstraction is the process of organizing and simplifying complex data by hiding unnecessary details from the user. Inheritance is the process of establishing a parent-child relationship between two classes and allowing the child class to acquire the properties and behaviors of the parent class."},{"prompt":"Given the following code in Python, identify the mistake and fix it. name = input(\\"What is your name?","completion":"name = input(\\"What is your name? \\") # Missing closing quotation mark"},{"prompt":"What are the benefits of Polymorphism in Object-Oriented Programming?","completion":"Polymorphism in Object-Oriented Programming (OOP) allows for objects of different types to share the same interface and behave differently according to their type. This allows a more flexible and efficient codebase, as it eliminates the need to write code specifically for each object type. It also improves the reusability of the code, as a single function can be used to manipulate many different types of objects. Polymorphism also improves readability, as it allows for generic functions and methods to be used without having to know the exact type of the input."},{"prompt":"Compare two strings and remove all letters from the first string which are present in the second string and vice versa. string1 = \\"Hello World!\\" string2 = \\"Bye World!","completion":"def compare_and_remove_letters(string1, string2): result = \\"\\" for i in string1: if i not in string2: result += i for i in string2: if i not in string1: result += i return result # example print(compare_and_remove_letters(\\"Hello World!\\", \\"Bye World!\\")) # output: Byelo!"},{"prompt":"Explain how binary search works.","completion":"Binary search is an efficient search algorithm that works by repeatedly dividing a search space in half. It starts by examining the middle element of the search space. If the middle element is the search element, the search is finished. If the search value is smaller than the middle element, the search continues in the first half of the search space; if it is larger, the search continues in the second half. This process is repeated until the search value is found or the search space is exhausted. Binary search is most effective when the search space is both sorted and uniform. It usually has a time complexity of O(log n)."},{"prompt":"Define a class for a student.","completion":"class Student: '''Creates a class object to represent a student.''' def __init__(self, name, age, grade): '''Initiate the class with name, age, and grade.''' self.name = name self.age = age self.grade = grade def get_name(self): '''Return the student name.''' return self.name def get_age(self): '''Return the student age.''' return self.age def get_grade(self): '''Return the student grade.''' return self.grade"},{"prompt":"Evaluate a mathematical expression given as a string. expression = \\"2 + 3 * 5","completion":"import math def evaluate_expression(expression): '''Returns the evaluation of a given mathematical expression.''' return eval(expression) # example print(evaluate_expression(\\"2 + 3 * 5\\")) # output: 17"},{"prompt":"Create a HTML page.","completion":"<html> <head> <title>My HTML Page</title> </head> <body> <h1>Hello World!</h1> </body> </html>"},{"prompt":"Convert the string \\"Hello World\\" to all uppercase in JAVA. String str = \\"Hello World\\";","completion":"String strUpper = str.toUpperCase(); System.out.println(strUpper); // Prints: HELLO WORLD"},{"prompt":"Write a SQL query to find the most recent 5 login dates for each user. table_name: users column_names: user_id, login_date","completion":"SELECT user_id, MAX(login_date) FROM users GROUP BY user_id ORDER BY login_date DESC LIMIT 5;"},{"prompt":"Write a query to find records created in the last 7 days in a MySQL database. table_name: users column_name: created_","completion":"SELECT * FROM users WHERE created_at >= DATE_SUB(CURDATE(), INTERVAL 7 DAY)"},{"prompt":"Generate the fibonacci sequence for the first 10 numbers using PHP.","completion":"fib = array(0, 1); for (i = 2; i < 10; i++) { fib[i] = fib[i-1] + fib[i-2]; } print_r(fib); // [0, 1, 1, 2, 3, 5, 8, 13, 21, 34]"},{"prompt":"Write a C# script to print the string \\"Hello, World!\\" three times","completion":"for (int i=0; i < 3; i++) { Console.WriteLine(\\"Hello, World!\\"); }"},{"prompt":"Create a Numpy array with 3 columns and 4 rows and assign it to the variable \\"my_array\\".","completion":"my_array = np.array([[1, 2, 3], [4, 5, 6], [7, 8, 9], [10, 11, 12]])"},{"prompt":"Construct a for loop that prints the square of each number from 1 to 10 and also prints an asterisk after each square.","completion":"for x in range(1,11): result = x * x print(result, \\"*\\")"},{"prompt":"Create a list in Python called \\"my_list\\" and populate it with five integers ranging from 0 to 5.","completion":"my_list = [0, 1, 2, 3, 4, 5]"},{"prompt":"Create a new Java program that prints out all the prime numbers between 2 and 1000.","completion":"public class PrimeNumbers { public static void main(String[] args) { System.out.println(\\"Prime numbers between 2 and 1000 are:\\"); int count; for(int i=2; i<=1000; i++){ count=0; for(int j=2; j<i; j++){ if(i%j==0){ count++; break; } } if(count==0) System.out.print(i + \\" \\"); } } }"},{"prompt":"Make a SQL statement to select all the customers from the \\"Customers\\" table where the customer's city is 'New York'.","completion":"SELECT * FROM Customers WHERE City = 'New York';"},{"prompt":"Construct a for loop that multiplies each item in a given list of numbers by two and stores the value into a new list.","completion":"my_list = [1, 2, 3, 4, 5 ] doubled_list = [] for item in my_list: doubled_list.append(item * 2)"},{"prompt":"Given an integer 'base' and an integer 'exponent', write a function to calculate the result of 'base' raised to the power of 'exponent'. base: 2 exponent: 3","completion":"def power(base, exponent): result = 1 for _ in range(exponent): result *= base return result"},{"prompt":"Write a JavaScript Object that contains employee data such as name, age and contact number.","completion":"let employeeDetails = { name: \\"John Smith\\", age: 26, contactNumber: \\"123-456-7890\\" };"},{"prompt":"Construct an if-else statement to print \\"Good Evening\\" if the time is past 5pm and print \\"Good Morning\\" otherwise.","completion":"import time t = time.localtime() if t.tm_hour >= 17: print(\\"Good Evening!\\") else: print(\\"Good Morning!\\")"},{"prompt":"Compare two array and output the result in Boolean. arr1 = [1, 2, 3, 4] arr2 = [4, 3, 2, 1]","completion":"True"},{"prompt":"Create a data structure for a streaming interface that holds a maximum of 5 numbers.","completion":"class Stream: def __init__(self): self.stream = [None, None, None, None, None] # This function adds a number to the start (index 0) of the stream and then shifts the other elements to the right def add(self, num): for i in reversed(range(1, len(self.stream))): self.stream[i] = self.stream[i-1] self.stream[0] = num # This function returns a list of the current elements from the stream def list(self): return self.stream"},{"prompt":"Construct an algorithm for reversing a string.","completion":"def reverse_string(s): # Initialize empty string rev_string = \\"\\" # Traverse over each letter in the string in reverse order for letter in s[::-1]: # Append the current letter to the end of rev_string rev_string = rev_string + letter # Return the reversed string return rev_string"},{"prompt":"Create a database table for student information with the following attributes: Name, Age, Year, and GPA.","completion":"CREATE TABLE StudentInformation ( Name VARCHAR (50) NOT NULL, Age INT NOT NULL, Year INT NOT NULL, GPA DECIMAL (3, 2) NOT NULL );"},{"prompt":"Develop a DFS algorithm in Python.","completion":"def dfs(graph, start, end): # create a visited array visited = [False] * len(graph) # create a stack stack = [] # mark the starting node as visited and push it in the stack stack.append(start) while stack: # get the current node node = stack.pop() # if the node hasn't been visited if not visited[node]: # mark the node as visited visited[node] = True # check for the end node if node == end: return True # append the neighbors of the node to the stack neighbors = graph[node] for neighbor in neighbors: stack.append(neighbor) # end node not found return False"},{"prompt":"Write an algorithm to generate a random string of length n. 8","completion":"import random def randomString(n): # Choose a character set charSet = \\"abcdefghijklmnopqrstuvwxyz0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ\\" # Generate a string of length n myString = \\"\\" for i in range(n): myString += random.choice(charSet) return myString"},{"prompt":"Write an R function to print the contents of a dataframe.","completion":"print_dataframe<- function(data){ print(data) }"},{"prompt":"Generate a query to find the average age of students enrolled in a course with given course ID. course_id = 101","completion":"SELECT AVG(age) FROM students WHERE course_id = 101;"},{"prompt":"Develop a code in C for printing the elements of a linked list.","completion":"struct Node{ int data; struct Node *next; }; // Function to print the elements of the linked list void printList(struct Node *node) { while (node != NULL) { printf(\\"%d \\", node->data); node = node->next; } }"},{"prompt":"Develop a program to accept one number from the user and display its factorial using a Python function. 5","completion":"def factorial(num): if num <= 1: return 1 else: return num * factorial(num-1) num = int(input('Enter number to find factorial: ')) factorial = factorial(num) print('Factorial of', num, 'is', factorial)"},{"prompt":"Create a function in JavaScript to convert RGB values to HEX values.","completion":"function rgbToHex(arr) { let hex = '#'; for (let i = 0; i < 3; i++) { let val = arr[i]; if (val < 16) { hex += '0'; } hex += val.toString(16); } return hex; }"},{"prompt":"What is the maximum number of elements that can be stored in an array in C++?","completion":"The maximum number of elements that can be stored in an array in C++ is determined by the size of the array's data type, usually the maximum number of elements is 2^32-1 (4,294,967,295)."},{"prompt":"Develop a function in Python to filter out all negative numbers in a given list. [2, 3, -1, 4, -5, 6]","completion":"def filter_negative_numbers(nums): # return only positive numbers return [num for num in nums if num >= 0] print(filter_negative_numbers([2, 3, -1, 4, -5, 6]))"},{"prompt":"mplement a function in AngularJS to register a new user.","completion":"angular.module(\\"app\\").factory(\\"register\\", function(http) { return { registerUser: function(userData) { return http.post(\\"/api/register\\", { userData: userData }); } }; });"},{"prompt":"What is the best way to sort an array in C#?","completion":"The best way to sort an array in C# is to use the Array.Sort() method, which implements the Quicksort algorithm. This algorithm is efficient and typically uses O(n log n) complexity."},{"prompt":"Write a function in JavaScript that returns the longest item in the array. [\\"a\\", \\"ab\\", \\"abc\\", \\"abcd\\"]","completion":"function longestItem(arr) { // Initializing the longest item to the first item in the array for comparison let longest = arr[0]; for (let item of arr) { // Comparing the length of each item to the longest if (item.length > longest.length) { longest = item; } } return longest; } console.log(longestItem([\\"a\\", \\"ab\\", \\"abc\\", \\"abcd\\"]));"},{"prompt":"w would you create a program in C++ to calculate the average of 10 numbers?","completion":"#include <iostream> using namespace std; // Function to calculate average double getAverage(int nums[], int n) { int sum = 0; for (int i = 0; i < n; i++) { sum += nums[i]; } double average = double(sum) / n; return average; } int main() { int nums[10] = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10}; int n = sizeof(nums) / sizeof(nums[0]); cout << \\"Average = \\" << getAverage(nums, n); return 0; }"},{"prompt":"Create a python function that takes a single integer as an argument and prints out the corresponding multiplication table.","completion":"def print_table(n): for i in range(1, 11): table = n * i print(f\\"{n} X {i} = {table}\\")"},{"prompt":"Create an SQL statement to select the records of students whose age is greater than 25.","completion":"SELECT * FROM Students WHERE Age > 25;"},{"prompt":"Create an identifier in Python that starts with an underscore followed by the letter 'a'.","completion":"_a"},{"prompt":"Query an SQL table called \\"Students\\" to get the names of all the enrolled students.","completion":"SELECT Name FROM Students;"},{"prompt":"Calculate the factorial of 8.","completion":"The factorial of 8 is 403"},{"prompt":"Segregate a given array of numbers into even and odd. [1, 2, 3, 4, 5]","completion":"even_numbers = [2, 4] odd_numbers = [1, 3, 5]"},{"prompt":"Translate the following words into Spanish: \\"Hello\\", \\"Thank You\\", and \\"Goodbye\\".","completion":"Hello = Hola Thank You = Gracias Goodbye = Adiós"},{"prompt":"Write a function in C that swaps the first and last value of a given array. [1, 2, 3, 4]","completion":"void swapFirstLast(int arr[], int n) { int temp = arr[0]; arr[0] = arr[n - 1]; arr[n - 1] = temp; }"},{"prompt":"w do you retrieve the 3rd element of a set in Python?","completion":"In Python, you can retrieve the 3rd element of a set by using the index operator []. The 3rd element of a set can be accessed by using the syntax set[2]. Note that the indexing in Python starts from 0, so the 3rd element will have index 2."},{"prompt":"What is the command line to create a tar archive in Linux?","completion":"The command line to create a tar archive in Linux is \\"tar -cvf <archive name>.tar <target directory>\\". This will create a tar archive with the given name from the provided target directory."},{"prompt":"Create a function in Python that takes three numerical inputs and returns the maximum value.","completion":"def max_value(num1, num2, num3): max_num = max(num1, num2, num3) return max_num"},{"prompt":"Construct a Ruby program that prints \\"Happy Tuesday!","completion":"puts \\"Happy Tuesday!\\""},{"prompt":"Construct a JavaScript program that displays the current date and time.","completion":"let date = new Date(); document.write(date);"},{"prompt":"Write a MySQL query to calculate the average rating of the items in the “items” table.","completion":"SELECT AVG(rating) FROM items;"},{"prompt":"Construct a Swift program to display 'Hello World!'.","completion":"print(\\"Hello World!\\")"},{"prompt":"Create a SQL query to select the customers that have placed orders of price greater than 1000.","completion":"SELECT customer_name FROM customers JOIN orders ON customers.customer_id = orders.customer_id WHERE orders.price > 1000;"},{"prompt":"Design a Objective C program to find the sum of two numbers. int x=5; int y=6;","completion":"int x = 5; int y = 6; int sum; sum = x + y; NSLog(@\\"Sum of x and y is: %d\\", sum);"},{"prompt":"Design a HTML program to display a heading.","completion":"<h1>This is a heading.</h1>"},{"prompt":"Construct a MySQL table for an online store. Table name: online_store Fields: item_type (string), item_location (string), price (integer), item_name (string).","completion":"CREATE TABLE online_store ( id INT(11) AUTO_INCREMENT PRIMARY KEY, item_type VARCHAR(150) NOT NULL, item_location VARCHAR(150) NOT NULL, price INT NOT NULL, item_name VARCHAR(150) NOT NULL );"},{"prompt":"Convert the given hexadecimal color code to RGB format. #F1948","completion":"rgb(241, 148, 138)"},{"prompt":"Write a Python program to print the right angled triangle using asterisk.","completion":"for i in range(0, 6): for j in range(0, i + 1): print(\\"* \\", end=\\"\\") print(\\"r\\")"},{"prompt":"Create a table in the given MySQL database with 4 columns. Database Name: my_db Table Name: my_table Fields: column_1 (string), column_2 ( integer), column_3 (string), column_4 (integer).","completion":"CREATE TABLE my_table ( id INT(11) AUTO_INCREMENT PRIMARY KEY, column_1 VARCHAR(150) NOT NULL, column_2 INT NOT NULL, column_3 VARCHAR(150) NOT NULL, column_4 INT NOT NULL );"},{"prompt":"Write a CSS rule to set a blue color for all text elements.","completion":"* { color: #0000ff; }"},{"prompt":"the following code, modify the function to take the type of an argument as an input and perform the necessary conversion before returning the result. def get_string(input): return str(input)","completion":"def get_string(input, type): if type == 'int': return str(int(input)) elif type == 'float': return str(float(input)) elif type == 'str': return str(input)"},{"prompt":"Write a function to transform a dataset into a matrix, where rows represent data points followed by their labels. dataset=[(2, 3, 1), (5, 4, -1), (1, 8, 1)]","completion":"def dataset_to_matrix(dataset): matrix = [[x, y, z] for x, y, z in dataset] return matrix"},{"prompt":"Write a function to create a random sequence of 0s and 1s.","completion":"import random def generate_random_sequence(length): sequence = [] for i in range(length): sequence.append(random.choice([0, 1])) return sequence"},{"prompt":"Generate an array containing the next n numbers in the Fibonacci sequence.","completion":"def generate_fibonacci_sequence(n): sequence = [0, 1] for i in range(2, n): sequence.append(sequence[i-1] + sequence[i-2]) return sequence"},{"prompt":"Create a dictionary from a list of tuples, where the key is the first element of the tuple and the value is the second element of the tuple. list_of_tuples = [('key1', 'val1'), ('key2', 'val2'), ('key3', 'val3')]","completion":"def list_to_dict(list_of_tuples): return dict(list_of_tuples)"},{"prompt":"From the given list, create a dictionary where keys will be the elements and the values will be their corresponding indices. elements = [\\"one\\", \\"two\\", \\"three\\", \\"four\\"]","completion":"def list_to_dict(elements): return {el: i for i, el in enumerate(elements)}"},{"prompt":"Using list comprehension, create a list which contains multiples of 5 from 0 to 50 (inclusive).","completion":"multiples_of_5 = [x*5 for x in range(0,11)]"},{"prompt":"Create a function that takes in two integer values and prints out the larger one.","completion":"def print_greater_value(num1, num2): if num1 > num2: print(num1) else: print(num2)"},{"prompt":"Generate a Ruby loop to find the sum of numbers 1 to 10.","completion":"total = 0 (1..10).each do |num| total += num end puts total"},{"prompt":"Suggest an appropriate algorithm to filter out unwanted words from a given paragraph of text.","completion":"A possible approach to filter out unwanted words from a given paragraph of text is to use a hash table or dictionary. By creating a dictionary using key-value pairs of words and their frequencies, it becomes possible to compare the words found in a given text against the words in the dictionary to determine their relevance. If a word is not found in the dictionary, it can be assumed to be an unwanted word and can thus be discarded."},{"prompt":"Create a function to sort items in a list alphabetically in Python.","completion":"def alphabetical_sort(lst): sorted_list = sorted(lst, key=lambda x: x.lower()) return sorted_list"},{"prompt":"Create a SQL query to find all books in the \\"fiction\\" genre whose titles contain the word \\"cat\\".","completion":"SELECT * FROM books WHERE genre = 'fiction' AND title LIKE '%cat%';"},{"prompt":"Suggest an appropriate approach to sort an array of numbers using JavaScript.","completion":"A popular sorting approach for an array of numbers using JavaScript is the Quicksort algorithm. This algorithm partitions an array into two smaller subarrays and then recursively applies the same partitioning process on the subarrays. The Quicksort algorithm is an efficient sorting algorithm with a time complexity of O(nlogn)."},{"prompt":"Generate a SQL query to select all authors who have written at least 3 books.","completion":"SELECT author FROM books WHERE id IN (SELECT author FROM books GROUP BY author HAVING COUNT(*) >= 3);"},{"prompt":"Write a SQL query to find the names of the top 10earning authors. SELECT Name FROM Authors ORDER BY earnings DESC LIMIT 10","completion":"The top ten earning authors are: [Names]"},{"prompt":"mplement selection sort to sort a list in non-decreasing order list = [9, 5, 3, 1, 8]","completion":"def selection_sort(list): for i in range(len(list)): min_idx = i for j in range(i+1, len(list)): if list[min_idx] > list[j]: min_idx = j list[i], list[min_idx] = list[min_idx], list[i] return list # example list = [9, 5, 3, 1, 8] print(selection_sort(list))"},{"prompt":"Generate a code to find the power of n to m. n = 3, m = 7","completion":"def pow_n_m(n, m): result = 1 for i in range(1, m+1): result *= n return result # example n = 3 m = 7 print(pow_n_m(n, m))"},{"prompt":"Create a code to calculate the most frequent character in a given string s = \\"Hello world!","completion":"def most_frequent_char(s): counts = {} max_char = \\"\\" max_count = 0 for c in s: if c in counts: counts[c] += 1 else: counts[c] = 1 if counts[c] > max_count: max_char = c max_count = counts[c] return max_char # example s = \\"Hello world!\\" print(most_frequent_char(s))"},{"prompt":"Create a simple program to capitalize the first letter of every sentence","completion":"def capitalize_sentences(text): sent_list = text.split(\\".\\") cap_sent_list = [sentence.capitalize() for sentence in sent_list] output = '.'.join(cap_sent_list) return output"},{"prompt":"Given a text string, generate a Python code snippet to find the number of occurrences of a given word The quick brown fox jumped over the lazy dog","completion":"def num_occurrences(text, word): count = 0 words = text.split() for w in words: if w == word: count += 1 return count"},{"prompt":"Generate a regular expression to extract the domain from an email address","completion":"([w.-]+)@([w.-]+)"},{"prompt":"Create a class called Cat to represent a type of pet.","completion":"class Cat: def __init__(self, name, color, age): self.name = name self.color = color self.age = age def eat(self): print(f\\"{self.name} is eating\\") def sleep(self): print(f\\"{self.name} is sleeping\\") def play(self): print(f\\"{self.name} is playing\\") def __repr__(self): return f\\"<Cat {self.name}, {self.color}, {self.age}>\\""},{"prompt":"Given an array of integers, write a function to check if the sum of any two of them equals the given parameter ‘n’. array = [2, 4, 6, 8] n = 10","completion":"def check_sum(array, n): \\"\\"\\" Given an array of integers, returns True if the sum of any two of them equals the given parameter 'n'. \\"\\"\\" for i in range(len(array)): for j in range(i + 1, len(array)): if array[i] + array[j] == n: return True return False"},{"prompt":"Using the provided input, calculate the SHA256 checksum in Python. string = \\"Hello World!","completion":"import hashlib def sha256_calc(string): \\"\\"\\" Calculate SHA256 checksum in Python. \\"\\"\\" sha_signature = hashlib.sha256(string.encode()).hexdigest() return sha_signature"},{"prompt":"Print all the prime numbers in the range of 2 to n. n = 10","completion":"def print_all_primes(n): \\"\\"\\" Print all the prime numbers in the range of 2 to n. \\"\\"\\" for num in range(2, n+1): if all(num % i != 0 for i in range(2, num)): print(num)"},{"prompt":"Split a string into its individual words and store it in a list. string = \\"Hello world, this is a test string.","completion":"def split_to_words(string): \\"\\"\\" Split a string into its individual words and store it in a list. \\"\\"\\" return string.split()"},{"prompt":"What is the minimum requirements to become an AI Engineer?","completion":"To be an AI engineer, at a minimum, a person must have a bachelor’s degree in computer science, mathematics, or a related field. It is also beneficial for a person to have an understanding of artificial intelligence and machine learning principles, and to be familiar with programming languages, such as Python and C++. In addition, a working knowledge of data structures and algorithms, and experience with debugging and software development are important. Experience and/or certification in data engineering frameworks, such as TensorFlow or PyTorch, are also recommended."},{"prompt":"What data type is the following statement? float score = 73.2","completion":"The data type of the statement is a float."},{"prompt":"Print the square of 5?","completion":"The square of 5 is 25."},{"prompt":"Edit the following JavaScript code to add a new object to an array let array = [{ id: 1, name: 'Fred'}, {id: 2, name: 'Terry'}]","completion":"let array = [{ id: 1, name: 'Fred'}, {id: 2, name: 'Terry'}, {id: 3, name: 'Marc'}]"},{"prompt":"Modify the following MySQL query to order the results in ascending order SELECT * FROM product;","completion":"SELECT * FROM product ORDER BY product ASC;"},{"prompt":"Write a gem in Ruby to display the current time","completion":"require \\"time\\" module TimeNow def self.display_time puts Time.now end end TimeNow.display_time"},{"prompt":"Generate a SQL query to retrieve all users","completion":"SELECT * FROM users;"},{"prompt":"Design an algorithm to calculate the maximum profit for buying/selling 1 share of a company's stock. Share Prices = [9, 11, 8, 5, 7, 10]","completion":"Let us consider buying and selling 1 share of the stock 1. Initialize the local maximum profit = 0 and the minimum element = 9 2. Run a loop from i=1 to n and update the local maximum profit and the minimum element as you iterate 3. For each iteration i, check the profit obtained by selling the share at price[i] and subtract the profit obtained by buying the share at min element 4. If the obtained profit is more than the local maximum profit, then update the local maximum profit 5. Return the local maximum profit"},{"prompt":"Python, define a class for a rectangle object.","completion":"class Rectangle: def __init__(self, width, height): self.width = width self.height = height def __str__(self): return f\\"This is a rectangle with width of {self.width} and height of {self.height}.\\""},{"prompt":"Construct a for loop to traverse an array of integers starting from the third element and ending at the last element. array = [1,2,3,4,5]","completion":"for i in range(2, len(array)): print(array[i])"},{"prompt":"Output the lexicographical order of a given array of strings. words = [\\"apple\\", \\"banana\\", \\"cherry\\"]","completion":"apple, banana, cherry"},{"prompt":"w do you use the built-in function filter() in Python?","completion":"The filter() function in Python takes a function and an iterable as input arguments. The filter() function filters out elements from the given iterable (for example, a list) that don't satisfy the given condition determined by the function. It returns an iterator containing the filtered elements. Syntax: filter(function, iterable) Example: my_list = [1,4,5,6,7] filtered_list = filter(lambda x: x % 2 == 0, my_list) print(list(filtered_list)) Output: [4, 6]"},{"prompt":"Create a Python script to add a new field of “car color” to the given JSON object. { \\"id\\": \\"12345\\", \\"model\\": \\"Honda\\", \\"year\\": 2021 }","completion":"import json data = [ { \\"id\\": \\"12345\\", \\"model\\": \\"Honda\\", \\"year\\": 2021 } ] data[0][\\"color\\"] = \\"red\\" json_object = json.dumps(data, indent = 4) print(json_object) Output: [ { \\"id\\": \\"12345\\", \\"model\\": \\"Honda\\", \\"year\\": 2021, \\"color\\": \\"red\\" } ]"},{"prompt":"Go through the following list of car models, and print out only the names of all-electric vehicles. Tesla Model 3 Tesla Model X Toyota Corolla Kia Soul EV Ford Fusio","completion":"cars = [\\"Tesla Model 3\\", \\"Tesla Model X\\", \\"Toyota Corolla\\", \\"Kia Soul EV\\", \\"Ford Fusion\\"] for car in cars: if \\"EV\\" in car: print(car) Output: Tesla Model X Kia Soul EV"},{"prompt":"Create a Python script to convert the given JSON object into an XML document. { \\"username\\": \\"John123\\", \\"age\\": 23, \\"country\\": \\"USA\\" }","completion":"import xmltodict import json json_object = { \\"username\\": \\"John123\\", \\"age\\": 23, \\"country\\": \\"USA\\" } xml_message = xmltodict.unparse(json.loads(json.dumps(json_object)), pretty=True) print(xml_message) Output: <root> <username>John123</username> <age>23</age> <country>USA</country> </root>"},{"prompt":"Given the following list of JavaScript objects and a particular key, write a function to return an array of the values corresponding to that key. [ { \\"name\\": \\"John\\", \\"age\\": 25 }, { \\"name\\": \\"Jane\\", \\"age\\": 28 }, { \\"name\\": \\"Dave\\", \\"age\\": 31 } ], key = 'age'","completion":"function getValues(objList, key) { let results = []; objList.forEach(function(obj) { if (obj.hasOwnProperty(key)) { results.push(obj[key]); } }); return results; } let ages = getValues(objList, 'age'); console.log(ages); Output: [25, 28, 31]"},{"prompt":"Create a Python program to find the average of the given numbers in the list","completion":"my_list = [2, 4, 10, 20] def average(nums): return sum(nums) / len(nums) print(average(my_list)) Output: 8.0"},{"prompt":"Explain this JavaScript code snippet. function sayHello(name) { console.log('Hello ' + name); }","completion":"This code snippet is a function declaration named sayHello() which takes one argument, 'name'. It prints a string containing the word \\"Hello\\" and the value of the 'name' argument to the console. It is a common way to communicate with the user through console messages."},{"prompt":"w do we create an object in JavaScript using the object literal notation?","completion":"The object literal notation is a way to create an object in JavaScript by wrapping the set of comma-separated key: value pairs in curly braces. For example, to create an object containing two properties, you can write: var obj = { name: 'John', age: 22 };"},{"prompt":"Create a program in Java to create a simple calculator that has the ability to add, subtract, multiply, and divide numbers.","completion":"public class Calculator { // Function to add two numbers public int add(int num1, int num2) { return num1 + num2; } // Function to subtract two numbers public int subtract(int num1, int num2) { return num1 - num2; } // Function to multiply two numbers public int multiply(int num1, int num2) { return num1 * num2; } // Function to divide two numbers public int divide(int num1, int num2) { return num1 / num2; } }"},{"prompt":"w can we store data persistently on the user's machine?","completion":"Data can be stored persistently on the user's machine with various web storage APIs such as localStorage and sessionStorage. LocalStorage enables an application to store data on the user's computer with no expiration date, while sessionStorage stores information that can only be accessed while the application is open in the browser."},{"prompt":"Construct a SQL query to find all the customers who live in California and have more than 5 reviews.","completion":"SELECT customer.* FROM customer JOIN review ON review.customer_id = customer.id WHERE customer.state = 'California' GROUP BY review.customer_id HAVING COUNT(review.customer_id) > 5;"},{"prompt":"mplement a function in Swift to swap two integer variables. Two integers a and b.","completion":"func swap(a: inout Int, b: inout Int) { let temp = a a = b b = temp }"},{"prompt":"Write a JavaScript code snippet to add an event listener to a button with the ID 'submitButton'.","completion":"document.getElementById('submitButton').addEventListener('click', function() { // code to run when button is clicked });"},{"prompt":"Show a way to iterate through an object in JavaScript.","completion":"The most common way to iterate through an object in JavaScript is to use a for-in loop. It will loop through the object's properties and execute the code within the loop for each property. For example: let obj = { a: 1, b: 2, c: 3 }; for (let property in obj) { console.log(property + ':' obj[property]); } // Output: a:1, b:2, c:3"},{"prompt":"Explain how proxy objects work in JavaScript.","completion":"Proxy objects in JavaScript enable developers to intercept and customize operations performed on objects. It acts as a bridge between the concept of direct object property access and the actual implementation behind the scenes. The proxy wraps the incoming object and observes all operations performed on the object. An appropriate handler can be provided for various operations, such as getting a property value, setting a property value, or making a method call. The handler can then be used to customize the operation by providing the desired output."},{"prompt":"Create an SQL query to select the \\"firstname\\" and \\"lastname\\" of the customers with an orderid of 30.","completion":"SELECT firstname, lastname FROM customers WHERE orderid = 30;"},{"prompt":"Create a PHP callback given the following parameters \\"fruitname\\" and \\"price\\".","completion":"<?php function callback(fruitname, price) { echo fruitname.' costs '.price.' dollars'; } ?>"},{"prompt":"Edit the following code snippet to output \\"five\\" instead of \\"four\\". echo \\"four\\";","completion":"echo \\"five\\";"},{"prompt":"Create an HTML page with a heading, aparagraph and a button that says \\"Click Here\\".","completion":"<!DOCTYPE html> <html> <head> <title>My Website</title> </head> <body> <h1>Welcome to My Website</h1> <p>This is the homepage of My Website.</p> <button type=\\"button\\">Click Here</button> </body> </html>"},{"prompt":"Write a JavaScript function that takes in two arrays of equal length, and returns a third array with elements from both arrays. [1, 2, 3], [10, 20, 30]","completion":"function combine(arr1, arr2) { const combinedArr = []; for(let i=0; i<arr1.length; i++) { combinedArr.push(arr1[i], arr2[i]); } return combinedArr; }"},{"prompt":"Write a CSS style to change the text color to red for all elements with the class \\"important\\".","completion":".important { color: red; }"},{"prompt":"Create a basic python object that stores the length and width of an rectangle.","completion":"class Rectangle: def __init__(self, length, width): self.length = length self.width = width"},{"prompt":"Create a C# function to edit the contents of a list.","completion":"public void EditList(List<string> list, string oldVal, string newVal) { for(int i = 0; i < list.Count; i++ ) { if (list[i] == oldVal){ list[i] = newVal; } } }"},{"prompt":"Generate an HTML form with three fields \\"username\\", \\"password\\" and \\"confirm password\\".","completion":"<form action=\\"\\" method=\\"post\\"> <label>Username:</label> <input type=\\"text\\" name=\\"username\\"> <label>Password:</label> <input type=\\"password\\" name=\\"password\\"> <label>Confirm Password:</label> <input type=\\"password\\" name=\\"confirm_password\\"> <input type=\\"submit\\" value=\\"Submit\\"> </form>"},{"prompt":"Write a function in Ruby that takes in two strings and returns a new string that contains both strings with a space in between them.","completion":"def combine_strings(str1, str2) str1 + \\" \\" + str2 end"},{"prompt":"You need to add an if statement to this existing code. The if statement should check if the given number stored in the variable x is larger than 10. int x = 5;","completion":"if (x > 10) { // Do something... }"},{"prompt":"Write a JavaScript program that will console log the first 10 numbers of the Fibonacci sequence.","completion":"let x = 0; let y = 1; for (let i = 0; i < 10; i++) { let z = x + y; console.log(z); x = y; y = z; }"},{"prompt":"Create a for loop that prints the first five numbers of the Fibonacci sequence.","completion":"let x = 0; let y = 1; for (let i = 0; i < 5; i++) { let z = x + y; console.log(z); x = y; y = z; }"},{"prompt":"You need to create a dictionary that contains five elements with their associated values.","completion":"myDictionary = { 'apple': 'fruit', 'celery': 'vegetable', 'sun': 'star', 'earth': 'planet', 'light': 'energy' }"},{"prompt":"You need to generate an SQL query that will return records from a table called \\"users\\" where the name matches the given parameter. Joh","completion":"SELECT * FROM users WHERE name = \\"John\\";"},{"prompt":"You need to write a regular expression that will match any string containing only the letters 'a' and 'b'.","completion":"/^[ab]+/"},{"prompt":"You need to edit this given HTML code to apply a class name \\"example\\" to the second element. <ul> <li>One</li> <li>Two</li> <li>Three</li> </ul>","completion":"<ul> <li>One</li> <li class=\\"example\\">Two</li> <li>Three</li> </ul>"},{"prompt":"You need to create a JavaScript program that will find the factorial of a given number stored in the variable x.","completion":"let x = 5; let factorial = 1; while (x > 0) { factorial *= x; x--; } console.log(factorial);"},{"prompt":"This program needs an array containing the first 10 numbers of the Fibonacci sequence.","completion":"let fibonacci = [0, 1]; let x = 0; let y = 1; for (let i = 1; i < 10; i++) { let z = x + y; x = y; y = z; fibonacci.push(z); }"},{"prompt":"Create an SQL query that will return a table containing name and email columns from a table called \\"users\\" where the name begins with the given name parameter. Joh","completion":"SELECT name, email FROM users WHERE name LIKE \\"John%\\""},{"prompt":"You need to write a function that takes an array and returns the count of even elements in the array. [1, 2, 3, 4, 5, 6]","completion":"def even_count(arr): count = 0 for i in arr: if i % 2 == 0: count += 1 return count"},{"prompt":"Construct a regular expression that will match only strings that contain a number.","completion":"/d+/"},{"prompt":"Create a HTML page with two buttons, one to display \\"Hello World!\\" and one to display \\"Goodbye World!","completion":"<!DOCTYPE html> <html> <head> <title>Two Buttons</title> </head> <body> <button onclick=\\"alert('Hello World!')\\">Print Hello World</button> <br /> <button onclick=\\"alert('Goodbye World!')\\">Print Goodbye World</button> </body> </html>"},{"prompt":"Create a CSS stylesheet to style a website with a black background and white text.","completion":"body { background-color: #000000; color: #FFFFFF; }"},{"prompt":"Write an HTML program to display a table with a list of names and ages of people. names = [\\"John\\", \\"Dylan\\", \\"Mary\\"], ages = [20, 15, 18]","completion":"<table> <tr> <th>Name</th> <th>Age</th> </tr> <tr> <td>John</td> <td>20</td> </tr> <tr> <td>Dylan</td> <td>15</td> </tr> <tr> <td>Mary</td> <td>18</td> </tr> </table>"},{"prompt":"Create a program to compare two strings and print the result. str1 = “Hello”, str2 = “World”","completion":"def compare_strings (str1, str2): if str1 == str2: print (\\"The strings are equal\\") else: print (\\"The strings are not equal\\")"},{"prompt":"Write MATLAB code to generate a 2-D array called \\"A\\" and fill it with random numbers.","completion":"A = rand(3,3);"},{"prompt":"Create a SQL query that counts the total distinct \`customer_name\` from a table called \`Orders\`. Input: Orders Table ┌─────────┬────────┬──────────┐ │ order_id│item_id │ customer_name│ ├─────────┼────────┴──────────┤ │1 │ 100 │ John │ │2 │ 200 │ John │ │3 │ 300 │ Peter │ │4 │ 400 │ Rachel │ │5 │ 500 │ Peter │ └─────────┴────────┴──────────┘","completion":"SELECT COUNT(DISTINCT customer_name) FROM Orders;"},{"prompt":"Create a JavaScript function that validates a given number as an integer. Input: 653","completion":"function checkInt(number){ if(number % 1 === 0){ return true; } return false; } checkInt(653); // returns true"},{"prompt":"Generate a SQL query to return all customers in a table that have a \`status\` of \`active\`. Input: Customers Table ┌─────────┬────────┬───────┐ │ cust_id│name │ status│ ├─────────┼────────┴───────┤ │1 │ John │ active│ │2 │ Peter │ inactive│ │3 │ Rachel │ active│ │4 │ David │ active│ └─────────┴────────┴───────┘","completion":"SELECT * FROM Customers WHERE status = 'active';"},{"prompt":"Develop a Java program that counts the frequency of a given word in a sentence. Input: sentence = \\"I am learning to code\\" , word = \\"code","completion":"public class CountFrequency { static int countFrequency(String sentence, String word) { int frequency = 0; String[] words = sentence.split(\\" \\"); for (String w : words) { if (w.equals(word)) frequency++; } return frequency; } public static void main(String[] args) { String sentence = \\"I am learning to code\\"; String word = \\"code\\"; System.out.println(countFrequency(sentence,word)); } }"},{"prompt":"Develop a SQL query to select customers with a processing time greater than 5 minutes. Input: Customers Table ┌─────────┬────────┬────────┬───────────┐ │ cust_id│name │ status │processing_time│ ├─────────┼────────┴────────┴───────────┤ │1 │ John │ active │ 3 │ │2 │ Peter │ inactive│ 7 │ │3 │ Rachel │ active │ 2 │ │4 │ David │ active │ 10 │ └─────────┴────────┴────────┴───────────┘","completion":"SELECT * FROM Customers WHERE processing_time > 5;"},{"prompt":"Create a Python class called \\"Car\\" which has the \\"model\\" and \\"year\\" parameters.","completion":"class Car: def __init__(self, model, year): self.model = model self.year = year"},{"prompt":"Write a code that prints the even numbers from 10 to 0 in descending order.","completion":"for num in range(10,0,-1): if(num % 2 == 0): print(num)"},{"prompt":"Modify the following code as required to display the message “Hello World” on the screen. print(\\"Hello\\")","completion":"print(\\"Hello World\\")"},{"prompt":"Convert the following linear equation into a quadratic equation. 3x + 5 = 0","completion":"3x^2 + 5x + 5 = 0"},{"prompt":"Add a 3x3 identity matrix to the following matrix. [[1, 2, -3] [0, 1, 3] [-2, 0, 4]]","completion":"[[4, 2, -3], [0, 4, 3], [-2, 0, 7]]"},{"prompt":"Create a 3x3 rotation matrix with an angle of 45 degrees.","completion":"[[0.7071, -0.7071, 0.0], [0.7071, 0.7071, 0.0], [0.0, 0.0, 1.0]]"},{"prompt":"Rewrite the following Python function to include a try/except block. def multiply(num1, num2): result = num1 * num2 return resul","completion":"def multiply(num1, num2): try: result = num1 * num2 return result except TypeError: print(\\"Error: Inputs must be numbers\\")"},{"prompt":"Rewrite this code to make it shorter. int x=10; int result=0; while(x>0){ result+=x; x--; }","completion":"int x = 10, result = 0; while (x > 0) result += x--;"},{"prompt":"Design a database with tables and columns representing customers, orders and products.","completion":"/* customers table */ CREATE TABLE customers ( id INT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255) ); /* orders table */ CREATE TABLE orders ( id INT PRIMARY KEY, customer_id INT REFERENCES customers(id), total DECIMAL ); /* products table */ CREATE TABLE products ( id INT PRIMARY KEY, order_id INT REFERENCES orders(id), name VARCHAR(255), price DECIMAL );"},{"prompt":"Build a React component to render a header with the text \\"My Website\\".","completion":"import React from 'react'; const Header = () => ( <h1>My Website</h1> ); export default Header;"},{"prompt":"Debug the following program and make it function correctly def count_words(text): words = text.split() count = 0 for word in words: count += 1 return count string = \\"Hello world\\" print(count_words(string))","completion":"def count_words(text): words = text.split() count = 0 for word in words: count += 1 return count string = \\"Hello world\\" # we need to add a check for empty string if string != '': print(count_words(string)) else: print(0)"},{"prompt":"mplement a function that prints all prime numbers up to the provided number.","completion":"def print_prime_numbers(n): # iterate through all numbers up to the provided number for num in range(2, n+1): is_prime = True # check if a number is prime for j in range(2, num): if num % j == 0: is_prime = False # if prime print it if is_prime: print(num) print_prime_numbers(20) # prints 2, 3, 5, 7, 11, 13, 17, 19"},{"prompt":"What is the time complexity of linear search in an unsorted array?","completion":"The time complexity of linear search in an unsorted array is O(n), where n is the number of elements in the array. This is because in linear search, the algorithm has to inspect each element in the array in order sequentially until it finds the desired element. As the size of the array increases, the time taken to search increases linearly."},{"prompt":"Parse a given JSON object and output the contents in a tabular format json_object = { 'name': 'John', 'age': 20, 'location': 'New York' }","completion":"import json json_object = { 'name': 'John', 'age': 20, 'location': 'New York' } data = json.loads(json_object) for key, value in data.items(): print(key + \\": \\" + str(value))"},{"prompt":"Split a string into an array of words and return the length of the longest word.","completion":"def longest_word(string): words = string.split(\\" \\") longest_word_length = 0 for word in words: if len(word) > longest_word_length: longest_word_length = len(word) return longest_word_length"},{"prompt":"Read a given text and classify each sentence as true or false. text = \\"The sky is blue, the sea is blue. The grass is green.","completion":"text = \\"The sky is blue, the sea is blue. The grass is green.\\" sentences = text.split(\\".\\") true_sentences = [] false_sentences = [] for sentence in sentences: if sentence.endswith(\\"true\\"): true_sentences.append(sentence) else: false_sentences.append(sentence) print(\\"True sentences:\\") print(*true_sentences, sep=\\"n\\") print(\\"False sentences:\\") print(*false_sentences, sep=\\"n\\")"},{"prompt":"Create a function to generate a list of prime numbers between 2 and n.","completion":"def prime_numbers(n): prime_nums = [] for num in range(2, n + 1): if num > 1: for i in range(2, num): if (num % i) == 0: break else: prime_nums.append(num) return prime_nums"},{"prompt":"Given a string and a character, write a program that counts the number of occurrences of the character in the string. string = 'Hello World!' character = 'l'","completion":"def count_occurrences(string, character): count = 0 for i in range(len(string)): if string[i] == character: count += 1 return count"},{"prompt":"Generate a random string of length 10 consisting of letters and numbers.","completion":"import random import string def generate_random_string(): rand_string = ''.join(random.choices(string.ascii_lowercase + string.digits, k=10)) return rand_string # testing random_string = generate_random_string() print(random_string)"},{"prompt":"Compose a query using the MongoDB query language to return the first 5 documents in a collection named 'users'.","completion":"db.users.find().limit(5)"},{"prompt":"Modify the below JavaScript code to add two items to an array. var items = [];","completion":"var items = []; items.push('Item 1'); items.push('Item 2');"},{"prompt":"Given a binary tree, write a code to search a given value in the tree.","completion":"def search_tree(tree, value): # If the tree is empty if not tree: return False if value == tree.val: return True # If the given value is less than the tree's value # search left subtree elif value < tree.val: return search_tree(tree.left, value) # If the given value is more than tree's value # search right subtree else: return search_tree(tree.right, value)"},{"prompt":"Run the following code in Python 3. num1 = 10 num2 = 20","completion":"num1 = 10 num2 = 20 result = num1 + num2 print(result) # Output 30"},{"prompt":"Write a class that has a method to return the smallest element in a given list of integers. [12, 24, 72, 1, 4]","completion":"class MinValue: def getMin(self, numList): minVal = numList[0] for i in numList: if i < minVal: minVal = i return minVal if __name__ == \\"__main__\\": obj = MinValue() numList = [12, 24, 72, 1, 4] print(obj.getMin(numList))"},{"prompt":"Create a function that takes a given sentence as input and outputs a list of all its words. Sentence: I am learning to code","completion":"def stringsplit(sentence): words=sentence.split(' ') return words if __name__ == \\"__main__\\": print(stringsplit('I am learning to code'))"},{"prompt":"Construct a code that takes a list of words as input and changes the case of each item in the list. [cat, dog, apple]","completion":"def toUpperCase(words): upper_words=[] for word in words: upper_words.append(word.upper()) return upper_words if __name__ == \\"__main__\\": print(toUpperCase(['cat','dog','apple']))"},{"prompt":"Construct a code segment to find all unique characters in a given string. String: Geeksforgeek","completion":"def find_unique(string): uniq_char = [] for i in string: if i not in uniq_char: uniq_char.append(i) return uniq_char print(find_unique(\\"Geeksforgeeks\\"))"},{"prompt":"Create a loop that takes a given number as input and outputs its prime factors. Number: 35","completion":"n = 35 for i in range(2, 35): while n % i == 0: print(i) n = n / i"},{"prompt":"Write a code to sum all the values of the following dictionary. d = {'a':2, 'b':3, 'c':4}","completion":"d = {'a':2, 'b':3, 'c':4} def dictSum(d): total = 0 for key in d: total += d[key] return total if __name__ == \\"__main__\\": print(dictSum(d))"},{"prompt":"Generate python code to replace each character in a string with the next character in the alphabet.","completion":"def replace_with_next_char(string): output = \\"\\" for char in string: output += chr(ord(char) + 1) return output"},{"prompt":"w can you use a for loop to traverse a dictionary?","completion":"You can use a for loop to traverse a dictionary by iterating over the dictionary's keys or key-value pairs. For example, you can loop through all the keys of a dictionary like this: dictionary = { 'a':1, 'b':2, 'c':3 } for key in dictionary: print(key) Or you can loop through all the key-value pairs like this: dictionary = { 'a':1, 'b':2, 'c':3 } for key, value in dictionary.items(): print(key, ':', value)"},{"prompt":"What data structure could you use to keep track of the list of items purchased by each customer?","completion":"A dictionary is a suitable data structure for keeping track of the list of items purchased by each customer. The key would be the customer name and the value would be a list of items purchased by the customer."},{"prompt":"w does the fadeIn() function work in jQuery?","completion":"The fadeIn() function in jQuery is used to gradually increase the opacity of an element from hidden to visible, in a specified duration. The function works by adjusting the CSS property for opacity for the element, from 0 to 1, over a specified duration of time."},{"prompt":"Write a prompt message that asks the user to enter their name.","completion":"Please enter your name:"},{"prompt":"Describe the main components of a web page.","completion":"A web page typically consists of the following components: a header, content area, sidebar, footer, and navigation menu. The header typically contains the page title and logo or navigation links. The content area displays the main information on the page. The sidebar typically contains additional links, adverts, and related content. The footer includes additional links, copyright information and other website details. The navigation menu provides links to the various sections or pages of the website."},{"prompt":"Write a Bash script that prints out the day of the week.","completion":"#!/bin/bash day=(date +%A) echo \\"Today is day\\""},{"prompt":"Ensure the string is formatted correctly according to JSON standard. {\\"name\\": shivam","completion":"{\\"name\\": \\"shivam\\"}"},{"prompt":"Display a chart on the page to show the data.","completion":"<div id=\\"chartContainer\\"></div> <script> var chart = new CanvasJS.Chart(\\"chartContainer\\", { //Options }); chart.render(); <\/script>"},{"prompt":"Merge two binary trees t1 and t2 into a new binary tree. t1 = 1 / 4 5 / 8 9 t2 = 2 / 7 8 / 9","completion":"function mergeTrees(t1, t2) { // exit case, if one of the trees are null if (!t1 || !t2) return t1 || t2 //Otherwise, merge the new node values from both trees let t3 = new TreeNode(t1.val + t2.val); // recursively traverse both trees to build up the result t3.left = mergeTrees(t1.left, t2.left) t3.right = mergeTrees(t1.right, t2.right) return t3 }"},{"prompt":"Generate an array of the first 10 Fibonacci numbers using any programming language.","completion":"let fib = [0, 1]; while (fib.length < 10) { fib.push(fib[fib.length - 1] + fib[fib.length - 2]); } console.log(fib); // [0, 1, 1, 2, 3, 5, 8, 13, 21, 34]"},{"prompt":"Write a function in Python which takes the information from the following dictionary and prints out the total price of all the items in it. §§ 1020 my_dict = { 'item1': {'price': 20, 'quantity': 5}, 'item2': {'price': 10, 'quantity': 3}, }","completion":"def get_total(my_dict): total = 0 for item in my_dict.values(): total += item['price'] * item['quantity'] return total print(get_total(my_dict)) // 90"},{"prompt":"Given a set of strings s, find an algorithm to determine if the set is a palindrome. s = {\\"b\\", \\"c\\", \\"a\\", \\"a\\", \\"c\\", \\"b\\"}","completion":"def isSetPalindrome(s): n = len(s) for i in range(int(n/2)): if s[i] != s[n - i - 1]: return False return True §§ 1060 print(isSetPalindrome(s)) // True"},{"prompt":"Given two sorted arrays nums1 and nums2, combine their elements into a single array that is sorted. nums1 = [1, 2, 3] nums2 = [2, 4, 5]","completion":"def mergeArrays(nums1, nums2): result = [] i = j = 0 while i < len(nums1) and j < len(nums2): if nums1[i] < nums2[j]: result.append(nums1[i]) i += 1 else: result.append(nums2[j]) j += 1 result += nums1[i:] + nums2[j:] §§ 1080 return result print(mergeArrays(nums1, nums2)) // [1, 2, 2, 3, 4, 5]"},{"prompt":"Create a function in C# which takes a string as an input and returns a boolean value indicating if the string is a palindrome or not. s = \\"racecar","completion":"static bool IsPalindrome(string s) { int n = s.Length; for (int i = 0; i < n / 2; i++) { if (s[i] != s[n-i-1]) return false; } return true; } Console.Write(IsPalindrome(s)); // true"},{"prompt":"Write a function to determine if a given string is a valid English word or not. s = \\"construc","completion":"def isValidWord(s): words = open(\\"words_alpha.txt\\").readlines() return s in words print(isValidWord(s)) // true"},{"prompt":"Create a program in C++ which takes a pair of elements as input and returns their sum. a = 10 b = 20","completion":"int sum(int a, int b) { return a + b; } std::cout << sum(a, b) << std::endl; // 30"},{"prompt":"mplement selection sort algorithm to sort an array of integers in Java. arr = [5, 8, 2, 7, 1]","completion":"public static void selectionSort(int[] arr) { for (int i = 0; i < arr.length - 1; i++) { int min_idx = i; for (int j = i + 1; j < arr.length; j++) { if (arr[j] < arr[min_idx]) min_idx = j; } int temp = arr[min_idx]; arr[min_idx] = arr[i]; arr[i] = temp; } }"},{"prompt":"Given two unsorted arrays, merge them in a sorted form without using any extra space. nums1 = [5, 8, 2] nums2 = [7, 1]","completion":"def mergeArrays2(nums1, nums2): i = j = 0 while i < len(nums1) and j < len(nums2): if nums1[i] > nums2[j]: nums1[i], nums2[j] = nums2[j], nums1[i] j += 1 else: i += 1 nums1.sort() nums2.sort() print(nums1) // [1, 2, 5] print(nums2) // [7, 8]"},{"prompt":"Given a string s and an integer k, find the kth largest character of s. s = \\"hello\\" k = 3","completion":"def kthLargestCharacter(s, k): char_dict = {} for c in s: if c not in char_dict: char_dict[c] = 1 else: char_dict[c] += 1 char_list = sorted(char_dict.items(), key=lambda x : x[1], reverse = True) return char_list[k - 1][0] print(kthLargestCharacter(s, k)) // l"},{"prompt":"Generate a random phone number using random numbers in Python.","completion":"import random def generatePhoneNumber(): nums = [str(random.randint(0, 9) for _ in range(10))] return '-'.join([''.join(nums[:3]), ''.join(nums[3:6]), ''.join(nums[6:])]) print(generatePhoneNumber() // \\"567-444-0116\\""},{"prompt":"Write a MySQL query to select the 10 oldest employees from the Employees table. Employees table is defined as: (employee_id int, first_name varchar(255), last_name varchar(255), age int).","completion":"SELECT employee_id, first_name, last_name, age FROM Employees ORDER BY age DESC LIMIT 10;"},{"prompt":"Sort the following array of numbers in-place using the bubble sort algorithm: [5, 3, 2, 8, 1].","completion":"for i in range(len(arr)): for j in range(len(arr)-i-1): if arr[j] > arr[j+1] : arr[j], arr[j+1] = arr[j+1], arr[j] Resulting array = [1, 2, 3, 5, 8]"},{"prompt":"Create a table in PostgreSQL using the following columns: id, name, age and address.","completion":"CREATE TABLE employees ( id SERIAL PRIMARY KEY, name VARCHAR(50) not null, age INTEGER not null, address VARCHAR(50) );"},{"prompt":"Write a Java statement to declare a string variable, “str”, and initialize it with a value “Good morning!”.","completion":"String str = \\"Good morning!\\";"},{"prompt":"What is the best way to store user input in JavaScript?","completion":"The best way to store user input in JavaScript is to use the localStorage object. The localStorage object is part of the web storage API and provides a way to store data on the user's computer. The data is stored in key/value pairs and is accessible even after the browser is closed and reopened. The syntax to set the value is: localStorage.setItem(key, value); Where the key is the name of the entry and the value is the data you want to store. To retrieve the value, you can use the getItem() method: localStorage.getItem(key);"},{"prompt":"Write a SQL query to print out the names of employees in the Employees table who are older than 25. Employees table is defined as: (employee_id int, first_name varchar(255), last_name varchar(255), age int).","completion":"SELECT first_name, last_name FROM Employees WHERE age > 25;"},{"prompt":"Write a ReactJS code to render the following DOM structure. <div class=\\"container\\"> <h1>Welcome!</h1> <div> <h2>I'm a React App</h2> <p>This is an example code to render a DOM structure.</p> </div> </div>","completion":"import React from 'react'; const App = () => { return( <div className=\\"container\\"> <h1>Welcome!</h1> <div> <h2>I'm a React App</h2> <p>This is an example code to render a DOM structure.</p> </div> </div> ); } export default App;"},{"prompt":"Create a function to search a given string for the first vowel.","completion":"def first_vowel(string): index = 0 for char in string: if char in [\\"a\\", \\"e\\", \\"i\\", \\"o\\", \\"u\\"]: return index else: index+= 1 return -1"},{"prompt":"Write a C++ statement to create an array of 10 elements.","completion":"int arr[10];"},{"prompt":"Construct a Python loop to display the elements in the following list. my_list = [1, 2, 3, 4]","completion":"for element in my_list: print(element)"},{"prompt":"Write a SQL query to display the names and ages of students older than 25.","completion":"SELECT name, age FROM students WHERE age > 25;"},{"prompt":"Write an HTML program to capture the entered text in an input box","completion":"<html> <head> <title>Text Capturing</title> </head> <script> function captureText() { var text = document.getElementById(\\"inputBox\\").value; alert(\\"Entered text: \\" + text); } <\/script> <body> <h1> Text Capturing </h1> <input type=\\"text\\" id=\\"inputBox\\" /> <button onclick=\\"captureText()\\">Capture Text</button> </body> </html>"},{"prompt":"Create an array of all the odd numbers between 0 and n (inclusive).","completion":"def odd_numbers_array(n): array = [] for i in range(0,n+1): if i%2 != 0: array.append(i) return array"},{"prompt":"mplement a Java class for a LinkedList.","completion":"public class LinkedList { private Node head; // head of the list // linked list Node. // This inner class is made static // so that main() can access it static class Node { int data; Node next; // Constructor Node(int d) { data = d; next = null; } } public void append(int new_data) { // allocate new Node Node new_node = new Node(new_data); // if the Linked List is empty, // then make the new Node as head if (head == null) { head = new Node(new_data); return; } // This new Node is going to be the last node, so make next of // it as null new_node.next = null; // Else traverse till the last Node Node last = head; while (last.next != null) last = last.next; // Change the next of last Node last.next = new_node; return; } }"},{"prompt":"Write an algorithm in C++ for linear search.","completion":"// C++ implementation of the linear search #include <iostream> using namespace std; // A iterative linear search function to search 'x' in arr[] // of size 'n' int search(int arr[], int n, int x) { int i; for (i = 0; i < n; i++) if (arr[i] == x) return i; return -1; } int main() { int arr[] = { 2, 3, 4, 10, 40 }; int x = 10; int n = sizeof(arr) / sizeof(arr[0]); int result = search(arr, n, x); (result == -1) ? cout<<\\"Number not found\\" : cout<<\\"Number found at index \\"<<result; return 0; }"},{"prompt":"Generate a Java program to read two numbers from the user and print their sum.","completion":"import java.util.Scanner; public class SumOfTwoNumbers { public static void main(String[] args) { Scanner scanner = new Scanner(System.in); int num1, num2, sum; System.out.print(\\"Enter first number:\\"); num1 = scanner.nextInt(); System.out.print(\\"Enter second number:\\"); num2 = scanner.nextInt(); scanner.close(); sum = num1 + num2; System.out.println(\\"Sum of both numbers :\\" + sum); } }"},{"prompt":"Suggest a method in JavaScript for finding the maximum of two numbers.","completion":"function findMax(num1, num2) { return Math.max(num1, num2); }"},{"prompt":"Create a program in Python for converting Fahrenheit to Celsius.","completion":"def fahrenheit_to_celsius(temp): return (temp - 32) * 5/9; # Driver code temperature = float(input(\\"The temperature in Fahrenheit: \\")) print(\\"Temperature in Celsius: {}\\".format( fahrenheit_to_celsius(temperature)))"},{"prompt":"Generate a program in Java that reads two strings and checks if the strings are equal.","completion":"public class StringEquality { public static void main(String[] args) { // two strings String s1, s2; s1 = \\"Hello\\"; s2 = \\"Hello\\"; if (s1.equals(s2)) System.out.println(\\"Strings are equal.\\"); else System.out.println(\\"Strings are not equal.\\"); } }"},{"prompt":"Construct a SQL query to find all the books with a price over £10.","completion":"SELECT * FROM books WHERE price > 10;"},{"prompt":"Generate a C# code for searching an element in an array.","completion":"public class Program { public static int SearchElement(int[] arr, int value) { for (int i=0; i<arr.Length; i++) { if (arr[i] == value) return i; } return -1; } public static void Main() { int[] myArray = { 1, 2, 3, 5, 7, 10, 15 }; int element = 5; int index = SearchElement(myArray, element); if (index == -1) Console.WriteLine(\\"Element not found\\"); else Console.WriteLine(\\"Element found at position: \\" + (index+1)); } }"},{"prompt":"Create an algorithm in Java for maximum subarray problem.","completion":"public static int maxSubArraySum(int a[]) { int size = a.length; int maxSoFar = Integer.MIN_VALUE, maxEndingHere = 0; for (int i = 0; i < size; i++) { maxEndingHere = maxEndingHere + a[i]; if (maxSoFar < maxEndingHere) maxSoFar = maxEndingHere; if (maxEndingHere < 0) maxEndingHere = 0; } return maxSoFar; }"},{"prompt":"Calculate the Fibonacci sequence up to the n-th number where n is provided as an argument.","completion":"def fibonacci(n): if n == 0: return 0 elif n == 1: return 1 else: return fibonacci(n-1) + fibonacci(n-2)"},{"prompt":"Create a program to check if the input is an even number.","completion":"def is_even(num): return num % 2 == 0"},{"prompt":"Find the first non-repeating character in a string. string: \\"abcdabcd","completion":"def find_first_non_repeating(string): seen = {} for char in string: if char in seen: seen[char] +=1 else: seen[char] = 1 return [char for char in string if seen[char] == 1][0]"},{"prompt":"Find the number of combinations of a given length from the characters in a given string. string: \\"ABCD\\" length: 2","completion":"def count_combinations(string, length): result = 1 for i in range(length): result *= len(string) return result"},{"prompt":"Create a program to find the nth element of the Fibonacci sequence.","completion":"def nth_element(n): if n == 0: return 0 elif n == 1: return 1 else: return nth_element(n-1) + nth_element(n-2)"},{"prompt":"mplement a game of Hangman in Python.","completion":"import random # list of words word_list = [\\"python\\", \\"java\\", \\"computer\\", \\"programming\\", \\"hangman\\"] # randomly select a word word = random.choice(word_list) # set initial lives lives = 6 # write your code here def hangman(word, lives): return # write your code here"},{"prompt":"Create a Flask endpoint for displaying a list of items from a database. Table name: 'items' Columns: id, name, price","completion":"@app.route('/items', methods = ['GET']) def display_items(): # write your code here items = [] # query the database items = db.session.query(Items).all() # return the list of items return jsonify(items)"},{"prompt":"Write a React component for a form to allow users to submit a message.","completion":"import React from 'react'; class MessageForm extends React.Component { state = {name: '', message: '' } handleChangeName = evt => { this.setState({ name: evt.target.value }); } handleChangeMessage = evt => { this.setState({ message: evt.target.value }); } handleSubmit = evt => { //submit your form here }; render() { return ( <form onSubmit={this.handleSubmit}> <label> Name: <input type=\\"text\\" name=\\"name\\" value={this.state.name} onChange={this.handleChangeName} /> </label> <label> Message: <input type=\\"text\\" name=\\"message\\" value={this.state.message} onChange={this.handleChangeMessage} /> </label> <button type=\\"submit\\">Submit</button> </form> ); } }; export default MessageForm;"},{"prompt":"Use TensorFlow to build a deep learning model for predicting the price of a given stock.","completion":"import tensorflow as tf # define the model model = tf.keras.Sequential([ tf.keras.layers.Input(shape=(1,), name=\\"Input_Layer\\", dtype=tf.float32), tf.keras.layers.Dense(32, activation='relu', name=\\"Hidden_Layer_1\\"), tf.keras.layers.Dense(32, activation='relu', name=\\"Hidden_Layer_2\\"), tf.keras.layers.Dense(1, activation='sigmoid', name=\\"Output_Layer\\") ]) # compile the model model.compile( optimizer=tf.keras.optimizers.Adam(), loss=tf.keras.losses.MeanSquaredError(), metrics=[tf.keras.metrics.MeanAbsoluteError()], ) # fit the model model.fit(x_train, y_train, batch_size=32, epochs=10, validation_data=(x_val, y_val))"},{"prompt":"Write a controller in Ruby for processing user sign up requests.","completion":"class SignupController < ApplicationController def create # write your code here end private def signup_params params.require(:signup).permit(:name, :email, :password, :password_confirmation) end end"},{"prompt":"Write a SQL query to compute the sum of a column of a given table. Table name: 'transactions' Columns: id, amou","completion":"SELECT SUM(amount) AS total_amount FROM transactions;"},{"prompt":"Read the following text and use a regular expression to extract email addresses. Please contact john@example.com and lisa@mail.com for more information.","completion":"/(?:[a-z0-9!#%&'*+/=?^_\`{|}~-]+(?:.[a-z0-9!#%&'*+/=?^_\`{|}~-]+)*|\\"(?:[x01-x08x0bx0cx0e-x1fx21x23-x5bx5d-x7f]|[x01-x09x0bx0cx0e-x7f])*\\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?).){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-z0-9-]*[a-z0-9]:(?:[x01-x08x0bx0cx0e-x1fx21-x5ax53-x7f]|[x01-x09x0bx0cx0e-x7f])+)])/"},{"prompt":"Create a web service for sending a daily email reminder.","completion":"import smtplib from email.mime.text import MIMEText # write your code here def send_email(recipient, message): sender_email = \\"<your@email.com>\\" sender_name = \\"Daily Reminder\\" # create the message msg = MIMEText(message) msg['Subject'] = 'Daily Reminder' msg['From'] = sender_name + ' <' + sender_email + '>' msg['To'] = recipient # send the message server = smtplib.SMTP('<smtp_server_address>') server.starttls() server.login(sender_email, '<sender_password>') server.send_message(msg) server.quit()"},{"prompt":"w would you write a query in SQL to return the names of all customers who have purchased over 100 in the last month?","completion":"SELECT customer_name FROM customers WHERE orders.amount > 100 AND orders.date > NOW() - INTERVAL 1 MONTH;"},{"prompt":"Get a random number between 1 and 20 using C++.","completion":"#include <iostream> #include <cstdlib> #include <ctime> using namespace std; // Generate a random number between 1 and 20 int randomnumber(int min, int max) { return (rand() % (max - min + 1) + min); } int main() { int num; // Use current time as seed for random generator srand(time(0)); num = randomnumber(1, 20); cout << \\"Random number between 1 and 20 is \\" << num << endl; return 0; }"},{"prompt":"Create four classes for a digital banking application.","completion":"Class 1: BankAccount - Responsible for creating, deleting, and managing bank accounts Class 2: Transaction - Responsible for storing and tracking transaction histories Class 3: User - Responsible for managing user access information Class 4: Customer - Responsible for storing customer data and providing customer service"},{"prompt":"Given a list of words, write a function to check if the list contains any palindrome words. words = [\\"racecar\\", \\"level\\", \\"tot\\", \\"trot\\"]","completion":"def contains_palindrome(words): for word in words: if word == word[::-1]: return True return False"},{"prompt":"List all the HTML elements which are used for formatting.","completion":"The HTML elements used for formatting include <p>, <hr>, <br>, <b>, <i>, <strong>, <em>, <sup>, <span>, <blockquote>, <pre>, <address>, <div>, <ul>, <ol>, <li>, and <table>."},{"prompt":"Given two numbers N and M, write a program to find the number of numbers from 1 to N where the last digit is less than or equal to M. N = 30, M = 7","completion":"def findNumbers(N, M): count = 0 for i in range(1, N+1): if i % 10 <= M: count += 1 return count"},{"prompt":"w is the Julia dynamic programming technique different from bottom-up dynamic programming?","completion":"Julia's dynamic programming technique uses memoization, which is a method of storing and reusing the result of previous computations. Bottom-up dynamic programming is a type of dynamic programming that begins with the solution to small problem instances and gradually builds up towards larger problem instances. Julia's dynamic programming approach does not necessarily build up from solution to small problem to larger problems and therefore may provide a more efficient solution for certain problems."},{"prompt":"Given a sequence of numbers, write a program to find the length of the longest subsequence in which all numbers are in increasing order. arr = [1, 7, 4, 3, 2, 8]","completion":"def findLongestSubsequence(arr): n = len(arr) dp = [1]*n for i in range(1, n): for j in range(i): if arr[i] > arr[j] and dp[i] < dp[j] + 1 : dp[i] = dp[j]+1 return max(dp)"},{"prompt":"What approaches are available for the optimization of a neural network?","completion":"There are several approaches for the optimization of a neural network, such as backpropagation, gradient descent, genetic algorithms, simulated annealing, particle swarm optimization, evolutionary computation, and stochastic gradient descent. These approaches are used to improve the accuracy and efficiency of the neural network by optimizing its parameters."},{"prompt":"Name the error in the example code. Example Code: def do_math(): num1 = 5 num2 = 3 sum = num1 + num2 retur","completion":"The error is \\"Missing Return Statement\\"."},{"prompt":"Given a sentence, find the first verb in the sentence. Sentence: She shouted and cheered when she saw her result.","completion":"shouted"},{"prompt":"w can you check the memory used by a Python object?","completion":"You can use the sys module’s \\"getsizeof()\\" function to check the memory used by an object. The getsizeof() method returns the memory size of the specified object in bytes. For example, sys.getsizeof(data) will return the size of the data object in bytes."},{"prompt":"Write a piece of code that runs a loop from 0 to 10, and prints the loop index each time it runs.","completion":"for i in range(11): print(i)"},{"prompt":"What command can be used to delete the \\"example\\" directory?","completion":"The command to delete the \\"example\\" directory is \\"rm -r example\\"."},{"prompt":"Given a list of integers, calculate the sum of only the first 3 numbers. List: [1,4,5,7,2]","completion":"list = [1,4,5,7,2] sum = list[0] + list[1] + list[2] #Result: 10"},{"prompt":"Create a regular expression that verifies the following pattern: contains one or more digits followed by a hyphen followed by one or more digits.","completion":"exp = re.compile(\\"d+-d+\\")"},{"prompt":"Write a Java code snippet to print out the current system time.","completion":"long currentTimeMillis = System.currentTimeMillis(); SimpleDateFormat sdf = new SimpleDateFormat(\\"MMM dd,yyyy HH:mm:ss\\"); Date resultdate = new Date(currentTimeMillis); System.out.println(sdf.format(resultdate)); //Result: Dec 01,2020 13:55:42"},{"prompt":"Compare the two strings, and return 0 if they are the same, 1 if a is greater than b, or -1 if b is greater than a. Strings: a = \\"hello world\\" b = \\"goodbye world","completion":"int result = a.compareTo(b); //Result: 1 (because \\"hello world\\" is greater than \\"goodbye world\\")"},{"prompt":"Design a method which takes in two sorted array of size n and m, and returns a new sorted array of size n + m int arr1[] = {1, 3, 5, 7}; int arr2[] = {2, 4, 6, 8};","completion":"public static int[] mergeArrays(int[] arr1, int[] arr2) { int[] result = new int[arr1.length + arr2.length]; int i = 0, j = 0, k = 0; while (i < arr1.length && j < arr2.length) { if (arr1[i] < arr2[j]) result[k++] = arr1[i++]; else result[k++] = arr2[j++]; } while (i < arr1.length) result[k++] = arr1[i++]; while (j < arr2.length) result[k++] = arr2[j++]; return result; }"},{"prompt":"Write a JavaScript program to check whether a particular character is present in a given string or not String: 'Hello World!' Character: 'l'","completion":"function checkChar(str, char) { if (str.indexOf(char) > -1) { return true; } else { return false; } } if (checkChar('Hello World!', 'l')) { console.log('Character is present in the string'); } else { console.log('Character is not present in the string'); }"},{"prompt":"Create a SQL query to output the names of all the customers in the orders table","completion":"SELECT DISTINCT customer_name FROM orders;"},{"prompt":"Design a program to find the sum of all numbers in an array of size 5 int arr[] = {4, 8, 2, 6, 1};","completion":"public class SumOfElements { // Function to get sum of all elements. public static int getSum(int[] arr) { int sum = 0; for (int i : arr) sum += i; return sum; } public static void main(String[] args) { int arr[] = { 4, 8, 2, 6, 1 }; int sum = getSum(arr); System.out.println(\\"Sum is : \\" + sum); } }"},{"prompt":"Edit an existing Python script to read a 3D array of size 3 x 3 x 3","completion":"arr = [[[0 for x in range(3)] for y in range(3)] for z in range(3)] for x in range(3): for y in range(3): for z in range(3): arr[x][y][z] = int(input())"},{"prompt":"Write a SQL query to print the name and total orders of each customer","completion":"SELECT customer_name, COUNT(*) FROM orders GROUP BY customer_name;"},{"prompt":"Write a function that takes a name as a parameter and returns its reverse counterpart. name = \\"Joh","completion":"def reverse_name(name): return name[::-1]"},{"prompt":"Write a function to take a list of strings and return only the words made up of the same letter. word_list = [\\"aaa\\", \\"cab\\", \\"bba\\"]","completion":"def same_letter_words(word_list): same_letter_words = [word for word in word_list if len(set(word)) == 1] return same_letter_words"},{"prompt":"Using the list of numbers, create a function to sort the list into ascending order. numbers = [6, 4, 3, 2, 8]","completion":"def sort_ascending(numbers): numbers.sort() return numbers"},{"prompt":"Using the data provided, create a function to calculate the mean value of the elements inside the dictionary. data = {\\"John\\": 8.5, \\"Jane\\": 9, \\"Bob\\": 5}","completion":"def mean_value(data): sum = 0 count = 0 for value in data.values(): sum += value count += 1 return round(sum/count, 2)"},{"prompt":"Write a function to print out the triangle pattern as shown in the example. height = 3","completion":"def triangle_pattern(height): star = \\"*\\" for i in range(height): print(star*(i+1))"},{"prompt":"Suggest a function name for a function that reverses a string.","completion":"function reverseString(str) {...} or function reverseWord(str) {...}"},{"prompt":"Generate a random 3-digit number without using any in-built methods","completion":"// Generate a random 3-digit number let num = Math.floor(Math.random() * (999 - 100 + 1) + 100);"},{"prompt":"Create a class in Python for a student which should include the following fields: first name, last name, age, and grade.","completion":"class Student: def __init__(self, first_name, last_name, age, grade): self.first_name = first_name self.last_name = last_name self.age = age self.grade = grade"},{"prompt":"Write a regular expression to validate an Indian mobile number.","completion":"^[6-9][0-9]{9}"},{"prompt":"Suggest a sorting algorithm which takes minimal time to execute.","completion":"Quick Sort"},{"prompt":"w can you pass multiple parameters in a function?","completion":"You can pass multiple parameters in a function by using either argument lists, or by using objects or arrays to group multiple parameters together."},{"prompt":"Provide a syntax for an if-else statement in Javascript.","completion":"if (condition) { // statements when condition is true } else { // statements when condition is false }"},{"prompt":"Suggest a class name for a class which models a data structure for storing a 2-dimensional array.","completion":"MatrixDataStructure"},{"prompt":"Write a C++ function which allows the user to input two strings and prints the longest string.","completion":"void getLongestString(string str1, string str2) { // variables to store length of both strings int l1 = str1.length(), l2 = str2.length(); if (l1 > l2) cout << str1; else cout << str2; }"},{"prompt":"What is pandas and why would someone use it?","completion":"\\"\\"\\" Pandas is a Python library used for data analysis and manipulation. It is used for data wrangling, data preparation, and data exploration. Pandas allows for easy manipulation and analysis of data, as well as performing high-level operations on it. It also supports several data formats including CSV, JSON, SQlite, HDF5, and many more. Pandas is a powerful tool for data analysis as it is flexible, functional, and easy to use. It offers a wide range of tools for data analysis, including data filtering and data aggregation. With Pandas, it is possible to quickly convert, clean, and manipulate data into an easily understandable format, enabling the user to easily explore and identify trends and patterns."},{"prompt":"Write a code to perform a depth-first search on a binary search tree.","completion":"\\"\\"\\" A code to perform a depth-first search on a binary search tree \\"\\"\\" # Node class class Node: # Constructor to create a new node def __init__(self, key): self.key = key self.left = None self.right = None # A function to do inorder tree traversal def depth_first_search(root): if root is not None: print(root.key, end=\\" \\") depth_first_search(root.left) depth_first_search(root.right) if __name__ == '__main__': root = Node(1) root.left = Node(2) root.right = Node(3) root.left.left = Node(4) root.left.right = Node(5) print(\\"Depth First Search:\\") depth_first_search(root)"},{"prompt":"Given a string, what is the best way to reverse the characters in it? <noinput>>","completion":"\\"\\"\\" The best way to reverse the characters in a string is by using the slicing option of a string object. The string slicing reverses a string by slicing it from the end of the string and going to the beginning of the string. This can be done with the following syntax: string_name[::-1] For example, to reverse the string \\"Hello World!\\", the following can be used: \\"Hello World!\\"[::-1] which will output \\"!dlroW olleH\\". \\"\\"\\""},{"prompt":"What are the steps to debug a code?","completion":"\\"\\"\\" The steps to debug a code are: 1. Identify the errors in the code. 2. Identify the source of the errors. 3. Examine the context of the errors. 4. Determine possible solutions. 5. Test each solution and check the results. 6. Refine the solution by repeating steps 4 and 5 until the issue is resolved. \\"\\"\\""},{"prompt":"Create a Python code for a basic for loop.","completion":"\\"\\"\\" A Python code for a basic for loop \\"\\"\\" for i in range(10): print(i)"},{"prompt":"Write a code that takes the input of two strings, and returns the longest common substring in them.","completion":"\\"\\"\\" A code that takes the input of two strings, and returns the longest common substring in them \\"\\"\\" def longest_common_substring(s1, s2): m = [[0] * (1 + len(s2)) for i in range(1 + len(s1))] longest, x_longest = 0, 0 for x in range(1, 1 + len(s1)): for y in range(1, 1 + len(s2)): if s1[x - 1] == s2[y - 1]: m[x][y] = m[x - 1][y - 1] + 1 if m[x][y] > longest: longest = m[x][y] x_longest = x else: m[x][y] = 0 return s1[x_longest - longest: x_longest] if __name__ == '__main__': s1 = \\"Hello World\\" s2 = \\"Hey World\\" print(\\"The longest common substring is: %s\\" % longest_common_substring(s1, s2))"},{"prompt":"What is the difference between Python 2 and Python 3?","completion":"\\"\\"\\" The main difference between Python 2 and Python 3 is in how strings are treated. In Python 2, strings are written in byte strings or fully Unicode strings; in Python 3, strings are written in Unicode by default. Other differences include the import statement, integer division, integer in range function, function print, raising and catching exceptions, binary revisers, and many more. \\"\\"\\""},{"prompt":"What libraries are commonly used in data science?","completion":"\\"\\"\\" Some of the most commonly used libraries in data science are NumPy, pandas, Matplotlib, Scikit-Learn, TensorFlow, Theano, Seaborn, Keras, NLTK, Apache Spark, and Bokeh. These libraries are used for a variety of tasks such as data manipulation, machine learning, visualization, natural language processing, and big data analysis. \\"\\"\\""},{"prompt":"Write a code to find the longest common prefix among a given set of strings.","completion":"\\"\\"\\" A code to find the longest common prefix among a given set of strings \\"\\"\\" def longest_common_prefix(strs): if not strs: return \\"\\" shortest_str = min(strs,key=len) for i, ch in enumerate(shortest_str): for other in strs: if other[i] != ch: return shortest_str[:i] return shortest_str if __name__ == '__main__': strs = [\\"flower\\",\\"flow\\",\\"flight\\"] print(\\"The longest common prefix is: %s\\" % longest_common_prefix(strs))"},{"prompt":"Create a Java program that takes input from a user and prints it out.","completion":"import java.util.Scanner; public class Echo { public static void main(String[] args) { Scanner input = new Scanner(System.in); String line = input.nextLine(); System.out.println(line); } }"},{"prompt":"Create a CSS rule to make all titles on a page bold.","completion":"h1, h2, h3 { font-weight: bold; }"},{"prompt":"Develop an R script that converts a given number from Fahrenheit to Celsius. Fahrenheit temperature = 100","completion":"celsius_temperature = function(fahrenheit_temperature) { celsius_temperature = (fahrenheit_temperature - 32) * 5 / 9 return(celsius_temperature) } # Test case print(celsius_temperature(100)) # Output: 37.77778"},{"prompt":"Create a PHP script to add a given user to a database username = 'NewUser' password = 'Test123'","completion":"<?php username = 'NewUser'; password = 'Test123'; connection = mysqli_connect(\\"localhost\\", \\"root\\", \\"\\", \\"mydatabase\\"); sql = \\"INSERT INTO users (username, password) VALUES ('\\".username.\\"', '\\".password.\\"')\\"; if(mysqli_query(connection, sql)) { echo \\"User added successfully\\"; } else { echo \\"Error: \\" . sql . \\"<br>\\" . mysqli_error(connection); } ?>"},{"prompt":"Place the missing code in the following Java program to print \\"Hello World!\\". public class HelloWorld { public static void main(String[] args) { ~ } }","completion":"public class HelloWorld { public static void main(String[] args) { System.out.println(\\"Hello World!\\"); } }"},{"prompt":"w can you create a string of all random characters of length 10 in Python?","completion":"import random random_string = ''.join(random.choice('ABCDEFGHIJKLMNOPQRSTUVWXYZ') for _ in range(10))"},{"prompt":"mprove the following code by implementing a more efficient algorithm. def FunctionA(arr): output = [] for elem in arr: if elem > 0 and not elem in output: output.append(elem) return outpu","completion":"def FunctionA(arr): output = set() for elem in arr: if elem > 0: output.add(elem) return list(output)"},{"prompt":"What should be written in place of \\"___\\" to make the following code a valid if-else statement in Python? if x >= 0: ___","completion":"if x >= 0: print(\\"x is positive\\")"},{"prompt":"Construct a while loop to add all odd integers from 1 to 100.","completion":"sum_of_odds = 0 i = 1 while i <= 100: if i % 2 != 0: sum_of_odds += i i+=1"},{"prompt":"w can you print the following pattern in JavaScript?","completion":"for (let i=1; i<=5; i++) { for (let j=5; j>=i; j--) { document.write(\\"*\\"); } document.write(\\"<br>\\"); }"},{"prompt":"Change the following line of HTML code to add a class named \\"highlight\\" to the list item. <li>Hello</li>","completion":"<li class=\\"highlight\\">Hello</li>"},{"prompt":"Create a CSS style for the text within the tag <p> to be blue and italicized.","completion":"p { color: blue; font-style: italic; }"},{"prompt":"mplement a recursive method to find the sum of all numbers from 1 to n. The method should take an integer n as its argument. 4","completion":"def sumNums(n): if n == 0: return 0 else: return n + sumNums(n-1) # Driver Code n = 4 print(sumNums(n))"},{"prompt":"Edit the following CSS code to add a color of your choice to the <h1> element.","completion":"h1 { color: #FF0000; }"},{"prompt":"mplement a method in JavaScript to concatenate two strings together.","completion":"function concatenate(string1, string2) { return string1 + string2; }"},{"prompt":"Create a CSS style for a div element to have a width of 200px and a height of 50px.","completion":"div { width: 200px; height: 50px; }"},{"prompt":"Write an HTML code snippet to create two check boxes with labels “yes” and “no”.","completion":"<input type=\\"checkbox\\" name=\\"yes\\" value=\\"Yes\\">Yes <input type=\\"checkbox\\" name=\\"no\\" value=\\"No\\">No"},{"prompt":"Write an SQL query to find the highest population of any country from the table of countries. Table: countries Columns: Name (string), Population (int)","completion":"SELECT Name, MAX(Population) FROM countries;"},{"prompt":"Use the Java StringBuilder class to append three strings to a single string. String1: \\"Hello,\\" String2: \\" world!\\" String3: \\" Have a nice day!","completion":"StringBuilder sb = new StringBuilder(); sb.append(\\"Hello,\\"); sb.append(\\" world!\\"); sb.append(\\" Have a nice day!\\"); String finalString = sb.toString();"},{"prompt":"Write a SQL stored procedure to find all students enrolled in a specific course. Table: courses Columns: Id (int), Name (string) Table: students Columns: Id (int), Name (string), CourseId (int)","completion":"CREATE PROCEDURE getCourseStudents (@courseId INT) AS BEGIN SELECT s.Name FROM students s INNER JOIN courses c ON s.CourseId = c.Id WHERE c.Id = @courseId END"},{"prompt":"Create an HTML form to collect user information such as address and contact details.","completion":"<form> <label for=\\"firstname\\">First Name:</label> <input type=\\"text\\" id=\\"firstname\\" name=\\"firstname\\" > <br> <label for=\\"lastname\\">Last Name:</label> <input type=\\"text\\" id=\\"lastname\\" name=\\"lastname\\" > <br> <label for=\\"address\\">Address:</label> <input type=\\"text\\" id=\\"address\\" name=\\"address\\" > <br> <label for=\\"contact\\">Contact:</label> <input type=\\"text\\" id=\\"contact\\" name=\\"contact\\" > <br> <input type=\\"submit\\" value=\\"Submit\\" > </form>"},{"prompt":"Write a Kotlin class to represent a book. It should contain the title, author name, year of publication and ISBN.","completion":"class Book { private var title: String private var authorName: String private var yearOfPublication: Int private var ISBN: String constructor(title: String, authorName: String, yearOfPublication: Int, ISBN: String) { this.title = title this.authorName = authorName this.yearOfPublication = yearOfPublication this.ISBN = ISBN } fun getTitle(): String { return title } fun setTitle(title: String) { this.title = title } fun getAuthorName(): String { return authorName } fun setAuthorName(authorName: String) { this.authorName = authorName } fun getYearOfPublication(): Int { return yearOfPublication } fun setYearOfPublication(yearOfPublication: Int) { this.yearOfPublication = yearOfPublication } fun getISBN(): String { return ISBN } fun setISBN(ISBN: String) { this.ISBN = ISBN } }"},{"prompt":"Use the MySQL CREATE command to create a table of employees containing an employee ID, name, email address and phone number.","completion":"CREATE TABLE employees ( id INT NOT NULL AUTO_INCREMENT, name VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, phone VARCHAR(20) NOT NULL, PRIMARY KEY (id) );"},{"prompt":"Suggest a better algorithm for finding a prime number.","completion":"def is_prime(n): \\"\\"\\" A better algorithm for determining if a number is prime :param n: The number to determine whether is prime :return: a boolean if the number is prime \\"\\"\\" if (n <= 1): return False if (n <= 3): return True if (n % 2 == 0 or n % 3 == 0): return False i = 5 while(i * i <= n): if (n % i == 0 or n % (i + 2) == 0): return False i = i + 6 return True"},{"prompt":"how many ways can you write a program to append two strings together?","completion":"There are several ways to write a program to append two strings together: 1. Using the + operator, you can concatenate the two strings: string_combined = string1 + string2 2. Using the format() method, you can combine the two strings into one string: string_combined = '{}{}'.format(string1, string2) 3. Using the join() method, you can join the strings together using a glue character in between: string_combined = ' '.join([string1, string2]) 4. Using the append() method, you can append string2 to string1: string1.append(string2) 5. Using the replace() method, you can replace a part of string1 with string2: string_combined = string1.replace(string1, string2) 6. Using the extend() method, you can add the elements of string2 to the end of string1: string1.extend(string2)"},{"prompt":"Create a dockerfile to deploy a python app.","completion":"FROM python:3.7-alpine WORKDIR /app # Copy and install dependencies COPY requirements.txt . RUN pip install -r requirements.txt # Copy application source COPY src ./src # Set environment variables ENV DJANGO_SETTINGS_MODULE=app.settings EXPOSE 8000 # Run server ENTRYPOINT [\\"python\\", \\"src/manage.py\\"] CMD [\\"runserver\\", \\"0.0.0.0:8000\\"]"},{"prompt":"Create a python program to return a new list with each item multiplied by 2 in an existing list. [1, 2, 3, 4, 5]","completion":"def mult_by_two(nums): \\"\\"\\" Returns a new list with each item multiplied by 2 in an existing list :param nums: a list of numbers :return: a list of numbers with each item multiplied by 2 \\"\\"\\" new_list = [] for num in nums: new_list.append(num * 2) return new_list if __name__ == '__main__': nums = [1, 2, 3, 4, 5] print(mult_by_two(nums))"},{"prompt":"Suggest a regular expression pattern that identifies 3 consecutive numbers.","completion":"The regular expression pattern that identifies 3 consecutive numbers is: d{3}"},{"prompt":"w would you use regex to identify a valid ip4 address?","completion":"A valid IPv4 address can be identified using the regular expression pattern: ^((25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)(.|)){4}"},{"prompt":"Reverse a given string using recursive function in Python.","completion":"def reverse_string(str): if len(str) == 0: return str else: return reverse_string(str[1:]) + str[0]"},{"prompt":"Write a JavaScript program to remove all the occurrences of a specified character from a string. The quick brown fox","completion":"function removeChar(str, char){ return str.replace(new RegExp(char, 'g'), ''); }"},{"prompt":"Create an array of 5 random numbers between 1 and 10 and output it to the console.","completion":"let arr = []; for (let i = 0; i < 5; i++) { arr.push(Math.floor(Math.random() * 10 + 1)); } console.log(arr);"},{"prompt":"Debug and fix the code in the given input. def multiply(x,y) { return x*y x = 5 y = 4 print multiply(x,y)","completion":"def multiply(x,y) { return x*y x = 5 y = 4 print(multiply(x,y))"},{"prompt":"Create a Java program that takes in a String and returns a String with the letters of the original String reversed. string = \\"Hello","completion":"public static String reverseString(String s) { StringBuilder sb = new StringBuilder(); for (int i = s.length() - 1; i >= 0; i--) { sb.append(s.charAt(i)); } return sb.toString(); }"},{"prompt":"You need to add a feature to the existing code in the given input. class Car: def __init__(self, make, model, year): self.make = make self.model = model self.year = year","completion":"class Car: def __init__(self, make, model, year): self.make = make self.model = model self.year = year self.mileage = 0 def getMileage(self): return self.mileage"},{"prompt":"Re-write the code in the given input to make it more efficient. def fibonacci(n): if n <= 1: return n else: return(fibonacci(n-1) + fibonacci(n-2))","completion":"def fibonacci(n): if n<0: print(\\"Incorrect input\\") # First Fibonacci number is 0 elif n==0: return 0 # Second Fibonacci number is 1 elif n==1: return 1 else: a = 0 b = 1 for i in range(2,n+1): c = a + b a = b b = c return b"},{"prompt":"Create an HTML page with an input field and a button. The input field should take a sentence and the two button should \\"Upper Case\\" and \\"Lower Case\\" respectively. When clicked, it should upper case or lower case the sentence in the input field.","completion":"<!DOCTYPE html> <html> <head> <title>String Case Transformer</title> </head> <body> <input type=\\"text\\" id=\\"inputStr\\"> <button onclick=\\"transformCase('upper')\\">Upper Case</button> <button onclick=\\"transformCase('lower')\\">Lower Case</button> <script> function transformCase(choice) { var str = document.getElementById(\\"inputStr\\").value; if (choice === 'upper') { document.getElementById(\\"inputStr\\").value = str.toUpperCase(); } else { document.getElementById(\\"inputStr\\").value = str.toLowerCase(); } } <\/script> </body> </html>"},{"prompt":"Write a SQL statement to select all the authors whose age is greater than 18.","completion":"SELECT * FROM authors WHERE age > 18"},{"prompt":"Create a C# event handler that is triggered when a button is clicked, and prints the text \\"Button clicked!","completion":"public void btnClick_Click(object sender, System.EventArgs e) { System.Console.WriteLine(\\"Button clicked!\\"); }"},{"prompt":"Given two strings s1 and s2, write a function to return a new string containing the characters present only in s1. s1 = \\"abcdef\\" s2 = \\"fghijk","completion":"def unique_str(s1, s2): res = \\"\\" for i in s1: if i not in s2: res += i return res"},{"prompt":"Write a SQL query to select the first and last name of all employees that are located in New York.","completion":"SELECT first_name, last_name FROM employees WHERE location = \\"New York\\";"},{"prompt":"Design a function to evaluate an expression represented as a string. expression = \\"2.0+2.1","completion":"def evaluate(expression): expr = expression.replace(\\" \\",\\"\\") expr_list = expr.split(\\"+\\") result = float(expr_list[0]) + float(expr_list[1]) return result"},{"prompt":"Using SQL, select the columns from the table below and order them in descending order by the \\"date\\" column. Table Name: Events Columns: id, name, date","completion":"SELECT id, name, date FROM Events ORDER BY date DESC;"},{"prompt":"Generate a working Angular program","completion":"import { Component } from '@angular/core'; @Component({ selector: 'app-root', templateUrl: './app.component.html', styleUrls: ['./app.component.css'] }) export class AppComponent { title = 'Angular Application'; }"},{"prompt":"Generate a working Android program to display a simple string","completion":"public class MainActivity extends AppCompatActivity { @Override protected void onCreate(Bundle savedInstanceState) { super.onCreate(savedInstanceState); setContentView(R.layout.activity_main); TextView textView = findViewById(R.id.text_view); // You can use a string resource textView.setText(R.string.message); } }"},{"prompt":"Program a function in C++ which finds the number of duplicate elements in an array. array: [1, 3, 2, 5, 2, 3]","completion":"#include <iostream> #include <unordered_map> using namespace std; int numOfDuplicates(int arr[], int n) { unordered_map<int, int> freq; for (int i = 0; i < n; i++) { freq[arr[i]]++; } int count = 0; for (auto i : freq) { if (i.second > 1) count++; } return count; }"},{"prompt":"mplement a function in Python that calculates the Levenshtein Distance of two strings. str1 = \\"hackathon\\" str2 = \\"hack","completion":"def calculate_levenshtein_distance(str1, str2): distances = np.zeros((len(str1)+1, len(str2)+1)) for i in range(0, len(str1)+1): distances[i, 0] = i for j in range(0, len(str2)+1): distances[0, j] = j for i in range(1, len(str1)+1): for j in range(1, len(str2)+1): if str1[i-1] == str2[j-1]: distances[i, j] = distances[i-1, j-1] else: distances[i, j] = min(distances[i-1, j], distances[i, j-1], distances[i-1, j-1]) + 1 return distances[len(str1), len(str2)]"},{"prompt":"Create a function in Python that takes two parameters and returns the sum of squares of all numbers between them","completion":"def sum_of_square_range(a, b): sum = 0 for i in range(a, b+1): sum += i * i return sum"},{"prompt":"Given a list of numbers, design a function in Python to check if all numbers in the list are even","completion":"def all_even(lst): for num in lst: if num % 2 != 0: return False return True"},{"prompt":"Create a dictionary in Python whose keys are strings and values are integers","completion":"my_dict = { \\"one\\": 1, \\"two\\": 2, \\"three\\": 3 }"},{"prompt":"Create a program in Python to return the first n elements from an array","completion":"def first_n_elements(array, n): return array[:n]"},{"prompt":"Print out the prime numbers between 0 to 100.","completion":"for n in range(2, 101): for i in range(2, n): if n % i == 0: break else: print(n, end = ' ')"},{"prompt":"Create an algorithm that finds the maximum subarray sum in a given array. [-2, 1, -3, 4, -1, 2, 1, -5, 4]","completion":"def max_subarray_sum(arr): max_sum = 0 current_sum = 0 for i in range(len(arr)): current_sum += arr[i] if current_sum > max_sum: max_sum = current_sum if current_sum < 0: current_sum = 0 return max_sum"},{"prompt":"Edit the following code to generate a list of the vowels in a given string.","completion":"def get_vowels(str): vowels = ['a', 'e', 'i', 'o', 'u'] res = [] for letter in str: if letter.lower() in vowels: res.append(letter) return res"},{"prompt":"Create a function to classify an array as odd or even length.","completion":"def classify_array_length(arr): if len(arr) % 2 == 0: return 'even' else: return 'odd'"},{"prompt":"w would you reverse the words order in a given string?","completion":"def reverse_words(string): return \\" \\".join(string.split(\\" \\")[::-1])"},{"prompt":"Write a function that takes a positive integer and returns the next number which is divisible by 7.","completion":"def next_mult_of_7(num): return num + (7 - num%7)"},{"prompt":"Given a list of numbers, write a Python function to count how many numbers in the list are greater than 10.","completion":"def count_greater_than_ten(nums): return len([n for n in nums if n > 10])"},{"prompt":"Given a dictionary, write a Python function to print all the key-value pairs in the dictionary.","completion":"def print_dict_key_value(dic): for key, value in dic.items(): print(f\\"{key}: {value}\\")"},{"prompt":"Given a string and an integer N, write a Python function to construct the Nth palindromic string.","completion":"def construct_palindrome(string, N): length = len(string) mid = length // 2 left = string[:mid] right = left[::-1] if length % 2 == 0: left = string[:mid - (N - 1)] right = left[::-1] else: left = string[:mid - N] right = string[mid + 1:(mid + 1) + N][::-1] return left + string[mid] + right"},{"prompt":"w would you print all the key-value pairs of an already existing dictionary?","completion":"def print_dict_key_value(dic): for key, value in dic.items(): print(f\\"{key}: {value}\\")"},{"prompt":"w can we delete all the elements of a list in Python?","completion":"def delete_all_elements(lst): del lst[:]"},{"prompt":"Create a text-based menu for a command-line program.","completion":"Welcome to My Program! Please select from the following menu: 1. Run Program 2. Edit Settings 3. View Logs 4. Quit Program Please enter the number of your choice:"},{"prompt":"Parse the following JSON object and extract the data stored in the \\"details\\" field. { \\"data\\": [ { \\"name\\": \\"John\\", \\"details\\": { \\"address\\": \\"123 Main St.\\", \\"phone\\": \\"000-123-4567\\" } } ] }","completion":"const parsedJSON = JSON.parse(jsonObject); const address = parsedJSON.data[0].details.address; const phone = parsedJSON.data[0].details.phone;"},{"prompt":"Write a Python function to convert an array of integers into their respective strings. arr = [1, 2, 3]","completion":"def array_int_string(arr): \\"\\"\\"Converts an array of integers into strings.\\"\\"\\" return [str(num) for num in arr] array_int_string(arr) # returns [\\"1\\", \\"2\\", \\"3\\"]"},{"prompt":"Find the missing number in the following array: [16, 3, 2, 11, 15, 5, 4, 14].","completion":"The missing number is 12."},{"prompt":"ert the following data into a SQL table named \\"customers\\": Name: John Smith Age: 32 Address: 201 Mission Street City: San Francisco State: CA","completion":"INSERT INTO customers (name, age, address, city, state) VALUES ('John Smith', 32, '201 Mission Street', 'San Francisco', 'CA');"},{"prompt":"Using a for loop, create a list of integers that are multiples of 4 from 0 to 50.","completion":"multiples_of_four = [n for n in range(0, 51) if n % 4 == 0]"},{"prompt":"Create a JavaScript object representing a book, with properties such as title, author and pages.","completion":"let book = { title: \\"The Cat in the Hat\\", author: \\"Dr. Seuss\\", pages: 60 };"},{"prompt":"Compute the surface area of a pyramid with a base area of 10 cm and a height of 7 cm.","completion":"The surface area of the pyramid is 24 cm²."},{"prompt":"Design a basic graphic user interface (GUI) for a calculator.","completion":"import tkinter as tk root = tk.Tk() # design the window root.title(\\"Calculator\\") root.geometry(\\"200x250\\") # create the buttons button1 = tk.Button(root, text=\\"1\\", width=5, height=2) button1.grid(row=0, column=0, padx=4, pady=4) button2 = tk.Button(root, text=\\"2\\", width=5, height=2) button2.grid(row=0, column=1, padx=4, pady=4) button3 = tk.Button(root, text=\\"3\\", width=5, height=2) button3.grid(row=0, column=2, padx=4, pady=4) # create more buttons # and so on root.mainloop()"},{"prompt":"Create an array where each element is the maximum of each row in a given matrix. [[1, 2, 3], [4, 5, 6], [7, 8, 9]]","completion":"def max_elements(matrix): max_elements = [] for row in matrix: max_elements.append(max(row)) return max_elements"},{"prompt":"Convert this integer to its corresponding binary representation in 8 bits. 32","completion":"def int_to_binary(num): return '{0:08b}'.format(num)"},{"prompt":"w can you remove all blank spaces from a given string in Python?","completion":"You can remove all blank spaces from a given string in Python using the replace() function. This function takes two arguments, the first is the substring to be replaced and the second is the substring to be inserted in its place. In this case, you can use an empty string as the second argument to remove any instance of the white space from the string. For example: string_with_spaces = \\" Hello World \\" no_spaces = string_with_spaces.replace(\\" \\", \\"\\") print(no_spaces) # Output: \\"HelloWorld\\""},{"prompt":"Parse the following JSON string and print out all the key-value pairs: {“name”:”John”,”age”:25,”city”:\\"New York String = '{\\"name\\":\\"John\\",\\"age\\":25,\\"city\\":\\"New York\\"}'","completion":"import json String = '{\\"name\\":\\"John\\",\\"age\\":25,\\"city\\":\\"New York\\"}' # Parse the string js = json.loads(String) # Print all key-value pairs for k, v in js.items(): print(k, \\":\\", v)"},{"prompt":"Write a CSS rule to create a text-decoration line below the h2 element.","completion":"h2 { text-decoration: underline; }"},{"prompt":"Write an algorithm for checking if an array is sorted or not. Array = [4, 1, 7, 5]","completion":"// This function accepts an array as argument and returns true if array is sorted, else false. let isSorted = (arr) => { // Set the initial status as true let sorted = true; // Iterate over the complete array for (let i = 0; i < arr.length - 1; i++) { // Compare adjacent element if (arr[i] > arr[i + 1]) { // Update the status if it is not sorted sorted = false; break; } } // Return the sorted status return sorted; } // Example array let arr = [4, 1, 7, 5]; // Check if the array is sorted console.log(isSorted(arr)); // Output: false"},{"prompt":"Create a CSS rule to set the size for all h1 elements as 34px.","completion":"h1 { font-size: 34px; }"},{"prompt":"Design and implement a function that takes a string as input and returns the reverse string.","completion":"function reverseString(str) { let reversedStr = ''; for (let i = str.length - 1; i >= 0; i--) { reversedStr += str[i]; } return reversedStr; }"},{"prompt":"Create a SQL query to add 1 to a designated row in a table. Table: users Row: age Location: id = 4","completion":"UPDATE users SET age = (age + 1) WHERE id = 4;"},{"prompt":"Construct a Numpy array of shape 2x3 containing all 7s.","completion":"arr = np.array([[7, 7, 7], [7, 7, 7]])"},{"prompt":"Design an algorithm to get the maximum value from a given array of four elements. [-5, 2, 45, 9]","completion":"1. Set a variable, maxValue, and initialize it to the first element in the array. 2. Iterate through the array, comparing each element to maxValue. 3. If the element is bigger than maxValue, replace maxValue with the element. 4. When the loop is finished, save maxValue and return it as the maximum value from the array."},{"prompt":"Explain what is meant by 'statement coverage' in software testing.","completion":"Statement coverage is a software testing metric which measures the percentage of statements in the source code which have been exercised by the test suite. Statement coverage focuses on validating that every line of source code is executed and checked. A successful statement coverage of 100% implies that all executable statements in the application have been tested."},{"prompt":"Create an algorithm to find the second minimum element from a given array of 7 elements. [87, 34, 56, 12, 21, 45, 67]","completion":"1. Set a variable, secondMinimum, to the first element of the array. 2. Iterate through the array. 3. For every element check if it is smaller than secondMinimum, but bigger than the smallest element in the array. 4. If it is, set secondMinimum to that element. 5. When the iteration is finished, return secondMinimum."},{"prompt":"Write a SQL query to select users whose age is greater than or equal to 20 from the user_data table.","completion":"SELECT * FROM user_data WHERE age >= 20;"},{"prompt":"Generate a web page containing an HTML table containing the numbers from 1 to 10.","completion":"<html> <head> <title>Number Table</title> </head> <body> <table> <tr> <th>Number</th> </tr> {% for number in range(1, 11) %} <tr> <td>{{number}}</td> </tr> {% endfor %} </table> </body> </html>"},{"prompt":"Develop a function to merge two lists l1 and l2 into a single list. 1. l1 = [3, 4, 5] 2. l2 = [7, 8]","completion":"def merge(l1, l2): l3 = l1 + l2 return l3"},{"prompt":"Create a function to print all the paths in a binary tree.","completion":"def print_paths(root): path = [] print_paths_util(root, path, 0) def print_paths_util(root, path, pathLen): if root is None: return if (len(path) > pathLen): path[pathLen] = root.data else: path.append(root.data) pathLen = pathLen + 1 if root.left is None and root.right is None: for i in range(pathLen): print(path[i],end=\\" \\") print() else: print_paths_util(root.left, path, pathLen) print_paths_util(root.right, path, pathLen)"},{"prompt":"Write a Python program to create a dictionary with three elements.","completion":"d = { \\"one\\" : 1, \\"two\\" : 2, \\"three\\" : 3 }"},{"prompt":"Write a Bash script to print the system date in the format \\"year-month-date\\".","completion":"#!/bin/bash # Get the current date in the format \\"year-month-date\\" date +\\"%Y-%m-%d\\""},{"prompt":"Create a function in C that takes a string as input and returns an integer, which represents the number of occurences of a given character in the string. \\"Hello, World!\\", 'o'","completion":"int count_occurrences(char *str, char c) { int count = 0; // Traverse the string and check // for occurrences of character. for (int i=0; str[i] != '0'; i++) if (str[i] == c) count++; return count; }"},{"prompt":"Write C# code to remove a specific element from an array. {1,2,3,4,5,6}, 4","completion":"public static int[] RemoveElement(int[] arr, int element) { List<int> result = arr.ToList(); for (int i = 0; i < result.Count; i++) if (result[i] == element) result.RemoveAt(i); return result.ToArray(); }"},{"prompt":"Write a jQuery command to add a classname to an element.","completion":"('element').addClass('classname');"},{"prompt":"Edit the following code to store 10 numbers in an array. int array[]","completion":"int array[10];"},{"prompt":"Determine the sum of the integers in the following list. list = [2, 4, 6, 8, 10]","completion":"sum = 30"},{"prompt":"Delete the forth row from the following table using an SQL query. Table: id | name ------------------- 1 | John 2 | Jane 3 | Jacob 4 | Jill","completion":"DELETE FROM Table WHERE id = 4;"},{"prompt":"Write a CSS code to set the text colour of the h2 element to blue.","completion":"h2 { color: blue; }"},{"prompt":"Write a JavaScript expression that prints the value of the array at index 2. let arr = [2, 4, 6, 8, 10];","completion":"console.log(arr[2]);"},{"prompt":"Select all words that start with 'a' from the following text. The quick brown fox jumps over the lazy dog.","completion":"The quick brown fox jumps over the lazy dog. Answer: The,quick, brown, and over."},{"prompt":"Write an R function that determines the average value of an integer array.","completion":"average <- function(numbers) { sum <- 0 for (i in numbers) { sum <- sum + i } return(sum/length(numbers)) }"},{"prompt":"Write a function in Python to get the IPv6 address of a given domain name.","completion":"import socket def get_IPv6_address(domain_name): \\"\\"\\" Function to get the IPv6 address of a given domain name \\"\\"\\" # get the ip_addres ip_address = socket.getaddrinfo(domain_name, 0, socket.AF_INET6) # return the ip address return ip_address[0][4][0]"},{"prompt":"Write a single line of code to remove an item from a list. my_list = [1, 2, 3, 4]","completion":"my_list.remove(4)"},{"prompt":"What is the maximum value of a byte in a binary system?","completion":"The maximum value of a byte in a binary system is 255. This is because there are 8 bits in a byte, and the maximum value each bit can have is 1, giving a maximum value of 8 ones, or 255 in the denary system."},{"prompt":"Compare two lists to find missing numbers. list1 = [1, 2, 3, 4, 5] list2 = [2, 3, 4]","completion":"# Create a new set to store the missing numbers missing_numbers = set(list1).difference(set(list2)) # Print the missing numbers print(\\"Missing numbers:\\", *missing_numbers)"},{"prompt":"Create a function to return a random letter from a given string.","completion":"import random def random_letter(string): \\"\\"\\" Function to return a random letter from a given string \\"\\"\\" # Get the length of the string length = len(string) # Get a random index # from 0 to length - 1 index = random.randint(0, length - 1) # Return the letter at the # randomly generated index return string[index] # Driver Code string = \\"Geek\\" print(random_letter(string))"},{"prompt":"w to check if an item exists in a list in Python? my_list = [1, 2, 3, 4]","completion":"# Check if item exists in list if 4 in my_list: print(\\"Exists\\") else: print(\\"Doesn't Exist\\")"},{"prompt":"Create a class named Animal with a few methods describing different attributes of animals.","completion":"class Animal: def __init__(self): pass def is_mammal(self): \\"\\"\\"Return True if animal is a mammal, False otherwise\\"\\"\\" pass def is_reptile(self): \\"\\"\\"Return True if animal is a reptile, False otherwise\\"\\"\\" pass def is_amphibian(self): \\"\\"\\"Return True if animal is an amphibian, False otherwise\\"\\"\\" pass def is_bird(self): \\"\\"\\"Return True if animal is a bird, False otherwise\\"\\"\\" pass"},{"prompt":"Write a code in C++ to prompt the user for an integer and output the summation from 1 to that integer.","completion":"\\"\\"\\" Prompt the user for an integer and output the summation from 1 to that integer \\"\\"\\" #include <iostream> using namespace std; int main() { int input; cout << \\"Please enter a positive integer: \\"; cin >> input; int sum = 0; for (int i = 1; i <= input; i++) { sum += i; } cout << \\"The summation from 1 to that integer is \\" << sum << endl; return 0; }"},{"prompt":"Write a code to implement quicksort. arr = [6, 1, 8, 4, 9, 5]","completion":"\\"\\"\\" Implement quicksort \\"\\"\\" def quicksort(arr): if len(arr) < 2: return arr else: pivot = arr[0] less = [i for i in arr[1:] if i <= pivot] greater = [i for i in arr[1:] if i > pivot] return quicksort(less) + [pivot] + quicksort(greater) if __name__ == '__main__': arr = [6, 1, 8, 4, 9, 5] result = quicksort(arr) print(result)"},{"prompt":"Extract the phone number from given string and output it as an integer. Hi, my number is +1-345--678-9012","completion":"\\"\\"\\" Extract the phone number from given string and output it as an integer \\"\\"\\" def extract_phone_number(s): s = s.replace('+', '') numbers = \\"\\" for c in s: if c.isdigit(): numbers += c return int(numbers) if __name__ == '__main__': s = \\"Hi, my number is +1-345--678-9012\\" num = extract_phone_number(s) print(num)"},{"prompt":"Write a SQL query to retrieve the total amount of purchase each customer has made. Table:Customer_orders |userid|product |purchase_price| |------|--------|--------------| |1 |shoes |50 | |2 |socks |30 | |1 |pants |20 |","completion":"SELECT userid, SUM(purchase_price) as total_purchase FROM Customer_orders GROUP BY userid;"},{"prompt":"Using ReactJS, develop a basic form component with two input fields, one for a Name and the other for Age.","completion":"class BasicForm extends React.Component { constructor(props) { super(props); this.state = { name: '', age: '', }; } render() { return ( <form> <label>Name: <input type=\\"text\\" name=\\"name\\" value={this.state.name} onChange={this.handleChange} /> </label> <label>Age: <input type=\\"text\\" name=\\"age\\" value={this.state.age} onChange={this.handleChange} /> </label> </form> ); } handleChange = (event) => { const target = event.target; const value = target.type === 'checkbox' ? target.checked : target.value; const name = target.name; this.setState({ [name]: value }); } }"},{"prompt":"What would be the JavaScript code to remove duplicate values from an array? [1, 2, 3, 4, 4, 2, 5]","completion":"const inputArray = [1, 2, 3, 4, 4, 2, 5]; const outputArray = inputArray.filter((arrayVal, indexVal) => { return inputArray.indexOf(arrayVal) === indexVal; }); console.log(outputArray); // [1, 2, 3, 4, 5]"},{"prompt":"Using C#, write a method that returns a list of strings containing only elements of an input string array containing the letter 'a'. string[] s = {\\"apple\\", \\"banana\\", \\"cat\\"};","completion":"public static List<string> FilterByLetterA(string[] s) { List<string> list = new List<string>(); foreach (string item in s) { if (item.Contains(\\"a\\")) { list.Add(item); } } return list; }"},{"prompt":"Write a function that takes two arrays and returns a new array with all the items of the first array followed by all the items of the second array. array1 = [1, 2, 3] array2 = [4, 5, 6]","completion":"function combineArrays(array1, array2){ let result = array1.concat(array2); return result; } let array1 = [1, 2, 3] let array2 = [4, 5, 6] let combinedArray = combineArrays(array1, array2); console.log(combinedArray) // [1, 2, 3, 4, 5, 6]"},{"prompt":"erpret the following array of numbers consisting of 6 elements and divide it into 2 columns. [1, 2, 3, 4, 5, 6]","completion":"arr = [1, 2, 3, 4, 5, 6] first_column = arr[:len(arr)//2] second_column = arr[len(arr)//2:]"},{"prompt":"Parse the following JSON objects, convert all the values to strings and create a dictionary named \\"parsed_data\\". { \\"name\\": \\"John Doe\\", \\"age\\": 33, \\"locations\\": [\\"NYC\\", \\"LA\\"] }","completion":"import json parsed_data = {} data = { \\"name\\": \\"John Doe\\", \\"age\\": 33, \\"locations\\": [\\"NYC\\", \\"LA\\"] } for key, val in data.items(): parsed_data[key] = str(val)"},{"prompt":"Create a MySQL query to print all records from a specific table in descending order of their id.","completion":"SELECT * FROM table_name ORDER BY id DESC;"},{"prompt":"Design a neural network for facial recognition using TensorFlow.","completion":"import tensorflow as tf model = tf.keras.Sequential([ # First convolutional layer tf.keras.layers.Conv2D(64, (3, 3), activation='relu', padding='same', input_shape=(64, 64, 3)), tf.keras.layers.MaxPooling2D((2, 2)), # Second convolutional layer tf.keras.layers.Conv2D(128, (3, 3), activation='relu', padding='same'), tf.keras.layers.MaxPooling2D((2, 2)), # Third convolutional layer tf.keras.layers.Conv2D(128, (3, 3), activation='relu', padding='same'), tf.keras.layers.MaxPooling2D((2, 2)), # Fourth convolutional layer tf.keras.layers.Conv2D(128, (3, 3), activation='relu', padding='same'), tf.keras.layers.MaxPooling2D((2, 2)), # Flatten the output tf.keras.layers.Flatten(), tf.keras.layers.Dense(2048, activation='relu'), tf.keras.layers.Dropout(0.5), tf.keras.layers.Dense(1024, activation='relu'), tf.keras.layers.Dropout(0.5), # Output decode layer tf.keras.layers.Dense(2, activation='softmax') ])"},{"prompt":"dentify the differences between Java and JavaScript languages.","completion":"Java is a compiled language while JavaScript is interpreted. Java is a class-based language while JavaScript is a prototype-based language. Java is statically typed while JavaScript is dynamically typed. Java supports method overloading while JavaScript does not."},{"prompt":"Describe what is a linked list data structure in 10 words or less.","completion":"A linear data structure of linked nodes."},{"prompt":"Develop a function to print out the Fibonacci sequence in Java.","completion":"public class Fibonacci { public static void printFibonacci(int n) { int n1 = 0, n2 = 1; for (int i = 0; i < n; i++) { System.out.print(n1 + \\" \\"); int sum = n1 + n2; n1 = n2; n2 = sum; } } }"},{"prompt":"Develop a JavaScript function to reverse an array. [1, 2, 3]","completion":"function reverseArray (arr) { return arr.reverse(); } reverseArray([1, 2, 3]); // => [3, 2, 1]"},{"prompt":"Develop an SQL query to select all rows from a table that has two columns: 'name' and 'age'.","completion":"SELECT * FROM table_name;"},{"prompt":"Classify the term \\"function\\" as a programming language feature.","completion":"Function is a language construct used to define a reusable instruction block, typically with parameters and a return value."},{"prompt":"Create a Python program that prints all numbers in the range 1-10.","completion":"for number in range(1, 11): print(number)"},{"prompt":"Edit the following C# code to round the result of x divided by y to the nearest integer. double x = 25; double y = 4; double result = x/y;","completion":"double x = 25; double y = 4; double result = Math.Round(x/y);"},{"prompt":"Output an array of even numbers from 0 to 20 using a for loop in Python.","completion":"even_nums = [] for num in range(0, 21): if num % 2 == 0: even_nums.append(num) print(even_nums)"},{"prompt":"Create a Python script to parse a JSON string and print the value corresponding to the key 'name'. {\\"name\\": \\"John Doe\\", \\"age\\": 25}","completion":"import json data = '{\\"name\\": \\"John Doe\\", \\"age\\": 25}' data = json.loads(data) print(data[\\"name\\"])"},{"prompt":"Write a code to insert a new item into a given list at the specified index. [1, 2, 3, 4], 0, 10","completion":"def insert_item(lst, index, item): lst.insert(index, item) return lst"},{"prompt":"Write a code to recognize the most likely language of a given text.","completion":"import langdetect def detect_language(text): language = langdetect.detect(text) return language"},{"prompt":"Create a program to generate a sequence of integers that starts at k and ends at n in the following format: [k, k+1, ..., n-1, n]","completion":"def generate_seq(k, n): seq = [] for i in range(k, n+1): seq.append(i) return seq"},{"prompt":"Formulate a solution to print out each letter of a string individually.","completion":"def print_letters(string): for letter in string: print(letter)"},{"prompt":"Generate a code snippet to clone/copy a dictionary.","completion":"import copy def clone_dict(dict): return copy.deepcopy(dict)"},{"prompt":"Suggest a solution to print the prime factorization of a number.","completion":"def prime_factors(num): factors = [] i = 2 while num > 1: if num % i == 0: factors.append(i) num = num // i else: i += 1 return factors"},{"prompt":"Create a program to reverse an array in place, i.e. without creating a copy.","completion":"def reverse_in_place(arr): n = len(arr) for i in range(n//2): arr[i], arr[n-i-1] = arr[n-i-1], arr[i]"},{"prompt":"Classify this short programming code into its data structure category. h = [x for x in range(2, 101, 2)]","completion":"List comprehension - a data structure that uses a single expression to generate a list of elements."},{"prompt":"Modify the following function to return the maximum value in a list. def max_list(lst): max = 0 for x in lst: max = x return max","completion":"def max_list(lst): max = None for x in lst: if max is None or x > max: max = x return max"},{"prompt":"Generate a correct Ruby program to print all possible combinations of a given list. [\\"a\\", \\"b\\", \\"c\\"]","completion":"def combinations(arr) arr.length.times do |i| arr.length.times do |j| if i != j print arr[i], arr[j] end end end end combinations(['a', 'b', 'c'])"},{"prompt":"Write a python script to convert a given number to a string. num = 1234","completion":"def num_to_str(num): return str(num)"},{"prompt":"Edit the following code to capture the errors and print them. try: num = int(input(\\"Enter a number: \\")) print (num) except: p","completion":"try: num = int(input(\\"Enter a number: \\")) print (num) except Exception as e: print(str(e))"},{"prompt":"Write a code to update the elements of a list inplace. lst = [2, 4, 6, 8]","completion":"for i in range(len(lst)): lst[i] *= 2"},{"prompt":"Delete all the trailing zeros of a given float number. num = 18.1000","completion":"print(str(num).rstrip('0').rstrip('.'))"},{"prompt":"Write a JavaScript code to list each item of a given array into a new array in reverse order. arr = [1, 2, 3, 4, 5]","completion":"newArr = arr.reverse() console.log(newArr)"},{"prompt":"Read an HTML page and extract all the <h2> tags. <html><h1>Heading 1</h1><h2>Heading 2</h2><h2>Heading 3</h2></html>","completion":"import bs4 html = \\"<html><h1>Heading 1</h1><h2>Heading 2</h2><h2>Heading 3</h2></html>\\" soup = bs4.BeautifulSoup(html, 'html.parser') h2_list = soup.find_all('h2') print(h2_list)"},{"prompt":"Fill in the blanks to write a code in JavaScript that calls a function two times. function sayHello() { console.log('Hello'); }","completion":"for (let i = 0; i < 2; i++) { sayHello(); }"},{"prompt":"Write a JavaScript code to rotate an array by n position to the left. arr = [1, 2, 3, 4, 5] pos = 2","completion":"function rotateLeft(arr, pos) { for (let i = 0; i < pos; i++) { var remove = arr.shift(); arr.push(remove); } return arr; } console.log(rotateLeft(arr, pos));"},{"prompt":"Using the function above, complete the following statement to compute the sum from 2 to 6.","completion":"sum_value = sum(2, 6)"},{"prompt":"Describe the tasks and input of a program to sort a list of integers","completion":"The task of the program is to sort a list of integers. The input is a list of integers which needs to be sorted in ascending order. The output is another list with the same elements but sorted in ascending order."},{"prompt":"Generate a list of all words in the input string longer than 4 characters. my_string = \\"This is a sentence","completion":"word_list = [word for word in my_string.split() if len(word)>4]"},{"prompt":"mport the numpy library into the program","completion":"import numpy as np"},{"prompt":"Find the value of x^2 + 4x + 5 when x = 3","completion":"x_val = 3 eq_val = x_val**2 + 4*x_val + 5 print(eq_val) # Output: 32"},{"prompt":"Create a list of integers from 1 to n in steps of 10 n = 50","completion":"list1 = [] for i in range(1, n+1, 10): list1.append(i)"},{"prompt":"Write a function in Python to convert miles to kilometers. 7","completion":"def miles_to_km(miles): return miles * 1.609 converted_km = miles_to_km(7) print(converted_km)"},{"prompt":"Write a JavaScript program to find the maximum number from the given three numbers. 5, 10, 3","completion":"let num1 = 5; let num2 = 10; let num3 = 3; let maxNum = Math.max(num1, num2, num3); console.log(\\"The maximum number of the three numbers given is \\" + maxNum);"},{"prompt":"Write a function in Java to calculate the total number of possible combinations of a given list of items. [‘cat’, ‘dog’, ‘horse’]","completion":"public static int calculateCombinations(List<String> items){ int totalCombinations = 0; for(int i = 0; i < Math.pow(2, items.size()); i++){ int count = 0; String combination = \\"\\"; for(int j = 0; j < items.size(); j++){ if( (i & (1 << j)) > 0){ count++; combination += items.get(j) + \\" \\"; } } if(count == items.size()){ totalCombinations++; System.out.println(combination); } } return totalCombinations; }"},{"prompt":"Create a list in Python of all integers from -5 to 10.","completion":"list_nums = [-5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]"},{"prompt":"Write a code in C to identify the character type of a given character.","completion":"#include<stdio.h> int main() { char c = ''; if ( (c >= 'a' && c <= 'z') || (c >= 'A' && c <= 'Z') ) { printf(\\"The character is an alphabet.\\"); } else if (c >= '0' && c <= '9') { printf(\\"The character is a digit.\\"); } else { printf(\\"The character is a special character.\\"); } return 0; }"},{"prompt":"Sort this numeric array in descending order Array: [3, 7 ,1, 5, 9]","completion":"let sortedArray = [9, 7, 5, 3, 1];"},{"prompt":"Retrieve the elements from the second index to the fourth index in the given array Array: [10, 20, 50, 70, 90, 100]","completion":"let retrievedElements = [50, 70, 90];"},{"prompt":"Construct a for-loop statement to display the numbers counting from 10 to 15","completion":"for (let i = 10; i <= 15; i++) { console.log(i); }"},{"prompt":"Formulate a SQL query to select the name and address of the customers from the database","completion":"SELECT Name, Address FROM Customers;"},{"prompt":"Generate a regex to check if a given string contains any vowels","completion":"let regex = /[aeiou]/i;"},{"prompt":"Construct a switch statement to return either \\"Nick\\" or \\"Jack\\" base on the value of the input Input: \\"Nick","completion":"switch (input) { case \\"Nick\\": return \\"Nick\\"; break; case \\"Jack\\": return \\"Jack\\"; break; default: return \\"Invalid Input\\"; }"},{"prompt":"Design a class to represent a Circle with a radius","completion":"class Circle { constructor(radius) { this.radius = radius; } getArea() { return Math.PI * this.radius * this.radius; } getCircumference() { return 2 * Math.PI * this.radius; } }"},{"prompt":"Produce a Python script that generates a random string of length 10","completion":"import random import string def get_random_string(stringLength=10): letters = string.ascii_lowercase return ''.join(random.choice(letters) for i in range(stringLength)) randomString = get_random_string() print(randomString) # outputs a random string of length 10"},{"prompt":"Design an if-else statement to print either \\"Passed\\" or \\"Failed\\" depending on the value of the given number Number: 80","completion":"let num = 80; if (num >= 70) { console.log(\\"Passed\\"); } else { console.log(\\"Failed\\"); }"},{"prompt":"Convert the following code to Python and make it object-oriented. function celsius_to_fahrenheit(celsius) { let fahrenheit = (celsius * 9/5) + 32 return fahrenheit }","completion":"class TemperatureConverter: def celsius_to_fahrenheit(self, celsius): fahrenheit = (celsius * 9/5) + 32 return fahrenheit"},{"prompt":"Create a class 'Stack' that has a method 'max_stack' that returns the maximum element in the stack.","completion":"class Stack(): def __init__(self): self.stack = [] # Inserts an element in the stack def push(self, item): self.stack.append(item) # Return the maximum element in a stack def max_stack(self): max_elem = self.stack[0] for i in range(1,len(self.stack)): if self.stack[i]>max_elem: max_elem = self.stack[i] return max_elem"},{"prompt":"Create a class \\"MyDict\\" that inherits from the Python built-in \\"dict\\" class.","completion":"class MyDict(dict): def __init__(self, *args, **kwargs): super().__init__(*args, **kwargs) def __getitem__(self, key): if key in self: return super().__getitem__(key) else: return None"},{"prompt":"Create a function to print out the Fibonacci numbers starting from 0 to the nth number. n = 7","completion":"def print_fibonacci(n): a = 0 b = 1 for i in range(n): print(a, end=' ') temp = a a = b b = temp + b # The output of the function would be # 0 1 1 2 3 5 8"},{"prompt":"Write a LINQ query to find employees whose age is over 30 and are from the United States.","completion":"var employees = from e in Employee where e.Age > 30 && e.Country == \\"United States\\" select e;"},{"prompt":"Generate a matrix with 5 rows and 7 columns containing random numbers in it.","completion":"import numpy as np # Create a matrix with 5 rows and 7 columns matrix = np.random.rand(5,7)"},{"prompt":"Write a CSS code snippet to change the font-size of all the headings to double the original size.","completion":"h1, h2, h3, h4, h5, h6 { font-size: 2em; }"},{"prompt":"Write a LINQ query to retrieve records from employee list which are from either India or Canada.","completion":"var employees = from e in Employee where e.Country == \\"India\\" || e.Country == \\"Canada\\" select e;"},{"prompt":"Slice the following array to get the last two numbers. [2, 3, 9, 12, 13, 21]","completion":"[13, 21]"},{"prompt":"dentify the type of data present in the given JSON string. String: [true, false, 0, \\"Sample String\\"]","completion":"Boolean, Boolean, Integer, String."},{"prompt":"Write a query to retrieve all the customers whose customer ID starts with a \\"C\\".","completion":"SELECT * FROM Customers WHERE customerId LIKE 'C%'"},{"prompt":"Given a string s, write a Python function that returns the longest substring of the given string that is a palindrome. s = \\"abcbabcd","completion":"def longest_palindrome_substring(s): n = len(s) if n == 0: return \\"\\" dp = [[False for _ in range(n)] for _ in range(n)] start = 0 max_length = 1 # All substrings of length 1 are palindrome for i in range(n): dp[i][i] = True # Check for substring of length 2. for i in range(n-1): if s[i] == s[i+1]: dp[i][i+1] = True start = i max_length = 2 # Check for lengths greater than 2 # k is length of substring for k in range(3, n+1): # Fix the starting index for i in range(n-k+1): # Get the ending index of substring from # starting index i and length k j = i + k - 1 # checking for sub-string from ith index to # jth index iff str[i+1] to str[j-1] is a # palindrome if dp[i+1][j-1] and s[i] == s[j]: dp[i][j] = True if k > max_length: start = i max_length = k # return the longest palindromic substring return s[start:start+max_length]"},{"prompt":"Create a simple chatbot using Python.","completion":"print(\\"Hello, I am your chatbot!\\") while True: user_input = input(\\"What would you like to talk about?n\\") if user_input == \\"bye\\": print(\\"Bye! It was nice talking to you.\\") break if user_input == \\"weather\\": print(\\"It is sunny outside!\\") else: print(\\"I am sorry, I don't understand your query.\\")"},{"prompt":"Create a function to create a multiplication table for a given number. Number: 5","completion":"def multiplication_table(num): for i in range(1, 11): print(num, '*', i, '=', num*i) # Driver code multiplication_table(5)"},{"prompt":"mplement a function to check for balanced parentheses in a given string. String: (((())()))","completion":"def is_balanced(s): stack = [] for letter in s: if letter in [\\"(\\", \\"[\\", \\"{\\"]: stack.append(letter) else: if len(stack) == 0: return False top = stack.pop(-1) if top == '(': if letter == ')': continue else: return False elif top == '[': if letter == ']': continue else: return False elif top == '{': if letter == '}': continue else: return False if len(stack) == 0: return True return False # Driver code print(is_balanced('(((())()))')) # True print(is_balanced('(((()))')) # False"},{"prompt":"Write a code snippet to find the most frequent word in a given sentence. Sentence: The quick brown fox ate the lazy dog","completion":"def most_frequent_word(str): split_str = str.split() frequencies = {} for word in split_str: if word in frequencies: frequencies[word] += 1 else: frequencies[word] = 1 most_frequent_word = \\"\\" highest_freq = 0 for key, value in frequencies.items(): if value > highest_freq: highest_freq = value most_frequent_word = key return most_frequent_word # Driver code print(most_frequent_word('The quick brown fox ate the lazy dog'))"},{"prompt":"Write a code to find the sum of the multiples of 3 and 5 up to a given number. Number: 15","completion":"def sum_of_multiples(num): sum = 0 for i in range(num): if i % 3 == 0: sum += i elif i % 5 == 0: sum += i return sum # Driver code sum = sum_of_multiples(15) print(\\"Sum of multiples of 3 and 5 =\\",sum)"},{"prompt":"Create a code to check whether two words are nearly identical. Word A: bte Word B: tree","completion":"def is_nearly_identical(str1, str2): edit_dist = 0 m = len(str1) n = len(str2) # Create matrix to store results of subproblems dp = [[0 for x in range(n + 1)] for x in range(m + 1)] for i in range(m + 1): for j in range(n + 1): if i == 0: dp[i][j] = j elif j == 0: dp[i][j] = i elif str1[i - 1] == str2[j - 1]: dp[i][j] = dp[i - 1][j - 1] else: dp[i][j] = 1 + min(dp[i][j - 1], # Insert dp[i - 1][j], # Remove dp[i - 1][j - 1]) # Replace edit_dist = dp[m][n] if edit_dist == 1: return True else: return False # Driver code if is_nearly_identical(\\"bte\\",\\"tree\\"): print(\\"Words are nearly identical\\") else: print(\\"Words are not nearly identical\\")"},{"prompt":"Convert the following range to list elements in Python. range(2, 8)","completion":"list(range(2, 8)) # [2, 3, 4, 5, 6, 7]"},{"prompt":"Complete the following code with a condition so it prints the average of the array elements. arr = [4, 15, 12, 3, 8] total = 0 for num in arr: # Your code here print(total / len(arr))","completion":"arr = [4, 15, 12, 3, 8] total = 0 for num in arr: total += num print(total / len(arr))"},{"prompt":"Reverse the following string without using in-built functions in Python. Hello World","completion":"dlroW olleH"},{"prompt":"Write a JavaScript function to find the first element of an array that passes a given test. const arr = [10, 20, 9, 5];","completion":"const findElement = (arr, test) => { for(let element of arr){ if(test(element)){ return element; } } };"},{"prompt":"Complete the following code so it swaps two given elements in the list. list = [1, 3, 7, 4, 2] def swap(list, i, j): # Your code here","completion":"list = [1, 3, 7, 4, 2] def swap(list, i, j): # Swap the elements list[i], list[j] = list[j], list[i]"},{"prompt":"Generate a list of distinct dates between two given dates using JavaScript. startdate = \\"01/20/2020\\" enddate = \\"05/17/2020","completion":"function generateDates(startdate, enddate) { const dates=[], start=new Date(startdate), end=new Date(enddate); while (start <= end) { const newdate = new Date(start); const formatteddate = \`{newdate.getDate()}/{newdate.getMonth()+1}/{newdate.getFullYear()}\`; if(!dates.includes(formatteddate)) dates.push(formatteddate) start.setDate(start.getDate() + 1); } return dates; }"},{"prompt":"Write a Python script to check for syntactic correctness of an algorithm. Algorithm = \\"1. Read input 2. Initialize variables 3. Process input 4. Output resul","completion":"def is_algorithm_syntactically_correct(algorithm): algorithm = algorithm.replace('n', ' ').replace('t ', ' ').lower() required_words = ['read', 'input', 'initialize', 'variables', 'process', 'output', 'result'] for word in required_words: if word not in algorithm: return False return True"},{"prompt":"Write an SQL query to find the name of all customers who have made orders before the given date. Table: Customers Fields: name, order_date Given_date = 17/2/2020","completion":"SELECT name FROM Customers WHERE order_date < '17/2/2020';"},{"prompt":"Given a string s, reverse its characters and return the resulting string. s = \\"apple","completion":"def reverse_string(s): # initialize an empty string reversed_string = \\"\\" # loop through the string and concatenate the characters in reverse order for i in range(len(s) - 1, -1, -1): reversed_string += s[i] return reversed_string print(reverse_string(\\"apple\\")) # elppa"},{"prompt":"What is the apex of the programming language C++?","completion":"The apex of the programming language C++ is Object Oriented Programming. It is a style of programming that uses objects and their interactions to design applications and computer programs. Object-oriented programming allows for code re-use, modularity and easy debugging. This makes the language an efficient choice for software development."},{"prompt":"Given a list of numbers, remove all negative numbers and sort the remaining numbers in ascending order. numbers = [-5, -1, 2, 0, 4, 5, 9]","completion":"def remove_negatives_and_sort(numbers): # filter out negative numbers non_negatives = list(filter(lambda x: x >= 0, numbers)) # sort the non-negative numbers non_negatives.sort() return non_negatives print(remove_negatives_and_sort([-5, -1, 2, 0, 4, 5, 9])) # [0, 2, 4, 5, 9]"},{"prompt":"Write a function that takes a string and returns the letter which appears most frequently. s = \\"apple","completion":"def most_frequent_letter(s): # get the letter frequency letter_frequency = {} for ch in s: if ch in letter_frequency: letter_frequency[ch] += 1 else: letter_frequency[ch] = 1 # find the letter with the max frequency max_frequency = 0 max_frequency_letter = '' for letter, frequency in letter_frequency.items(): if frequency > max_frequency: max_frequency = frequency max_frequency_letter = letter return max_frequency_letter print(most_frequent_letter(\\"apple\\")) # 'p'"},{"prompt":"w to find the most common integer in a list?","completion":"The most common integer in a list can be found using the collections.Counter module. The Counter class creates a dictionary with the elements in the list as keys and the number of occurrences as values. The most_common() method can then be used to find the element with the highest number of occurrences."},{"prompt":"Construct a program that takes integers x and y and swaps their values. x = 5 y = 10","completion":"# get two integers from the user x = int(input(\\"Enter value for x: \\")) y = int(input(\\"Enter value for y: \\")) # swap tmp = x x = y y = tmp # print the swapped values print(\\"x =\\", x, \\"and y =\\", y)"},{"prompt":"What are the benefits of abstract classes in Java?","completion":"Abstract classes in Java provide a way to define and enforce common behavior that is shared between derived classes. They also allow for code reuse as the shared code can be reused by other classes. Furthermore, with the help of abstract classes, one can create a structure for developers to follow and provide a standard for them to write code. This can lead to improved code quality by enforcing certain rules and standards."},{"prompt":"Codify a static HTML page such that when the page URL is accessed, it displays the message \\"Please enter your login details\\".","completion":"<html> <head> <title>Login Page</title> </head> <body> <h1>Please enter your login details</h1> </body> </html>"},{"prompt":"Given a JSON object, code a JavaScript function to convert the object into a query string. let obj = { name: 'John', age: 25, job: 'developer' }","completion":"function jsonToQueryString(jsonObject) { let queryString = ''; for(let key in jsonObject) { queryString += key + '=' + jsonObject[key] + '&'; } return queryString.substring(0, queryString.length-1); } console.log(jsonToQueryString(obj)); // prints \\"name=John&age=25&job=developer\\""},{"prompt":"Design a Java code to create a method that counts the number of elements in a given array. int[] array = {2, 4, 6, 8}","completion":"public static int countArrayElements(int[] input) { int count = 0; for (int element : input) { count++; } return count; } int arraySize = countArrayElements(array); // prints 4"},{"prompt":"Write a CSS script to add a border to the 'Title' element on a webpage.","completion":"#Title { border: 1px solid black; }"},{"prompt":"Given an array of strings and a search keyword, code a JavaScript function to check if the keyword exists in the array. let arrWords = [\\"cat\\", \\"dog\\", \\"dog\\", \\"fish\\"] let keyword = 'dog'","completion":"function keywordExists(arr, keyword){ return arr.includes(keyword); } console.log(keywordExists(arrWords, keyword)); // prints true"},{"prompt":"Using Python, write a code to generate the Fibonacci series up to the given number. num = 10","completion":"def generateFibonacciSeries(num): series = [0, 1] for i in range(2, num): series.append(series[i - 2] + series[i - 1]) return series print(generateFibonacciSeries(num)) # prints [0, 1, 1, 2, 3, 5, 8, 13, 21, 34]"},{"prompt":"Write a Node.js script to filter numeric elements from an array. let arr = [1, 'two', 'three', 4, 'five']","completion":"function getNumericElements(arr) { return arr.filter(item => typeof item === 'number'); } console.log(getNumericElements(arr)); // prints [1, 4]"},{"prompt":"Design a C code to accept two integers from the user and find the greatest among them.","completion":"#include < stdio.h> int main() { int a, b, great; printf(\\"Enter two integers: \\"); scanf(\\"%d %d\\", &a, &b); if (a > b) great = a; else great = b; printf(\\"Greatest among two numbers is %d\\", great); }"},{"prompt":"You are given a string array. Code a JavaScript function to remove duplicate strings from the array. let arrStrings = [\\"apple\\", \\"orange\\", \\"apple\\", \\"banana\\"]","completion":"function removeduplicates(arr){ let arrDupRemoved = []; for (let i = 0; i < arr.length; i++){ if(arrDupRemoved.indexOf(arr[i]) === -1){ arrDupRemoved.push(arr[i]); } } return arrDupRemoved; } console.log(removeduplicates(arrStrings)) // prints [\\"apple\\", \\"orange\\", \\"banana\\"]"},{"prompt":"Code an assembly language program to calculate the sum of series 1 + 3 + 5 +.....+ (2*n-1). n = 6","completion":".MODEL SMALL .DATA N DB ? I DB ? S DB ? .CODE MOV AX,@DATA MOV DS,AX MOV DX,N MOV AL,2 MUL DX SUB AL,1 MOV N,AL MOV I,N MOV S,0 AGAIN: MOV AX,S ADD AX,I MOV S,AX DEC I CMP I,0 JNZ AGAIN MOV DX,S MOV AH,4CH INT 21H END"},{"prompt":"Given an array of numbers, code a Java code to find out the highest number. int arr[] = {20, 35, -15, 7, 55, 1, -22}","completion":"public static int findHighestNumber (int[] numbers) { int highestNumber = Integer.MIN_VALUE; for (int currentNumber : numbers) { highestNumber = Math.max(currentNumber, highestNumber); } return highestNumber; } int highestNumber = findHighestNumber(arr); // prints 55"},{"prompt":"Create a dictionary containing the frequencies for each character in the given string. string = \\"hello world","completion":"def count_characters(string): freq_chars = {} for char in string: if char in freq_chars: freq_chars[char] += 1 else: freq_chars[char] = 1 return freq_chars"},{"prompt":"Create a system call in C to generate a process tree.","completion":"#include<sys/types.h> #include <unistd.h> pid_t c_sys_tree (pid_t root_pid) { // Code to generate a process tree // based on the given root PID }"},{"prompt":"what language was the Google search engine originally written?","completion":"The Google search engine was originally written in C++."},{"prompt":"Create an HTML page with a table to display student scores. Data: Student A: Score - 80 Student B: Score - 90","completion":"<!DOCTYPEhtml> <html> <head> <title>Score Table</title> </head> <body> <h3>Score Table</h3> <table> <tr> <th>Student Name</th> <th>Score</th> </tr> <tr> <td>Student A</td> <td>80</td> </tr> <tr> <td>Student B</td> <td>90</td> </tr> </table> </body> </html>"},{"prompt":"w is a binary search tree different from a binary tree?","completion":"A binary search tree is a type of binary tree where the value of each node is greater than the values in its left subtree, and less than the values in its right subtree. A binary tree on the other hand, can have nodes with any value, and the relationship between the nodes is not necessarily sorted."},{"prompt":"dentify the ‘time complexity’ of an algorithm written in Java that calculates average of all elements in a list.","completion":"The time complexity of the algorithm is O(n) since it needs to loop through all the elements in the list in order to calculate the average."},{"prompt":"What are the benefits of using a hash table?","completion":"The main benefits of using a hash table are faster search times, insertion/deletion time, and less space required to store data. Hash tables are most commonly used for storing key-value pairs, and can be used to quickly search for a value corresponding to a given key. They also provide a constant time for lookups, even for large data sets."},{"prompt":"Define a function which takes two strings as arguments and returns a list containing all characters that appear in either string. string_1 = 'Apple' string_2 = 'Banana'","completion":"def common_chars(string_1, string_2): char_list = [] for char in string_1: if char in string_2 and char not in char_list: char_list.append(char) for char in string_2: if char in string_1 and char not in char_list: char_list.append(char) return char_list"},{"prompt":"Create a data structure to store an employee's details including his personal details and salary information.","completion":"class Employee: def __init__(self, name, age, salary): self.name = name self.age = age self.salary = salary"},{"prompt":"You are given some HTML code, write a function to strip the tags from it.","completion":"def strip_tags(string): stripped_str = '' skip = False for i in range(len(string)): if string[i] == '<' and skip == False: skip = True elif string[i] == '>': skip = False elif skip == False: stripped_str += string[i] return stripped_str"},{"prompt":"You are given two strings, find the minimum number of edits required to make them equal.","completion":"def edit_distance(str1, str2): edits = 0 m = len(str1) n = len(str2) if m < n: for i in range(m, n): edits += 1 for i in range(m): if str1[i] != str2[i]: edits += 1 else: for i in range(n, m): edits += 1 for i in range(n): if str1[i] != str2[i]: edits += 1 return edits"},{"prompt":"Create a program to list all the prime numbers between two numbers","completion":"def list_primes(start, end): prime_list = [2] for num in range(start, end + 1): if all(num % i != 0 for i in range(2, num)): prime_list.append(num) return prime_list"},{"prompt":"Write a regex pattern to extract all words containing the letter 'a' from a given string","completion":"import re def extract_words(string): pattern = r'bw*aw*b' words = re.findall(pattern, string) return words"},{"prompt":"Describe the runtime complexity of segment tree.","completion":"Segment tree is a data structure used to efficiently query certain operations regarding a range of values. A segment tree is a binary tree, with each of its internal nodes containing a range and its leaf nodes reresenting the elements in the given range. The runtime complexity of a segment tree is O(logN), where N is the number of elements in the range. This makes it an efficient data structure for range queries. Additionally, the tree can be updated in logarithmic time."},{"prompt":"Create an object to hold the student's grade. Grade: A+","completion":"let studentGrade = { grade: 'A+' };"},{"prompt":"Generate an array containing numbers between 1 and 100 that are divisible by both 5 and 7.","completion":"let result = []; for(let i = 1; i <= 100; i++){ if (i % 5 == 0 && i % 7 == 0) result.push(i); }; console.log(result);"},{"prompt":"Design a web page containing HTML/CSS containing at least 5 containers.","completion":"<html> <head> <title>My Webpage</title> </head> <body> <div class=\\"container1\\" > </div> <div class=\\"container2\\" > </div> <div class=\\"container3\\" > </div> <div class=\\"container4\\" > </div> <div class=\\"container5\\" > </div> </body> </html>"},{"prompt":"Explain the concept of Binary Indexed Tree.","completion":"Binary Indexed Tree (BIT) is a data structure that leverages the advantages of both an array and a binary tree. It is also known as a Fenwick tree. It can be used to efficiently compute the sum of given range of elements in an array. BIT is a type of tree data structure in which the values stored at each node represent the sum of all the elements in the subarrays rooted at the given node. The time complexity of operation in BIT is O(logN), where N is the size of the array."},{"prompt":"Design a data structure to track the frequency of words in a given text.","completion":"A HashMap can be used to track the frequency of words in a given text. The keys of the map would represent the words in the text and the associated values would represent the frequency of that word. The time complexity for retrieving the frequency of a given word in hashmap will be O(1)."},{"prompt":"Use the list comprehension method to print the cube of numbers from 1 to 10","completion":"cubes = [x**3 for x in range(1, 11)] print(cubes)"},{"prompt":"Write Javascript code to select all div elements with the class \\"container\\".","completion":"let containers = document.querySelectorAll('div.container');"},{"prompt":"Write a predicate function to check whether the given string is palindrome.","completion":"function isPalindrome(str) { str = str.toLowerCase(); for (let i = 0; i < str.length / 2; i++) { if (str[i] !== str[str.length - 1 - i]) return false; } return true; }"},{"prompt":"Explain the importance of using functions in programming.","completion":"Using functions in programming is important for a few reasons. Functions can be used to divide a program into smaller, more manageable pieces, making it easier to read, debug, and maintain code. Additionally, functions can be reused across multiple programs by creating libraries that can be imported, saving time and effort. The use of functions also promotes code modularity and re-usability, allowing developers to write code once and use or modify it for different applications. Finally, functions can help to improve the overall performance of code by optimizing execution time because process and code only needs to be run once per function call."},{"prompt":"Write a Python function that takes as input an array of numbers and returns the maximum positive number. arr = [3, -2, -1, 7, 12]","completion":"def find_max_positive(arr): max_num = 0 for num in arr: if num > 0 and num > max_num: max_num = num return max_num"},{"prompt":"Formulate a query in SQL that would output the names of products that cost more than 50.","completion":"SELECT product_name FROM products WHERE price > 50;"},{"prompt":"Explain why software developers should follow coding style guidelines.","completion":"Software developers should follow coding style guidelines for a few reasons. First and foremost, adherence to coding style is essential for creating code that is easy to read, understand and maintain. Especially when working on a team, consistency in style allows developers to understand each other’s code more quickly. Coding style can also be used to organize code so that it’s easier to identify certain sections and make changes as needed. Additionally, coding style can give developers more control over potential errors, such as typos, by providing guidelines that can help to reduce the possibility of making such errors."},{"prompt":"Write a SQL query to find the number of people below the age of 25 in the table ‘people’.","completion":"SELECT COUNT(*) from people WHERE age < 25;"},{"prompt":"Convert the following SPARQL query to a SQL query. SELECT ?person ?age WHERE { ?person rdf:type ex:Person . ?person ex:age ?age }","completion":"SELECT person, age FROM rdf WHERE type = 'ex:Person' AND predicate = 'ex:age';"},{"prompt":"Find the median of the given array [3,7,2,1,9].","completion":"def find_median(arr): arr.sort() if len(arr) % 2 == 0: median = (arr[(len(arr)//2)-1] + arr[len(arr)//2])/2 else: median = arr[len(arr)//2] return median median = find_median([3,7,2,1,9]) print(median) # Prints 3.5"},{"prompt":"Create a JavaScript object literal with two properties: a key of name with a value of 'Bob' and a key of age with a value of 30.","completion":"let bob = { name: 'Bob', age: 30 };"},{"prompt":"Write a code snippet to produce an XML result for a given input data structure. key1: value1, key2: { key2.1: value2.1, key2.2: value2.2 }","completion":"import xml.etree.ElementTree as ET def xml_builder(data): root = ET.Element('root') for key, value in data.items(): child = ET.SubElement(root, key) if type(value) is dict: for k, v in value.items(): sub_child = ET.SubElement(child, k) sub_child.text = str(v) else: child.text = str(value) return ET.tostring(root, encoding='utf8').decode('utf8') data = {\\"key1\\": \\"value1\\", \\"key2\\": {\\"key2.1\\": \\"value2.1\\", \\"key2.2\\": \\"value2.2\\"}} print(xml_builder(data))"},{"prompt":"Create a hashtable in Python of size 8 and insert five elements.","completion":"class HashTable: def __init__(self, size): self.size = size self.table = [None] * size def insert(self, key, value): hash_value = hash(key) index = hash_value%self.size if self.table[index] == None: self.table[index] = [key, value] else: self.table[index].append([key,value]) # Other methods go here # Create a hashtable ht = HashTable(8) # Insert elements ht.insert('apple', 5) ht.insert('banana', 8) ht.insert('strawberry', 11) ht.insert('kiwi', 2) ht.insert('mango', 6)"},{"prompt":"Create a function in JavaScript to get the value of a key from a JSON object.","completion":"function getValue(obj, key) { return obj[key]; }"},{"prompt":"Find the maximum value of an array without using any built-in functions [7, 9, -2, 15, 3]","completion":"def find_max(arr): max = arr[0] for i in range(1, len(arr)): if arr[i] > max: max = arr[i] return max arr = [7, 9, -2, 15, 3] print(find_max(arr))"},{"prompt":"Develop an algorithm for reversing a string without using any reverse string methods. Hello World","completion":"def reverseString(str): reversed_str = \\"\\" for i in range(len(str)-1, -1, -1): reversed_str += str[i] return reversed_str print(reverseString(\\"Hello World\\"))"},{"prompt":"Write a function in Java to delete duplicate elements.","completion":"public static List<Integer> removeDuplicates(int[] arr) { List<Integer> uniqueList = new ArrayList<>(); for (int i : arr) { if (!uniqueList.contains(i)) { uniqueList.add(i); } } return uniqueList; }"},{"prompt":"Create a regex expression that matches all valid IP addresses.","completion":"^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]).){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])"},{"prompt":"Construct a SQL statement updates the \\"products\\" table and sets the value of the \\"price\\" column to 10.","completion":"UPDATE products SET price = 10;"},{"prompt":"Answer what is the longest palindrome in a given string. \\"Run, spot, run. He ran up red hill","completion":"def longestPalindrome(st): palindromes = [] for i in range(len(st)): for j in range(i, len(st)): curr = st[i:j+1] rev = curr[::-1] if (curr == rev): palindromes.append(curr) res = max(palindromes, key = len) return res print(longestPalindrome(\\"Run, spot, run. He ran up red hills\\")) # output run"},{"prompt":"Create a filter to remove all integers from an array of mixed data types. [\\"Hello\\", 3, 5.4, \\"World\\", 6]","completion":"def removeInts(arr): return [x for x in arr if type(x) is not int] print(removeInts([\\"Hello\\", 3, 5.4, \\"World\\", 6])) # output ['Hello', 5.4, 'World']"},{"prompt":"Create a SQL statement to select all rows of the \\"students\\" table with a GPA higher than 3.0.","completion":"SELECT * FROM students WHERE GPA > 3.0;"},{"prompt":"Construct a code to get the last index of a given substring in a string. \\"hi hi hello\\", \\"h","completion":"def lastIndexOf(st, substr): if substr in st: start = -1 while True: pos = st.find(substr, start + 1) if pos == -1: break start = pos return start else: return -1 print(lastIndexOf(\\"hi hi hello\\", \\"hi\\")) # output 3"},{"prompt":"Create a new table in an existing SQL database. The database called \\"airports\\" has the following table structure: Airport (aid, name, city, state, country, longitude, latitude)","completion":"CREATE TABLE Airport ( aid INT, name VARCHAR(100), city VARCHAR(100), state VARCHAR(100), country VARCHAR(100), longitude DECIMAL(18,14), latitude DECIMAL(18,14), PRIMARY KEY(aid) );"},{"prompt":"FreeCodeCamp is a great platform for coding practice. Give an example of a basic algorithm you can practice on FreeCodeCamp.","completion":"A basic algorithm you can practice on FreeCodeCamp is Bubble Sort. Bubble Sort is an algorithm that sorts an array of elements by repeatedly swapping matched pairs of elements if they appear in the wrong order. It continues until no further swaps are needed, at which point the array is considered sorted."},{"prompt":"Convert this floating-point number to an 8-bit binary number. 123.46875","completion":"123.46875 in 8-bit binary is 1111011.01110000"},{"prompt":"Create a new array using the given array and a given number. The given array is [2, 3, 4] and the given number is 5.","completion":"The new array is [2, 3, 4, 5]."},{"prompt":"Create a loop in Python with the given requirements. Print out the numbers from 1 to 10, inclusive","completion":"for x in range(1, 11): print(x)"},{"prompt":"Explain the use of the Huffman encoding algorithm.","completion":"Huffman encoding is an algorithm used for lossless data compression. It works by taking a string of data, analysing it and creating a shorter bit string that represents the same data. The data is compressed by assigning shorter codes to commonly occurring characters. This process reduces the amount of bits needed to represent the data, which leads to overall data compression."},{"prompt":"Write a function in JavaScript that takes two strings as arguments and checks if the characters in the first string form a subsequence of the characters in the second string.","completion":"function isSubsequence(str1, str2) { let i = 0; let j = 0; while (i < str1.length && j < str2.length) { if (str2[j] === str1[i]) { i++; } j++; } return i === str1.length; }"},{"prompt":"For the given matrix, calculate the determinant. 1 2 3 4 5 6 7 8 9","completion":"0"},{"prompt":"Create a linux shell script for restarting network interfaces.","completion":"#!/bin/bash # Restart network interfaces sudo ifconfig wlan0 down sudo ifconfig wlan0 up sudo ifconfig eth0 down sudo ifconfig eth0 up"},{"prompt":"Write a C++ program for finding the maximum value in a BST.","completion":"Node* findMax(Node* root) { if (root == NULL) return root; Node* curr = root; while (curr->right != NULL) curr = curr->right; return curr; }"},{"prompt":"Describe the concept of machine learning in your own words.","completion":"Machine learning is a field of Artificial Intelligence that focuses on developing algorithms for computers to learn from data and to make predictions about their environment. It can involve supervised and unsupervised learning techniques, such as classification and clustering, to analyze data and make predictions. Machine learning algorithms are also used to detect patterns and make decisions, enabling computers to automate tasks and learn from experience."},{"prompt":"Generate multiple Fibonacci numbers in Python.","completion":"def Fibonacci(n): a = 0 b = 1 if n < 0: print(\\"Incorrect input\\") elif n == 0: return a elif n == 1: return b else: for i in range(2,n): c = a + b a = b b = c return b for i in range(10): print(Fibonacci(i))"},{"prompt":"Create an SQL query to print the names of employees who are earning more than 50,000/year.","completion":"SELECT Name FROM Employees WHERE Salary > 50000;"},{"prompt":"Write a CSS code to create a heading with red color font.","completion":"h1 { font-size: 14px; color: red; }"},{"prompt":"Code a React component that renders a button with a given text. Text of the button: Subm","completion":"import React from 'react'; import { Button } from 'react-native'; const SubmitButton = ({ text }) => { return ( <Button title={text} /> ); } export default SubmitButton;"},{"prompt":"Write a code to delete all records in an MS Access table.","completion":"DELETE FROM tableName;"},{"prompt":"w to get the current date and time in a JavaScript program?","completion":"let date = new Date(); let current_datetime = date.getDate() + \\"/\\" + (date.getMonth()+1) + \\"/\\" + date.getFullYear() + \\" @ \\" + date.getHours() + \\":\\" + date.getMinutes() + \\":\\" + date.getSeconds();"},{"prompt":"Create a Java program to output the Fibonacci series upto the given number. Number: 10","completion":"public class Fibonacci { public static void main(String[] args) { int num = 10; int first = 0; int second = 1; System.out.println(\\"Fibonacci Series of \\" + num + \\" numbers:\\"); for (int i = 0; i < num; i++) { System.out.print(first + \\" \\"); int sum = first + second; first = second; second = sum; } } }"},{"prompt":"w to identify an email address from a given string using Regular Expressions?","completion":"import re string = \\"My Email address is example@gmail.com\\" expression = r'[w.-]+@[w.-]+' address = re.findall(expression, string) print(\\"Email address is: \\", address)"},{"prompt":"What are the different types of HTML5 Semantic Elements?","completion":"The different types of HTML5 Semantic Elements are: - article, aside, details,figcaption, figure, footer, header, main, nav, section, summary."},{"prompt":"Write a Java program that prints a rating out of 10 based on user input. Input value: 7","completion":"public class Rating { public static void main (String[] args) { int inputValue = 7; int rating = 0; if (inputValue >= 8) { rating = 10; } else if (inputValue >= 5) { rating = 7; } else { rating = 4; } System.out.println(\\"Rating: \\" + rating); } }"},{"prompt":"w would you reverse this array? [3, 4, 7, 9, 10]","completion":"[10, 9, 7, 4, 3]"},{"prompt":"Write a JavaScript function that accepts a string argument and returns its capitalized value.","completion":"function capitalize(str) { return str.charAt(0).toUpperCase() + str.slice(1); }"},{"prompt":"Write an Android app to display a list of items from a local database.","completion":"public class MainActivity extends AppCompatActivity { RecyclerView listView; @Override protected void onCreate(Bundle savedInstanceState) { super.onCreate(savedInstanceState); setContentView(R.layout.activity_main); // Instantiate the database AppDatabase db = AppDatabase.getInstance(this); // Instantiate the RecyclerView listView = findViewById(R.id.listView); // Get the list of items from the database List<Item> items = db.itemDao().getAll(); // Set the LayoutManager listView.setLayoutManager(new LinearLayoutManager(this)); // Set the adapter for the RecyclerView listView.setAdapter(new ItemAdapter(items)); } }"},{"prompt":"Create an HTML webpage that displays a table.","completion":"<html> <head> <title>Table Example</title> </head> <body> <table> <tr> <th>Column 1</th> <th>Column 2</th> <th>Column 3</th> </tr> <tr> <td>Row 1, Column 1</td> <td>Row 1, Column 2</td> <td>Row 1, Column 3</td> </tr> <tr> <td>Row 2, Column 1</td> <td>Row 2, Column 2</td> <td>Row 2, Column 3</td> </tr> </table> </body> </html>"},{"prompt":"Write a Python function that prints the square of a given number.","completion":"def square(num): return num ** 2"},{"prompt":"Create a Java method that takes two integer arguments and returns their multiplication.","completion":"public static int multiply(int a, int b) { return a * b; }"},{"prompt":"Given a text string, write a function in Python to identify all the words that have more than 3 characters. text = \\"Python is an easy to learn language","completion":"def longer_words(text): words = text.split() longer = [word for word in words if len(word) > 3] return longer"},{"prompt":"Using Java, write a method that takes an array of integers and replaces all the negative numbers with 0. int[] arr = {2, 3, -4, 5, 7, -8};","completion":"public static int[] replaceNegs(int[] arr) { for (int i = 0; i < arr.length; i++) { if (arr[i] < 0) arr[i] = 0; } return arr; }"},{"prompt":"Create a function to update the existing item of a dictionary with a new value. mydict = { \\"name\\": \\"John\\", \\"age\\": 25 }","completion":"function updateDict(d, key, value) { d[key] = value; return d; }"},{"prompt":"Given two arrays of integers, write a Python function which is able to identify common elements. arr1 = [1,2,3,4,5] arr2 = [3,4,5,6,7]","completion":"def common_elements(arr1, arr2): return [x for x in arr1 if x in arr2]"},{"prompt":"Using SQL, write a query to identify the student ID and the name of the student who scored the highest marks in a given subject.","completion":"SELECT students.id AS student_id, students.name AS student_name FROM students INNER JOIN marks ON students.id = marks.student_id WHERE marks.subject = ‘Subject1’ ORDER BY marks.mark DESC LIMIT 1;"},{"prompt":"Design a class named \\"Rectangle\\" that prints out the length, width, area and perimeter of a given rectangle.","completion":"\\"\\"\\" Design a class named 'Rectangle' that prints out the length, width, area and perimeter of a given rectangle \\"\\"\\" class Rectangle: def __init__(self, l, w): self.length = l self.width = w def area(self): return self.length * self.width def perimeter(self): return 2 * (self.length + self.width) def __str__(self): return 'Rectangle with length {0} and width {1}'.format(self.length, self.width)"},{"prompt":"Construct a while loop that continuously adds all elements of a list until reaching a certain number list=[1, 2, 3, 4, 5] sum_num=10","completion":"sum_temp = 0 i = 0 while sum_temp < sum_num: sum_temp += list[i] i += 1"},{"prompt":"Write a function which prints out odd numbers from a given list [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]","completion":"def print_odd_num(my_list): for num in my_list: if num % 2 != 0: print(num)"},{"prompt":"Make a code that takes two arguments and returns a sum of the two","completion":"def add_two_nums(a, b): return a + b"},{"prompt":"Construct a loop that checks whether each item in a list is greater than 10 my_list = [5, 11, 8, 15]","completion":"for x in my_list: if x > 10: print(\\"{0} is greater than 10\\".format(x))"},{"prompt":"Using list comprehension, create a new list that contains values less than 5 my_list = [7, 2, 5, 8, 4, 9, 6]","completion":"new_list = [x for x in my_list if x < 5]"},{"prompt":"Construct a code that takes in an object and checks whether each property includes a certain value my_dict = { 'name': 'John', 'age': 23, 'pet_name': 'Maggy' } value = 'John'","completion":"def check_value(obj, value): for key, val in obj.items(): if val == value: return True return False"},{"prompt":"Edit the code to construct a bubble sort algorithm. arr = [5, 2, 1, 7, 8]","completion":"def bubble_sort(arr): n = len(arr) # Traverse through all array elements for i in range(n): # Last i elements are already in place for j in range(0, n-i-1): # traverse the array from 0 to n-i-1 # Swap if the element found is greater # than the next element if arr[j] > arr[j+1] : arr[j], arr[j+1] = arr[j+1], arr[j]"},{"prompt":"Create a loop which prints out characters from a given input a = 'Hello World!'","completion":"for char in a: print(char, end=\\"\\")"},{"prompt":"Design a function which can check if a given year is a leap year","completion":"def is_leap_year(year): if year % 4 == 0: if year % 100 == 0: if year % 400 == 0: return True else: return False else: return True else: return False"},{"prompt":"Create a program to find the maximum and minimum from a given list my_list = [5, 7, 6, 3]","completion":"def max_min(my_list): max_val = my_list[0] min_val = my_list[0] for val in my_list: if val > max_val: max_val = val if val < min_val: min_val = val return (max_val, min_val)"},{"prompt":"Construct a class which instantiates objects with a given name and age","completion":"class Person: def __init__(self, name, age): self.name = name self.age = age"},{"prompt":"Write a recursive method to calculate the Fibonacci number of a given index","completion":"def fibonacci(n): # base case if n <= 1: return n # recursive case else: return(fibonacci(n-1) + fibonacci(n-2))"},{"prompt":"Create a SQL query to get the names of all the customers who have purchased a product from a specific category.","completion":"SELECT c.name FROM customers c JOIN orders o ON c.customer_id = o.customer_id JOIN order_items oi ON o.order_id = oi.order_id JOIN products p ON p.product_id = oi.product_id WHERE p.category = 'category_name';"},{"prompt":"Create an HTML page that renders two checkboxes and a button using JavaScript.","completion":"<html> <head> <script> function renderCheckboxes() { var checkboxes = document.createElement(\\"input\\"); checkboxes.type = \\"checkbox\\"; checkboxes.name = \\"checkbox\\"; checkboxes.value = \\"1\\"; document.body.appendChild(checkboxes); var checkboxes2 = document.createElement(\\"input\\"); checkboxes2.type = \\"checkbox\\"; checkboxes2.name = \\"checkbox2\\"; checkboxes2.value = \\"2\\"; document.body.appendChild(checkboxes2); var btn = document.createElement(\\"BUTTON\\"); btn.innerHTML = \\"Submit\\"; document.body.appendChild(btn); } <\/script> </head> <body onLoad=\\"renderCheckboxes()\\"> </body> </html>"},{"prompt":"Create an XML element to store the customer information, such as name and address.","completion":"<customer> <name>John Doe</name> <address>123 Main Street, Anytown, USA 10101</address> </customer>"},{"prompt":"Create an HTML page that contains an input field and a submit button; when the button is clicked, it should print the input text in the HTML page.","completion":"<html> <head> <script> function printInput() { let input = document.getElementById(\\"input\\").value; document.getElementById(\\"result\\").innerHTML = input; } <\/script> </head> <body> <input type=\\"text\\" id=\\"input\\" /> <button type=\\"submit\\" onclick=\\"printInput()\\">submit</button> <div id=\\"result\\"></div> </body> </html>"},{"prompt":"Construct a function that converts a given temperature from Celsius to Fahrenheit. Celsius Temperature: 37.5","completion":"def ctof(celsius): fahrenheit = (celsius * 9/5) + 32 return fahrenheit ctof(37.5) // returns 99.5"},{"prompt":"Analyze the given sentence and label each word according to its part of speech. Sentence: She was embarrassed to open the door.","completion":"Pronoun: She Verb: was Adjective: embarrassed Verb: to open Determiner: the Noun: door"},{"prompt":"Develop a PHP web application for a movie theater booking system.","completion":"<?php // Function to collect user input and query the database function bookSeats(){ // Database connection and query db_connection = new mysqli(\\"localhost\\", \\"user\\", \\"password\\", \\"database\\"); query = \\"SELECT * FROM movie_theater WHERE no_of_seats > 0 ORDER BY name ASC\\"; result = db_connection->query(query); // Submit button handler if (isset(_POST['submit'])) { movie = _POST['movie']; no_of_seats = _POST['seats']; // If selected movie theater has available seats, book the seats if (result->num_rows > 0) { while (row = result->fetch_assoc()) { if (row['name'] == movie && row['no_of_seats'] >= no_of_seats) { row['no_of_seats'] -= no_of_seats; // Update the seats availability update_query = \\"UPDATE movie_theater SET no_of_seats = '\\" . row['no_of_seats'] . \\"' WHERE name = '\\" . movie . \\"'\\"; db_connection->query(update_query); } } } } }"},{"prompt":"Construct a HTML page that takes a user input and display the response.","completion":"<html> <body> <form action=\\"\\" method=\\"POST\\"> Enter your name: <input type=\\"text\\" name=\\"name\\"><br> <input type=\\"submit\\" value=\\"Submit\\"> </form> <?php if (isset(_POST['name'])) { echo \\"Hello, \\" . _POST['name']; } ?> </body> </html>"},{"prompt":"Design a CSS style sheet to format a web page.","completion":"body { background-color: #FFFFFF; font-family: Arial, sans-serif; font-size: 14px; margin: 0px; padding: 0px; } h1{ font-size: 1.5em; font-weight: bold; } p { line-height: 25px; margin: 15px 0px; }"},{"prompt":"Construct a SQL query to find the list of customers with the highest total of sales.","completion":"SELECT customer.name, SUM(sales.amount) AS total_sales FROM customer INNER JOIN sales ON customer.ID = sales.customer_id GROUP BY customer.name ORDER BY total_sales DESC;"},{"prompt":"Add a new column to a Pandas DataFrame called \\"age_group\\" that contains categorical values \\"young\\",\\"adult\\",\\"elderly\\". name age John 25 Mark 45 Isabelle 75","completion":"import pandas as pd # Read in the data df = pd.DataFrame({'name': ['John', 'Mark', 'Isabelle'], 'age': [25, 45, 75]}) # Add a new column \\"age_group\\" def categorize_age(age): if age < 18: return \\"young\\" elif 18 <= age < 65: return \\"adult\\" else: return \\"elderly\\" df['age_group'] = df['age'].apply(categorize_age)"},{"prompt":"Calculate the maximum and minimum values in the column \\"seats\\". job | seats -----+-------- A | 3 B | 12 C | 2","completion":"min_seats = 2 max_seats = 12"},{"prompt":"Given the JSON data below, find the count of each type of fruit. { \\"fruits\\": [ { \\"type\\": \\"apple\\", \\"count\\": 10 }, { \\"type\\": \\"orange\\", \\"count\\": 5 }, { \\"type\\": \\"banana\\", \\"count\\": 15 } ] }","completion":"import json data = \\"\\"\\" { \\"fruits\\": [ { \\"type\\": \\"apple\\", \\"count\\": 10 }, { \\"type\\": \\"orange\\", \\"count\\": 5 }, { \\"type\\": \\"banana\\", \\"count\\": 15 } ] } \\"\\"\\" data = json.loads(data) # Get the count for each type of fruit apple_count = 0 orange_count = 0 banana_count = 0 for fruit in data['fruits']: if fruit['type'] == 'apple': apple_count = fruit['count'] elif fruit['type'] == 'orange': orange_count = fruit['count'] elif fruit['type'] == 'banana': banana_count = fruit['count'] print(\\"Apple count = %d\\" % apple_count) print(\\"Orange count = %d\\" % orange_count) print(\\"Banana count = %d\\" % banana_count)"},{"prompt":"Using string functions, capitalize each word in the given sentence. sentence = \\"python is a programming language","completion":"sentence = \\"python is a programming language\\" # split the sentence into individual words words = sentence.split(\\" \\") # capitalize each word in the sentence capitalized_words = [word.capitalize() for word in words] # join the words back together capitalized_sentence = \\" \\".join(capitalized_words) print(capitalized_sentence) # prints \\"Python Is A Programming Language\\""},{"prompt":"Generate a list containing the squares of the first ten odd numbers.","completion":"# Generate a list containing the squares of the first ten odd numbers list_of_squares = [x**2 for x in range(1, 21, 2)] print(list_of_squares) # prints [1, 9, 25, 49, 81, 121, 169, 225, 289, 361]"},{"prompt":"Create a function that takes two arguments, \\"start\\" and \\"end\\", and returns a list of all the prime numbers between the two.","completion":"def get_prime_numbers(start, end): \\"\\"\\" Function to return a list of all the prime numbers between start and end \\"\\"\\" prime_numbers = [] for num in range(start, end + 1): if num > 1: is_prime = True for j in range(2, int(num/2) + 1): if num % j == 0: is_prime = False break if is_prime: prime_numbers.append(num) return prime_numbers print(get_prime_numbers(2, 10)) # prints [2, 3, 5, 7]"},{"prompt":"Given the following matrix, delete the row or column that contains the least number of elements. [[0, 1, 2], [3, 4, 5], [6, 7, 8]]","completion":"import numpy as np # Create the matrix matrix = np.array([[0, 1, 2], [3, 4, 5], [6, 7, 8]]) # Get the lengths of each row row_lengths = [len(row) for row in matrix] # Delete the row with the minimum length and print the result del matrix[row_lengths.index(min(row_lengths))] print(matrix) # prints [[0 1 2] # [3 4 5] # [6 7 8]]"},{"prompt":"Sort the following list using a bubble sort algorithm. [36, 71, 16, 21, 73]","completion":"# Bubble sort function def bubble_sort(my_list): # Do n times for i in range(0, len(my_list) - 1): # Do n - i - 1 times for j in range(0, len(my_list) - 1 - i): if my_list[j] > my_list[j+1]: my_list[j], my_list[j+1] = my_list[j+1], my_list[j] return my_list # Test data my_list = [36, 71, 16, 21, 73] # Call the function sorted_list = bubble_sort(my_list) print(sorted_list) # prints [16, 21, 36, 71, 73]"},{"prompt":"Edit the following HTML string so that it sets the background color of the page to \\"blue\\". <html> <body> </body> </html>","completion":"<html> <body style=\\"background-color: blue;\\"> </body> </html>"},{"prompt":"Write a code in Python to count the number of words in the sentence \\"Hello World\\".","completion":"# Count the number of words in the sentence sentence = \\"Hello World\\" num_words = len(sentence.split()) print(num_words) # prints 2"},{"prompt":"Create a loop that prints 'hello' 10 times when ran.","completion":"for i in range(10): print('hello')"},{"prompt":"Parse the HTML text to get all the <img> tags. <html> <body> <p>This is an example</p> <img src=\\"example.JPG\\" alt=\\"Example Image\\"/> <img src=\\"example2.JPG\\" alt=\\"Example Image 2\\"/> <p>This is the end</p> </body> </html>","completion":"['<img src=\\"example.JPG\\" alt=\\"Example Image\\"/>', '<img src=\\"example2.JPG\\" alt=\\"Example Image 2\\"/>']"},{"prompt":"Define a function called my_function that will take a string as an argument and returns the string with all the vowels removed.","completion":"def my_function(string): vowels = 'aeiouAEIOU' newString = '' for char in string: if char not in vowels: newString += char return newString"},{"prompt":"Find the sum of two integers x and y. x=2 y=3","completion":"5"},{"prompt":"Calculate the least common denominator of 6 and 8.","completion":"24"},{"prompt":"Create a while loop that prints all the letters of the alphabet.","completion":"a = 'a' while a <= 'z': print(a) a = chr(ord(a)+1)"},{"prompt":"Given a set of numbers, find the largest number from the set. [2, 9, 10, 11, 5]","completion":"11"},{"prompt":"Create a SQL query to find the name and age of the oldest person in the database. Table Name: people Columns: id (integer), name (string), age (integer)","completion":"SELECT name, age FROM people ORDER BY age DESC LIMIT 1;"},{"prompt":"Construct a JavaScript object with 5 key-value pairs.","completion":"let obj = { key1: 'value1', key2: 'value2', key3: 'value3', key4: 'value4', key5: 'value5' };"},{"prompt":"Edit the given SQL query to find the maximum salary SELECT MIN(salary) FROM employee","completion":"SELECT MAX(salary) FROM employees;"},{"prompt":"Write a JavaScript code snippet to convert a string of uppercase characters to lowercase characters. input_string = \\"HELLO WORLD","completion":"let input_string = \\"HELLO WORLD\\"; let output_string = input_string.toLowerCase(); console.log(output_string);"},{"prompt":"Construct a C++ class with three data members and one function.","completion":"class MyClass { int data1; float data2; string data3; void myFunction() { //function code } };"},{"prompt":"Create a HTML page to display a table with 5 rows and 4 columns of data.","completion":"<html> <head> <title>Table Example</title> </head> <body> <table> <tr> <td>Row 1, Column 1</td> <td>Row 1, Column 2</td> <td>Row 1, Column 3</td> <td>Row 1, Column 4</td> </tr> <tr> <td>Row 2, Column 1</td> <td>Row 2, Column 2</td> <td>Row 2, Column 3</td> <td>Row 2, Column 4</td> </tr> <tr> <td>Row 3, Column 1</td> <td>Row 3, Column 2</td> <td>Row 3, Column 3</td> <td>Row 3, Column 4</td> </tr> <tr> <td>Row 4, Column 1</td> <td>Row 4, Column 2</td> <td>Row 4, Column 3</td> <td>Row 4, Column 4</td> </tr> <tr> <td>Row 5, Column 1</td> <td>Row 5, Column 2</td> <td>Row 5, Column 3</td> <td>Row 5, Column 4</td> </tr> </table> </body> </html>"},{"prompt":"Create an HTML page that displays a table with three columns: Name, Age, and Gender.","completion":"<html> <head> <title>Table Examples</title> </head> <body> <table> <caption>People Table</caption> <tr> <th>Name</th> <th>Age</th> <th>Gender</th> </tr> <tr> <td>John</td> <td>30</td> <td>Male</td> </tr> <tr> <td>Jane</td> <td>20</td> <td>Female</td> </tr> </table> </body> </html>"},{"prompt":"Design a React component to display a button that increments a counter by one.","completion":"import React from 'react'; class CounterButton extends React.Component { constructor(props) { super(props); this.state = { count: 0 }; } handleClick = () => { this.setState({count: this.state.count + 1}); } render() { return ( <div> <button onClick={this.handleClick}> {this.state.count} </button> </div> ); } } export default CounterButton;"},{"prompt":"Create a SQL query that finds the average salary of employees aged between 25 and 30.","completion":"SELECT AVG(salary) FROM Employees WHERE age BETWEEN 25 AND 30;"},{"prompt":"Parse a JSON string and transform it into an array. '{\\"name\\": \\"John Doe\\", \\"age\\": 30, \\"city\\": \\"New York\\"}'","completion":"let jsonString = '{\\"name\\": \\"John Doe\\", \\"age\\": 30, \\"city\\": \\"New York\\"}'; let parsedJSON = JSON.parse(jsonString); let array = Object.values(parsedJSON); // ['John Doe', 30, 'New York']"},{"prompt":"Correct the following HTML code and check the output in a browser. <html> <heade> <title>Test Page</title> </heade> <body> <p>This is a test.</p> </body> </html>","completion":"<html> <head> <title>Test Page</title> </head> <body> <p>This is a test.</p> </body> </html>"},{"prompt":"Construct a regular expression that matches all strings that contain \\"hello\\" or \\"world\\".","completion":"/b(hello|world)b/"},{"prompt":"Use Python to generate a random string of length 8 using lowercase alphabetic characters.","completion":"import random def random_string(): chars = 'abcdefghijklmnopqrstuvwxyz' return ''.join(random.choice(chars) for i in range(8)) random_string() // 'fldmgnkd'"},{"prompt":"Using the comment as a guide, fill in the gaps in the following code. input_list = [1, 2, 3, 4] def transform_list (input_list): '''Transform the list by adding 5 to each element''' # TODO","completion":"input_list = [1, 2, 3, 4] def transform_list (input_list): '''Transform the list by adding 5 to each element''' transformed_list = [x+5 for x in input_list] return transformed_list"},{"prompt":"Why is a dictionary in Python often called an associative array?","completion":"A dictionary in Python is often called an associative array because of the manner in which it stores data. The structure of a dictionary maps keys (strings, numbers, etc.) to their associated values in an associative manner, as in a mathematical mapping or function. This makes dictionaries an ideal choice for storing key-value pairs or to associate an item of data with a particular value."},{"prompt":"Create a SQL query to get all the information about the employees with salary between 50,000 and 75,000.","completion":"SELECT * FROM employee WHERE salary BETWEEN 50000 and 75000;"},{"prompt":"Write a code snippet to implement bubble sorting in an array of 10 numbers.","completion":"for (int i = 0; i < 10; i++) { for (int j = 0; j < 10-i-1; j++) { if (arr[j] > arr[j+1]) { int temp = arr[j]; arr[j] = arr[j+1]; arr[j+1] = temp; } } }"},{"prompt":"Explain the difference between system call and library function.","completion":"System calls are functions that are executed directly by the operating system's kernel when a process requests a service. These are typically more time consuming than library functions. Library functions, on the other hand, are functions in a library which contain a bunch of useful functions that a programmer can make use of in their programs. These functions have a bit less overhead and are generally much faster than system calls."},{"prompt":"What language is used in HTML documents?","completion":"Hyper Text Markup Language (HTML) is a markup language used to describe the structure of web pages and other documents. It is a language based on tags and attributes which define how the document should be displayed and structured."},{"prompt":"Suggest a way to create a loop of 3 elements in C#.","completion":"In C#, a loop of 3 elements can be created using a for loop. The general syntax is as follows: for (int i = 0; i < 3; i++) { // Code to execute }"},{"prompt":"Write a code snippet for a function that deletes a specific element from an array.","completion":"def delete_element(arr, element): count = 0 for i in range(len(arr)): if arr[i] == element: while count < len(arr)-1: arr[i] = arr[i+1] i+=1 count+=1 arr.pop() return arr"},{"prompt":"Create a MySQL statement to count the number of orders for each customer.","completion":"SELECT customer_id, count(*) FROM orders GROUP BY customer_id;"},{"prompt":"Compare the two inputed strings to know whether the first string is a substring of the second one or not. String 1: Ayda String 2: May","completion":"No, \\"Ayda\\" is not a substring of \\"Maya\\"."},{"prompt":"Print the elements at odd indices in a given array. An array containing [2, 5, 9, 8, 6]","completion":"The elements at odd indices are 5, 8."},{"prompt":"Given two equations, predict the range of the output variable. Equation 1: Y = X + 2 Equation 2: Y = 2X","completion":"The range of the output variable is [-2, ∞)."},{"prompt":"mport a module in Python and store it in a variable named “import_module”.","completion":"import_module = importlib.import_module(\\"<module name>\\")"},{"prompt":"Parse an XML string and print the tag names. <xml><title>HelloWorld!</title><body>This is my first XML document.</body></xml>","completion":"The tag names are title and body."},{"prompt":"Determine the sum of the first n elements in a given array. An array containing [2, 4, 6, 8, 10]","completion":"The sum of the first 5 elements in the given array is 30."},{"prompt":"What is Constructor Chaining in Java?","completion":"Constructor chaining is a feature in Java that enables a class to call one or more other constructors of the same class in the same order as they appear in the class. This enables code reuse and helps to write a concise and robust constructor."},{"prompt":"Write a code to generate a random password with a given length.","completion":"import random import string def generate_password(length): chars = string.ascii_letters + string.digits + '!@#%^&*()' random.seed = (random.SystemRandom().random()) return ''.join(random.choice(chars) for i in range(length)) print(generate_password(10)) # Output is an alphanumeric string of length 10"},{"prompt":"Write a code to delete a node from a given BST.","completion":"# Node class to define a node of a BST class Node(object): # Constructor def __init__(self, data): self.data = data self.left = None self.right = None # Function to delete a given node from BST def delete_node(root, key): # base case if root is None: return None # If the key to be delete is smaller than the root's # key then it lies in left subtree if key < root.data: root.left = delete_node(root.left, key) # If the kye to be delete is greater than the root's key # then it lies in right subtree elif(key > root.data): root.right = delete_node(root.right, key) # if key is same as root's key, then this is the node # to be deleted else: # Node with only one child or no child if root.left is None : temp = root.right root = None return temp elif root.right is None : temp = root.left root = None return temp # Node with two children: Get the inorder successor # (smallest in the right subtree) temp = find_min(root.right) # Copy the inorder successor's content to this node root.data = temp.data # Delete the inorder successor root.right = delete_node(root.right , temp.data) return root \\"\\"\\" Helper Functions \\"\\"\\" # Function to find the minimum node def find_min(node): current = node # loop down to find the leftmost leaf while(current.left is not None): current = current.left return current"},{"prompt":"Using a regular expression, extract all prices of items from a given HTML string. <div> Price of tea is £1.45, price of burger is £2.50, price of coffee is £2.00. </div>","completion":"let prices = []; let pricesRegex = /£d+(?:.d+)?/g; let matches = str.match(pricesRegex); for (let i= 0; i < matches.length; i++) { prices.push(matches[i]); } console.log(prices); // [\\"£1.45\\",\\"£2.50\\",\\"£2.00\\"]"},{"prompt":"w would you use a for loop to print the index and item of a list?","completion":"let list = [\\"item1\\", \\"item2\\", \\"item3\\", \\"item4\\"]; for (let i = 0; i < list.length; i++) { console.log(i, list[i]); } // Output: // 0 item1 // 1 item2 // 2 item3 // 3 item4"},{"prompt":"Write a Python function to print a string of given length n filled with asterisks.","completion":"def print_asterisks(n): for i in range(n): print(\\"*\\", end=\\"\\") print(\\"\\")"},{"prompt":"w would you use an if-else statement to test whether a number is even or odd?","completion":"def test_even_odd(num): if num % 2 == 0: print(\\"The number is even\\") else: print(\\"The number is odd\\")"},{"prompt":"Create a Python class for a product that includes data fields for name, description, and price.","completion":"class Product: def __init__(self, name, description, price): self.name = name self.description = description self.price = price def __str__(self): return f\\"Name: {self.name}nDescription: {self.description}nPrice: {self.price}\\""},{"prompt":"Using a try-except statement, write a Python code to handle a ValueError which arises if the input is not a number.","completion":"try: input_num = int(input(\\"Enter a number: \\")) except ValueError: print(\\"Please enter a valid number\\")"},{"prompt":"w would you use a while loop to sum up numbers from 0 to n?","completion":"let n = 10; let sum = 0; let i = 0; while (i <= n) { sum += i; i++; } console.log(sum); // prints 55"},{"prompt":"Using a for-in loop, print out the keys and values of a given dictionary. mydict = { \\"name\\": \\"John\\", \\"age\\": 30, \\"city\\": \\"New York\\" }","completion":"for key,value in mydict.items(): print(\\"Key: \\" + key + \\"; Value: \\" + str(value)) # Output: # Key: name; Value: John # Key: age; Value: 30 # Key: city; Value: New York"},{"prompt":"w would you use a switch statement to print the corresponding day to a number?","completion":"switch (n) { case 1: console.log(\\"Monday\\"); break; case 2: console.log(\\"Tuesday\\"); break; case 3: console.log(\\"Wednesday\\"); break; case 4: console.log(\\"Thursday\\"); break; case 5: console.log(\\"Friday\\"); break; case 6: console.log(\\"Saturday\\"); break; case 7: console.log(\\"Sunday\\"); break; default: console.log(\\"Invalid input\\"); break; }"},{"prompt":"Write a code to split a list of numbers into two sets with equal sum [1, 2, 3, 4, 5, 6, 7]","completion":"def split_list(list): start = 0 end = len(list) - 1 left_sum = 0 right_sum = sum(list[start:end+1]) while start < end: right_sum -= list[end] if left_sum == right_sum: break left_sum += list[start] start += 1 if left_sum == right_sum: return list[:start], list[start:] else: return None if __name__ == '__main__': arr = [1, 2, 3, 4, 5, 6, 7] left, right = split_list(arr) print(\\"left set:\\", left) # prints [1, 2, 3, 4] print(\\"right set:\\", right) # prints [5, 6, 7]"},{"prompt":"Convert a given number from degrees to radians. 90","completion":"def deg_to_rad(deg): return (deg * 3.14)/180 if __name__ == '__main__': deg = 90 rad = deg_to_rad(deg) print(rad) # prints 1.571"},{"prompt":"Write code for a substring search String: \\"Hello World\\" Substring: \\"llo","completion":"def search_substring(string, substr): if substr in string: return True else: return False if __name__ == '__main__': string = \\"Hello World\\" substr = \\"llo\\" result = search_substring(string, substr) print(result) # prints True"},{"prompt":"Create a program to find the maximum length common subsequence of two given strings. String1: \\"abcdgf\\" String2: \\"abcdhfe","completion":"def find_max_subseq(str1, str2): n1 = len(str1) n2 = len(str2) dp = [[0 for _ in range(n2 + 1)] for _ in range(n1 + 1)] for i in range(1, n1 + 1): for j in range(1, n2 + 1): if(str1[i - 1] == str2[j - 1]): dp[i][j] = dp[i - 1][j - 1] + 1 else: dp[i][j] = max(dp[i - 1][j], dp[i][j - 1]) return dp[n1][n2] if __name__ == '__main__': str1 = \\"abcdgf\\" str2 = \\"abcdhfe\\" result = find_max_subseq(str1, str2) print(result) # prints 5"},{"prompt":"Write a code for creating a Fibonacci sequence n = 10","completion":"def fibonacci_seq(n): seq = [0, 1] for i in range(2, n): seq.append(seq[i-1] + seq[i-2]) return seq if __name__ == '__main__': n = 10 result = fibonacci_seq(n) print(result) # prints [0, 1, 1, 2, 3, 5, 8, 13, 21, 34]"},{"prompt":"Calculate the area of the circle with the radius of 4.","completion":"The area of the circle with the radius of 4 is 50.26548245743669."},{"prompt":"Write all the possible combinations for the strings, \\"ABC\\" and \\"XYZ\\".","completion":"ABCXYZ, ABCXZY, ABYXZC, ABYZXC, ACBXYZ, ACBXZY, ACYXZB, ACYZXB, AXBZYC, AXBYCZ, AXYBCZ, AXYZBC, XABCYZ, XABCZY, XAYBZC, XAYCZB, XBACYZ, XBACZY, XBYACZ, XBYZAC, XYABCZ, XYAZBC."},{"prompt":"Create a SQL query that returns all employees in the \\"Marketing\\" department.","completion":"SELECT * FROM employees WHERE department = 'Marketing';"},{"prompt":"Write a Python script that converts the number 122 to binary.","completion":"def dec_to_bin(n): binary_num = bin(n) print(binary_num[2:]) dec_to_bin(122)"},{"prompt":"Create a JavaScript function that can take a string and reverse it.","completion":"function reverseString(str) { let reversed = \\"\\" for (let i = str.length-1; i >= 0; i--) { reversed += str[i] } return reversed }"},{"prompt":"Create a Python dictionary that includes the keys \\"name\\", \\"age\\", and \\"location\\", and set the values to your name, age, and location.","completion":"my_dict = { \\"name\\": \\"John Smith\\", \\"age\\": 28, \\"location\\": \\"New York\\" }"},{"prompt":"Write a SQL query that returns all records from a table where the value in the \\"email\\" column contains the \\"@\\" symbol.","completion":"SELECT * FROM table_name WHERE email LIKE '%@%';"},{"prompt":"Create an array of 10 integers, starting from 0 and increasing with each element.","completion":"my_array = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]"},{"prompt":"Write a python script to identify a palindrome from a given input string inputString = \\"abacab","completion":"def checkPalindrome(inputString): # reverse the given string reverseString = inputString[::-1] # check if the string is equal to its reverse if (inputString == reverseString): return True else: return False # Driver code if __name__ == \\"__main__\\": inputString = \\"abacab\\" print(checkPalindrome(inputString))"},{"prompt":"Write a Java program to implement Matrix multiplication","completion":"public class MatrixMultiplication { public static void main(String []args) { int[][] matrix1 = { {1, 1}, {2, 2} }; int[][] matrix2 = { {1, 1}, {2, 2} }; int rows1 = matrix1.length; int cols1 = matrix1[0].length; int rows2 = matrix2.length; int cols2 = matrix2[0].length; int[][] result = new int[rows1][cols2]; // multiplying matrix1 and matrix2 for(int i = 0; i < rows1; i++) { for(int j = 0; j < cols2; j++) { for(int k = 0; k < rows2; k++) { result[i][j] += matrix1[i][k] * matrix2[k][j]; } } } // printing the result matrix for(int[] row : result) { for (int element : row){ System.out.print(element + \\"t\\" ); } System.out.println(); } } }"},{"prompt":"Write a JavaScript program to check if a given string contains equal number of P and T characters.","completion":"function equalNumberOfPAndTCharacters(str){ let countP = 0; let countT = 0; for (let i = 0; i < str.length; i++) { if (str.charAt(i) == 'P') { countP++; } else if (str.charAt(i) == 'T') { countT++; } } if(countP == countT){ return true; } else { return false; } } //testing console.log(equalNumberOfPAndTCharacters(\\"PPTTPT\\")); //true"},{"prompt":"Create a JavaScript program to convert the following date format into MM/DD/YYYY. dateString = \\"October 5, 2020","completion":"let dateString = \\"October 5, 2020\\"; let newDateString = dateString.substring(0, 3) + \\"/\\" + dateString.substring(8, 10) + \\"/\\" + dateString.substring(11); console.log(newDateString); //Output: 10/05/2020"},{"prompt":"Write a java program to count the number of characters in a sentence without using a loop. sentence = \\"This is a simple sentence","completion":"//using 'split()' method String[] words = sentence.split(\\"s+\\"); //split with regular expression int count = 0; for(String word: words){ count += word.length(); } System.out.println(\\"The number of characters in the sentence is : \\"+count); //using 'replaceAll()' method int count = sentence.replaceAll(\\" \\", \\"\\").length(); System.out.println(\\"The number of characters in the sentence is : \\"+count);"},{"prompt":"Construct a Python script to print a specific character from a string. str = \\"Hello world!\\" index = 5","completion":"testString = \\"Hello world!\\" print(testString[index]) # Output will be: w"},{"prompt":"Write the code to print a given table format in Python. Table with 4 columns and 5 row","completion":"for i in range(1,6): print('{:<10}{:<10}{:<10}{:<10}'.format(i, i**2, i**3, i**4))"},{"prompt":"put a two-dimensional array and calculate the sum of each row. arr = [[1, 2, 3], [4, 5, 6], [7, 8, 9]]","completion":"def row_sum(arr): row_sum = [] for row in arr: sum = 0 for ele in row: sum += ele row_sum.append(sum) return row_sum"},{"prompt":"Print out the number of items in the following list. my_list = [1, 2, 3, 4, 5, 6, 7]","completion":"7"},{"prompt":"Create a function that takes a 2D array of numerical values and returns the number of times the maximum value appears. my_array = [[1, 2, 4, 1], [2, 3, 3, 2], [3, 4, 3, 3]]","completion":"def count_max(arr): max_val = 0 count = 0 for row in arr: max_val = max(max_val, max(row)) for row in arr: if max(row) == max_val: count += 1 return count"},{"prompt":"Create a function that returns the sum of all elements in a given array of numbers.","completion":"def array_sum(arr): sum = 0 for num in arr: sum += num return sum"},{"prompt":"Create a prompt that takes user input and displays a message.","completion":"var userInput = prompt(\\"Please enter your name:\\"); alert(\\"Hello \\" + userInput + \\"!\\");"},{"prompt":"Use NumPy to extract the top 10 rows from a given matrix. import numpy as np arr = np.array([[1,2,3,4], [5,6,7,8], [9,10,11,12]])","completion":"top_10 = arr[:10,] print(top_10)"},{"prompt":"Use Python to sort a given list of strings. myList = [\\"bananas\\", \\"oranges\\", \\"apples\\", \\"peaches\\"]","completion":"sortedList = sorted(myList) print(sortedList)"},{"prompt":"Create a Django model that includes a user's name, email address, and age.","completion":"class UserModel(models.Model): name = models.CharField(max_length=100) address = models.CharField(max_length = 200) age = models.IntegerField()"},{"prompt":"Create a Python class to store a customer's name, address, and phone number.","completion":"class Customer: def __init__(self, name, address, phone): self.name = name self.address = address self.phone = phone"},{"prompt":"Use CSS to create a box containing some text with a light green background, black text, and a white border.","completion":".box { background-color: lightgreen; color: black; border: 1px solid white; }"},{"prompt":"Build a regression model to predict house prices based on crime rate and school quality.","completion":"model = sklearn.linear_model.LinearRegression() model.fit(data[['crime_rate', 'school_quality]], data['house_price'])"},{"prompt":"Create a function in Python to insert a new item into an existing list. new_item = 5 existing_list = [1, 2, 3, 4]","completion":"def insert_new_item(new_item, existing_list): \\"\\"\\"Inserts a new item into an existing list. Args: new_item (int): The item to be inserted. existing_list (list): The existing list. Returns: list: List with the new item inserted. \\"\\"\\" existing_list.append(new_item) return existing_list"},{"prompt":"w many lines of code are required to generate a Fibonacci sequence up to the n-th number?","completion":"The number of lines of code required to generate a Fibonacci sequence up to the n-th number is 3: one line to set the conditions, one line for the base case, and one line of the recursive loop. This does not include any lines for printing the result."},{"prompt":"Write a SQL query to find the highest student GPA within a specific course.","completion":"SELECT MAX(student_gpa) FROM course_table WHERE course_id = 'xyz123';"},{"prompt":"Find the last 10 digits of the result of raising 2 to the power of 1000.","completion":"The last 10 digits of 2^1000 are 4814077888."},{"prompt":"Write a JavaScript code to capitalize every word in a sentence. sentence = 'hello world!'","completion":"// This function takes a string and capitalizes every word in the string function capitalizeSentence(sentence) { // Split the sentence into individual words let words = sentence.split(' '); // Initialize the capitalized string let capitalized = ''; // Iterate through the words for (let word of words) { // Uppercase the first letter of the word let capitalizedWord = word[0].toUpperCase() + word.slice(1); // Append the capitalized word to the string capitalized += capitalizedWord + ' '; } // Return the capitalized string return capitalized; } // Print the capitalized sentence console.log(capitalizeSentence(sentence)); // Output: 'Hello World!'"},{"prompt":"Create a function that takes two string arguments, adds the corresponding numbers together, and returns the result. string1 = \\"5\\" string2 = \\"7","completion":"def add_numbers(x, y): return int(x) + int(y) result = add_numbers(string1, string2) print(result) # Outputs 12"},{"prompt":"Write an SQL query to find the latest users who have logged in.","completion":"SELECT * FROM users ORDER BY last_login DESC LIMIT 1;"},{"prompt":"Rewrite the following code snippet with fewer lines of code. ans = 0 for i in range(1,10): ans +=","completion":"ans = sum(range(1,10))"},{"prompt":"Design a struct in C that can be used to store personal information, such as name, age, etc.","completion":"struct PersonalInfo { char name[50]; int age; char phone[15]; char address[120]; };"},{"prompt":"Suggest a way to complete the following Python program which takes two strings as input and prints out the longer string. first_str = 'hello' second_str = 'world'","completion":"if len(first_str) == len(second_str): print('The two strings are of equal length.') elif len(first_str) > len(second_str): print(first_str) else: print(second_str)"},{"prompt":"Edit the following JavaScript code snippet to add an event listener to the button such that when it is clicked, an alert message is shown. let button = document.querySelector(\\"#button\\");","completion":"let button = document.querySelector(\\"#button\\"); button.addEventListener(\\"click\\", function(){ alert(\\"Button was clicked!\\"); });"},{"prompt":"Generate an HTML select element containing the names of all continents.","completion":"<select name=\\"continents\\"> <option value=\\"Africa\\">Africa</option> <option value=\\"Antarctica\\">Antarctica</option> <option value=\\"Asia\\">Asia</option> <option value=\\"Australia\\">Australia</option> <option value=\\"Europe\\">Europe</option> <option value=\\"North America\\">North America</option> <option value=\\"South America\\">South America</option> </select>"},{"prompt":"Write a SQL query to select the employee name, start date, and salary of all employees who have joined after 2018.","completion":"SELECT employeeName, startDate, salary FROM employees WHERE startDate > '2018-01-01';"},{"prompt":"Modify the given code to create a for loop that prints a list of numbers from 0 to 10. int i = 0","completion":"for i in range(11): print(i)"},{"prompt":"Modify the given JavaScript code to delete an element from an array. arr = [1, 2, 3]","completion":"function delElement(arr, el) { var index = arr.indexOf(el); if (index > -1) { arr.splice(index, 1); } return arr; } delElement(arr, 3) # Output [1, 2]"},{"prompt":"Find the similarity between two given sentences using NLTK library. sentence1 = \\"This has been an exciting journey\\" sentence2 = \\"It's been a thrilling ride","completion":"import nltk from nltk.corpus import wordnet sentence1 = \\"This has been an exciting journey\\" s1 = nltk.word_tokenize(sentence1) sentence2 = \\"It's been a thrilling ride\\" s2 = nltk.word_tokenize(sentence2) # First we convert the words into their respective synonyms syn1 = [] for word in s1: for syn in wordnet.synsets(word): for l in syn.lemmas(): syn1.append(l.name()) syn2 = [] for word in s2: for syn in wordnet.synsets(word): for l in syn.lemmas(): syn2.append(l.name()) # Calculating similarity using Path_Similarity similarity = [] for word1 in syn1: for word2 in syn2: p_sim = wordnet.path_similarity(wordnet.synset(word1),wordnet.synset(word2)) similarity.append(p_sim) # Calculate the average of all similarity scores result = sum(similarity)/len(similarity) # Output 0.6521739130434783"},{"prompt":"Fix the following Java code by replacing the letter \\"u\\" with \\"v\\". String s1 = \\"Update\\";","completion":"String s1 = \\"Update\\"; String s2 = s1.replace('u','v');"},{"prompt":"Find the number of unique items in the given array. arr = [1, 2, 1, 4, 5]","completion":"arr = [1, 2, 1, 4, 5]; const uniqueItems = new Set(arr); console.log(uniqueItems.size); # Output 4"},{"prompt":"Create a shell script to make a directory in the home directory.","completion":"#!/bin/bash mkdir ~/new_dir"},{"prompt":"Read the given JSON data and display the value of the \\"Name\\" field. { \\"Name\\": \\"Text Analyzer\\", \\"Version\\": \\"1.0.0\\", \\"Author\\": \\"John Doe\\" }","completion":"import json # Reading data data = { \\"Name\\": \\"Text Analyzer\\", \\"Version\\": \\"1.0.0\\", \\"Author\\": \\"John Doe\\" } # Printing the value of the \\"Name\\" field print(json.dumps(data['Name'])) # Output Text Analyzer"},{"prompt":"Use NumPy to create a 3x3 array of random numbers from 0 to 1.","completion":"import numpy as np arr = np.random.rand(3, 3) print(arr) # Output [[0.78000621 0.36251339 0.91162219] [0.52734163 0.56699849 0.03191476] [0.81245571 0.21147751 0.72691151]]"},{"prompt":"Edit the existing CSS stylesheet by adding a regular font family rule.","completion":"body { font-family: Arial, Helvetica, sans-serif; }"},{"prompt":"Given the following HTML code, add a second paragraph. <p>This is my first paragraph</p>","completion":"<p>This is my first paragraph</p> <p>This is my second paragraph</p>"},{"prompt":"Translate the following Python programme into JavaScript. num1 = 8 num2 = 0 if num1 > num2: print(\\"num1 is greater than num2\\") else: print(\\"num2 is greater than num1\\")","completion":"let num1 = 8; let num2 = 0; if (num1 > num2) { console.log(\\"num1 is greater than num2\\"); } else { console.log(\\"num2 is greater than num1\\"); }"},{"prompt":"Analyze the given text using opinion mining. The new iPhone is awesome, I love it!","completion":"import nltk from nltk.sentiment.vader import SentimentIntensityAnalyzer sid = SentimentIntensityAnalyzer() ss = sid.polarity_scores(text) # Output {'neg': 0.0, 'neu': 0.49, 'pos': 0.51, 'compound': 0.7717}"},{"prompt":"Write a function to compute the factorial of a number using recursion.","completion":"def factorial_recursion( n ): if n == 1: return n else: return n * factorial_recursion( n - 1 )"},{"prompt":"Construct a program that can calculate the factorial of a number using a while loop","completion":"def factorial_while(n): factorial = 1 while n>0: factorial = factorial * n n = n - 1 return factorial"},{"prompt":"Construct a code to determine if two strings are equal abc abc","completion":"true"},{"prompt":"Create a program to find the longest substring with unique characters","completion":"def longest_substring(string): n = len(string) ''' Initialization of stings, a and b ''' a = \\"\\" b = \\"\\" ''' Initialization of maximum length substring having distinct characters ''' maxlen = 0 ''' 1. Pick starting point 2. intialise substrng \\"a\\" 3. Find the longest such substring by comparing current and previous substring ''' for i in range(n): a += string[i] b = \\"\\" for j in range(i + 1, n): if string[j] not in a: b += string[j] else: break if len(a) > maxlen: maxlen = len(a) a += b return maxlen"},{"prompt":"Construct a function to detect if a binary tree is balanced","completion":"# A utility function to get the height of the tree def height(node): # Base Case : Tree is empty if node is None: return 0 ; # If tree is not empty then height = 1 + max of left # height and right heights return 1 + max(height(node.left) ,height(node.right)) # Function to get the difference of # height of left and right subtrees def getHeightDiff(node): if node is None: return 0 # Get the height difference of left and right subtrees heightDiff = height(node.left) - height(node.right) # Get the maximum of left and right subtree # height differences return max(heightDiff, getHeightDiff(node.left) ,getHeightDiff(node.right)) # The main function that checks if binary tree is # height-balanced or not def isBalanced(root): if root is None: return 1 # Get the height difference heightDiff = getHeightDiff(root) # If heightDiff is more than 1 then tree is # not balanced so return 0 if (abs(heightDiff) > 1): return 0 else: # tree is balanced return 1 return 1"},{"prompt":"Create a XML document to store information about books. Book Title: \\"The Adventures of Tom Sawyer\\" Book Author: Mark Twain Book Year: 1876 The Genre: Fictio","completion":"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?> <book> <title>The Adventures of Tom Sawyer</title> <author>Mark Twain</author> <year>1876</year> <genre>Fiction</genre> </book>"},{"prompt":"w can you sort an array using insertion sort?","completion":"Insertion sort is a sorting algorithm in which each item of the array is inserted at its correct position in the sorted list. It involves scanning the array and comparing each element with its adjacent elements in the array. If the element is smaller than its neighbors, it is swapped with its left neighbor, and if the element is larger, it is swapped with its right neighbor. This process is repeated until the array is sorted."},{"prompt":"Write a Python code that prints out the first 5 elements of a tuple.","completion":"tup=(1,2,3,4,5,6,7,8,9,10) for i in range(0,5): print (tup[i])"},{"prompt":"w do you calculate the sum of a list of numbers in Python?","completion":"The sum of a list of numbers in Python can be calculated using the built-in sum() function. This function takes an iterable object (such as a list or tuple) containing numbers as its argument and returns the sum of all the elements in the object. For example, sum([1,2,3]) will return 6."},{"prompt":"Create a JavaScript function to find the length of the longest common substring between \\"apple\\" and \\"pineapple\\".","completion":"function longestCommonSubstring(str1, str2) { let longestSubstring = ''; let longestStringLength = 0; for (let i = 0; i < str1.length; i++) { for (let j = 0; j < str2.length; j++) { let tempSubstring = ''; let k = i; while (str1[k] === str2[j]) { tempSubstring += str1[k++]; j++; } if (tempSubstring.length > longestStringLength) { longestStringLength = tempSubstring.length; longestSubstring = tempSubstring; } } } return longestSubstring; } longestCommonSubstring(\\"apple\\", \\"pineapple\\"); // output -> \\"apple\\""},{"prompt":"Create a new Python dictionary with numbers 1-10 as keys and their corresponding squares as values.","completion":"squares = {1:1, 2:4, 3:9, 4:16, 5:25, 6:36, 7:49, 8:64, 9:81, 10:100}"},{"prompt":"Create a SQL query to find all first names in the table 'Employee'","completion":"SELECT FirstName FROM Employee;"},{"prompt":"Create a SQL query to get the highest salary in the table 'Employee'","completion":"SELECT MAX(Salary) FROM Employee;"},{"prompt":"Write an HTML page with an input form having two text input fields","completion":"<!DOCTYPE html> <html> <head> <title>My page</title> </head> <body> <form> <input type=\\"text\\" name=\\"name\\" placeholder=\\"Name\\"> <input type=\\"text\\" name=\\"email\\" placeholder=\\"Email\\"> <input type=\\"submit\\" value=\\"Submit\\"> </form> </body> </html>"},{"prompt":"Write a Python function that takes an array of strings as an argument and returns a boolean.","completion":"def check_array(arr): if len(arr) == 0: return False for str in arr: if len(str) == 0: return False return True"},{"prompt":"Write a SQL statement to retrieve the first three customers from a table.","completion":"SELECT * FROM Customers LIMIT 3;"},{"prompt":"Select all the records from a SQL table where the \`name\` column contains the value \`John\`.","completion":"SELECT * FROM table_name WHERE \`name\` LIKE '%John%';"},{"prompt":"Write a SQL query to get the title and year of the oldest movie in a database.","completion":"SELECT title, year FROM movies ORDER BY year ASC LIMIT 1;"},{"prompt":"mplement a function in C that given inputs x, y and z, return the largest of them. x = 3, y = 4, z = 6","completion":"#include <stdio.h> // Function to find maximum int max_of_three(int x, int y, int z) { int max = x; if (y > max) max = y; if (z > max) max = z; return max; } // Driver program int main() { int x = 3, y = 4, z = 6; printf(\\"%d\\", max_of_three(x, y, z)); return 0; }"},{"prompt":"Create an array of objects in JavaScript that contains five objects, each representing a different programming language.","completion":"var languages = [ {langName: \\"JavaScript\\", creator: \\"Brendan Eich\\", releaseYear: 1995}, {langName: \\"Python\\", creator: \\"Guido van Rossum\\", releaseYear: 1991}, {langName: \\"C\\", creator: \\"Dennis Ritchie\\", releaseYear: 1972}, {langName: \\"Java\\", creator: \\"James Gosling\\", releaseYear: 1995}, {langName: \\"C++\\", creator: \\"Bjarne Stroustrup\\", releaseYear: 1985} ]"},{"prompt":"Build a MapReduce job with Hadoop to find the 99th percentile of a given data set.","completion":"//Mapper Code import java.io.IOException; import org.apache.hadoop.io.LongWritable; import org.apache.hadoop.io.Text; import org.apache.hadoop.mapreduce.Mapper; public class MapperClass extends Mapper<LongWritable, Text, Text, LongWritable> { LongWritable one = new LongWritable(1); Text data = new Text(); @Override protected void map(LongWritable key, Text value, Context context) throws IOException, InterruptedException { String[] line = value.toString().split(\\",\\"); String number = line[0]; // Emit key-value pair for number data.set(number); context.write(data, one); } } //Reducer Code import java.io.IOException; import org.apache.hadoop.io.LongWritable; import org.apache.hadoop.io.Text; import org.apache.hadoop.mapreduce.Reducer; public class ReducerClass extends Reducer<Text, LongWritable, Text, LongWritable> { int percentile; @Override protected void setup(Context context) throws IOException, InterruptedException { //Get percentile from context configuration percentile = context.getConfiguration().getInt(\\"percentile\\", 99); } @Override protected void reduce(Text key, Iterable<LongWritable> values, Context context) throws IOException, InterruptedException { LongWritable result = new LongWritable(); int sum = 0; // Sum up the values for (LongWritable value : values) { sum += value.get(); } // Calculate percentile int percentage = (sum*100)/percentile; if (percentile == percentage) { result.set(Long.parseLong((key.toString()))); context.write(new Text(\\"Percentile 99:\\"), result); } } }"},{"prompt":"Create a Swift program to display the letters of the English alphabet in ascending order.","completion":"let letters = \\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\\" for letter in letters { print(letter) }"},{"prompt":"Develop an algorithm in Python to determine whether two strings are anagrams.","completion":"def is_anagram(string1, string2): # Create a dictionaries for strings string1_dict = {} string2_dict = {} # Add the chars from each string to the dictionaries for char in string1: if char not in string1_dict: string1_dict[char] = 1 else: string1_dict[char] += 1 for char in string2: if char not in string2_dict: string2_dict[char] = 1 else: string2_dict[char] += 1 # Check if the dictionaries have the same entries for key in string1_dict: if key not in string2_dict: return False elif string1_dict[key] != string2_dict[key]: return False return True # Test the algorithm string1 = \\"listen\\" string2 = \\"silent\\" if(is_anagram(string1, string2)): print(\\"The strings are anagrams\\") else: print(\\"The strings are not anagrams\\")"},{"prompt":"Write a code to get the top 10 trending topics on Twitter with their volume using the Twitter API.","completion":"\\"\\"\\" Get the top 10 trending topics on Twitter with their volume using the Twitter API \\"\\"\\" import tweepy #Authenticate to Twitter auth = tweepy.OAuthHandler(\\"CONSUMER_KEY\\", \\"CONSUMER_SECRET\\") auth.set_access_token(\\"ACCESS_KEY\\", \\"ACCESS_SECRET\\") #Create API Object api = tweepy.API(auth) #Get top 10 trending topics trends = api.trends_place(23424975) # 23424975 is the WOEID code for the US #Print the top 10 trending topics for trend in trends[0][\\"trends\\"][:10]: print(trend[\\"name\\"] + \\" (Volume: \\" + str(trend[\\"tweet_volume\\"]) + \\")\\")"},{"prompt":"Create a program using PHP to display the length of the longest common substring in two given strings.","completion":"<?php // Function to find the length of the longest common substring function lcsLength(str1, str2) { // store the lengths of strings len1 = strlen(str1); len2 = strlen(str2); // Declare empty 2D array of size // (length of str1 x length of str2) dp = []; max = 0; // initialize all elements of dp[][] = 0 for (i = 0; i <= len1; i++) { for (j = 0; j <= len2; j++) { dp[i][j] = 0; } } //LCS procedure for (i = 0; i <= len1; i++) { for (j = 0; j <= len2; j++) { // if character of str1 and str2 // match and indices are not same if (i > 0 && j > 0 && str1[i - 1] == str2[j - 1]) { // reduce length by 1 dp[i][j] = dp[i - 1][j - 1] + 1; // update the maximum length max = max(max, dp[i][j]); } } } // return the maximum length return max; } // Driver Code str1 = \\"abcdxyz\\"; str2 = \\"xyzabcd\\"; // Function Call echo lcsLength(str1, str2); ?>"},{"prompt":"Print out the string formed by repeating each character in a given string n times. String: \\"abc\\", n: 3","completion":"def repeat_string(string, n): repeated = \\"\\" for letter in string: for _ in range(n): repeated += letter return repeated"},{"prompt":"Build a program that prints out the length of a given list.","completion":"def list_length(list): return len(list)"},{"prompt":"Code a function to clamp a given number between a minimum value and maximum value. Number: 8, Minimum: 3, Maximum: 10","completion":"def clamp_number(num, min_value, max_value): if num < min_value: return min_value elif num > max_value: return max_value else: return num"},{"prompt":"Develop a program that prints out the output of the following expression. [2, 4, 6, 8]","completion":"def expression_output(lst): s = 0 for i in lst: s += i**2 - 5*i + 6 return s"},{"prompt":"Construct a bash command to list all network connections in the system.","completion":"netstat -an"},{"prompt":"Suggest a solution to store years in ISO 8601 format in Python.","completion":"We can use the datetime.date class to store dates in ISO 8601 format. We just need to create an instance of datetime.date using the year, month and day. Then, we can convert it to the ISO 8601 format string using isoformat() method of datetime.date. For example: import datetime date = datetime.date(2016, 1, 1) iso_date = date.isoformat() print(iso_date) // Output: '2016-01-01'"},{"prompt":"Generate a short HTML div element.","completion":"<div></div>"},{"prompt":"Create a function in Python which takes a string as an argument and returns the first character of the string in upper case.","completion":"def first_upper_char(input_string): if len(input_string) == 0: return '' else: return input_string[0].upper()"},{"prompt":"Write a script which receives two integers as parameters and returns their average as output.","completion":"def average(a, b): return (a+b)/2"},{"prompt":"Write a script which takes a list as an argument and shuffles it. my_list = [1,2,3,4,5]","completion":"import random def shuffle_list(my_list): random.shuffle(my_list) return my_list"},{"prompt":"Suggest a solution for validating a password which should contain at least 1 uppercase character, 1 lowercase character and 1 digit.","completion":"We can use a regular expression to validate a password. A regular expression to validate a password with at least 1 uppercase character, 1 lowercase character and 1 digit should be: ^(?=.*[a-z])(?=.*[A-Z])(?=.*d).+ If the password matches the regular expression, the password is valid. Otherwise, the password is invalid."},{"prompt":"Create a script in Python which takes a number as an argument and prints its corresponding nth Fibonacci number.","completion":"def fibonacci(n): if n == 1: return 0 elif n == 2: return 1 else: return fibonacci(n-1) + fibonacci(n-2)"},{"prompt":"Suggest a method in Python for sorting a list of strings on the basis of their length in ascending order.","completion":"We can use the built-in sorted() function to sort the list of strings on the basis of their length in ascending order. The syntax for sorting is as follows: sorted(list_of_strings, key=len) where 'list_of_strings' is the list of strings we want to sort and 'len' is the length function for getting the length of each string."},{"prompt":"Explain how to detect prime numbers in Python.","completion":"We can detect prime numbers in Python by using a for loop. The for loop will iterate over all numbers from 2 up to the given number. For each number we loop through, we check to see if the number is divisible by any other number greater than 1. If the number is divisible by any other number, then we know it is not a prime number. If the number is only divisible by 1 and itself, then we know it is a prime number."},{"prompt":"Train a machine learning model to classify cats and dogs.","completion":"\\"\\"\\" Train a machine learning model to classify cats and dogs \\"\\"\\" import numpy as np import pandas as pd import matplotlib.pyplot as plt from keras.preprocessing.image import ImageDataGenerator from keras.models import Sequential from keras.layers import Conv2D, MaxPooling2D from keras.layers import Activation, Dropout, Flatten, Dense from keras import backend as K # Setting up Image Data Generator train_data_dir = 'data/train' validation_data_dir = 'data/validation' img_width, img_height = 100, 100 train_datagen = ImageDataGenerator( rescale=1. / 255, shear_range=0.2, zoom_range=0.2, horizontal_flip=True) test_datagen = ImageDataGenerator(rescale=1. / 255) train_generator = train_datagen.flow_from_directory( train_data_dir, target_size=(img_width, img_height), batch_size=32, class_mode='binary') validation_generator = test_datagen.flow_from_directory( validation_data_dir, target_size=(img_width, img_height), batch_size=32, class_mode='binary') # Setting up the model model = Sequential() model.add(Conv2D(32, (3, 3), input_shape=(img_width, img_height, 3))) model.add(Activation('relu')) model.add(MaxPooling2D(pool_size=(2, 2))) model.add(Conv2D(32, (3, 3))) model.add(Activation('relu')) model.add(MaxPooling2D(pool_size=(2, 2))) model.add(Conv2D(64, (3, 3))) model.add(Activation('relu')) model.add(MaxPooling2D(pool_size=(2, 2))) model.add(Flatten()) model.add(Dense(64)) model.add(Activation('relu')) model.add(Dropout(0.5)) model.add(Dense(1)) model.add(Activation('sigmoid')) model.compile(loss='binary_crossentropy', optimizer='rmsprop', metrics=['accuracy']) # Training the model model.fit_generator( train_generator, steps_per_epoch=2000, epochs=50, validation_data=validation_generator, validation_steps=800)"},{"prompt":"Write code to detect the dominant language in a string. This is a test string with multiple languages, including French, Spanish, and English.","completion":"import langdetect def detect_language(s): \\"\\"\\" Detects the dominant language from a given string. Parameters ---------- s : str A string containing multiple languages Returns ------- str The dominant language found in the given string \\"\\"\\" return langdetect.detect(s) text = \\"This is a test string with multiple languages, including French, Spanish, and English.\\" lang = detect_language(text) print('The dominant language found in the text is:', lang)"},{"prompt":"Write a class in Python to represent a division with two integers and the following operations: addition, subtraction, multiplication and division.","completion":"class Division(): def __init__(self, x, y): self.x = x self.y = y def add(self): return self.x + self.y def subtract(self): return self.x - self.y def multiply(self): return self.x * self.y def divide(self): return self.x / self.y div = Division(10, 5) print(\\"Addition of the two numbers:\\", div.add()) print(\\"Subtraction of the two numbers:\\", div.subtract()) print(\\"Multiplication of the two numbers:\\", div.multiply()) print(\\"Division of the two numbers:\\", div.divide())"},{"prompt":"duce a vector of size 10 with all elements initialized to 0.","completion":"vector<int> v(10, 0);"},{"prompt":"Compare 2 databases and update non matching information from database A to database B using SQL. Table A: | name | age | |------|-----| | John | 20 | | Joe | 25 | Table B: | name | age | |------|-----| | John | 25 |","completion":"UPDATE TableB SET TableB.age = TableA.age FROM TableA WHERE TableB.name = TableA.name;"},{"prompt":"Create a linked list from the given array of numbers. [2, 4, 5, 6, 7]","completion":"Head -> 2 -> 4 -> 5 -> 6 -> 7 -> None"},{"prompt":"mplement a Fibonacci series generator using Python.","completion":"def generate_fibonacci(n): a, b = 0, 1 fibonacci_series = [a] for i in range(n-1): a, b = b, a+b fibonacci_series.append(b) return fibonacci_series"},{"prompt":"Construct a for loop that prints out all prime numbers between 500 and 1000","completion":"for i in range(500, 1000): flag = 1 for j in range(2, i): if i % j == 0: flag = 0 break if flag == 1: print(i)"},{"prompt":"Construct an if-else statement that checks if the given day is a holiday day = \\"Sunday","completion":"if (day == \\"Sunday\\"){ console.log(\\"Today is a holiday.\\") } else { console.log(\\"Today is not a holiday.\\") }"},{"prompt":"Compute the maximum value in a random array [4,6,9,2,11,7]","completion":"maxValue = 11"},{"prompt":"Output the 7th element in the given array [5, 10, 20, 12, 15, 7]","completion":"element = 15"},{"prompt":"Create a program that finds the sum of all numbers divisible by 4 between 150 and 300","completion":"sum = 3750"},{"prompt":"Write a Jupyter Notebook cell to print a greeting with the text \\"Hello, World!\\".","completion":"print('Hello, World!')"},{"prompt":"Create a class in Java called Student with two fields called id and name.","completion":"public class Student { int id; String name; public Student(int id, String name) { this.id = id; this.name = name; } public int getId() { return this.id; } public void setId(int id) { this.id = id; } public String getName() { return this.name; } public void setName(String name) { this.name = name; } }"},{"prompt":"dentify the Python command to search a string for a specific keyword.","completion":"string.find('keyword') or string.index('keyword')"},{"prompt":"What is the Keras library used for?","completion":"Keras is an open-source library used for creating and training models in deep learning. It is designed to be user-friendly and allows E-commerce developers to quickly build powerful neural networks with minimal lines of code. It is built on top of popular libraries such as Theano, TensorFlow, and CNTK."},{"prompt":"Construct an SQL statement to select data from two tables.","completion":"SELECT table_1.*, table_2.* FROM table_1, table_2 WHERE table_1.column_name = table_2.column_name;"},{"prompt":"Write an HTML document with a table containing three columns: name, email and phone.","completion":"<html> <head> <title>Contacts Table</title></title> </head> <body> <table> <thead> <th>Name</th> <th>Email</th> <th>Phone</th> </thead> <tbody> <tr> <td>John</td> <td>john@example.com</td> <td>123-456-7890</td> </tr> </tbody> </table> </body> </html>"},{"prompt":"dentify which line of code contains a syntax error? def getFibonacciNumber(n): a, b = 0, 1 for i in range 0, n a, b = b, a + b return","completion":"The line \\"for i in range 0, n\\" contains a syntax error. The syntax for the for loop should be \\"for i in range(0, n)\\"."},{"prompt":"Calculate the sum of all the multiples of 3 and 5 between 0 and n n = 10","completion":"def sum_multiples(n): result = 0 for i in range(1, n): if i % 3 == 0 or i % 5 == 0: result += i return result if __name__ == '__main__': print(sum_multiples(n))"},{"prompt":"Write an expression in JavaScript to calculate the perimeter of a triangle with sides 3, 4 and 5.","completion":"var a = 3; var b = 4; var c = 5; var perimeter = a + b + c; // 12"},{"prompt":"Create a regex pattern to match all URLs in a text.","completion":"# Create a regex pattern to match all URLs in a text pattern = r\\"((http|ftp|https)://)?[w-_]+(.[w-_]+)+([w-.,@?^=%&amp;:/~+#]*[w-@?^=%&amp;/~+#])?\\""},{"prompt":"Write an expression in PHP to get the length of an array called 'data'.","completion":"// Write an expression in PHP to get the length of an array called 'data' length = count(data);"},{"prompt":"Create a JavaScript function to retrieve a value from an object with a given key.","completion":"// Create a JavaScript function to retrieve a value from an object with a given key function getValue(obj, key) { return obj[key]; }"},{"prompt":"Create a query in MongoDB to update the age of a document with the name 'John'.","completion":"# Create a query in MongoDB to update the age of a document with the name 'John' db.users.updateOne( { name: 'John' }, { set: { age: 18 } } )"},{"prompt":"Write a SQL statement to delete all records from a table called 'students' where the grade is below 3.","completion":"DELETE FROM students WHERE grade < 3;"},{"prompt":"Create a HTML form with two input fields called 'name' and 'age'.","completion":"<form> <label for=\\"name\\">Name:</label> <input type=\\"text\\" name=\\"name\\" id=\\"name\\"> <label for=\\"age\\">Age:</label> <input type=\\"number\\" name=\\"age\\" id=\\"age\\"> <input type=\\"submit\\" value=\\"Submit\\"> </form>"},{"prompt":"What is the definition of a compolier?","completion":"A compiler is a computer program that translates written source code from one programming language into another language (often called the target language) that can be understood and executed by another computer. The process of compiling typically involves analysis, transformation, and optimization of code to generate object code or executable code. The generated object code or executable code is then linked into one or more executable programs or libraries."},{"prompt":"Generate pseudo code for a function that swaps two numbers x and y.","completion":"// Function to swap two numbers def swap(x, y): // Store the value of x into a temporary variable temp = x // Store y in x x = y // Store temp in y y = temp return x,y"},{"prompt":"Write a Python program to create a dictionary containing students and their scores.","completion":"# Declare an empty dictionary scores = {} # Enter some students and their scores scores['student1'] = 90 scores['student2'] = 85 scores['student3'] = 100 # Print the scores print(scores) # Output - {'student1': 90, 'student2': 85, 'student3': 100}"},{"prompt":"What type of loop can be used to iterate through the items of a list in Python?","completion":"The most common type of loop for iterating through the items of a list in Python is the for loop. This loop iterates through each item in the list one by one, allowing the programmer to perform operations on each item in the list. For example: my_list = [1, 2, 3] for item in my_list: print(item) # Output # 1 # 2 # 3"},{"prompt":"Create a short Java program designed to accept two numbers and find their greatest common divisor (GCD).","completion":"public class GCD { public static int getGCD(int x, int y) { // Base case if (x == 0) return y; if (y == 0) return x; // If x is greater if (x > y) return getGCD(x%y, y); return getGCD(x, y%x); } public static void main(String[] args) { int x = 40; int y = 20; System.out.println(\\"GCD of \\" + x +\\" and \\" + y + \\" is \\" + getGCD(x, y)); } }"},{"prompt":"What is a state machine in software engineering?","completion":"A state machine in software engineering is a model of computation used to design programs and algorithms that have an input, a process, and an output. A state machine is built from a set of states, any of which can be the current state at any given time, and it transitions from one state to another in reaction to events or inputs. The process of the state machine is the set of predefined operations associated with each state and the set of transitions that dictate how the state machine moves from one state to another."},{"prompt":"Write a Go program that prints the numbers from 1 to 100, replacing any number divisible by 4 with \\"Four\\".","completion":"package main import \\"fmt\\" func main() { // Iterate from 1 to 100 for i := 1; i <= 100; i++ { // If the number is divisible by 4, print \\"Four\\" if i%4 == 0 { fmt.Println(\\"Four\\") // Otherwise print the number } else { fmt.Println(i) } } }"},{"prompt":"Rank the following programming languages according to the year of their initial release. JavaScript, Java, Python, C++","completion":"C++ (1985), Java (1995), JavaScript (1995), Python (1991)"},{"prompt":"Construct a class in Java that creates methods for finding the area and circumference of a circle.","completion":"public class Circle { double radius; public Circle(double radius) { this.radius = radius; } public double getArea(){ return Math.PI * Math.pow(radius, 2); } public double getCircumference(){ return 2 * Math.PI * radius; } }"},{"prompt":"Write a JavaScript code snippet to track the mouse movement.","completion":"document.addEventListener(\\"mousemove\\", function(e) { console.log(\\"mouse is at x:\\" + e.clientX + \\" y:\\" + e.clientY); });"},{"prompt":"Design a Bash script to replace all the characters in a string. String to be changed: My name is Jane Characters to be replaced: a->A, e->E","completion":"#!/bin/bash string=\\"My name is Jane\\" string=\\"{string//a/A}\\" string=\\"{string//e/E}\\" echo string"},{"prompt":"Read the following block of code. What is the main goal of the code? def first_duplicate(arr): seen = set() for i in arr: if i in seen: return i seen.add(i) return -1","completion":"The main goal of the code is to find the first duplicate element in an array."},{"prompt":"You are given two matrices, M1 and M2. Write a python code to multiply them. M1 : [[2, 3], [5, 6]] M2 : [[1, 2], [3, 4]]","completion":"def matrix_multiply(M1, M2): M3 = [[0, 0], [0, 0]] for i in range(len(M1)): for j in range(len(M2[0])): for k in range(len(M2)): M3[i][j] += M1[i][k] * M2[k][j] return M3"},{"prompt":"You are given two arrays, A and B. Write a program to determine if B is a subset of A. A = [1, 2, 3, 4, 5] B = [2, 3, 5]","completion":"def is_subset(A, B): for i in B: if i not in A: return False return True"},{"prompt":"Write a Java method that checks if a nested integer contains an even number. [1, 2, [3, 4, [7, 8]]]","completion":"public static boolean containsEven(List<Object> list) { for (Object obj : list) { if(obj instanceof Integer){ if((Integer)obj % 2 == 0){ return true; } } else if(obj instanceof List<?>){ if (containsEven((List<?>)obj)){ return true; } } } return false; }"},{"prompt":"Design a class in Java to represent a stack data structure, and implement operations such as push, pop and size.","completion":"public class Stack { private int[] arr; private int top; private int capacity; public Stack(int capacity) { this.arr = new int[capacity]; this.top = -1; this.capacity = capacity; } public boolean isFull() { return top == capacity - 1; } public boolean isEmpty() { return top == -1; } public int size() { return top + 1; } public void push(int x) { if(isFull()) { return; } top++; arr[top] = x; } public int pop() { if(isEmpty()) { return -1; } int popped = arr[top]; top--; return popped; } }"},{"prompt":"Suggest a MySQL query that retrieves all students from the \\"Idaho\\" state.","completion":"SELECT * FROM students WHERE state = 'Idaho';"},{"prompt":"Rewrite the following php code in a more efficient manner string = \\"Hello World!\\"; for (i = 0; i < strlen(string); i++){ echo string[i] . \\"n\\"; }","completion":"string = \\"Hello World!\\"; for (char of str_split(string)) { echo char . \\"n\\"; }"},{"prompt":"Describe the main difference between a switch statement and an if-else statement in C++","completion":"The main difference between a switch statement and an if-else statement in C++ is that the switch statement is used for multiple-branch control of the program, while the if-else statement is used for dual-branch control. The switch statement tests the value of a variable from a given set of matches and branch the program to different parts of the code according to the value of the variable, while the if-else statement tests the condition of the variable and branch the program according to whether the condition is true or false. Another main difference is that a switch statement only allows integer values and characters char, while an if-else statement can take any type of value. Finally, the switch statement allows for the use of break statements to avoid the execution of multiple branches of code."},{"prompt":"Generate a code to form a Pascal Triangle with the given input. n = 5","completion":"def pascal(n): # An auxiliary array to store # generated pascal triangle values arr =[[0 for x in range(n)] for x in range(n)] # Iterate through every line and # print integer(s) in it for line in range(0, n): # Every line has number of # integers equal to line number for i in range(0, line + 1): # First and last values # in every row are 1 if (i == 0 or i == line): arr[line][i] = 1 print(arr[line][i], end=\\" \\") else: arr[line][i] = (arr[line - 1][i - 1] + arr[line - 1][i]) print(arr[line][i], end=\\" \\") print(\\"r\\")"},{"prompt":"Write code to convert JSON to XML with provided attribute. { \\"employees\\":{ \\"employee\\":[ { \\"name\\":\\"John Smith\\", \\"id\\":123 }, { \\"name\\":\\"Jane Doe\\", \\"id\\":456 } ] } } Attribute: \\"perso","completion":"import json import xmltodict # Load JSON data data_str = ''' { \\"employees\\":{ \\"employee\\":[ { \\"name\\":\\"John Smith\\", \\"id\\":123 }, { \\"name\\":\\"Jane Doe\\", \\"id\\":456 } ] } } ''' data_dict = json.loads(data_str) # Covert JSON to XML xml_data = xmltodict.unparse(data_dict, attr_prefix='', cdata=False) xml_data = xml_data.replace('<employee>', '<employee person=\\"\\">') # Print XML print(xml_data)"},{"prompt":"Parse the following HTML content and retrieve the values from the key elements. <li><a href=\\"/home\\">Home</a></li> <li><a href=\\"/about\\">About</a></li>","completion":"from bs4 import BeautifulSoup html_data = ''' <li><a href=\\"/home\\">Home</a></li> <li><a href=\\"/about\\">About</a></li> ''' soup = BeautifulSoup(html_data, 'lxml') # Get content from <a> tags links = soup.find_all('a') # Retrieve the values from each link for link in links: print(link.get('href'))"},{"prompt":"Write a statement to select the rows from the following table that have age>25. Table: People Name | Age | Location John | 21 | New York Jane | 33 | Londo","completion":"SELECT * FROM People WHERE Age > 25;"},{"prompt":"Change the following linked list into an array. Linked list: 1->3->5->7->9","completion":"# Create a linked list class Node: def __init__(self, data): self.data = data self.next = None # Function to convert linked list to array def list_to_array(head): arr = [] if head is None: return arr cur = head while cur is not None: arr.append(cur.data) cur = cur.next return arr arr = list_to_array(head) print(arr)"},{"prompt":"Write a Python program that parses a JSON object and returns only the values of a specific key. JSON object: { \\"name\\": \\"John\\", \\"age\\": 42, \\"location\\": \\"New York\\" } Key: \\"name","completion":"import json # Load JSON data data_str = ''' { \\"name\\": \\"John\\", \\"age\\": 42, \\"location\\": \\"New York\\" } ''' data_dict = json.loads(data_str) # Get the value of the given key name = data_dict.get('name') # John"},{"prompt":"Write a code that swaps the two numbers using a temporary variable. a = 10, b = 20","completion":"# Swapping two numbers using a temporary variable a, b = 10, 20 temp = a a = b b = temp print('a:', a) print('b:', b)"},{"prompt":"Change the following list of strings into a single combined string. my_list = [\\"Hello\\", \\"world\\", \\"this\\", \\"is\\", \\"a\\", \\"test\\"]","completion":"# Create the string from the list my_string = ' '.join(map(str, my_list)) # Print the string print(my_string) # Hello world this is a test"},{"prompt":"Using the input as a guide, write code that prints out a copy of the 2d matrix with its elements transposed. matrix = [[1,2,3],[4,5,6],[7,8,9]]","completion":"def transpose_matrix(matrix): \\"\\"\\"Function to transpose 2d list matrix\\"\\"\\" row = len(matrix) col = len(matrix[0]) transpose = [[0 for j in range(row)] for i in range(col)] for i in range(row): for j in range(col): transpose[j][i] = matrix[i][j] for i in range(col): print(transpose[i]) if __name__ == '__main__': matrix = [[1,2,3],[4,5,6],[7,8,9]] transpose_matrix(matrix)"},{"prompt":"Write a code to create a list that preserves the order of the original input and contains only the odd numbers from it? [1,2,3,4,5,6,7,8,9]","completion":"def odd_numbers_list(input_data): \\"\\"\\"Function to create a list that preserves the order of the original input and contains only the odd numbers from it\\"\\"\\" output_list = [] for el in input_data: if el % 2 != 0: output_list.append(el) return output_list if __name__ == '__main__': input_data = [1,2,3,4,5,6,7,8,9] output_list = odd_numbers_list(input_data) print(output_list)"},{"prompt":"Write a function that takes an integer parameter and find the maximum of the three numbers with the help of ternary operator.","completion":"def find_max_of_three(a, b, c): \\"\\"\\"Function that takes an integer parameter and find the maximum of the three numbers with the help of ternary operator\\"\\"\\" max_value = a if a > b and a > c else (b if b > a and b > c else c) return max_value if __name__ == '__main__': a = 1 b = 5 c = 3 max_value = find_max_of_three(a, b, c) print(max_value)"},{"prompt":"Write a python code to find median of two sorted arrays. A = [1,4,6,7]B = [3,5,8,9]","completion":"def find_median(A, B): \\"\\"\\"Function to find median of two sorted arrays\\"\\"\\" m = len(A) n = len(B) if m > n: A,B,m,n = B,A,n,m imin, imax, half_len = 0, m , (m+n+1) // 2 while imin <= imax: i = (imin+imax) // 2 j = half_len -i if i < m and B[j-1] > A[i]: # i is too small, must increase it imin = i + 1 elif i > 0 and A[i-1] > B[j]: # i is too big, must decrease it imax = i - 1 else: # i is perfect if i == 0: max_of_left = B[j-1] elif j == 0: max_of_left = A[i-1] else: max_of_left = max(A[i-1], B[j-1]) if (m + n) % 2 == 1: return max_of_left if i == m: min_of_right = B[j] elif j == n: min_of_right = A[i] else: min_of_right = min(A[i], B[j]) return (max_of_left + min_of_right) / 2.0 if __name__ == '__main__': A = [1,4,6,7] B = [3,5,8,9] median = find_median(A, B) print(median)"},{"prompt":"Fix the code so that the loop terminates after 10 iterations. # Start of code i = 1 while i<100: print(i) i += 1 # End of code","completion":"# Start of code i = 1 while i<=10: print(i) i += 1 # End of code"},{"prompt":"dentify all the statements that are erroneous or have logical errors. a = 2 b = 1 if a > b print(\\"a is greater than b\\") elif a == b print(\\"a is equal to b\\") else print(\\"b is greater than a\\")","completion":"The statements that are erroneous or have logical errors are: 1) There is no colon (:) after the 'if' and 'elif' statements 2) There is no colon (:) after the 'else' statement. 3) The parentheses after 'print' are unnecessary."},{"prompt":"Write a code to generate a dictionary that contains the frequencies of all English alphabets in a given sentence. Sentence: The brain is a powerful tool","completion":"def get_alphabet_frequencies(sentence): \\"\\"\\"Function to generate a dictionary that contains the frequencies of all English alphabets in a given sentence\\"\\"\\" alphabet_freq = dict() for el in sentence: if el.isalpha(): el = el.lower() if el in alphabet_freq: alphabet_freq[el] += 1 else: alphabet_freq[el] = 1 return alphabet_freq if __name__ == '__main__': sentence = \\"The brain is a powerful tool\\" alphabet_freq = get_alphabet_frequencies(sentence) print(alphabet_freq)"},{"prompt":"Generate a list comprehension to replicate the given code example. my_list = [1, 2, 3, 4, 5] my_output = [] for item in my_list: my_output.append(item*item)","completion":"my_output = [item*item for item in my_list]"},{"prompt":"Construct a for loop to print a list of order numbers in ascending order. order_num = [1530, 3489, 7421, 4792]","completion":"for order_num in sorted(order_num): print(order_num) # Output: # 1530 # 3489 # 4792 # 7421"},{"prompt":"Create a dictionary of items with the corresponding price in Python. items = ['book', 'pen', 'chair'] prices = [10, 2, 5]","completion":"prices_dict = dict(zip(items, prices)) # prices_dict = {'book': 10, 'pen': 2, 'chair': 5}"},{"prompt":"Generate a JavaScript code to console log the elements in a given array for each iteration. let my_array = [1, 2, 3]","completion":"for (let i = 0; i < my_array.length; i++) { console.log(my_array[i]); } # Output: # 1 # 2 # 3"},{"prompt":"Construct a SQL query to select the orders with order_num >= 1000.","completion":"SELECT * FROM orders WHERE order_num >= 1000;"},{"prompt":"Generate a Python code to add two numbers using a lambda expression. num1 = 10 num2 = 25","completion":"add = lambda num1, num2: num1 + num2 print(add(num1, num2)) # Output: 35"},{"prompt":"Construct a for loop in Python to print the array in descending order. my_array = [4, 3, 5, 7, 1]","completion":"for i in sorted(my_array, reverse=True): print(i) # Output: # 7 # 5 # 4 # 3 # 1"},{"prompt":"Create a JavaScript function to format a given number with commas. num = 1000","completion":"function commaFormatting(num) { return num.toString().replace(/B(?=(d{3})+(?!d))/g, \\",\\"); } console.log(commaFormatting(num)) // Output: 1,000"},{"prompt":"Write a Regex expression to search for all words ending with \\"ed","completion":"regex = r\\"w*edb\\""},{"prompt":"Given a string s and an integer k, write a code to find the kth most frequent element in the string String s: \\"hello world hello\\" Integer k: 2","completion":"# Counting frequencies counts = dict() words = s.split(' ') for word in words: if word in counts: counts[word] += 1 else: counts[word] = 1 # Getting the kth most frequent element kth_most_frequent = sorted(counts, key = counts.get, reverse = True)[k-1] print(kth_most_frequent) # Output: hello"},{"prompt":"Create a program to convert a given time in GMT form to local time.","completion":"from datetime import datetime, timezone def local_time(gmt_time): utc_time = datetime.fromisoformat(gmt_time.replace(\\"Z\\", \\"+00:00\\")) local_time = utc_time.astimezone() return local_time.isoformat()"},{"prompt":"Write a C++ program to print a decimal number in reverse","completion":"#include<iostream> using namespace std; int main() { int num = 54321; int reversed = 0; while(num != 0) { reversed = reversed * 10 + num % 10; num /= 10; } cout << \\"Reversed Number: \\" << reversed << endl; return 0; }"},{"prompt":"Unwrap the function parameter with default argument. def func(arg1, arg2=\\"default\\"): p","completion":"def func(arg1, arg2): if arg2 is None: arg2 = \\"default\\" pass"},{"prompt":"Swap the values of the two given numbers using a temporary variable. a = 1 b = 2","completion":"temp = a a = b b = temp"},{"prompt":"Create a class named “Vehicle” that has 3 instance variables.","completion":"class Vehicle: def __init__(self, name, color, max_speed): self.name = name self.color = color self.max_speed = max_speed"},{"prompt":"Create a list comprehension that prints each pair in a given list of tuples. my_list = [(\\"apple\\", \\"red\\"), (\\"banana\\", \\"yellow\\")]","completion":"[print(v1, v2) for (v1, v2) in my_list]"},{"prompt":"Modify the given list to include only unique items. my_list = [1, 2, 2, 3, 3, 4]","completion":"my_list = list(set(my_list))"},{"prompt":"Create a dictionary with the key-value pairs of the given tuple. my_tuple = ((\\"a\\", 1), (\\"b\\", 2), (\\"c\\", 3))","completion":"my_dict = dict(my_tuple)"},{"prompt":"Write a Python algorithm to find the most common value in an array. arr = [1, 2, 3, 3, 3, 3, 4, 4, 5]","completion":"def most_common(arr): freq = {} # Count the frequency of each element for el in arr: if el not in freq: freq[el] = 1 else: freq[el] += 1 # Find the maximum frequency max_freq = -1 for el, freq in freq.items(): max_freq = max(max_freq, freq) # Find the element with maximum frequency most_common_el = None for el, freq in freq.items(): if freq == max_freq: most_common_el = el return most_common_el"},{"prompt":"Define a command line application that prints “Hello, world.”","completion":"import argparse parser = argparse.ArgumentParser() parser.add_argument(\\"--print_hello\\", help=\\"print hello, world\\", action=\\"store_true\\") if __name__ == \\"__main__\\": args = parser.parse_args() if args.print_hello: print(\\"Hello, world.\\")"},{"prompt":"Rewrite the following code snippet so that it is compatible with Python 3 sum = 0 for num in range(10): sum = sum + num print sum","completion":"sum = 0 for num in range(10): sum += num print(sum)"},{"prompt":"Output the last two words in the following string I only have one wish.","completion":"wish."},{"prompt":"Update the following function so that it returns the greatest among three numbers def find_max(a, b): if a > b: return a else: return b","completion":"def find_max(a, b, c): if a >= b and a >= c: return a elif b >= a and b >= c: return b else: return c"},{"prompt":"Write a user authentication code in Python","completion":"def authentication(username,password): if username == \\"username\\" and password == \\"password\\": print (\\"Login successful\\") else: print (\\"Incorrect username or password\\") username = input(\\"Enter your username: \\") password = input(\\"Enter your password: \\") authentication(username, password)"},{"prompt":"Output the sum of the following two arrays arr_1 = [2,3,4] arr_2 = [1,2,3]","completion":"arr_1 = [2,3,4] arr_2 = [1,2,3] sum = 0 for i in range(len(arr_1)): sum += arr_1[i] + arr_2[i] print(\\"The sum of the two arrays is\\",sum)"},{"prompt":"Suggest a technique to optimize memory usage","completion":"One way to optimize memory usage is to use strategic data structures like hash tables and trees that can store data in a more space-efficient manner. Additionally, one can use code optimization techniques such as code reuse and memory caching to reduce memory usage. One should also think carefully about data structure design choices, such as choosing between an array and linked list, to minimize memory usage."},{"prompt":"Combine a loop and a conditional statement to output the following [2, 3, 4, 5]","completion":"arr = [2, 3, 4, 5] for i in arr: if i % 2 == 0: print(i) # Output: 2 4"},{"prompt":"Fill in the blanks to calculate the standard deviation of an array using the formula.","completion":"𝜎 = √((∑(x - mean)^2)/n)"},{"prompt":"Develop a function to evaluate the following expression. 3 + 2 * 4","completion":"def evaluate(expr): return eval(expr) print(evaluate('3 + 2 * 4')) # Output 11"},{"prompt":"dentify an ideal algorithm to find the longest palindrome in a given string.","completion":"The Manacher’s Algorithm is an ideal algorithm to find the longest palindrome in a given string. This algorithm utilizes dynamic programming to find the longest palindrome in linear time complexity by iterating through the string and checking whether a substring is a palindrome or not."},{"prompt":"Suggest a vector representation for the following phrases. happy, angry","completion":"happy = [1, 0, 0, 0] angry = [0, 1, 0, 0]"},{"prompt":"mplement source-to-source transformation of the following code. x = a + b y = a + c z = b + d","completion":"x = a + b y = x + (c - b) z = x + (d - b)"},{"prompt":"Describe three ways to optimize a given database.","completion":"Three ways to optimize a database are database normalization, indexing, and partitioning. Database normalization involves restructuring a database schema into multiple tables and establishing referential integrity. Indexing is a technique used to speed up the retrieval of data from a table. Partitioning, also known as sharding, is a database optimization technique that divides a database into multiple, smaller databases."},{"prompt":"Create classes in Java to represent a school and its students.","completion":"public class School { private String name; private List<Student> students; //constructor, getters, setters, and other methods public void addStudent(Student student) { students.add(student); } } public class Student { private String name; private int age; //constructor, getters, setters, and other methods public void setAge(int age) { this.age = age; } }"},{"prompt":"Write a function, which given an array and a number, returns the array with the number added. arr = [1, 2, 3, 4] num = 10","completion":"def add_num(arr, num): return [x + num for x in arr]"},{"prompt":"Create a new list where the elements are the square of the elements in the given list. list = [1, 2, 3, 4]","completion":"new_list = [x**2 for x in list]"},{"prompt":"Create a class with two methods, one to return the name and the other to return the age.","completion":"class Person: def __init__(self, name, age): self.name = name self.age = age def get_name(self): return self.name def get_age(self): return self.age"},{"prompt":"Using the code, update the variable to count from 4 to 14. x = 4","completion":"for x in range(4, 15): print(x)"},{"prompt":"Print the \\"hello world\\" in uppercase.","completion":"print(\\"HELLO WORLD\\".upper())"},{"prompt":"Convert the given code to use a dictionary instead of lists. list1 = ['a', 'b', 'c'] list2 = ['d', 'e', 'f']","completion":"dict1 = {'a': 'd', 'b': 'e', 'c': 'f'}"},{"prompt":"Write a function that takes a single parameter and returns the absolute value of the parameter.","completion":"def absolute_value(x): if x < 0: return -x else: return x"},{"prompt":"Construct two strings from a given string and print these strings separately. str = \\"Hello World!","completion":"str1 = str[:5] str2 = str[6:] print(str1) print(str2)"},{"prompt":"Code a function in Java to search an array for a specific element. array x = [1, 4, 6, 8, 5] element = 5","completion":"public static int linearSearch(int[] x, int element) { for (int i = 0; i < x.length; i++) { if (x[i] == element) return i; } return -1; }"},{"prompt":"Using SQL, write a query to find the maximum price of a product in the database.","completion":"SELECT MAX(price) FROM products;"},{"prompt":"Create a program in HTML to display the following two paragraphs side by side. P1: Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. P2: Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.","completion":"<html> <head> <title>Side by Side Paragraphs</title> <style> .column { float: left; width: 50%; } /* Clear floats after the columns */ .row:after { content: \\"\\"; display: table; clear: both; } </style> </head> <body> <div class=\\"row\\"> <div class=\\"column\\"> <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</p> </div> <div class=\\"column\\"> <p>Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.</p> </div> </div> </body> </html>"},{"prompt":"Code a solution in Python to replace all the occurences of a specific word in a string. sentence = \\"I like apples\\" word = \\"apples\\" replacement = \\"b","completion":"def replace_word(sentence, word, replacement): words = sentence.split(\\" \\") new_sentence = \\"\\" for w in words: if w == word: w = replacement new_sentence += w + \\" \\" return new_sentence sentence = \\"I like apples\\" word = \\"apples\\" replacement = \\"bananas\\" print(replace_word(sentence, word, replacement))"},{"prompt":"Create an algorithm in Java to calculate the average of five numbers.","completion":"public static double avgOfFiveNums(int a, int b, int c, int d, int e) { double avg = (a + b + c + d + e) / 5.0; return avg; }"},{"prompt":"Create a program in C# to check if an input string contains a specific character or not. input_string = \\"Hello World\\" character = 'l'","completion":"public static bool CheckChar(String input_string, char character) { bool found = false; foreach (char c in input_string) { if (c == character) { found = true; break; } } return found; } // Driver Code String input_string = \\"Hello World\\"; char character = 'l'; if (CheckChar(input_string, character)) Console.WriteLine(\\"Yes\\"); else Console.WriteLine(\\"No\\");"},{"prompt":"Create a softmax activation function in Python.","completion":"def softmax(x): \\"\\"\\"Compute softmax values for each sets of scores in x.\\"\\"\\" e_x = np.exp(x - np.max(x)) return e_x / e_x.sum(axis=0)"},{"prompt":"Create a for loop in Python for the range between 0 and 10.","completion":"for i in range(0,11): print(i)"},{"prompt":"Create a nested For loop in Python with the outer loop counting from 0 to 3 and the inner loop counting from 5 to 10.","completion":"for i in range(0,4): for j in range(5,11): print(\\"outer loop at: \\"+str(i)+\\" inner loop at: \\"+str(j))"},{"prompt":"Write a SQL query to create a table with three columns called A, B, and C, where the data type for each column is defined as string.","completion":"CREATE TABLE table_name ( A VARCHAR(255) NOT NULL, B VARCHAR(255) NOT NULL, C VARCHAR(255) NOT NULL );"},{"prompt":"Write a MongoDB query to get the first 3 documents in a collection of documents.","completion":"db.collection.find({}).limit(3)"},{"prompt":"Create a hash table in Python using a dictionary.","completion":"h = {} # Add key:value pairs h['key1'] = 'value1' h['key2'] = 'value2' h['key3'] = 'value3'"},{"prompt":"Create a user interface to display a chart showing the number of people of a certain gender and age group. Sample JSON data to be used: [ { \\"name\\": \\"John\\", \\"age\\": 25, \\"gender\\": \\"male\\" }, { \\"name\\": \\"Jane\\", \\"age\\": 22, \\"gender\\": \\"female\\" }, { \\"name\\": \\"Bob\\", \\"age\\": 28, \\"gender\\": \\"male\\" }, { \\"name\\": \\"Jill\\", \\"age\\": 24, \\"gender\\": \\"female\\" } ]","completion":"import json import plotly.graph_objs as go def create_chart(): data = json.load('data.json') males = 0 females = 0 male_ages = [0] * 100 females_ages = [0] * 100 # count males/females and age group for person in data: if person['gender'] == 'male': males += 1 age = int(person['age']) male_ages[age] += 1 else: females += 1 age = int(person['age']) females_ages[age] += 1 # create data data = [ go.Bar( name='Males', x=list(range(100)), y=male_ages ), go.Bar( name='Females', x=list(range(100)), y=females_ages ) ] # Create Layout layout = go.Layout( title='Number of People by Gender and Age Group', yaxis=dict(title='Number of People'), xaxis=dict(title='Age') ) # Create Figure figure = go.Figure(data=data, layout=layout) # Plot and save the chart figure.show() figure.write_image('gender_age.png') create_chart()"},{"prompt":"Edit the following JavaScript code to remove any warnings given by the linter. let favoriteNumber = [7,9,42]; const printNumber = (number) => console.log(number); for (let idx = 0; idx < favoriteNumber.length; idx +=1) { printNumber(favoriteNumber[idx]) }","completion":"let favoriteNumber = [7, 9, 42]; const printNumber = (number) => console.log(number); for (let idx = 0; idx < favoriteNumber.length; idx += 1) { printNumber(favoriteNumber[idx]); }"},{"prompt":"Use the given JSON data to create a function that returns the number of males in the dataset. Sample JSON data: [ { \\"name\\": \\"John\\", \\"age\\": 25, \\"gender\\": \\"male\\" }, { \\"name\\": \\"Jane\\", \\"age\\": 22, \\"gender\\": \\"female\\" }, { \\"name\\": \\"Bob\\", \\"age\\": 28, \\"gender\\": \\"male\\" }, { \\"name\\": \\"Jill\\", \\"age\\": 24, \\"gender\\": \\"female\\" } ]","completion":"def get_num_males(data): # create a counter variable num_males = 0 # loop through the data for person in data: if person['gender'] == 'male': num_males += 1 # return the number of males return num_males"},{"prompt":"Create a JavaScript class with 3 methods and a constructor","completion":"class Person { // constructor constructor(name, age) { this.name = name; this.age = age; } // method to get the name getName() { return this.name; } // method to get the age getAge() { return this.age; } // method to set the age setAge(age) { this.age = age; } }"},{"prompt":"Create a SQL query to display the details of all employees who have served more than 4 years in their current role. Sample table: +------------+----------+------------+--------------+--------------------------+ | emp_id | name | department | doj | current_role | +------------+----------+------------+--------------+--------------------------+ | 101 | John | IT | 2018-04-10 | Senior Software Engineer | | 102 | Tom | HR | 2017-02-28 | HR Manager | | 103 | Jane | Accounting | 2015-10-07 | Junior Accountant | +------------+----------+------------+--------------+--------------------------+","completion":"SELECT emp_id, name, department, doj, current_role FROM employees WHERE DATE_SUB(CURDATE(), INTERVAL 4 YEAR) <= doj;"},{"prompt":"Create a function to add two integers in assembly language.","completion":"add: ; Function to add two integers ; Set stack frame push ebp mov ebp, esp ; Store the arguments on the stack mov eax, [ebp + 8] ; First argument mov ebx, [ebp + 12] ; Second argument ; Add them add eax, ebx ; Retrieve the stack frame pop ebp ; Return ret"},{"prompt":"Suggest an edit to fix the following code snippet. for num in range(10): if num % 2 == 0 print(num);","completion":"for num in range(10): if num % 2 == 0: print(num);"},{"prompt":"Create a new HTML page and add a heading to it.","completion":"<!DOCTYPE html> <html> <head> <title>My HTML Page</title> </head> <body> <h1>My Page Heading</h1> </body> </html>"},{"prompt":"Write a SQL query to find the employees with an annual income greater than 10000.","completion":"SELECT * FROM Employees WHERE annual_income > 10000"},{"prompt":"Create a function in Python that takes two strings and checks if the characters in the second string exist in the first string. s1 = \\"hello world\\" s2 = \\"llo","completion":"def char_exists_in_string(s1, s2): for char in s2: if char not in s1: return False return True if __name__ == '__main__': s1 = \\"hello world\\" s2 = \\"llo\\" print(char_exists_in_string(s1, s2))"},{"prompt":"Create a JSON object to store student information like name, age, interests. { \\"firstname\\": \\"John\\", \\"lastname\\": \\"Smith\\", \\"age\\": 18, \\"interests\\": [\\"music\\", \\"sports\\", \\"reading\\"] }","completion":"{ \\"studentInfo\\": { \\"firstname\\": \\"John\\", \\"lastname\\": \\"Smith\\", \\"age\\": 18, \\"interests\\": [\\"music\\", \\"sports\\", \\"reading\\"] } }"},{"prompt":"Create an array in JavaScript of objects, each with a name key and a value of a random number.","completion":"let array = []; for (let i = 0; i < 10; i++) { let randomNumber = Math.floor(Math.random() * 100); let obj = { name: \`element {i + 1}\`, value: randomNumber }; array.push(obj); } console.log(array);"},{"prompt":"Compare two dates in JavaScript and return 1 if the first date is after the second date. date1 = new Date('August 19, 2025'); date2 = new Date('August 20, 2025');","completion":"function compareDates(date1, date2) { const timeDifference = date1.getTime() - date2.getTime(); if(timeDifference > 0) { // date1 is after date2 return 1; } else { // date2 is after date1 return 0; } } if __name__ == '__main__': date1 = new Date('August 19, 2025'); date2 = new Date('August 20, 2025'); print(compareDates(date1, date2))"},{"prompt":"Create an HTML page containing a form labeled \\"Contact Us\\" containing 3 input fields named: name, email, and message.","completion":"<html> <head> <title>Contact Us</title> </head> <body> <h1>Contact Us</h1> <form> Name: <input type=\\"text\\" name=\\"name\\"/><br /> Email: <input type=\\"text\\" name=\\"email\\"/><br /> Message: <input type=\\"text\\" name=\\"message\\"/><br /> <input type=\\"submit\\" value=\\"Submit\\" /> </form> </body> </html>"},{"prompt":"Write a JavaScript code to filter the values of an array which are greater than a given number. array = [1, 2, 4, 5, 6, 8]; value = 5;","completion":"function filterArrayValues(array, value) { return array.filter(x => x > value); } if __name__ == '__main__': array = [1, 2, 4, 5, 6, 8]; value = 5; print(filterArrayValues(array, value))"},{"prompt":"Create a Java method that takes three integers as parameters and computes their average.","completion":"public static double threeIntAvg(int a, int b, int c) { return (a + b + c) / 3.0; }"},{"prompt":"Create a CSS selector to target the inputs elements with a class 'button'.","completion":"input.button { ... }"},{"prompt":"Create a React component that renders a HTML anchor link with the text \\"Visit my website\\".","completion":"import React from 'react'; const Link = () => ( <a href=\\"/\\">Visit my website</a> ); export default Link;"},{"prompt":"Write a PHP snippet to set cookie for the current page with the name \\"username\\" and value \\"foo\\".","completion":"setcookie('username', 'foo', 0);"},{"prompt":"Create a SQL query to find the employees who live in California and earn more than 80,000 per year.","completion":"SELECT * FROM employees WHERE state = 'California' AND salary > 80000;"},{"prompt":"Create a CSS selector to target the second and third <div> element with the class 'container'.","completion":"div.container:nth-child(2), div.container:nth-child(3) { ... }"},{"prompt":"Create a SQL query to find all the departments with more than 3 employees.","completion":"SELECT department, COUNT(*) FROM employees GROUP BY department HAVING COUNT(*) > 3;"},{"prompt":"Convert 10 decimals to binary. 10","completion":"1010"},{"prompt":"Write an HTML page containing an <input> element with the name \\"username\\".","completion":"<html> <head> </head> <body> <input type=\\"text\\" name=\\"username\\"/> </body> </html>"},{"prompt":"Write a query to select a distinct list of data from an SQL table.","completion":"SELECT DISTINCT * FROM <table_name>;"},{"prompt":"Create a dictionary with two keys and a list of values assigned to each key.","completion":"my_dict = { \\"key1\\": [1, 2, 3], \\"key2\\": [4, 5, 6] }"},{"prompt":"Generate an array of random numbers with a size of 10.","completion":"import random my_arr = [random.randint(1,100) for _ in range(10)] print(my_arr) # Output: [76, 64, 26, 62, 59, 35, 66, 18, 52, 49]"},{"prompt":"Write a function to compare two lists and print out whether they are equal or not. list1 = [1, 2, 3] list2 = [2, 3, 4]","completion":"def compare_lists(list1, list2): if len(list1) != len(list2): return False else: for i in range(len(list1)): if list1[i] != list2[i]: return False return True list1 = [1, 2, 3] list2 = [2, 3, 4] print(compare_lists(list1, list2)) # Output: False"},{"prompt":"Write Python code to print the last three elements from a given list. [2, 4, 6, 8, 10, 12]","completion":"my_list = [2, 4, 6, 8, 10, 12] print(my_list[-3:]) # Output: [10, 12]"},{"prompt":"w would you implement Skip-Gram model in TensorFlow?","completion":"To implement a Skip-Gram model in TensorFlow, you would need to define the model architecture. You would then need to define the training data, which can be done using tf.data packages. Finally, you would need to use an optimization algorithm such as the AdamOptimizer to train the model."},{"prompt":"Create a Python class with an instance method that prints the number of objects created.","completion":"class Person: num_objects = 0 def __init__(self): Person.num_objects += 1 def print_num_objects(self): print(Person.num_objects)"},{"prompt":"Create a Python dictionary with three elements and print the key-value pairs.","completion":"my_dict = { 'name': 'John', 'age': 30, 'city': 'New York' } for key, value in my_dict.items(): print(f'{key}: {value}')"},{"prompt":"Delete every third character in a string. String: \\"Hello World","completion":"HloWrd"},{"prompt":"Find the first unique number in the list. [1,2,3,4,5,5,4,3,2,1,6]","completion":"6"},{"prompt":"Sum all the numbers divisible by 3 and 7 in the list. [27, 21, 63, 77, 49]","completion":"84"},{"prompt":"Write a code to format a number with two decimal places. 23.14159","completion":"\\"\\"\\" Function to format a number with two decimal places \\"\\"\\" def two_decimals(num): \\"\\"\\" Format a number with two decimal places \\"\\"\\" return \\"{:.2f}\\".format(num) if __name__ == '__main__': print(two_decimals(23.14159)) # prints 23.14"},{"prompt":"Write a code to calculate the sum of the cubes of the numbers in the list. [1,2,3,4,5]","completion":"\\"\\"\\" Function to calculate the sum of the cubes of the numbers in the list \\"\\"\\" def list_cube_sum(list): \\"\\"\\" Calculate the sum of the cubes of the numbers in the list \\"\\"\\" total = 0 for i in list: total += i**3 return total if __name__ == '__main__': print(list_cube_sum([1, 2, 3, 4, 5])) # prints 225"},{"prompt":"Take the following string and read it into a list in Python. \\"apple, banana, peach, orange","completion":"list = [x.strip() for x in \\"apple, banana, peach, orange\\".split(\\",\\")]"},{"prompt":"w would you reverse the order of the elements in a given singly linked list in-place?","completion":"def reverse_inplace(head): if head is None or head.next is None: return head prev_node = None next_node = None curr_node = head while curr_node is not None: next_node = curr_node.next curr_node.next = prev_node prev_node = curr_node curr_node = next_node return prev_node"},{"prompt":"Take the following dictionary and sort its values alphabetically. {\\"SPACELINE\\": \\"Flight of the Future\\", \\"LUCY\\": \\"Rocket Science\\"}","completion":"sorted_dict = dict(sorted({\\"SPACELINE\\": \\"Flight of the Future\\", \\"LUCY\\": \\"Rocket Science\\"}.items(), key=lambda x: x[1]))"},{"prompt":"Which of the following is a valid way to declare a variable in Java?","completion":"int variable; String variable = \\"\\"; boolean variable = false;"},{"prompt":"Suggest a JavaScript code to make an AJAX request to fetch data from a server.","completion":"var XHR = new XMLHttpRequest(); XHR.onreadystatechange = function () { if (XHR.readyState == 4 && XHR.status == 200) { var data = JSON.parse(XHR.responseText); // Handle the response data here } }; XHR.open(\\"GET\\", url); XHR.send();"},{"prompt":"Suggest a regex pattern to match a valid alphanumeric string.","completion":"^[a-zA-Z0-9]+"},{"prompt":"Write a function to print a user's name and age from a given dictionary. user_data = {'name':'John Doe', 'age': 24 }","completion":"def print_info(data): print(\\"Name: \\" + data['name']) print(\\"Age: \\" + str(data['age']))"},{"prompt":"Create a class in Python which models a bank account using the concept of class and object.","completion":"class BankAccount: def __init__(self, name, balance): self.name = name self.balance = balance def deposit(self, amount): self.balance += amount def withdraw(self, amount): self.balance -= amount"},{"prompt":"Write a regex pattern to match a float number with at least one decimal place.","completion":"^-?d+(.d+)?"},{"prompt":"Create a Javascript object that stores the number of cats and dogs in a given location.","completion":"const pets = { cats: 10, dogs: 12 };"},{"prompt":"Write a CSS selector that selects every second list item.","completion":"ul li:nth-child(2n+2) { // Styling }"},{"prompt":"Create an animated loading bar using CSS.","completion":"<div class=\\"progress-bar\\"> <div class=\\"progress-bar-fill\\"></div> </div> <style> .progress-bar { width: 200px; height: 30px; background-color: #ccc; border-radius: 5px; box-shadow: inset 0 0 5px #ccc; } .progress-bar-fill { width: 0%; height: 30px; background-color: #02b3e4; border-radius: 5px; transition: width 1s; } .progress-bar:hover .progress-bar-fill { width: 100%; } </style>"},{"prompt":"Create an array in Javascript that contains elements of different datatypes.","completion":"let array = [1, \\"String\\", true, { key: \\"value\\" }, [1,2]];"},{"prompt":"Write a C++ function to remove all the duplicates in a given array.","completion":"void removeDuplicates(int arr[], int n) { // Return, if array is empty // or contains a single element if (n==0 || n==1) return; int temp[n]; // Start traversing elements int j = 0; for (int i=0; i<n-1; i++) { // If current element is not equal // to next element then store that // current element if (arr[i] != arr[i+1]) temp[j++] = arr[i]; } // Store the last element as whether // it is unique or repeated, it hasn't // stored previously temp[j++] = arr[n-1]; // Modify original array for (int i=0; i<j; i++) arr[i] = temp[i]; }"},{"prompt":"Parse and save the following article in a dataset. \\"The Boston Celtics have signed forward Gordon Hayward to a four-year deal. Good move from the Celtics, who are coming off of a teams worst record since 2007? The 29-year-old Hayward has averaged 10.7 points and 5 rebounds per game in his eight-year career","completion":"{ \\"team\\": \\"Boston Celtics\\", \\"player\\": \\"Gordon Hayward\\", \\"contract\\": \\"Four-year deal\\", \\"recent_record\\": \\"teams worst record since 2007\\", \\"average_points\\": 10.7, \\"average_rebounds\\": 5 }"},{"prompt":"Suggest a possible use case of deep learning in healthcare.","completion":"Deep learning can be used in healthcare to improve diagnosis accuracy, automate medical image analysis, predict risk of diseases, and improve treatments. For example, a deep learning model can be used to analyze CT scans to detect cancerous nodules or classify different types of mammograms. Additionally, deep learning models can also be used to predict a patient's risk or response to specific treatments, and predict the onset of certain diseases."},{"prompt":"Suggest a use case for reinforcement learning in business.","completion":"Reinforcement learning can be used in business to automate processes, optimize products and services, improve marketing campaigns, and develop better customer experiences. For example, a reinforcement learning model can learn the best way to stock products in a store and optimize product placement to maximize sales. Additionally, reinforcement learning can also be used to automate customer service tasks, adjust product prices in real-time based on customer demand, and optimize marketing campaigns with personalized content."},{"prompt":"Suggest a use case for natural language processing in healthcare.","completion":"Natural language processing can be used in healthcare to analyze patient documents for insights, automate medical coding, detect drug interactions, identify risk factors and trends, and improve healthcare communication. For example, a natural language processing system can be used to scan patient notes to identify potential symptoms and suggest possible diagnoses. Additionally, natural language processing systems can also be used to automate medical coding and make medical texts searchable and easier to understand."},{"prompt":"Write a SQL query to find the average price of the products in a given product type.","completion":"SELECT AVG(price) FROM products WHERE type = 'product_type'"},{"prompt":"Analyse a provided JSON object and change the value of a specific key to the sum of 2 other keys { \\"key1\\": 10, \\"key2\\": 20, \\"key3\\": 0 }","completion":"{ \\"key1\\": 10, \\"key2\\": 20, \\"key3\\": 30 }"},{"prompt":"Rank a list of integer from high to low [2, 5, 8, 3, 9, 6]","completion":"[9, 8, 6, 5, 3, 2]"},{"prompt":"Edit the following code to perform arithmetic operation #include <stdio.h> int main(void) { int a = 5; int b = 4; printf(\\"%d\\", a); printf(\\"%d\\", b); return 0; }","completion":"#include <stdio.h> int main(void) { int a = 5; int b = 4; printf(\\"%d + %d = %dn\\", a, b, a+b); return 0; }"},{"prompt":"Develop a Java program that takes two strings as input and outputs the common characters in both strings. String A: abcde String B: defgh","completion":"public class CommonChars { public static void main(String[] args) { String str1 = \\"abcde\\"; String str2 = \\"defgh\\"; //Loop through both strings for (int i = 0; i < str1.length(); i++) { char ch1 = str1.charAt(i); for (int j = 0; j < str2.length(); j++) { char ch2 = str2.charAt(j); // Compare characters if (ch1 == ch2) { System.out.println(ch1); } } } } }"},{"prompt":"Develop a program in Python that takes two array elements as input and finds their product Array1: [1, 5, 8, 9] Array2: [2, 3, 4, 6]","completion":"import numpy as np arr1 = np.array([1,5,8,9]) arr2 = np.array([2,3,4,6]) result = arr1 * arr2 print(f'Product of the two arrays: {result}')"},{"prompt":"Create a C++ program for grading system","completion":"#include <iostream> using namespace std; int main() { double grade; cout << \\"Enter your test score (0-100): \\"; cin >> grade; if (grade >= 90 && grade <= 100) { cout << \\"Grade: A\\"; } else if (grade >= 80 && grade <90) { cout << \\"Grade: B\\"; } else if (grade >= 70 && grade <80) { cout << \\"Grade: C\\"; } else if (grade >= 60 && grade <70) { cout << \\"Grade: D\\"; } else if (grade >= 0 && grade <60) { cout << \\"Grade: F\\"; } return 0; }"},{"prompt":"Generate a class in java to convert Fahrenheit to Celsius","completion":"public class FahrenheitToCelsius { // F to C conversion formula public static double fahrenheitToCelsius(double fahrenheit) { return ((fahrenheit - 32) * 5) / 9; } public static void main(String[] args) { double fahrenheit = 100; double celsius = fahrenheitToCelsius(fahrenheit); System.out.printf(\\"%.2f degree Fahrenheit is equal to %.2f degree Celsius\\",fahrenheit,celsius); } }"},{"prompt":"Develop a program in Swift to check if three sides form a valid triangle","completion":"import Foundation func isTriangle(sideA: Int, sideB: Int, sideC: Int) -> Bool { let sides = [sideA, sideB, sideC].sorted() return sides[2] < sides[1] + sides[0] } // Usage print(isTriangle(sideA: 3, sideB: 4, sideC: 6) // Output: true print(isTriangle(sideA: 3, sideB: 9, sideC: 10) // Output: false"},{"prompt":"Write code to construct a linked list in C++. Node data: - 2 - 4 - 5 - 9","completion":"#include <iostream> struct Node { int data; Node* next; }; // Utility function to create a linked list Node* createLinkedList(int arr[], int n) { Node* head = new Node(); Node* temp = head; for (int i = 0; i < n; i++) { Node* newNode = new Node(); newNode->data = arr[i]; temp->next = newNode; temp = temp->next; } temp->next = nullptr; return head; } int main() { int arr[]={2, 4, 5, 9}; Node* head = createLinkedList(arr, 4); return 0; }"},{"prompt":"What are the differences between a Java applet and a Java application?","completion":"The main difference between a Java applet and a Java application is that an applet is a client-side application that is downloaded from server and is run in a web browser, while a Java application is a stand-alone program which runs directly on the included JVM. Applet code is able to access resources from the server, like databases and other back-end services, while a Java application runs within its own sandbox. Additionally, a Java applet requires a web browser plug-in in order to run, while a Java application does not. Another important difference between a Java applet and a Java application is that the code for a Java applet is visible to the end user, while the code for a Java application is hidden from the user. Thus, Java applets cannot be used to secure confidential information or data. Finally, Java applets are limited by the client system due to the fact that they are displayed and executed in the web browser, while Java applications are platform-independent and can be executed on any operating system."},{"prompt":"Write a Java program that prints all integers between 30 & 50 (inclusive).","completion":"public class PrintIntegers { public static void main(String[] args) { for(int i=30; i<=50; i++) { System.out.println(i); } } }"},{"prompt":"Write HTML code to set the font size of a page to 18px.","completion":"<html> <head> <style> body { font-size: 18px; } </style> </head> </html>"},{"prompt":"Write a SQL query to select the top 10 countries ordered by population density. Table Name: countries Columns: name, population, are","completion":"SELECT name, population, area FROM countries ORDER BY population/area DESC LIMIT 10;"},{"prompt":"Create a regex pattern to identify alphanumeric characters.","completion":"[A-Za-z0-9]"},{"prompt":"Construct a CSS class to set the font color of a paragraph to pink.","completion":".pinktext { color: pink; }"},{"prompt":"Write a Java method to calculate the total marks of a student given their marks of 5 subjects. int marks_sub1 = 80; int marks_sub2 = 90; int marks_sub3 = 85; int marks_sub4 = 92; int marks_sub5 = 87;","completion":"public static int calculateTotalMarks(int marks_sub1, int marks_sub2, int marks_sub3, int marks_sub4, int marks_sub5) { return marks_sub1 + marks_sub2 + marks_sub3 + marks_sub4 + marks_sub5; }"},{"prompt":"Using the given linked list, find out the second last element. 1 -> 3 -> 5 -> 7 -> 9 -> 11","completion":"Node *secondLastElement(Node *head) { if (head == NULL || head->next == NULL) return NULL; Node *secondLast = head; while (secondLast->next->next != NULL) secondLast = secondLast->next; return secondLast; }"},{"prompt":"Create a Linux shell command to find out the total disk space available in a given mount point","completion":"df -h /mount/point"},{"prompt":"Create a TensorFlow tensor with the following data [[1, 2], [3, 4], [5, 6]]","completion":"tf.constant([[1., 2.], [3., 4.], [5., 6.]])"},{"prompt":"Write an iterator in Python to iterate through the given list and output each element myList = ['Hi', 'Bye', 'Hello', 'World']","completion":"def iterateMyList(myList): iterator = iter(myList) while True: try: print(next(iterator)) except StopIteration: break"},{"prompt":"Create a function to print the current local time.","completion":"def printCurrentLocalTime(): currentLocalTime = datetime.datetime.now() print(currentLocalTime.strftime(\\"%c\\"))"},{"prompt":"Create some sample data to test a supervised learning algorithm.","completion":"import numpy as np X = np.array([[1, 2, 3], [4, 5, 6], [7, 8, 9]]) y = np.array([1, 0, -1])"},{"prompt":"Given a text string modify it by capitalizing the letters after a period. hello world. this is from gp","completion":"hello world. This is from GPT"},{"prompt":"Create a HTML page with a table which contains data about the student population.","completion":"<html> <body> <table> <tr> <th>Student Name</th> <th>Class</th> <th>Age</th> </tr> <tr> <td>John</td> <td>8th</td> <td>14</td> </tr> <tr> <td>Ann</td> <td>9th</td> <td>15</td> </tr> <tr> <td>James</td> <td>10th</td> <td>16</td> </tr> </table> </body> </html>"},{"prompt":"Convert this string to a Sanskrit translation. Hello world","completion":"namaskāra vasudeva"},{"prompt":"Generate a series of natural numbers from 1 to 50 using regex","completion":"^(?:(((?!([0-4]?[0-9]|50)|)|50)|[1-4]?[0-9])"},{"prompt":"Create an array of integers that contain all the prime numbers between 1 and 50","completion":"[2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47]"},{"prompt":"Write a SQL query to select all the people between the ages of 18 and 25","completion":"SELECT * FROM people WHERE age BETWEEN 18 AND 25;"},{"prompt":"Build a state machine in Python to process incoming keyboard events","completion":"# Define a StateMachine class class StateMachine: def __init__(self): self.handlers = {} self.startState = None self.endStates = [] def add_state(self, state): self.handlers[state.name] = state def set_start(self, name): self.startState = name def set_end(self, name): self.endStates.append(name) def run(self): try: handler = self.handlers[self.startState] except: raise(Exception, \\"Must call .set_start() before .run()\\") while True: # Get the next keyboard event event = get_event() if event: newState = handler.run(event) if newState.name in self.endStates: break else: handler = self.handlers[newState.name]"},{"prompt":"Convert this Python data structure into a valid JSON string. data = { \\"key1\\" : [1,2,3], \\"key2\\" : { 'subkey1' : True, 'subkey2' : 'Hello World' } }","completion":"json_string = json.dumps(data)"},{"prompt":"Figure out which column's information is being displayed in this SQL query. SELECT name, age FROM students WHERE id = 8","completion":"name and age."},{"prompt":"What type of data is this PHP statement trying to process? number = intval(input_value);","completion":"This statement is trying to process a numerical data type."},{"prompt":"Convert this SQL query into a valid Postgres statement. SELECT * FROM student WHERE GPA = 4.0","completion":"SELECT * FROM student WHERE GPA = 4.0::float8;"},{"prompt":"Read this HTML code and explain in a few words what this snippet does. <div id=\\"test\\">Hello World!</div>","completion":"This HTML code snippet creates a div with the id \\"test\\" and displays the text \\"Hello World!\\" within it."},{"prompt":"You need to create a web form with 3 input fields: Name, Age, and Email.","completion":"<form> Name: <input type=\\"text\\" name=\\"name\\" required> Age: <input type=\\"number\\" name=\\"age\\" required> Email: <input type=\\"email\\" name=\\"email\\" required> </form>"},{"prompt":"What is the C# code to check if a number is divisible by 5?","completion":"bool isDivisibleByFive(int number) { return number % 5 == 0; }"},{"prompt":"Create a list comprehension that multiplies each item in a list by 2. [1,2,3,4]","completion":"list_comprehension = [x*2 for x in [1,2,3,4]] print(list_comprehension)"},{"prompt":"Write a function that returns the larger number from two numbers provided. 4, 5","completion":"def largest(a, b): \\"\\"\\"Returns the larger number from two numbers provided.\\"\\"\\" if a > b: return a else: return b num1 = 4 num2 = 5 print(largest(num1, num2))"},{"prompt":"Write a code that returns a 2-dimensional array of size n by m containing all 0s n = 3 and m = 5","completion":"def create2DArray(n, m): array = [[0 for x in range(m)] for y in range(n)] return array print(create2DArray(3, 5)) # prints [[0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0]]"},{"prompt":"Write a function that takes in a string and returns a list of all words in the string in alphabetical order str = \\"Here is a sentence to sor","completion":"def alphabetically_sort_words(str): words = str.split(' ') words.sort() return words print(alphabetically_sort_words(\\"Here is a sentence to sort\\")) # prints ['Here', 'a', 'is', 'sentence', 'sort', 'to']"},{"prompt":"When given a list of strings, identify which strings are palindromes list = ['abc', 'abb', 'cba']","completion":"result = [] for s in list: if s == s[::-1]: result.append(s) print(result) #['abb']"},{"prompt":"Generate a program to calculate the combination of n elements taken k at a time. n = 8 k = 3","completion":"def combinations(n, k): if k == 0 or k > n: return [] result = [] def dfs(start,n,k): if k == 0: result.append(temp[:]) return for i in range(start, n): temp.append(i) dfs(i+1, n, k-1) temp.pop() temp = [] dfs(0, n, k) return result"},{"prompt":"Modify the function such that it takes two arrays, one containing numbers and the other containing symbols as arguments and returns a string where each number is replaced with its associated symbol. nums = [1,2,3,4,5] symbols = [\\"A\\",\\"B\\",\\"C\\",\\"D\\",\\"E\\"]","completion":"def join_nums_symbols(nums, symbols): assert len(nums) == len(symbols), \\"length of nums and symbols should be equal\\" result = \\"\\" for i in range(len(nums)): result += str(nums[i]) + symbols[i] return result"},{"prompt":"Generate a function that takes an array of integers and rearranges the elements in a cyclical fashion, such that the element at index 0 comes last, the element at index 1 goes to the front, the element at index 2 is inserted after the element at the last index and so on. arr = [1, 2, 3, 4, 5]","completion":"def rearrange_array(arr): output = [] for i in range(len(arr)): idx = (i + 1) % len(arr) output.append(arr[idx]) return output"},{"prompt":"Create a Python function and call it split_string that takes a string and a delimiter as arguments and returns a list containing the string split by the delimiter. my_string = \\"hello, world\\" delimiter = ','","completion":"def split_string(string, delimiter): strList = string.split(delimiter) return strList"},{"prompt":"Create a program that prints the last two elements of a list. arr = [1,2,3,4,5,6,7]","completion":"def get_last_two(arr): return arr[-2:]"},{"prompt":"Given a string, write an algorithm to remove all occurrences of a given letter. my_string = \\"Python is a popular programming language\\" letter = 'o'","completion":"def remove_letter(string, letter): output = \\"\\" for s in string: if s != letter: output += s return output"},{"prompt":"Create a function that evaluates a mathematical expression stored as a string. expression = \\"1+2*3/4","completion":"def evaluate_expr(expression): return eval(expression)"},{"prompt":"Write a CSS code to change the font size of an element with id=\\"main\\".","completion":"#main { font-size: 16px; }"},{"prompt":"Debug and resolve the error in the following code: message = \\"Welcome!\\" print(message) printf(message)","completion":"The error is \\"NameError: name 'printf' is not defined\\". To solve the error, remove the second line \\"printf(message)\\" as \\"printf()\\" is not a valid function."},{"prompt":"w to retrieve the data of the first element in a JSON array?","completion":"The data of the first element in a JSON array can be retrieved using the index \\"0\\". For example, if the JSON array is [\\"apple\\", \\"banana\\", \\"cherry\\"], then the data of the first element can be retrieved by \\"array[0]\\". It would return the data \\"apple\\"."},{"prompt":"w to convert a list of words into a set?","completion":"A list of words can be converted into a set by using the built-in \\"set()\\" function. For example, if the list is [\\"apple\\", \\"banana\\", \\"cherry\\"], the set converted from this list will look like {\\"apple\\", \\"banana\\", \\"cherry\\"}."},{"prompt":"w to loop over a key-value pair in a dictionary?","completion":"A key-value pair in a dictionary can be looped over using the \\"for\\" loop with the \\"items()\\" method. For example, if the dictionary is {'a': 1, 'b': 2, 'c': 3}, it can be looped over as: for key, value in dictionary.items(): print(key, value) It will print the key-value pairs as: a 1 b 2 c 3"},{"prompt":"Create a function that filters a list of strings based on their length. List = [\\"Carrot\\", \\"Apple\\", \\"Orange\\", \\"Banana\\", \\"Pear\\"]","completion":"def filter_string_length(strings): \\"\\"\\" This function takes in a list of strings and filters out those that are not longer than 5 characters. \\"\\"\\" return [s for s in strings if len(s) > 5] list_strings = [\\"Carrot\\", \\"Apple\\", \\"Orange\\", \\"Banana\\", \\"Pear\\"] filtered_list = filter_string_length(list_strings) print(filtered_list) # Output: [\\"Carrot\\", \\"Orange\\", \\"Banana\\"]"},{"prompt":"Write a code to calculate the age in years and months given the date of birth. Date of Birth: 4 June 1998","completion":"def age_calc(date_of_birth): \\"\\"\\" This function takes in a date of birth and calculates the age in years and months. \\"\\"\\" today = datetime.date.today() age_years = today.year - date_of_birth.year age_months = today.month - date_of_birth.month if age_months < 0: age_years -= 1 age_months += 12 return age_years, age_months date_of_birth = datetime.date(1998, 6, 4) print(age_calc(date_of_birth)) # Output: (21, 10)"},{"prompt":"Augment an integer list with zeros after every 4 elements. List = [1,2,3,4,5,6,7,8]","completion":"def list_augment(int_list): \\"\\"\\" This function takes in a list of integers and augments it with zeros after every 4 elements. \\"\\"\\" augmented_list = [] for i in range(0, len(int_list), 4): augmented_list.append(int_list[i:i + 4]) augmented_list.append(0) augmented_list.pop() return [item for sublist in augmented_list for item in sublist] int_list = [1,2,3,4,5,6,7,8] print(list_augment(int_list)) # Output: [1, 2, 3, 4, 0, 5, 6, 7, 8, 0]"},{"prompt":"Compare the two strings and report the index of the first mismatch. String 1: hello String 2: holl","completion":"3"},{"prompt":"Determine the maximum and minimum value of an array. [3, 6, 9, -1, 2]","completion":"Max: 9 Min: -1"},{"prompt":"Perform a search operation to find all the words starting with \\"th\\". Sentence: The big cat ate the small mouse.","completion":"['The', 'the', 'that']"},{"prompt":"mplement a SQL query to find the top 5 highest paid employees.","completion":"SELECT name, salary FROM employees ORDER BY salary DESC LIMIT 5;"},{"prompt":"Develop an algorithm to reverse an integer. 123","completion":"def reverse(num): reversed_num = 0 while num>0: last = num%10 reversed_num = (reversed_num*10)+last num = num//10 return reversed_num num = 123 print(\\"Reverse of\\", num, \\"is\\", reverse(num)) # Output: Reverse of 123 is 321"},{"prompt":"Write a C# function to generate all combinations of length n of a given array.","completion":"static void GenerateCombinations(int[] arr, int n) { int[] result = new int[n]; GenerateCombination(arr, 0, 0, result); } static void GenerateCombination(int[] arr, int start, int index, int[] result) { if (index == result.Length) { Console.WriteLine(String.Join(\\",\\", result)); return; } for (int i = start; i < arr.Length; i++) { result[index] = arr[i]; GenerateCombination(arr, i + 1, index + 1, result); } }"},{"prompt":"Develop an algorithm to find the depth in a tree.","completion":"def tree_depth(root): if root is None: return 0 ; else : left_height = tree_depth(root.left) right_height = tree_depth(root.right) if (left_height > right_height): return left_height+1 else: return right_height+1"},{"prompt":"Develop a C# function to check if a given number is Armstrong or not. An Armstrong number is one which is equal to the sum of its digits raised to the power of the number of digits.","completion":"static bool IsArmstrong(int num) { int origNum = num; int sum = 0; int digits = 0; while (num != 0) { digits++; num /= 10; } num = origNum; while (num != 0) { sum +=Math.Pow(num % 10, digits); num /= 10; } if (sum== origNum) return true; return false; }"},{"prompt":"Determine if a given word is a valid word of English language. Word: lycanthropy","completion":"Yes, lycanthropy is a valid word of English language."},{"prompt":"Categorize the given sentence into a specific class. Sentence: It was a beautiful sunny day.","completion":"The given sentence belongs to the class 'positive sentiment'."},{"prompt":"Write a function in Python to check if two lists have the same elements regardless of their order. list1 = [\\"cat\\", \\"dog\\", \\"mouse\\"] list2 = [\\"mouse\\", \\"dog\\", \\"cat\\"]","completion":"def is_similar(list_1, list_2): if len(list_1) != len(list_2): return False list_1.sort() list_2.sort() for i, j in zip(list_1, list_2): if i != j: return False return True"},{"prompt":"Create a SQL statement to select a list of customer names and the number of orders each customer has made.","completion":"SELECT name, COUNT(name) FROM orders GROUP BY name"},{"prompt":"You need to debug this code and ensure that it runs properly. def cost_calc(product, quantity): total_cost = 0 for i, q in zip(products, quantity): cost = i.cost * q total_cost = total_cost + cost return total_co","completion":"def cost_calc(products, quantity): total_cost = 0 for i, q in zip(products, quantity): cost = i.cost * q total_cost += cost return total_cost"},{"prompt":"Create a CSS rule to display an element with a dark orange background color.","completion":".dark-orange { background-color: #EC672B; }"},{"prompt":"Create a React app with two routes Home and About with two separate components.","completion":"import React from 'react'; import { BrowserRouter as Router, Route, Link } from 'react-router-dom'; // Home Component const Home = () => { return( <div> <h1>Home</h1> </div> ); } // About Component const About = () => { return( <div> <h1>About</h1> </div> ); } // Main App class App extends React.Component { render(){ return( <Router> <div> // Home Route <Route path=\\"/\\" exact component={Home} /> // About Route <Route path=\\"/about\\" exact component={About} /> </div> </Router> ); } } export default App;"},{"prompt":"Choose a sorting algorithm and write a function in C++ to sort a list of numbers.","completion":"void selectionSort(int arr[], int n) { int i, j, min_idx; // One by one move boundary of unsorted subarray for (i = 0; i < n-1; i++) { // Find the minimum element in unsorted array min_idx = i; for (j = i+1; j < n; j++) if (arr[j] < arr[min_idx]) min_idx = j; // Swap the found minimum element with the first element swap(&arr[min_idx], &arr[i]); } }"},{"prompt":"Create a website layout with three columns and fixed size main section.","completion":"<style> .container { display: flex; } .column { flex: 1; } .main { flex: 2; } </style> <div class=\\"container\\"> <div class=\\"column\\"> </div> <div class=\\"main\\"> </div> <div class=\\"column\\"> </div> </div>"},{"prompt":"Create a clould-based web application in Java to store financial details.","completion":"import java.io.*; import java.util.*; import com.amazonaws.services.lambda.*; import com.google.gson.Gson; import com.amazonaws.services.lambda.runtime.Context; import com.amazonaws.services.lambda.runtime.RequestHandler; import org.json.simple.*; import org.json.simple.JSONObject; public class DataStorage implements RequestHandler<JSONObject, JSONObject> { public JSONObject handleRequest(JSONObject input, Context context) { // Read details from the request String userID = (String)input.get(\\"userID\\"); String transactionID = (String)input.get(\\"transactionID\\"); float amount = ((Number)input.get(\\"amount\\")).floatValue(); String description = (String)input.get(\\"description\\"); // Store data in database // Code for storing data return response; } }"},{"prompt":"Train a Naive Bayes model in Python to classify emails into spam and non-spam classes.","completion":"# import libraries import pandas as pd from sklearn.model_selection import train_test_split from sklearn.feature_extraction.text import CountVectorizer from sklearn.naive_bayes import MultinomialNB # read in the data data = pd.read_csv('email_data.csv') # split into training and test data X_train, X_test, y_train, y_test = train_test_split(data['text'], data['label'], test_size=0.33, random_state=42) # create vectorizer and transform training data count_vector = CountVectorizer() count_train = count_vector.fit_transform(X_train) # create and train a Naive Bayes model NB_classifier = MultinomialNB() NB_classifier.fit(count_train,y_train) # transform test data count_test = count_vector.transform(X_test) # predict test labels preds = NB_classifier.predict(count_test)"},{"prompt":"Create an array of integers using C++ where the first element is equal to the last element.","completion":"#include <iostream> using namespace std; int main() { // set the array size int n = 5; int arr[n]; // set the first and last element to the same value arr[0] = 5; arr[n-1] = 5; // fill in the other elements for (int i = 1; i < (n-1); i++) arr[i] = 0; // print the array for (int i=0; i<n; i++) cout << arr[i] << \\" \\"; return 0; }"},{"prompt":"Calculate the maximum sum of a subarray of length k. Array: [1, 3, 4, 5, 20, 32] K: 3","completion":"The maximum sum of a subarray of length 3 is 51 (20 + 5 +26)."},{"prompt":"Calculate the sum of the cube of integers from 1 to n.","completion":"def cube_sum(n): sum = 0 for i in range(1,n+1): sum += i**3 return sum"},{"prompt":"Write a function to find the path from a source point to a destination point in a given 2D array. Array: [[0, 1, 0, 0, 0], [0, 1, 0, 1, 0], [1, 0, 0, 1, 0], [0, 0, 0, 1, 0]] Source Point: [0, 0] Destination Point: [3, 4]","completion":"def find_path(array, source, dest): path = [source] sx, sy = source while path[-1] != dest: dx, dy = path[-1] if dx > 0 and array[dx - 1][dy] == 0: path.append([dx-1, dy]) elif dy > 0 and array[dx][dy-1] == 0: path.append([dx, dy-1]) elif dx < len(array)-1 and array[dx + 1][dy] == 0: path.append([dx+1, dy]) elif dy < len(array[0])-1 and array[dx][dy+1] == 0: path.append([dx, dy+1]) return path"},{"prompt":"Find the sum of the products of the digits of a given number with its reverse. Number = 1234","completion":"The sum of the products of the digits of 1234 with its reverse is 30. sum = (1*4) + (2*3) + (3*2) + (4*1) = 30."},{"prompt":"mplement a queue following the classic FIFO (First-in-first-out) principle using Python.","completion":"class Queue: def __init__(self): self.queue = [] def enqueue(self, val): self.queue.append(val) def dequeue(self): if self.queue: return self.queue.pop(0) else: return None def peek(self): if self.queue: return self.queue[0] else: return None"},{"prompt":"Given an array of strings and the task is to find the longest string from the given string array. [\\"Google\\", \\"Facebook\\", \\"Amazon\\", \\"Zapier\\" ]","completion":"public class LongestString { public static String getLongestString(String[] array) { if(array.length == 0) { return null; } String longestString = array[0]; for(int i = 1; i < array.length; i++) { if(array[i].length() > longestString.length()) { longestString = array[i]; } } return longestString; } public static void main(String[] args) { String[] array = {\\"Google\\", \\"Facebook\\", \\"Amazon\\", \\"Zapier\\"}; String longestString = getLongestString(array); System.out.println(\\"Longest string: \\"+longestString); } }"},{"prompt":"Generate HTML to create a table with 3 columns and 6 rows with the first row as the header.","completion":"<table> <tr> <th>Header 1</th> <th>Header 2</th> <th>Header 3</th> </tr> <tr> <td>Row 1 Column 1</td> <td>Row 1 Column 2</td> <td>Row 1 Column 3</td> </tr> <tr> <td>Row 2 Column 1</td> <td>Row 2 Column 2</td> <td>Row 2 Column 3</td> </tr> <tr> <td>Row 3 Column 1</td> <td>Row 3 Column 2</td> <td>Row 3 Column 3</td> </tr> <tr> <td>Row 4 Column 1</td> <td>Row 4 Column 2</td> <td>Row 4 Column 3</td> </tr> <tr> <td>Row 5 Column 1</td> <td>Row 5 Column 2</td> <td>Row 5 Column 3</td> </tr> <tr> <td>Row 6 Column 1</td> <td>Row 6 Column 2</td> <td>Row 6 Column 3</td> </tr> </table>"},{"prompt":"Write a Python function to generate a random password with length 8 containing any combination of upper and lowercase letters, numbers, and symbols.","completion":"import string import random def generate_password(): letter_lower = string.ascii_lowercase letter_upper = string.ascii_uppercase symbols = string.punctuation digits = string.digits password = ''.join(random.choice(letter_lower + letter_upper + symbols + digits) for i in range(8)) return password password = generate_password() print(password)"},{"prompt":"Create a SQL query to count the total number of movies for every genre in the database.","completion":"SELECT genre, COUNT(*) as total_movies FROM Movies GROUP BY genre"},{"prompt":"Create a bash script that creates three TextFiles named first.txt, second.txt, and third.txt each having 10 lines of text.","completion":"#!/bin/bash for file in {first,second,third}.txt; do touch file for i in {1..10}; do echo \\"This is line i in the file file\\" >> file done done"},{"prompt":"Write a code to filter out the names longer than 5 characters from the following list. data = [\\"James\\", \\"John\\", \\"Susan\\", \\"Bella\\", \\"Natalie\\", \\"Adam\\", \\"Sam\\", \\"Eric\\"]","completion":"data = [\\"James\\", \\"John\\", \\"Susan\\", \\"Bella\\", \\"Natalie\\", \\"Adam\\", \\"Sam\\", \\"Eric\\"] filtered_data = [name for name in data if len(name) > 5] print(filtered_data) # Output: [\\"James\\", \\"John\\", \\"Bella\\", \\"Natalie\\", \\"Sam\\"]"},{"prompt":"Create a code to get the difference between two timestamps in seconds. timestamp1 = \\"2020-07-02 14:13:37\\" timestamp2 = \\"2020-07-03 13:21:46","completion":"import datetime def get_difference_in_seconds(timestamp1, timestamp2): datetime1 = datetime.datetime.strptime(timestamp1, \\"%Y-%m-%d %H:%M:%S\\") datetime2 = datetime.datetime.strptime(timestamp2, \\"%Y-%m-%d %H:%M:%S\\") difference = (datetime2 - datetime1).total_seconds() return difference"},{"prompt":"Suggest a way to scale the following function for n values. def scale(x): return x * 2","completion":"def scale(arr, n): return [x * 2 for x in arr[:n]]"},{"prompt":"Given an array of integers, create a code to return the second-largest number. [12, 45, 2, 41, 31, 10, 8, 6, 4]","completion":"def second_largest(arr): largest = max(arr) arr.remove(largest) return max(arr)"},{"prompt":"Write a code to generate all possible binary strings of length 5.","completion":"def gen_binary_strings(n): result = [] for i in range(2**n): s = bin(i)[2:] s = s.zfill(n) result.append(s) return result print(gen_binary_strings(5)) # Output: ['00000', '00001', '00010', '00011', '00100', '00101', '00110', '00111', '01000', '01001', '01010', '01011', '01100', '01101', '01110', '01111', '10000', '10001', '10010', '10011', '10100', '10101', '10110', '10111', '11000', '11001', '11010', '11011', '11100', '11101', '11110', '11111']"},{"prompt":"Create a code to create a userid from the given firstname and lastname. Firstname: John Lastname: Smith","completion":"def create_userid(firstname, lastname): userid = firstname[0] + lastname[:5] return userid userid = create_userid(\\"John\\", \\"Smith\\") print(userid) # Output: JSmith"},{"prompt":"Given a list of numbers, create a code to find the maximum product of three numbers. [-1, -2, 4, 5, 8, 9]","completion":"def max_product_three_numbers(arr): arr.sort() return max(arr[-1] * arr[-2] * arr[-3], arr[0] * arr[1] * arr[-1]) max_product = max_product_three_numbers([-1, -2, 4, 5, 8, 9]) print(max_product) # Output: 360"},{"prompt":"Generate a code snippet to define a class called Animal in Java.","completion":"public class Animal { // instance variables private String name; private int age; // constructor public Animal(String name, int age) { this.name = name; this.age = age; } // methods public void eat() { System.out.println(\\"I'm eating!\\"); } public void sleep() { System.out.println(\\"I'm sleeping!\\"); } }"},{"prompt":"Create an HTML view with a button that changes its text when clicked.","completion":"<button id=\\"button\\">Click me!</button> <script> document.getElementById('button').addEventListener('click', function(){ this.innerText=\\"I am clicked!\\"; }); <\/script>"},{"prompt":"Create a database to store customer data and products.","completion":"CREATE DATABASE customers_and_products; USE customers_and_products; CREATE TABLE customers ( id INT NOT NULL AUTO_INCREMENT, first_name VARCHAR(255) NOT NULL, last_name VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, PRIMARY KEY(id) ); CREATE TABLE products ( id INT NOT NULL AUTO_INCREMENT, name VARCHAR(255) NOT NULL, price INT NOT NULL, PRIMARY KEY(id) );"},{"prompt":"Write a SQL query to find students residing in a particular city. City: Londo","completion":"SELECT * FROM Students WHERE City = 'London';"},{"prompt":"Create a C++ function to determine the number of inversions in an array.","completion":"int merge(int arr[], int temp[], int left, int mid, int right) { int i, j, k; int inv_count = 0; i = left; /* i is index for left subarray */ j = mid; /* j is index for right subarray */ k = left; /* k is index for resultant merged subarray */ while ((i <= mid - 1) && (j <= right)) { if (arr[i] <= arr[j]) { temp[k++] = arr[i++]; } else { temp[k++] = arr[j++]; /* this is tricky -- see above explanation/diagram for merge()*/ inv_count = inv_count + (mid - i); } } /* Copy the remaining elements of left subarray (if there are any) to temp*/ while (i <= mid - 1) temp[k++] = arr[i++]; /* Copy the remaining elements of right subarray (if there are any) to temp*/ while (j <= right) temp[k++] = arr[j++]; /*Copy back the merged elements to original array*/ for (i = left; i <= right; i++) arr[i] = temp[i]; return inv_count; }"},{"prompt":"Create a KMP algorithm in Python to find a pattern in a given text. Text: abcabdababd Pattern:abd","completion":"def KMPSearch(pat, txt): M = len(pat) N = len(txt) # create lps[] that will hold the longest prefix suffix # values for pattern lps = [0]*M j = 0 # index for pat[] # Preprocess the pattern (calculate lps[] array) computeLPSArray(pat, M, lps) i = 0 # index for txt[] while i < N: if pat[j] == txt[i]: i += 1 j += 1 if j == M: print(\\"Found pattern at index \\" + str(i-j)) j = lps[j-1] # mismatch after j matches elif i < N and pat[j] != txt[i]: # Do not match lps[0..lps[j-1]] characters, # they will match anyway if j != 0: j = lps[j-1] else: i += 1 def computeLPSArray(pat, M, lps): len = 0 # length of the previous longest prefix suffix lps[0] # lps[0] is always 0 i = 1 # the loop calculates lps[i] for i = 1 to M-1 while i < M: if pat[i]== pat[len]: len += 1 lps[i] = len i += 1 else: # This is tricky. Consider the example. # AAACAAAA and i = 7. The idea is similar # to search step. if len != 0: len = lps[len-1] # Also, note that we do not increment i here else: lps[i] = 0 i += 1"},{"prompt":"Create a Perl script to parse a given string and extract all names.","completion":"my str = 'John, Paul, George and Ringo'; my @names = split(',s', str); foreach my name (@names) { print name; }"},{"prompt":"Write a Scala function to generate a range of numbers.","completion":"def generateRange(start:Int, end:Int): List[Int] = { if (start > end) List(end) else start :: generateRange(start+1, end) }"},{"prompt":"Create a JavaScript program to generate Fibonacci series up to a given number.","completion":"function printFibonacciSeries(n) { let a = 0, b = 1; // Iterate through the series and print the // value for every number for (let i = 1; i <= n; i++) { console.log(a); let sum = a + b; a = b; b = sum; } } // Driver code let n = 10; printFibonacciSeries(n);"},{"prompt":"Construct an SQL query to find the total number of female employees with a certain department in a company. Department: HR","completion":"SELECT COUNT(*) FROM Employees WHERE Department='HR' AND Gender='F';"},{"prompt":"Given the following code, write a function to validate the input dates are in increasing order. # Validate if the inputs are valid dates def validate_dates(date_list): p","completion":"# Validate if the inputs are valid dates def validate_dates(date_list): if len(date_list) == 0: return True prev_date = date_list[0] for date in date_list[1:]: if date < prev_date: return False prev_date = date return True"},{"prompt":"Write a function in Python to remove all 'null' values from a nested dictionary.","completion":"def remove_nulls(dictionary): if isinstance(dictionary, dict): return {key: remove_nulls(value) for key, value in dictionary.items() if not value == None} else: return dictionary"},{"prompt":"Add a method to the following class which prints the student's name in upper case. class Student: def __init__(self, name): self.name = name","completion":"class Student: def __init__(self, name): self.name = name def print_name_upper(self): print(self.name.upper())"},{"prompt":"Write a Python function that takes a list of integers and returns True if any of the integers is divisible by 7.","completion":"def is_divisible_by_seven(ints): return any(num % 7 == 0 for num in ints)"},{"prompt":"Write a function to compare two strings and return the number of different characters in each string.","completion":"def compare_strings(s1, s2): s1_chars = list(s1) s2_chars = list(s2) num_diff_chars = 0 for char in s1_chars: if char not in s2_chars: num_diff_chars += 1 for char in s2_chars: if char not in s1_chars: num_diff_chars += 1 return num_diff_chars"},{"prompt":"Write a JavaScript function to create a new object from the given object. obj = { \\"name\\": \\"John\\", \\"age\\": 30 }","completion":"function cloneObject(obj){ let newObj = {} for (let key in obj){ if (obj.hasOwnProperty(key)){ newObj[key] = obj[key] } } return newObj }"},{"prompt":"Construct a data dictionary for a movie","completion":"movie_dict = { 'title' : str, 'director' : str, 'producer' : str, 'writer' : str, 'actors' : list, 'release_date' : date, 'runtime_minutes' : int, 'budget' : int, 'production_company' : str, 'box_office' : int, 'genres' : list, 'plot' : str, 'awards' : list, 'language' : str, 'country' : str, }"},{"prompt":"Design a function to create a secure password","completion":"import random import string def secure_password(strong=False): length = random.randint(8, 16) letters = string.ascii_lowercase+string.ascii_uppercase+string.digits if strong: symbols = string.punctuation letters += symbols return ''.join(random.choice(letters) for i in range(length))"},{"prompt":"Write a function to generate anagrams for a given string str = \\"c","completion":"import itertools def anagrams(str): return [\\"\\".join(permutation) for permutation in itertools.permutations(str)] print(anagrams(str)) # Output: ['cat', 'cta', 'act', 'atc', 'tca', 'tac']"},{"prompt":"Create a class for constructing a new tree","completion":"class TreeNode: def __init__(self, data): self.data = data self.left = None self.right = None def Insert(self, data): if self.data: if data < self.data: if self.left is None: self.left = TreeNode(data) else: self.left.Insert(data) elif data > self.data: if self.right is None: self.right = TreeNode(data) else: self.right.Insert(data) else: self.data = data"},{"prompt":"Generate a code snippet to calculate the sum of an array arr = [1, 23, 4, 3, 5]","completion":"def summation(arr): sum = 0 for i in arr: sum += i return sum print(summation(arr)) # Output: 36"},{"prompt":"Change the following code to convert the temperature from Fahrenheit to Celsius. def convert_fahrenheit_to_celsius(temperature): return temperature - 32","completion":"def convert_fahrenheit_to_celsius(temperature): return (temperature - 32) * 5 / 9"},{"prompt":"Generate a password that is at least 8 characters long and contains at least one letter, one number, and one special character.","completion":"import random import string def generate_password(): characters = string.ascii_letters + string.digits + string.punctuation length = 8 password = ''.join(random.choice(characters) for _ in range(length)) while not (any(c.isdigit() for c in password) and any(c.isalpha() for c in password) and any(c in string.punctuation for c in password)): password = ''.join(random.choice(characters) for _ in range(length)) return password"},{"prompt":"Write a Python function to calculate the power of a number raised to the nth power.","completion":"def calculate_power(base, power): if power == 0: return 1 else: return base * calculate_power(base, power - 1)"},{"prompt":"Submit an optimized solution to the following leetcode problem. Problem: Given two binary trees, write a function to check if they are the same or not. Two binary trees are considered the same if they are structurally identical and the nodes have the same value.","completion":"def isSameTree(p, q): if p is None and q is None: return True if p is None or q is None: return False if p.val != q.val: return False return isSameTree(p.left, q.left) and isSameTree(p.right, q.right)"},{"prompt":"Write a Python function to convert a given Unix timestamp to a readable format like \\"day, month, date, hours:minutes:seconds, year\\".","completion":"import datetime def timestamp_to_readable(unix_timestamp): return datetime.datetime.fromtimestamp(unix_timestamp).strftime(\\"%A, %B %d, %H:%M:%S, %Y\\")"},{"prompt":"Define a class in Python that represents a currency.","completion":"class Currency: def __init__(self, currency_name, currency_symbol, currency_value): self.name = currency_name self.symbol = currency_symbol self.value = currency_value def __str__(self): return f\\"{self.name}: {self.symbol}{self.value}\\""},{"prompt":"Arrange the following characters in a valid Python expression. <, 1, %, (","completion":"(1 % <)"},{"prompt":"Write a Python Function to implement the game of Tic-Tac-Toe.","completion":"class GameState: def __init__(self): self.board = [[None, None, None], [None, None, None], [None, None, None] ] def is_game_over(self): b = self.board # Check if a player won if b[0][0] == b[0][1] == b[0][2] != None or b[1][0] == b[1][1] == b[1][2] != None or b[2][0] == b[2][1] == b[2][2] != None: return True elif b[0][0] == b[1][0] == b[2][0] != None or b[0][1] == b[1][1] == b[2][1] != None or b[0][2] == b[1][2] == b[2][2] != None: return True elif b[0][0] == b[1][1] == b[2][2] != None or b[0][2] == b[1][1] == b[2][0] != None: return True # Check if the board is full elif any(None in row for row in b): return False # All positions filled, no winner else: return True"},{"prompt":"Construct a for loop in Java to increment a counter from 0 to 10.","completion":"for (int i = 0; i < 10; i++) { System.out.println(i); }"},{"prompt":"Analyze an object-oriented program written in Python and suggest changes to improve its technical quality. def main(): my_list = [1,2,3,4] for element in my_list: print(element) if __name__== \\"__main__\\" main()","completion":"The program can be improved to make use of better data structure, such as a list comprehension. This would allow faster iteration over the list and reduce duplicate lines of code. def main(): my_list = [1,2,3,4] my_list = [element for element in my_list] for element in my_list: print(element) if __name__== \\"__main__\\" main()"},{"prompt":"Train a machine learning algorithm to classify objects into one of two classes.","completion":"from sklearn.svm import SVC from sklearn.datasets import load_iris from sklearn.model_selection import train_test_split # Load the iris dataset iris = load_iris() # Split the data into train and test sets X_train, X_test, y_train, y_test = train_test_split(iris.data, iris.target, random_state=0) # Train the model using SVC clf = SVC(kernel='linear', C=1).fit(X_train, y_train) # Predict the labels of the test set y_pred = clf.predict(X_test)"},{"prompt":"Create a serverless application with AWS Lambda.","completion":"Create an AWS Lambda function with associated IAM roles and policies that define the function’s access to related AWS resources. Package your code into a .zip file and upload it to AWS Lambda. Connect the Lambda function to an API Gateway to make your function accessible through an API endpoint."},{"prompt":"Edit a first person narrative created by a GPT model in order to make the narrative more coherent. I was walking in the forest and suddenly I saw a dragon. It was huge and its scales glimmered in the sunlight. It had sharp claws and its eyes were red.","completion":"I was strolling through the dense forest when, out of the corner of my eye, I noticed something large and shimmering in the sunlight. As I approached, I saw a magnificent dragon lounging among the trees. Its scales glinted in the sun's rays and its massive, sharply-clawed feet were planted firmly into the ground. Its eyes burned a deep red as it watched my slow approach."},{"prompt":"Create a HTML page displaying a table holding information about the 10 most populous countries in the world.","completion":"<html> <head> <title>Population of the World</title> </head> <body> <table> <tr> <th>Country</th> <th>Population</th> </tr> <tr> <td>China</td <td>1,439,323,776</td> </tr> <tr> <td>India</td> <td>1,380,004,385</td> </tr> <tr> <td>United States</td> <td>329,064,917</td> </tr> <tr> <td>Indonesia</td> <td>273,523,615</td> </tr> <tr> <td>Pakistan</td> <td>220,892,340</td> </tr> <tr> <td>Brazil</td> <td>212,559,717</td> </tr> <tr> <td>Nigeria</td> <td>206,139,589</td> </tr> <tr> <td>Bangladesh</td> <td>164,689,383</td> </tr> <tr> <td>Russia</td> <td>145,934,462</td> </tr> <tr> <td>Mexico</td> <td>126,577,691</td> </tr> </table> </body> </html>"},{"prompt":"Generate code which returns a random character from a given list of strings. ['apple','orange','pineapple','grape']","completion":"import random def random_character(strings): return random.choice(strings) random_character(['apple','orange','pineapple','grape'])"},{"prompt":"all and set up a database management system called MongoDB.","completion":"1. Download and install the MongoDB server 2. Create data directories, a log file and a configuration file 3. Update configuration entries to reflect storage capacity and logging preferences 4. Start the MongoDB service 5. Create new users, roles and databases 6. Connect applications to MongoDB"},{"prompt":"Create a Java program that takes a list of integers as an argument and computes the longest increasing subsequence. [8, 10, 1, 4, 15, 6, 7]","completion":"public class LongestIncreasingSubsequence { public static int longestSubsequence (int[] nums) { // Base case if (nums.length == 0) { return 0; } int[] dp = new int[nums.length]; dp[0] = 1; int maxLength = 1; for (int i=1; i < nums.length; i++) { int temp = 0; for (int j=0; j < i; j++) { if (nums[j] < nums[i]) { temp = Math.max(dp[j], temp); } } dp[i] = temp + 1; maxLength = Math.max(dp[i], maxLength); } return maxLength; } }"},{"prompt":"mplement an algorithm to subtract two strings, represented as a linked list, in the order they appear in and return the result as a linked list. l1 = [\\"1\\",\\"2\\",\\"3\\"], l2 = [\\"9\\",\\"2\\"]","completion":"def linkedListSubtract(l1, l2): dummy_node = ListNode(0) current = dummy_node carry = 0 while l1 or l2: curr_value1 = 0 curr_value2 = 0 if l1 : curr_value1 += int(l1.val) l1 = l1.next if l2 : curr_value2 += int(l2.val) l2 = l2.next curr_value = curr_value1 - curr_value2 - carry if curr_value < 0 : curr_value += 10 carry = 1 else : carry = 0 current.next = ListNode(str(curr_value)) current = current.next if carry > 0 : current.next = ListNode(str(carry)) return dummy_node.next"},{"prompt":"Write a function in JavaScript to flatten the given array. [1, [[2, 3], 4], 5, [6]]","completion":"function flatten(arr) { const flattened = []; // Call the function recursively const flattenHelper = (a) => { for (let i = 0; i < a.length; i++) { Array.isArray(a[i]) ? flattenHelper(a[i]) : flattened.push(a[i]); } }; flattenHelper(arr); return flattened; }"},{"prompt":"Modify this C program to minimize the number of lines without applying the ternary operator. int min = num1 < num2 ? num1 : num2;","completion":"int min; if (num1 < num2) { min = num1; } else { min = num2; }"},{"prompt":"Build a PHP function to check if two strings are anagrams. s1 = 'abcd'; s2 = 'dcba';","completion":"function is_anagram(s1, s2) { // If the lengths of the strings are not equal, // they cannot be anagrams if (strlen(s1) != strlen(s2)) { return false; } // Create an array and assign value 0 to each character count = array(); for (i = 0; i < strlen(s1); i++) { count[s1[i]] = 0; } // Increase the count of each character found in first string for (i = 0; i < strlen(s1); i++) { count[s1[i]]++; } // Decrease the count of each character found in second string for (i = 0; i < strlen(s2); i++) { count[s2[i]]--; } // If all the counts are 0, then they are anagrams foreach (count as value) { if (value != 0) { return false; } } return true; }"},{"prompt":"Build a script to print the words that have the most occurrences in a given string. \\"This is just a simple string","completion":"def most_occurrences(sentence): freq = {} for word in sentence.split(): freq[word] = freq.get(word, 0) + 1 freq_words = [(freq[word], word) for word in freq] freq_words.sort(reverse=True) print(freq_words[:2]) most_occurrences(\\"This is just a simple string\\")"},{"prompt":"Write a C program that takes an array and its size as an argument and returns its maximum value. int array[] = { 12, 3, 4, 5, 10, 7 };","completion":"#include <stdio.h> int getMax(int arr[], int n) { int i; int max = arr[0]; for (i = 1; i < n; i++) if (arr[i] > max) max = arr[i]; return max; } int main() { int arr[] = { 12, 3, 4, 5, 10, 7 }; int n = sizeof(arr) / sizeof(arr[0]); printf(\\"Maximum element is %d\\", getMax(arr, n)); return 0; }"},{"prompt":"Given the following Python code, identify if it is syntactically correct or not. def add(a b): return a+b","completion":"false"},{"prompt":"Given a string in Python, generate a new string with the same set of characters but in the reverse order. str = \\"abcdefg","completion":"str = \\"gfedcba\\""},{"prompt":"Write a Java program that adds two numbers and checks whether the sum is greater than 5 or not. int x = 3; int y = 4;","completion":"public class Add { public static void main(String[] args) { int x = 3; int y = 4; int sum = x + y; if (sum > 5) { System.out.println(\\"Greater than 5\\"); } else { System.out.println(\\"Less than or equal to 5\\"); } } }"},{"prompt":"Given an array of integers, remove any duplicate numbers and sort the remaining elements in ascending order. arr = [3, 9, 8, 4, 6, 7, 5, 4]","completion":"arr = [3, 4, 5, 6, 7, 8, 9]"},{"prompt":"Separate the words in a given string using a single space. str = \\"thequickbrownfoxjump","completion":"str = \\"the quick brown fox jumps\\""},{"prompt":"Create a program that outputs a spiral array from the given input of a 2D array. [[ 1, 2, 3 ], [ 4, 5, 6 ], [ 7, 8, 9]]","completion":"[1, 2, 3, 6, 9, 8, 7, 4, 5]"},{"prompt":"Compute the sum of all integers from 1 to the given number n.","completion":"def print_sum(n): sum = 0 for i in range(1, n+1): sum += i return sum"},{"prompt":"Develop a program that offers the maximum value from a list of numbers. [2, 10, 7, 15, 8, 11]","completion":"15"},{"prompt":"Create a program that takes in two lists of numbers and computes the maximum difference between the two lists. List 1: [20, 10, 4, 0] List 2: [17, 1, 10, 7, 8]","completion":"19"},{"prompt":"Design an algorithm that computes the minimum number of moves taking an array of integers to a sorted array. [1, 3, 5, 4, 2]","completion":"def minMoves(arr): n = len(arr) moves = 0 for i in range(n): for j in range(n - 1): if arr[j] > arr[j + 1]: temp = arr[j] arr[j] = arr[j + 1] arr[j + 1] = temp moves += 1 return moves"},{"prompt":"Design a function to find the Fibonacci sequence numbers given n. n = 5","completion":"def Fibonacci(n): if n == 0: return 0 elif n == 1: return 1 else: return Fibonacci(n-1) + Fibonacci(n-2)"},{"prompt":"Create a Python script to print out all prime numbers up to and including a given number n.","completion":"def print_prime_numbers(n): for num in range(2, n + 1): is_prime = True for i in range(2, num): if (num % i) == 0: is_prime = False break if is_prime: print(num)"},{"prompt":"Update the code to create a class named Person that contains two instance attributes-name and age. class Person(): # TODO: add name and age instance attribute","completion":"class Person(): def __init__(self, name, age): self.name = name self.age = age"},{"prompt":"Design a function to compute n^2-2n.","completion":"def calculate_n_squared(n): return n**2 - 2*n"},{"prompt":"mplement the algorithm to reverse a singly linked list.","completion":"# Node class class Node: def __init__(self, data): self.data = data self.next = None # LinkedList class class LinkedList: # Function to initialize head def __init__(self): self.head = None def reverse(self): prev = None current = self.head while(current is not None): next = current.next current.next = prev prev = current current = next self.head = prev"},{"prompt":"Compute the sum of all the even numbers and odd numbers in an array of numbers. [1, 2, 3, 4, 5, 6]","completion":"def sum_of_even_odd(arr): even_sum = 0 odd_sum = 0 for i in arr: if i % 2 == 0: even_sum += i else: odd_sum += i return even_sum, odd_sum"},{"prompt":"Create a regex pattern to match a string that contains two words separated by a single space.","completion":"import re pattern = re.compile(r\\"w+sw+\\")"},{"prompt":"Create a script in Bash to print the 1st and 3rd program arguments.","completion":"#!/bin/bash echo 1 echo 3"},{"prompt":"Write a Python script to check if two string variables are anagrams or not.","completion":"def is_anagram(str1, str2): # removing all whitespace from strings str1 = ''.join(str1.split()) str2 = ''.join(str2.split()) # create list for each string list_str1 = list(str1.upper()) list_str2 = list(str2.upper()) # sort the list list_str1.sort() list_str2.sort() # checking if both lists are identical or not if (list_str1 == list_str2): return True else: return False"},{"prompt":"Replace the following PHP code with an equivalent JavaScript code someNumber = 10;","completion":"let someNumber = 10;"},{"prompt":"Create a JSON object with the key 'name' and the value 'John'.","completion":"{ \\"name\\": \\"John\\" }"},{"prompt":"Suggest a more efficient way to write the following for loop. for (i = 0; i < arr.length; i++) { console.log(arr[i]); }","completion":"arr.forEach(item => console.log(item));"},{"prompt":"Edit the following CSS class to display a square box with a border-radius of 10px .square { width: 100px; height: 100px; }","completion":".square { width: 100px; height: 100px; border-radius: 10px; }"},{"prompt":"Convert the following string \\"The quick brown fox jumps over the lazy dog\\" to an array","completion":"[\\"The\\", \\"quick\\", \\"brown\\", \\"fox\\", \\"jumps\\", \\"over\\", \\"the\\", \\"lazy\\", \\"dog\\"]"},{"prompt":"Name a specific package that can be used to implement a REST API in Node.js","completion":"The Express.js package can be used to implement a REST API in Node.js."},{"prompt":"Write a script that prints out the current value of environment variables","completion":"For example, using Node.js: Object.keys(process.env).forEach(key => { console.log(\`{key}: {process.env[key]}\`); });"},{"prompt":"Use the reduce function to calculate the product of elements in an array [1, 2, 3, 4, 5]","completion":"const product = arr.reduce((acc, curr) => acc * curr, 1);"},{"prompt":"Develop a C++ function to update the contents of an integer array. The int array contains {1, 2, 3, 4, 5}. Update the array so that it contains {2, 4, 6, 8, 10}.","completion":"void updateArray (int arr[], int n) { for (int i=0; i<n; i++) arr[i] = arr[i] * 2; }"},{"prompt":"Rewrite the following code segment using Java 1.8's Lambda Expressions. BiFunction<Double, Double, Double> bf = new BiFunction<Double, Double, Double>() { public Double apply(Double d1, Double d2) { return (d1*d2)/2; } }","completion":"BiFunction <Double, Double, Double> bf = (d1, d2) -> (d1*d2)/2;"},{"prompt":"Generate a web service function in Python to return the current date and time.","completion":"import datetime def get_current_time(): now = datetime.datetime.now() return now.strftime(\\"%Y-%m-%d %H:%M:%S\\")"},{"prompt":"Model a NoSQL database using CosmosDB The database should store user posts, which consists of the post ID, content text, user ID and date of creation.","completion":"Azure Cosmos DB is a NoSQL database-as-a-service model that provides a schema-free data model and supports automatic indexing of all data. To model a posts database with CosmosDB, create a database and a container. Then create item in the container, each item should contain the fields \\"Post ID\\", \\"ContentText\\", \\"User ID\\" and \\"Date of Creation\\". These fields should be indexed to allow for efficient queries and retrieval of the posts data."},{"prompt":"Write a SASS mixin to add shadow style to multiple elements","completion":"@mixin myshadow(shdwBlur, shdwColor) { -webkit-box-shadow : 0 0 shdwBlur shdwColor; -moz-box-shadow : 0 0 shdwBlur shdwColor; box-shadow : 0 0 shdwBlur shdwColor; }"},{"prompt":"Design a JavaScript class to instantiate objects for student records. The student records should store the student name, age, and score of the last test.","completion":"class Student { constructor(name, age, lastScore) { this.name = name; this.age = age; this.lastScore = lastScore; } }"},{"prompt":"Modify the following code segment to add multiple values in an array var myArray = []; myArray[0] = 'x';","completion":"var myArray = []; myArray.push('x', 'y', 'z');"},{"prompt":"Design a MySQL table with 3 columns to store the order details The columns should include Product No, Quantity, and Price.","completion":"CREATE TABLE order_details ( product_no VARCHAR(20) NOT NULL, quantity INT NOT NULL, price DECIMAL(10,2) );"},{"prompt":"Write code using the NumPy random library to simulate the rolling of two fair six-sided dice.","completion":"import numpy as np np.random.seed(0) # simulate the rolling of two fair six-sided dice outcomes = np.random.randint(1,7, size=(2,2)) print(outcomes)"},{"prompt":"Generate a dictionary with 10 elements and display it.","completion":"dictionary = { 'A': 'Apple', 'B': 'Ball', 'C': 'Cat', 'D': 'Dog', 'E': 'Elephant', 'F': 'Fish', 'G': 'Goat', 'H': 'Horse', 'I': 'Ink', 'J': 'Jelly' } print(dictionary)"},{"prompt":"Given an array, find the 2 elements which have the largest sum. arr = [2, 8, 3, 5, 10, 1]","completion":"def find_largest_sum(arr): max_sum = 0 first_ele = arr[0] sec_ele = arr[1] for i in range(0, len(arr)): for j in range(i+1, len(arr)): curr_sum = arr[i] + arr[j] if curr_sum > max_sum: max_sum = curr_sum first_ele = arr[i] sec_ele = arr[j] return [first_ele, sec_ele] print(find_largest_sum(arr)) # outputs [10, 8]"},{"prompt":"Write code to create an SQLite table called \\"Students\\" with 5 columns: student_id, name, age, class, and grade.","completion":"# Import sqlite3 module import sqlite3 # Connect to the Students.db database conn = sqlite3.connect('Students.db') # Create the Students table conn.execute(\\"\\"\\" CREATE TABLE Students ( student_id INTEGER PRIMARY KEY, name TEXT NOT NULL, age INTEGER NOT NULL, class TEXT NOT NULL, grade INTEGER NOT NULL); \\"\\"\\") conn.close()"},{"prompt":"Generate a query to find the name and age of all students whose age is greater than 18.","completion":"SELECT name, age FROM students WHERE age > 18;"},{"prompt":"mplement a recursive function that finds the nth number in the Fibonacci sequence.","completion":"def fibonacci(n): if n == 0: return 0 elif n == 1: return 1 else: return fibonacci(n-1) + fibonacci(n-2) print(fibonacci(5)) # outputs 5"},{"prompt":"Write a code to delete white space from this sentence. This is a sentence with extra white space.","completion":"sentence = 'This is a sentence with extra white space.' sentence = sentence.replace(' ', '') print(sentence) # outputs 'Thisisasentencewithextrawhitespace.'"},{"prompt":"Use HTML to create a webpage which featured a table.","completion":"<html> <head> <title>Page Title</title> </head> <body> <h1>My Table Webpage</h1> <table> <tr> <th>Column 1</th> <th>Column 2</th> </tr> <tr> <td>Row 1, Column 1</td> <td>Row 1, Column 2</td> </tr> <tr> <td>Row 2, Column 1</td> <td>Row 2, Column 2</td> </tr> <tr> <td>Row 3, Column 1</td> <td>Row 3, Column 2</td> </tr> </table> </body> </html>"},{"prompt":"Use CSS to style an HTML paragraph. <p> This is a sample paragraph. </p>","completion":"<p style=\\"font-family: Arial, sans-serif; font-size: 1.2em; color: #1a1a1a; line-height: 1.8em;\\">This is a sample paragraph.</p>"},{"prompt":"Use C++ to implement the bubble sort algorithm.","completion":"void bubbleSort(int arr[], int n) { int i, j; for (i = 0; i < n-1; i++) // Last i elements are already in place for (j = 0; j < n-i-1; j++) if (arr[j] > arr[j+1]) swap(&arr[j], &arr[j+1]); }"},{"prompt":"Manipulate a 2D array in Python such that it consists of the maximum value of each column. array = [[1, 2, 3], [4, 5, 6], [7, 8, 9]]","completion":"array = [[7, 8, 9], [7, 8, 9], [7, 8, 9]] def max_columns(array): for col in range(len(array[0])): m = array[0][col] for row in array: if row[col] > m: m = row[col] for row in range(len(array)): array[row][col] = m return array"},{"prompt":"Write a PHP script to get the length of a string. string = \\"Hello World!","completion":"<?php string = \\"Hello World!\\"; echo strlen(string); ?>"},{"prompt":"Create an object in JavaScript which produces some random number when the object is called.","completion":"let randomNumber = { getNumber: function() { return Math.floor(Math.random() * 10); } } let myNum = randomNumber.getNumber(); // Possible output: 5"},{"prompt":"Discover and remove redundant code from this C++ program. #include <iostream> int main() { int a = 3; int b = 3; a++; b++; int c = 10; a++; b++; std::cout << a << \\" \\" << b << \\" \\" << c << std::endl; return 0; }","completion":"#include <iostream> int main() { int a = 3; int b = 3; a++; b++; int c = 10; std::cout << a << \\" \\" << b << \\" \\" << c << std::endl; return 0; }"},{"prompt":"Create a function which prints out squares of all numbers from 1 to a given number in JavaScript.","completion":"function printSquares(n) { for (let i = 1; i <= n; i++) { console.log(i*i) } }"},{"prompt":"Create a SQL query to display unique job titles from the the table \\"employees\\"? Table name: employees Columns: employee_id, job_title","completion":"SELECT DISTINCT job_title FROM employees;"},{"prompt":"Balance the following reaction equation? NaOH + H2SO4 →","completion":"NaOH + H2SO4 → Na2SO4 + 2H2O."},{"prompt":"Describe in English the function of this Javascript code. function addUser(username, age) { const user = { name: username, age: age }; return user; }","completion":"This Javascript code defines a function called 'addUser' which takes two parameters: username and age. It creates a 'user' object with the username and age as its properties and returns the object."},{"prompt":"Write a SQL query to get the names of all customers with orders that have a total cost greater than 100. Table names: customers, orders Table columns: customers(customer_id, customer_name), orders(order_id, customer_id, order_cost).","completion":"SELECT c.customer_name FROM customers c INNER JOIN orders o ON c.customer_id = o.customer_id WHERE o.order_cost > 100;"},{"prompt":"Create a C++ class to print the \\"Hello World!\\" string.","completion":"#include <iostream> using namespace std; class HelloWorld { public: HelloWorld() { cout << \\"Hello World!\\" << endl; } }; int main() { HelloWorld hw; return 0; }"},{"prompt":"Write a for-loop in Java for printing the numbers from 1 to 10 with a space separating each number.","completion":"for (int i = 1; i <= 10; i++) { System.out.print(i + \\" \\"); }"},{"prompt":"C#, write a loop to sum up a given array of numbers. int[] numbers = {1, 2, 3, 4, 5};","completion":"int sum = 0; for(int i = 0; i < numbers.length; i++) { sum += numbers[i]; }"},{"prompt":"Proposition some ideas for a C++ program to calculate the average price of a product given its list of purchased items.","completion":"One possible solution would involve creating a program that takes a list of purchased items and calculates the average price of the product. The program could take the following steps: 1. Sum the prices of all items in the list. 2. Divide the sum by the number of items in the list. 3. Output the average price of the product."},{"prompt":"Propose an algorithm in Python for sorting a given list of numbers in descending order.","completion":"One possible solution would be to use a variation of the bubble sort algorithm, where the elements are being swapped from the last element to the first element. def sort_numbers_descending(elements): n = len(elements) # Traverse through all elements for i in range(n-1): # Last i elements are already in place for j in range(n-1-i): # Swap if the element found is greater # than the next element if elements[j] < elements[j+1]: temp = elements[j] elements[j] = elements[j+1] elements[j+1] = temp return elements"},{"prompt":"Explain in plain English the difference between the set() and list() methods in Python.","completion":"The main difference between sets and lists in Python is the way the elements are stored. Lists store the elements in an ordered sequence, whereas sets store the elements in an unordered set. Sets are faster in terms of performance because they do not have duplicate elements. This means that when checking if an element exists in a set, the process is faster than checking for elements in a list. Furthermore, sets also do not allow for indexing, as the elements are unordered."},{"prompt":"Create a basic UI in HTML/CSS for a shopping cart website.","completion":"<!DOCTYPE html> <html> <head> <title>Shopping Cart</title> <style> body { margin: 0px; } #container { width: 100%; height: 100%; display: flex; flex-direction: column; } #header { height: 100px; background-color: #eee; display: flex; align-items: center; justify-content: center; } #content { flex: 1; background-color: #ccc; } #footer { height: 100px; background-color: #eee; display: flex; align-items: center; justify-content: center; } </style> </head> <body> <div id=\\"container\\"> <div id=\\"header\\"> <h1>Shopping Cart</h1> </div> <div id=\\"content\\"> <!-- Content here --> </div> <div id=\\"footer\\"> &copy; All rights reserved </div> </div> </body> </html>"},{"prompt":"Rewrite the following recursive algorithm in Java. def recursive(n): if n == 0: return 0 else: return n + recursive(n-1)","completion":"public static int recursive(int n) { if (n == 0) { return 0; } else { return n + recursive(n - 1); } }"},{"prompt":"Write a script in PHP for generating a random alphanumeric string of length 10.","completion":"<?php function generateRandomString(length = 10) { characters = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'; charactersLength = strlen(characters); randomString = ''; for (i = 0; i < length; i++) { randomString .= characters[rand(0, charactersLength - 1)]; } return randomString; } echo generateRandomString(10);"},{"prompt":"Create an API in Go that takes a string and returns the amount of words present in the given string.","completion":"package main import ( \\"fmt\\" \\"strings\\" ) func CountWords(str string) int { return len(strings.Fields(str)) } func main() { result := CountWords(\\"The quick brown fox jumps over the lazy dog\\") fmt.Println(result) // Output: 9 }"},{"prompt":"Write a class in Ruby that implements the following methods: \`add\`, \`subtract\`, \`multiply\`, and \`divide\`.","completion":"class Arithmetic def add(x, y) x + y end def subtract(x, y) x - y end def multiply(x, y) x * y end def divide(x, y) x.to_f / y end end"},{"prompt":"Create a function in Python to find all pairs of integers that sum up to k.","completion":"def find_pair(arr,k): pairs = [] found_elements = set() for num in arr: diff = k - num if diff in found_elements: pairs.append([min(num,diff), max(num,diff)]) found_elements.add(num) return pairs"},{"prompt":"Write a C++ program that reads in a series of integers and prints out the most frequent.","completion":"#include <iostream> #include <algorithm> using namespace std; void mostFrequent(int arr[], int n) { sort(arr, arr + n); int max_count = 1, res = arr[0], curr_count = 1; for (int i = 1; i < n; i++) { if (arr[i] == arr[i - 1]) curr_count++; else { if (curr_count > max_count) { max_count = curr_count; res = arr[i - 1]; } curr_count = 1; } } if (curr_count > max_count) { max_count = curr_count; res = arr[n - 1]; } cout << \\"Most frequent element is: \\"<< res; } int main() { int arr[] = { 1, 5, 2, 1, 3, 2, 5 }; int n = sizeof(arr) / sizeof(arr[0]); mostFrequent(arr, n); return 0; }"},{"prompt":"Design an algorithm in Python to retrieve all elements in a given array that occur only once.","completion":"def singleOccurence(arr): ans = [] for i in range(len(arr)): count = 0 for j in range(len(arr)): if arr[i] == arr[j]: count+=1 if count == 1: ans.append(arr[i]) return ans"},{"prompt":"Create a program in Javascript that takes an array of numbers and an integer and returns an array containing only the numbers that are larger than the given integer. Array of numbers: [4, 8, 12, 7, 3] Integer: 7","completion":"function filterBiggerThan(arr, num) { return arr.filter(n => n > num); }"},{"prompt":"Create a sorting algorithm to order a given array. [ 2 , 8 , 3 , 10 , 16 ]","completion":"def sort_array(arr): for i in range(len(arr) - 1): min_index = i for j in range(i + 1, len(arr)): if arr[j] < arr[min_index]: min_index = j arr[i], arr[min_index] = arr[min_index], arr[i] # swap return arr"},{"prompt":"Represent the following expression using a program x = 5, y = 3","completion":"x = 5 y = 3 result = x + y print(result)"},{"prompt":"w can you use a function to determine whether a given array is in increasing or decreasing order or unordered?","completion":"def check_order(arr): order = 0 if arr[0] < arr[1]: order = 1 elif arr[0] > arr[1]: order = -1 for i in range(1, len(arr)-1): if arr[i] > arr[i+1] and order == 1: return 0 elif arr[i] < arr[i+1] and order == -1: return 0 return order"},{"prompt":"Create a Python dictionary object {'a':1, 'b':2, 'c':3}","completion":"mydict = {'a':1, 'b':2, 'c':3}"},{"prompt":"Write a Java program to generate the following patterns using a for loop. * ** *** ****","completion":"public class Pattern { public static void main(String[] args) { for (int i = 1; i <= 4; i++) { for (int j = 1; j <= i; j++ ) System.out.print(\\"*\\"); System.out.println(); } } }"},{"prompt":"Write a JavaScript program to clone a given object.","completion":"function clone(obj) { let cloneobj = {}; for (let key in obj) { if (obj.hasOwnProperty(key)) { cloneobj[key] = obj[key]; } } return cloneobj; }"},{"prompt":"Write a function which takes a list and an additional argument, and returns the elements of the list which are greater than the argument. list = [10, 20, 30, 40, 50, 60] argument = 25","completion":"def greater(list, argument): output = [] for int in list: if int > argument: output.append(int) return output"},{"prompt":"Write a query to retrieve the names of customers from the Customers table who have orders in the Orders table.","completion":"SELECT customers.name FROM customers INNER JOIN orders ON customers.id = orders.customer_id"},{"prompt":"Write a function which takes in a list containing integers, strings and floats and returns the sum of all numbers in the list. list = [2, 'John', 8.2, 3.4, 11]","completion":"def sum_numbers(lst): sum = 0 for item in lst: if type(item) == int or type(item) == float: sum += item return sum"},{"prompt":"Write a query to list the names and total order amount of customers who have purchased any item from the Items table.","completion":"SELECT customers.name, SUM(items.price * orders.quantity) AS total FROM customers INNER JOIN orders ON customers.id = orders.customer_id INNER JOIN items ON orders.item_id = items.id GROUP BY customers.name"},{"prompt":"Create a GUI that displays text and a button.","completion":"import tkinter as tk root = tk.Tk() tk.Label(root, text='Hello World!').pack() tk.Button(root, text=\\"Click Me!\\").pack() root.mainloop()"},{"prompt":"Create a mySQL script to create a table called \\"User\\" with columns user_id, name, and mobile_number?","completion":"CREATE TABLE User ( user_id int NOT NULL AUTO_INCREMENT PRIMARY KEY, name varchar(50) NOT NULL, mobile_number varchar(20) NOT NULL );"},{"prompt":"Write a SQL query to find the count of all customers whose age is more than 20?","completion":"SELECT COUNT(*) FROM customers c WHERE c.age > 20;"},{"prompt":"Write a Python function to remove punctuation from a given sentence. The quick brown fox jumps over the lazy dog!","completion":"def remove_punctuation(sentence): punctuation_marks = '''!()-[]{};:'\\",<>./?@#%^&*_~''' new_sentence = \\"\\" for char in sentence: if char not in punctuation_marks: new_sentence += char return new_sentence"},{"prompt":"Given a list of positive integers, write a program to find two elements whose sum equals a given target value. [1, 2, 3, 4, 5], 4","completion":"def find_sum_target(nums, target): for i in range(len(nums) - 1): for j in range(i+1, len(nums)): if nums[i] + nums[j] == target: return [nums[i], nums[j]] return []"},{"prompt":"Write a Python function to generate a list of Fibonacci numbers up to the given limit n.","completion":"def generate_fibonacci(n): fibonacci_list = [0, 1] for i in range(2, n+1): fibonacci_list.append(fibonacci_list[i-2] + fibonacci_list[i-1]) return fibonacci_list"},{"prompt":"Create a basic Java program that implements a binary search tree.","completion":"class BinarySearchTree { Node root; /* Class containing left and right child of current node and key value*/ class Node { int key; Node left, right; public Node(int item) { key = item; left = right = null; } } // Constructor BinarySearchTree() { root = null; } // This method mainly calls insertRec() void insert(int key) { root = insertRec(root, key); } /* A recursive function to insert a new key in BST */ Node insertRec(Node root, int key) { /* If the tree is empty, return a new node */ if (root == null) { root = new Node(key); return root; } /* Otherwise, recur down the tree */ if (key < root.key) root.left = insertRec(root.left, key); else if (key > root.key) root.right = insertRec(root.right, key); /* return the (unchanged) node pointer */ return root; } // This method mainly calls InorderRec() void inorder() { inorderRec(root); } // A utility function to do inorder traversal of BST void inorderRec(Node root) { if (root != null) { inorderRec(root.left); System.out.println(root.key); inorderRec(root.right); } } // Driver Program to test above functions public static void main(String[] args) { BinarySearchTree tree = new BinarySearchTree(); /* Let us create following BST 50 / 30 70 / / 20 40 60 80 */ tree.insert(50); tree.insert(30); tree.insert(20); tree.insert(40); tree.insert(70); tree.insert(60); tree.insert(80); // print inorder traversal of the BST tree.inorder(); } }"},{"prompt":"Modify the following code to remove all punctuation and special characters. function removeSpecialCharacters(str) { var pattern = new RegExp(\\"[ \`!@#%^&*()+-=[]{};':\\"|,.<>/?~]\\"); return str.replace(pattern, ''); }","completion":"function removeSpecialCharacters(str) { var pattern = new RegExp(\\"[^a-zA-Z0-9]\\"); return str.replace(pattern, ''); }"},{"prompt":"Write a Java program to print out the lyrics of the song “Mary Had a Little Lamb”.","completion":"public class Lyrics { public static void main(String[] args) { System.out.println(\\"Mary had a little lamb,\\"); System.out.println(\\"Little lamb, little lamb,\\"); System.out.println(\\"Mary had a little lamb,\\"); System.out.println(\\"Its fleece was white as snow.\\"); System.out.println(); System.out.println(\\"And everywhere that Mary went,\\"); System.out.println(\\"Mary went, Mary went,\\"); System.out.println(\\"Everywhere that Mary went,\\"); System.out.println(\\"The lamb was sure to go.\\"); } }"},{"prompt":"w would you design the data structure to store and process results from a 5-choice multiple choice test.","completion":"class TestResults { // A map containing the question id as key and the selected answer as value Map<Integer, Integer> answers; // A map containing the question id as key and a boolean indicating whether the answer was correct or not as value Map<Integer, Boolean> scores; // A map containing the question id as key and a list of all the possible answers as value Map<Integer, List<String>> questions; public TestResults(Map<Integer, Integer> answers, Map<Integer, Boolean> scores, Map<Integer, List<String>> questions) { this.answers = answers; this.scores = scores; this.questions = questions; } public Map<Integer, Integer> getAnswers() { return answers; } public Map<Integer, Boolean> getScores() { return scores; } public Map<Integer, List<String>> getQuestions() { return questions; } }"},{"prompt":"Write an HTML function that renders a Text Area on a website.","completion":"<textarea rows=\\"4\\" cols=\\"50\\"></textarea>"},{"prompt":"w would you create a website that provides users with their daily horoscopes?","completion":"The website should provide the users with an interface to select their star sign from a drop-down list. When the user selects their star sign, the website should display their daily horoscope. To achieve this, the website should connect to a database which contains the daily horoscopes for each of the star signs."},{"prompt":"Describe how you would use a dictionary to reverse a string.","completion":"A dictionary can be used to reverse a string by mapping each character to its reversed counterpart. Create a dictionary with all the characters from the string as keys and their reversed version as the values. To reverse a string, iterate through it and look up each character in the dictionary and add its value to a new string. Once all the characters have been reversed, the new string is the reversed version of the original."},{"prompt":"Write a Python script that randomly shuffles the elements of a given array. list = [1, 2, 3, 4, 5]","completion":"import random def shuffle(arr): random.shuffle(arr) return arr result = shuffle([1, 2, 3, 4, 5]) print(result)"},{"prompt":"Convert the following enum type expression in Java for days of the week to equivalent C# syntax. enum Weekday {SUNDAY, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY};","completion":"enum Weekday { Sunday, Monday, Tuesday, Wednesday, Thursday, Friday, Saturday };"},{"prompt":"Create a SQL query to join two tables based on their common fields. Table1 (field1, field2, field3) Table2 (field2, field4, field5)","completion":"SELECT * FROM Table1 INNER JOIN Table2 ON Table1.field2 = Table2.field2"},{"prompt":"Convert the given code in Java to an equivalent expression in Python. int x = 10;","completion":"x = 10"},{"prompt":"You need to write a function to check if given input is a palindrome string. string = \\"level","completion":"def is_palindrome(string): left = 0 right = len(string) - 1 while right >= left: if string[left] != string[right]: return False left += 1 right -= 1 return True"},{"prompt":"Create a program that prints out a list of all numbers from 0 to 10, except for five.","completion":"for num in range(11): if num != 5: print(num)"},{"prompt":"You need to convert the following statement in SQL to equivalent PostgreSQL syntax. SELECT * FROM Table WHERE Name='John'","completion":"SELECT * FROM Table WHERE Name = 'John'"},{"prompt":"Create a program to find the largest common factor in two numbers. 24 and 48","completion":"def hcf(x, y): if x > y: smaller = y else: smaller = x for i in range(1, smaller+1): if((x % i == 0) and (y % i == 0)): hcf = i return hcf x = 24 y = 48 print (\\"The H.C.F. of 24 and 48 is\\", hcf(x, y))"},{"prompt":"mplement a Class in Java that creates a new array of two integers and allows the user to set and get the values of the array.","completion":"public class TwoIntegers { private int[] twoIntegers; public TwoIntegers() { twoIntegers = new int[2]; } public int getFirst() { return twoIntegers[0]; } public int getSecond() { return twoIntegers[1]; } public void setFirst(int first) { twoIntegers[0] = first; } public void setSecond(int second) { twoIntegers[1] = second; } }"},{"prompt":"Design a data structure in Java to store student records which includes Roll Number, Name, and Grade of the student.","completion":"public class Student { private int rollNumber; private String name; private int grade; public Student (int rollNumber, String name, int grade) { this.rollNumber = rollNumber; this.name = name; this.grade = grade; } public int getRollNumber() { return this.rollNumber; } public String getName() { return this.name; } public int getGrade() { return this.grade; } }"},{"prompt":"Use CSS to style an HTML table with a heading and 6 rows and 4 columns.","completion":"<html> <head> <style> table { border-collapse: collapse; width: 100%; } th, td { text-align: left; padding: 8px; } tr:nth-child(even) { background-color: #f2f2f2; } </style> </head> <body> <table> <tr> <th>Heading1</th> <th>Heading2</th> <th>Heading3</th> <th>Heading4</th> </tr> <tr> <td>row1_col1</td> <td>row1_col2</td> <td>row1_col3</td> <td>row1_col4</td> </tr> <tr> <td>row2_col1</td> <td>row2_col2</td> <td>row2_col3</td> <td>row2_col4</td> </tr> <tr> <td>row3_col1</td> <td>row3_col2</td> <td>row3_col3</td> <td>row3_col4</td> </tr> <tr> <td>row4_col1</td> <td>row4_col2</td> <td>row4_col3</td> <td>row4_col4</td> </tr> <tr> <td>row5_col1</td> <td>row5_col2</td> <td>row5_col3</td> <td>row5_col4</td> </tr> <tr> <td>row6_col1</td> <td>row6_col2</td> <td>row6_col3</td> <td>row6_col4</td> </tr> </table> </body> </html>"},{"prompt":"Create a MySql query to find all the students with a grade above 8.","completion":"SELECT * FROM students WHERE grade > 8;"},{"prompt":"Design a MongoDB schema for a collection to store books with fields for title, author and ISBN.","completion":"{ \\"_id\\": ObjectId(), \\"title\\": String, \\"author\\": String, \\"ISBN\\": String }"},{"prompt":"Construct a for loop in JavaScript to iterate through an array of strings and print out each one.","completion":"let strArray = [\\"Hello\\", \\"World\\", \\"!\\"]; for(let i = 0; i < strArray.length; i++) { console.log(strArray[i]); }"},{"prompt":"Generate an HTML list with the following entries: Apple Banana Cherry","completion":"<ul> <li>Apple</li> <li>Banana</li> <li>Cherry</li> </ul>"},{"prompt":"A function needs to be created that will take a list of strings and return a list of the same strings without duplicates. list_of_strings = [\\"a\\", \\"b\\", \\"c\\", \\"a\\", \\"d\\"]","completion":"def remove_duplicates(list_of_strings): \\"\\"\\" This function will take a list of strings and return a list of the same strings without duplicates. \\"\\"\\" unique_strings = list(set(list_of_strings)) return unique_strings list_of_strings = [\\"a\\", \\"b\\", \\"c\\", \\"a\\", \\"d\\"] print(remove_duplicates(list_of_strings))"},{"prompt":"Create a function that will validate if a given date is in the correct format. date = '12/04/2021'","completion":"def validate_date(date): \\"\\"\\" This function will validate if a given date is in the correct format. \\"\\"\\" try: year, month, day = date.split('/') int(year) int(month) int(day) isValidDate = True except: isValidDate = False return isValidDate date = '12/04/2021' print(validate_date(date))"},{"prompt":"Write a function that will format a given string in proper title case. title = 'the quick brown fox'","completion":"def format_title(title): \\"\\"\\" This function will format a given string in proper title case. \\"\\"\\" formatted_title = ' '.join([word[0].upper() + word[1:] for word in title.split()]) return formatted_title title = 'the quick brown fox' print(format_title(title))"},{"prompt":"eate a function to compare two strings and return a boolean depending on their equality or inequality. string1 = 'hello' string2 = 'world'","completion":"def compare_strings(string1, string2): \\"\\"\\" This function will compare two strings and return a boolean depending on their equality or inequality. \\"\\"\\" is_same = string1 == string2 return is_same string1 = 'hello' string2 = 'world' print(compare_strings(string1, string2))"},{"prompt":"Write a Python program to analyze the sentiment of a given text. The restaurant food was terrible.","completion":"import nltk from nltk.sentiment.vader import SentimentIntensityAnalyzer sia = SentimentIntensityAnalyzer() sentiment = sia.polarity_scores(input_text) print(sentiment) # {'neg': 0.404, 'neu': 0.596, 'pos': 0.0, 'compound': -0.7424}"},{"prompt":"w does the Fibonacci number sequence work?","completion":"The Fibonacci sequence is a sequence of numbers where each number in the sequence is the sum of the two numbers preceding it. The first two numbers in the sequence are 0 and 1. The sequence starts with 0 and 1 and continues by adding the two previous numbers to get the next number in the sequence. For example, the first six numbers in the Fibonacci sequence are 0, 1, 1, 2, 3, 5. The sequence can be represented as 0, 1, 1, 2, 3, 5, 8, 13, 21, 34, and so on."},{"prompt":"Edit the following Java code to round a number to two decimal places. double num = 3.14159;","completion":"double num = 3.14159; num = Math.round(num * 100.0) / 100.0; System.out.println(num); // Output: 3.14"},{"prompt":"Describe the process of debugging a code.","completion":"Debugging is the process of identifying and fixing errors in the code. It involves finding the root cause of the error and removing it. The process of debugging involves isolating the offending code, identifying the bug, obtaining an understanding of why the bug occurred, determining if a fix can be made (without breaking any other code), testing the fix and re-running the code to ensure the bug is fixed."},{"prompt":"Create a functional programming paradigm in Python.","completion":"def functional_programming(lst): return list(map(lambda x : x*2, filter(lambda x : x % 2 == 0, lst))) print(functional_programming([1,2,3,4,5])) # Output: [4, 8]"},{"prompt":"Design an algorithm in JavaScript to find maximum element within an array. [4,7,2,1,0,6,5]","completion":"function findMax(arr) { let max = arr[0]; // Loop through array elements // and compare with max for (let i = 1; i < arr.length; i++) if (arr[i] > max) max = arr[i]; // return max element return max; } // let arr = [4,7,2,1,0,6,5] // console.log(findMax(arr)) # returns 7"},{"prompt":"Describe the data structures used to implement a stack data structure.","completion":"Data structures used to implement a stack data structure are as follows - linked lists, arrays, dynamic arrays, and resizable arrays. Linked lists are used when the stack size needs to change frequently as this ensures that space is not wasted. Whereas, for a fixed stack size, arrays can be used. A dynamic array is an array with a pre-allocated capacity, so if the stack size exceeds the capacity of the array then it will resize itself to accommodate the new stack size. Lastly, resizable arrays adjust the capacity automatically when new items are added or existing items are removed."},{"prompt":"Design a network for sending data from a server to a client.","completion":"The network should include a server to send data, and a client to receive data. The server should have a dedicated IP address and listening port to receive instructions from the client, such as HTTP requests. The client should have a unique IP address, and should connect to the server to request data. Both the client and server should have the necessary network infrastructure for data transmission, such as routers, gateways, and firewalls."},{"prompt":"Execute a basic SQL query using C#.","completion":"// Create and open a connection string connString = \\"Data Source=localhost;Database=A;User ID=ads;Password=adspassword;\\"; SqlConnection conn = new SqlConnection(connString); conn.Open(); // Create a SQL command string Sql = \\"SELECT * FROM Customer\\"; // Execute a basic SQL query SqlCommand command = new SqlCommand(Sql, conn); SqlDataReader dataReader = command.ExecuteReader(); // Read the results while (dataReader.Read()) { Console.WriteLine(String.Format(\\"{0} {1} {2}\\", dataReader[\\"customerID\\"], dataReader[\\"customerName\\"], dataReader[\\"customerCity\\"])); } //close the connection conn.Close();"},{"prompt":"Explain the concept of permission levels in Linux.","completion":"In Linux, permission levels are used to control access to various files and directories. The permission levels are represented by a triplet of numbers set for user (owner), group, and others. An effective way of applying these permission levels is to first assign an appropriate permission level (i.e. read, write, execute) to each category, and then adjust the individual files or directories that require additional security. This can be done by restricting certain operations (e.g. writing or executing a file) to specific users or groups."},{"prompt":"Describe the features of HTML.","completion":"HTML (Hyper Text Markup Language) is the standard markup language for structuring content for the web. It includes features such as support for images, multimedia (audio, video, animations), tables, forms, lists, direct linking of multimedia content and external documents. HTML also supports the interactive use of JavaScript, which allows it to be used to create dynamic and responsive websites. Additionally, HTML can support the creation of documents that are accessible to those using assistive technologies, such as screen readers."},{"prompt":"Python, write a script that prints out the elements of a list. list = [1, 2, 3, 4, 5]","completion":"list = [1, 2, 3, 4, 5] for x in list: print(x)"},{"prompt":"Write a line of HTML code to set a bulleted list.","completion":"<ul> <li>Item 1</li> <li>Item 2</li> <li>Item 3</li> </ul>"},{"prompt":"Write a line of C code to declare a 2D array of size 5x5.","completion":"int array[5][5];"},{"prompt":"Write a SQL statement to select the names and IDs of customers from the customers table that live in California.","completion":"SELECT name, id FROM customers WHERE state = 'California';"},{"prompt":"Can you make some changes so that the following C code compiles correctly? #include <stdio.h> int main() { printf(\\"Hello World!\\") return 0 }","completion":"#include <stdio.h> int main() { printf(\\"Hello World!\\"); return 0; }"},{"prompt":"Write a PHP script that creates a MySQL database table with three fields: \\"ID\\", \\"name\\", and \\"age\\".","completion":"<?php servername = \\"localhost\\"; username = \\"username\\"; password = \\"password\\"; dbname = \\"myDB\\"; // Create connection conn = new mysqli(servername, username, password, dbname); // Check connection if (conn->connect_error) { die(\\"Connection failed: \\" . conn->connect_error); } // sql to create table sql = \\"CREATE TABLE MyTable ( id INT(6) UNSIGNED AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL, age VARCHAR(255) )\\"; if (conn->query(sql) === TRUE) { echo \\"Table MyTable created successfully\\"; } else { echo \\"Error creating table: \\" . conn->error; } conn->close(); ?>"},{"prompt":"Given a string of integers, create a method to generate an array in which each integer is added to the sum of its neighbors. s = \\"3456","completion":"def generate_sum_array(s): res = [int(s[0])] for i in range(1, len(s)): res.append(int(s[i-1]) + int(s[i])) res.append(int(s[-1])) return res # Output: [3, 8, 11, 13]"},{"prompt":"Given an array of objects, write a function that sorts the array in ascending order of its \\"price\\" property. [ {'name': 'Laptop', 'price': 1200}, {'name': 'Monitor', 'price': 500}, {'name': 'Mouse', 'price': 50} ]","completion":"def sort_by_price(arr): arr.sort(key=lambda item: item['price']) return arr # Output: [{'name': 'Mouse', 'price': 50}, {'name': 'Monitor', 'price': 500}, {'name': 'Laptop', 'price': 1200}]"},{"prompt":"Create a SQL query that counts the number of users in a given table. Table name: user","completion":"SELECT COUNT(*) FROM users"},{"prompt":"Create a method that deletes all the empty elements from a given array of strings. arr = [\\"a\\", \\"\\", \\"b\\", \\"\\", \\"c\\"]","completion":"def delete_empty_elements(arr): return [e for e in arr if e] # Output: [\\"a\\", \\"b\\", \\"c\\"]"},{"prompt":"Write an algorithm to convert a given 2D matrix into a 1D array. matrix = [[1,2,3],[4,5,6]]","completion":"def convert_matrix_to_array(matrix): res = [] for row in matrix: for element in row: res.append(element) return res # Output: [1,2,3,4,5,6]"},{"prompt":"Write a bash script to print all processes currently running on the system.","completion":"#!/bin/bash for proc in (ps aux | awk '{ print 2 }') do ps axo pid,ppid,args | egrep -i \\"^[[:space:]]*proc\\" done"},{"prompt":"Write a SQL query to count the number of customers in each country in the 'customers' table.","completion":"SELECT country, COUNT(*) AS NumCustomers FROM customers GROUP BY country;"},{"prompt":"Create a class that implements a polygon using an array of Point objects.","completion":"// Define a polygon class public class Polygon { // An array of Points to represent the vertices of a polygon private Point[] vertices; // A constructor that takes an array of Points public Polygon(Point[] vertices) { this.vertices = vertices; } // A method that returns the area of the polygon public double getArea() { double area = 0; int j = this.vertices.length - 1; for (int i = 0; i < this.vertices.length; i++) { area += (this.vertices[j].getX() + this.vertices[i].getX()) * (this.vertices[j].getY() - this.vertices[i].getY()); j = i; } return Math.abs(area / 2); } }"},{"prompt":"Edit this HTML code to only display the title. <html> <head> <title>HTML Document</title> </head> <body> <h1>Hello World!</h1> </body> </html>","completion":"<html> <head> <title>HTML Document</title> </head> </html>"},{"prompt":"Write a function that reduces an array of numbers to a single number. [2, 4, 6, 8, 10]","completion":"def reduceArray(arr): if not arr: return 0 result = arr[0] for num in arr[1:]: result = result + num return result print(reduceArray([2, 4, 6, 8, 10])) # Outputs: 30"},{"prompt":"Parse this JSON data using JavaScript. { \\"name\\": \\"John Smith\\", \\"age\\": 35, \\"location\\": \\"Online\\" }","completion":"let data = { \\"name\\": \\"John Smith\\", \\"age\\": 35, \\"location\\": \\"Online\\" }; let name = data.name; let age = data.age; let location = data.location; console.log(name); // Outputs: John Smith console.log(age); // Outputs: 35 console.log(location); // Outputs: Online"},{"prompt":"Write a JavaScript function to check if a number is in the Fibonacci sequence.","completion":"function isFibonacci(num) { let a = 0, b = 1; while (a <= num) { if (a == num) return true; let c = a + b; a = b; b = c; } return false; } console.log(isFibonacci(5)); // Outputs: true"},{"prompt":"mplemet a JavaScript function to print all the leap year between 2014 and 2050.","completion":"function leapYears() { for (let year = 2014; year <= 2050; year++) { if (year % 4 == 0) { console.log(year); } } } leapYears();"},{"prompt":"Re-implement this Ruby code in Python def fibonacci(n) return n < 2 ? n : fibonacci(n - 1) + fibonacci(n - 2) end","completion":"def fibonacci(n): if n < 2: return n return fibonacci(n - 1) + fibonacci(n - 2) print(fibonacci(7)) # Outputs: 13"},{"prompt":"Given a string and an int n, write a function to extract the subsequence of length n from the string. s = \\"hello world\\", n = 6","completion":"def extractString(string, n): return string[:n]"},{"prompt":"Given a data table, write a function to select the columns. table = [['Name', 'Age', 'Score', 'City'], ['Alice', '21', '85', 'New York'], ['Bob', '23', '92', 'Los Angeles'], ['Cathy', '20', '73', 'London']]","completion":"def select_columns(table, columns): output = [table[0]] + [[row[i] for i in columns] for row in table[1:]] return output"},{"prompt":"Given a dataframe, write a function to add a new column that contains the results of a calculation between two columns. dataframe = Pandas DataFrame([[1, 2, 3], [4, 5, 6], [7, 8, 9]], columns=['A', 'B', 'C'])","completion":"def add_calculation_column(dataframe, calculation, column_name): dataframe[column_name] = dataframe.eval(calculation) return dataframe"},{"prompt":"Given an array, remove the duplicate elements. [1, 4, 6, 1, 4, 8]","completion":"def remove_duplicates(arr): return list(dict.fromkeys(arr))"},{"prompt":"Why is algorithmic complexity important?","completion":"Algorithmic complexity is an important measure of how efficient a program is since it tells how much time and memory a program consumes in relation to its input size. A more efficient program can be built to solve a problem faster, use fewer resources, and be more scalable."},{"prompt":"Given a hash table, write a program to print the keys and values in sequence. data = { \\"Name\\": \\"John\\", \\"Age\\": 25, \\"Country\\": \\"USA\\" }","completion":"def print_hash_table(data): for key in data: print(key + \\": \\" + str(data[key]))"},{"prompt":"Given an integer N, write a code that finds the next palindrome of N. N = 187","completion":"next_palindrome = 191"},{"prompt":"Define a function that takes a string as input and returns true if it is a valid IP address. ip_str = \\"127.0.0.1","completion":"def is_valid_ip(ip_str): ip_addr = ip_str.split('.') if len(ip_addr) != 4: return False for item in ip_addr: if not 0 <= int(item) <= 255: return False return True"},{"prompt":"Design an algorithm for finding the frequency of occurrence of each character in a given string str = \\"hello world","completion":"def char_frequency(str): freq = {} for char in str: if char in freq: freq[char] += 1 else: freq[char] = 1 return freq"},{"prompt":"Design a GUI app to welcome the user and output a message","completion":"import tkinter as tk window = tk.Tk() window.title(\\"Welcome App\\") frame = tk.Frame(window) frame.grid(row=0, column=0) label = tk.Label(frame, text=\\"Welcome\\", font=(\\"Arial\\", 40)) label.grid(row=0, column=0) message = tk.Message(frame, text=\\"Hello user!\\", width=1000) message.grid(row=2, column=0) window.mainloop()"},{"prompt":"Given a string, write a code that checks it for palindrome str = \\"abb","completion":"def is_palindrome(str): return str == str[::-1]"},{"prompt":"Create an algorithm that computes the sum of its maximum K (given) digits arr = [1, 2, 3, 4, 5], K = 3","completion":"def max_sum_digits(arr, K): max_sum = 0 arr.sort() for i in range(K): max_sum += arr[len(arr)-1-i] return max_sum"},{"prompt":"Generate code to return a fibonacci sequence up to n elements. n = 10","completion":"def Fibonacci(n): #taking 1st two fibonacci nubers as 0 and 1 FibArray = [0, 1] while len(FibArray) < n: next_fib = FibArray[-1] + FibArray[-2] FibArray.append(next_fib) return FibArray # Driver Code print(Fibonacci(n))"},{"prompt":"this SQL query valid? SELECT * FROM foobar ORDER BY name","completion":"true"},{"prompt":"Deducde whether the following code is a valid Java statement 345=num;","completion":"false"},{"prompt":"Retrieve data from a collection in a MongoDB database and display the result in ascending order. db.myCollection.find().sort({name: 1})","completion":"db.myCollection.find().sort({name: 1}) .limit(20) .skip(20) .toArray();"},{"prompt":"Make an API call that fetches the user details and stores it in a DB. // URL: '/users/fetch' // Parameters: username, password","completion":"const request = require('request'); function fetchUser(username, password) { const url = \`/users/fetch?username={username}&&password={password}\`; request.get(url, (err, res) => { if (err) { console.log('Failed to fetch user', err); return; } const userData = JSON.parse(res.body); // insert userData into database }); }"},{"prompt":"Write a function to get data from a NoSQL database. // Database Name: MyDatabase // Collection Name: userData // Search Query: username: 'admin' // Fields to Return: firstName, lastName","completion":"function getData(dbName, collectionName, query, fields) { return db.get(dbName) .collection(collectionName) .find(query, fields) .toArray(); } // Usage let searchQuery = { username: 'admin' }; let fieldsToReturn = { firstName: 1, lastName: 1 }; let results = getData(\\"MyDatabase\\", \\"userData\\", searchQuery, fieldsToReturn);"},{"prompt":"Based on the input, output the number of elements in the given array. arr = [1, 2, 3, 4, 5]","completion":"arr.length // Output: 5"},{"prompt":"Print out the sum of even numbers from the following range. range(1,10)","completion":"sum = 0 for num in range(1,10): if num % 2 == 0: sum += num print(sum) // Output: 20"},{"prompt":"Update the query to return the distinct first names of all users in the database. db.userData.find()","completion":"db.userData.distinct(\\"firstName\\")"},{"prompt":"this JavaScript condition valid? if (a === b)","completion":"true"},{"prompt":"What are the reachable, non-reachable and partially reachable states in a DFA?","completion":"In a Deterministic Finite Automaton (DFA), there are three types of states: reachable states, non-reachable states, and partially reachable states. Reachable states are those states which can be reached from the start state. Non-reachable states are those which can never be reached from the start state. Partially reachable states are those that can only be reached from the start state through some other states."},{"prompt":"Generate a query using SQL to filter all values greater than 30 from a table.","completion":"SELECT value FROM tablename WHERE value > 30;"},{"prompt":"Create a logic using Python that checks if a string contains only alphabetical characters or not.","completion":"def checkAlphabet(string): alphabets = \\"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\\" for i in string: if i not in alphabets: return False return True"},{"prompt":"Generate a program in Java to find the mean of n numbers.","completion":"public class Mean { // Method to calculate the mean of n numbers static double mean(int numbers[]) { double sum = 0.0; for (int i : numbers) sum += i; return sum / numbers.length; } public static void main(String[] args) { int numbers[] = { 10, 20, 30, 40, 50 }; // Display the result System.out.println(\\"Mean of numbers is : \\" + mean(numbers)); } }"},{"prompt":"Construct a Java method to convert a string to its equivalent title case format. String: this is the string to be converted","completion":"public static String toTitleCase(String input) { StringBuilder titleCase = new StringBuilder(); boolean nextTitleCase = true; for (char c : input.toCharArray()) { if (Character.isSpaceChar(c)) { nextTitleCase = true; } else if (nextTitleCase) { c = Character.toTitleCase(c); nextTitleCase = false; } titleCase.append(c); } return titleCase.toString();"},{"prompt":"Write a code snippet to create an array filled with alternating 0s and 1s. Array size: 5","completion":"def createAlternateArray(n): result = [False] * n for i in range(n): if i % 2 == 0: result[i] = True return result"},{"prompt":"W rite a function to display a string in reverse order. String: Hello world","completion":"def reverseString(string): return string[::-1]"},{"prompt":"Write a Python code to find the largest and the second largest numbers in a list. List: [2, 9, 12, 45, 10, 20]","completion":"def getLargestTwo(l): first_largest = second_largest = float('-inf') for num in l: if num > first_largest: second_largest = first_largest first_largest = num elif num > second_largest and num != first_largest: second_largest = num return (first_largest, second_largest)"},{"prompt":"Perform a binary search on the following list of integers: [0, 1, 2, 3, 4, 5, 6, 7, 8].","completion":"def binary_search(nums, target): low = 0 high = len(nums) - 1 while low <= high: mid = (low + high) // 2 if target == nums[mid]: return mid elif target < nums[mid]: high = mid - 1 else: low = mid + 1 return -1"},{"prompt":"Explain the differences between Bitwise AND, OR, and XOR operations.","completion":"The bitwise AND (&) operation returns a 1 in a given bit position if both bits being compared are equal to 1. The bitwise OR (|) operation returns a 1 in a given bit position if either or both of the bits being compared are equal to 1. The bitwise XOR (^) operation produces a result of 1 if the two bits being compared are different and 0 if both bits are the same."},{"prompt":"Calculate the probability of an event given the following probability of each outcome: (0.1, 0.2, 0.3, 0.4).","completion":"The probability of the event occurring is 0.1 + 0.2 + 0.3 + 0.4 = 1.0"},{"prompt":"Report the number of words in the following text. This is a sample tex","completion":"def count_words(text): return len(text.split())"},{"prompt":"Find the length of the longest common subsequence in the following two strings: \\"ABCBDAB\\" and \\"BDCABA\\".","completion":"def longest_common_subsequence(str1, str2): n = len(str1) m = len(str2) dp = [[0] * (m+1) for _ in range(n+1)] for i in range(1, n+1): for j in range(1, m+1): if str1[i-1] == str2[j-1]: dp[i][j] = 1 + dp[i-1][j-1] else: dp[i][j] = max(dp[i-1][j], dp[i][j-1]) return dp[n][m]"},{"prompt":"Create a one line solution in Python to remove all vowels from a string.","completion":"my_string = 'This is a sentence without any vowels' new_string = ''.join([i for i in my_string if i not in 'aeiouAEIOU']) print(new_string)"},{"prompt":"Create a regular expression to check if a given string contains any the letter 'X'.","completion":"RegExp(\\"X\\", \\"i\\")"},{"prompt":"Write a regular expression that matches even numbers within a given string.","completion":"RegExp(\\"[0-9]*[02468]\\")"},{"prompt":"Edit the following sentence so that it becomes grammatically correct. Sentence: I was leaving to work.","completion":"I was leaving for work."},{"prompt":"Write an SQL query to produce an output which contains the name of the employee and the number of orders that employee has been responsible for.","completion":"SELECT e.name, COUNT(o.employee_id) as order_count FROM employees e INNER JOIN orders o ON e.id=o.employee_id GROUP BY e.name;"},{"prompt":"Write HTML code to display the following table.","completion":"<table> <tr> <th>Name</th> <th>Age</th> <th>Country</th> </tr> <tr> <td>John</td> <td>30</td> <td>USA</td> </tr> <tr> <td>Mary</td> <td>25</td> <td>Canada</td> </tr> <tr> <td>Jane</td> <td>40</td> <td>Australia</td> </tr> <table>"},{"prompt":"Create an algorithm in Python to combine two sorted lists into a single sorted list. list1 = [3, 5, 7] list2 = [1, 2, 4]","completion":"def merge_lists(lst1, lst2): sorted_list = [] i=j=0 while (i<len(lst1) and j<len(lst2)): if lst1[i] <= lst2[j]: sorted_list.append(lst1[i]) i+=1 else: sorted_list.append(lst2[j]) j+=1 sorted_list += lst1[i:] sorted_list += lst2[j:] return sorted_list list1 = [3, 5, 7] list2 = [1, 2, 4] print(merge_lists(list1, list2))"},{"prompt":"Create a function in Python to return the approximate value of sin(x) using degrees","completion":"import math def sin_deg(x): \\"\\"\\" Returns the approximate value of the sine of x, given in degrees. \\"\\"\\" return math.sin(math.radians(x))"},{"prompt":"Write a Python code to calculate the sum of three given numbers, if the values are equal, then return triple their sum","completion":"def sumThree(n1, n2, n3): \\"\\"\\" This function returns the sum of three numbers If the values are equal, it will return triple their sum \\"\\"\\" if n1 == n2 == n3: return 3 * (n1 + n2 + n3) else: return n1 + n2 + n3"},{"prompt":"Generate a list of all the prime numbers in the range from 0 to the given number n.","completion":"def is_prime(n): \\"\\"\\" This function will check if a given number is prime or not. \\"\\"\\" if n <= 1: return False for i in range(2, int(n**0.5) + 1): if n % i == 0: return False return True def generate_list_of_primes(n): \\"\\"\\" This function will generate a list of all the prime numbers in the range from 0 to the given number n. \\"\\"\\" primes = [] for i in range(2, n + 1): if is_prime(i): primes.append(i) return primes"},{"prompt":"Given the python code below, reverse the order of the lines to form a valid program. def myFunc(): print(1) return print(2)","completion":"def myFunc(): print(2) return print(1)"},{"prompt":"What is the result of x = 2 and y = 3 in this function, f(x,y) = x^3 + 2y^2?","completion":"The result of x = 2 and y = 3 in the function f(x,y) = x^3 + 2y^2 is 19."},{"prompt":"Create a function to normalize a given pandas dataframe.","completion":"def normalize_df(df): normalized_df=(df-df.min())/(df.max()-df.min()) return normalized_df norm_df = normalize_df(df)"},{"prompt":"Divide a list of numbers into two smaller lists, one with even numbers and one with odd numbers. [1, 2, 3, 4, 5, 6]","completion":"def divide_list(numbers): even_list = [] odd_list = [] for num in numbers: if num % 2 == 0: even_list.append(num) else: odd_list.append(num) return even_list, odd_list # Driver Code numbers = [1, 2, 3, 4, 5, 6] even_list, odd_list = divide_list(numbers) print(even_list) # [2, 4, 6] print(odd_list) # [1, 3, 5]"},{"prompt":"Edit the given C++ code to find and print the maximum number in an array of integers. int a[5] = {2, 3, 4, 5, 1};","completion":"int a[5] = {2, 3, 4, 5, 1}; int maxNum = a[0]; for(int i = 1; i < 5; i++) { if(a[i] > maxNum) maxNum = a[i]; } // maximum number is: cout << maxNum << endl;"},{"prompt":"Explain the concept of memory leak in C++.","completion":"A memory leak in C++ occurs when a programmer allocates memory but fails to deallocate that memory when it is no longer needed. This results in memory being unnecessarily allocated and unavailable for other uses. This can lead to decreased performance as well as limit the amount of available memory, causing the program to crash."},{"prompt":"Create an array of 15 random floats in Python between 0 and 1.","completion":"import random random_floats = [random.uniform(0, 1) for _ in range(15)]"},{"prompt":"Write a SQL query to find the name of a customer from a given customer id. customer_id: 100","completion":"SELECT name FROM customers WHERE customer_id = 100"},{"prompt":"Write a PHP function to describe a variable type given the value. value: \\"Hello","completion":"function describe_variable_type(value) { if(is_int(value)) return 'integer'; elseif(is_float(value)) return 'float'; elseif(is_bool(value)) return 'boolean'; elseif(is_string(value)) return 'string'; else return 'unknown'; }"},{"prompt":"Create a CSS selector to select every 5th element in a page.","completion":":nth-child(5n)"},{"prompt":"Edit the provided HTML structure to add an ordered list inside the body with 3 list items. <!DOCTYPE html> <html lang=\\"en\\"> <head> <meta charset=\\"UTF-8\\"> <title>My Webpage</title> </head> <body> </body> </html>","completion":"<!DOCTYPE html> <html lang=\\"en\\"> <head> <meta charset=\\"UTF-8\\"> <title>My Webpage</title> </head> <body> <ol> <li>List Item 1</li> <li>List Item 2</li> <li>List Item 3</li> </ol> </body> </html>"},{"prompt":"mplement a custom promise-based JavaScript library.","completion":"const Promise = (() => { let resolveCallbacks = []; let rejectCallbacks = []; const promise = (executor) => { executor((data) => { resolveCallbacks.forEach(callback => { callback(data); }); }, (error) => { rejectCallbacks.forEach(callback => { callback(error); }); }); return { then: (resolve, reject) => { resolveCallbacks.push(resolve); rejectCallbacks.push(reject); } }; }; return promise; })();"},{"prompt":"Sort an array of strings based on their length. [\\"a\\", \\"abc\\", \\"ab\\", \\"abcd\\", \\"abcde\\"]","completion":"function sortByLength(arr) { return arr.sort((a, b) => a.length - b.length); } // Usage sortByLength([\\"a\\", \\"abc\\", \\"ab\\", \\"abcd\\", \\"abcde\\"]); // result: [\\"a\\", \\"ab\\", \\"abc\\", \\"abcd\\", \\"abcde\\"]"},{"prompt":"Generate a random password with 8 characters long including lowercase letters, uppercase letters, and numbers.","completion":"function generatePassword() { let characters = \\"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\\"; let password = ''; for (let i = 0; i < 8; i++) { let characterIndex = Math.floor(Math.random() * characters.length); let character = characters[characterIndex]; password += character; } return password; } // Usage generatePassword(); // result: 2Kj93Cc8"},{"prompt":"Remove all HTML tags from a string. \\"<h1>Hello World</h1>","completion":"function stripHTMLTags(str) { return str.replace(/<[^>]*>/g, \\"\\"); } // Usage stripHTMLTags(\\"<h1>Hello World</h1>\\"); // result: \\"Hello World\\""},{"prompt":"Configure the following network parameters ip_address = \\"176.4.3.39\\"; netmask = \\"255.255.255.0\\"; default_gateway = \\"176.4.3.253\\";","completion":"ip_address=\\"176.4.3.39\\" netmask=\\"255.255.255.0\\" default_gateway=\\"176.4.3.253\\" # Configure network ifconfig eth0 {ip_address} netmask {netmask} route add default gw {default_gateway}"},{"prompt":"Read a line of input from the user and print the length of the line. Hello World.","completion":"len(input)"},{"prompt":"Print all possible combination and permutations with length 3 for a given array. [1, 2, 3]","completion":"def get_permutations(array): results = [] if len(array) == 0: return results if len(array) == 1: results.append([array[0]]) return results for i in range(len(array)): permutations = get_permutations(array[:i] + array[i+1:]) for permutation in permutations: results.append([array[i]] + permutation) return results"},{"prompt":"Create a Ruby class that has two methods - one for calculating the result of multiplications and one for calculating the addition of two numbers.","completion":"class Calculator def multiply(a, b) return a * b end def add(a, b) return a + b end end"},{"prompt":"Write a MySQL query to display the contents of the table \\"users\\" sorted in descending order by \\"age\\". Table name: users Fields: name, age","completion":"SELECT * FROM users ORDER BY age DESC;"},{"prompt":"Design a function in Python to calculate the Fibonacci sequence up to a particular number.","completion":"def fibonacci(n): if n <= 1: return n else: return fibonacci(n-1) + fibonacci(n-2) for i in range(1, n+1): print(fibonacci(i))"},{"prompt":"Find the highest common factor of two numbers 8 and 12.","completion":"The highest common factor of 8 and 12 is 4."},{"prompt":"Construct a for loop in PHP to print the value of each element in an array of 10 elements. Array: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]","completion":"<?php elements = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10); for(i = 0; i < count(elements); i ++){ echo elements[i]; } ?>"},{"prompt":"Design a function in Java to output the same string in reverse order. String: 'Hello World!'","completion":"public static String reverseString(String input){ StringBuilder output = new StringBuilder(); for (int i = input.length()-1; i >= 0; i--){ output.append(input.charAt(i)); } return output.toString(); } System.out.println(reverseString(\\"Hello World!\\")); // Outputs \\"!dlroW olleH\\""},{"prompt":"Find the third element of an array [1, 3, 5, 7, 9].","completion":"The third element of the array is 5."},{"prompt":"Write a query in SQL to show all the details of the customers with age greater than 30. Table name: customers Fields: name, age","completion":"SELECT * FROM customers WHERE age > 30;"},{"prompt":"Design a code in C# to check if the input number is positive, negative or zero.","completion":"public static void checkNumber(int num){ if( num > 0 ) Console.WriteLine(\\"Positive\\"); else if( num < 0 ) Console.WriteLine(\\"Negative\\"); else Console.WriteLine(\\"Zero\\"); } checkNumber(-17); // Outputs Negative."},{"prompt":"Calculate the amount of UTF-8 bytes need to code string \\"Hello\\".","completion":"The UTF-8 representation of the string \\"Hello\\" stores it in 5 bytes."},{"prompt":"Write a Python code to calculate the number of unique combinations of three digits from 0 to 9.","completion":"def combinations(n, k): from itertools import combinations return len(list(combinations(range(n), k))) comb = combinations(10, 3) print(comb)"},{"prompt":"Write a Python code to print a Pascal's triangle with five rows.","completion":"def pascal_triangle(n): trow = [1] y = [0] for x in range(max(n, 0)): print(trow) trow = [ l + r for l, r in zip(trow + y, y + trow)] if(x > 0): trow.append(1) return n >= 1 pascal_triangle(5)"},{"prompt":"Classify the following statement as either true or false. Java and JavaScript are the same language.","completion":"False. Java and JavaScript are two different programming languages. Java is a statically typed, strong-typing, object-oriented language while JavaScript is an interpreted language and is used mainly in web development."},{"prompt":"Convert a linked list to an array in JavaScript. function LinkedList() { this.head = null; this.tail = null; } function Node(value, next, prev) { this.value = value; this.next = next; this.prev = prev; } let list = new LinkedList(); list.head = new Node(1, new Node(2, new Node(3, new Node(4, null, null), null), null), null); list.tail = new Node(4, null, new Node(3, null, new Node(2, null, new Node(1, null, null))))","completion":"function linkedListToArray(list) { const array = []; let currentNode = list.head; while (currentNode) { array.push(currentNode.value); currentNode = currentNode.next; } return array; } console.log(linkedListToArray(list));"},{"prompt":"Write an SQL query to return rows from a table and sorted in ascending order. Table Name: Animal","completion":"SELECT * FROM Animals ORDER BY Animals ASC"},{"prompt":"Write a code in Python to toggle all characters in a string. The string is: \\"Hello World!","completion":"s = \\"Hello World!\\" res = \\"\\" for char in s: if char.islower(): res += char.upper() elif char.isupper(): res += char.lower() print(res)"},{"prompt":"Describe the Pandas feature \\"DataFrame","completion":"Pandas DataFrame is a two-dimensional data structure, i.e. data is aligned in a tabular fashion in rows and columns. It is a widely used tool for data manipulation and analysis in Python. It offers a variety of features such as filtering, sorting, adding/removing columns, updating the data, indexing, and many others."},{"prompt":"Generate a Python function to generate Fibonacci sequence given a number n. n = 5","completion":"def Fibonacci(n): a = 0 b = 1 if n == 0: return a elif n == 1: return b else: for i in range(2, n+1): c = a + b a = b b = c return b"},{"prompt":"Generate a code in Python to generate a list containing multiplication table up to 10.","completion":"multiplication_table = [] for i in range(1, 11): multiplication_table.append([x*i for x in range(1, 11)]) print(multiplication_table)"},{"prompt":"Describe the feature of \\"promise\\" in JavaScript.","completion":"Promises in JavaScript are objects that represent the eventual completion or failure of an asynchronous operation. They allow us to structure contingencies within our code, and to take actions based on the eventual result of asynchronous tasks."},{"prompt":"Write a function in Java that returns a random element from an array. int[] A = {3, 5, 7, 9, 12};","completion":"public static int getRandomElement(int[] A) { int randomIndex = (int)(Math.random() * A.length); return A[randomIndex]; }"},{"prompt":"dle the given input and output a CSV string. [{ user_id: 1, name: 'John', age: 15 }, { user_id: 2, name: 'Bob', age: 22 }]","completion":"user_id,name,age 1,John,15 2,Bob,22"},{"prompt":"Do some data analysis and find the average of the given data. [12, 15, 6, 8, 10, 20]","completion":"double AvgData(int[] input) { double sum = 0; for (int i = 0; i < input.Length; i++) { sum += input[i]; } return sum / input.Length; }"},{"prompt":"Read the given input and output a JSON document. {\\"foo\\": \\"hello\\", \\"bar\\": \\"world\\"}","completion":"json_encode(input);"},{"prompt":"Write a SQL statement that returns the average age of people in the table.","completion":"SELECT AVG(age) FROM people;"},{"prompt":"Develop a Python code that takes a string as input and converts it to all uppercase. string = \\"Hello World","completion":"def toUpperCase(string): return string.upper()"},{"prompt":"Develop a Java function that takes a string and searches for the occurrence of a given character. string=\\"Hello World\\"; ch='l';","completion":"public static int findOccurrence (String string, char ch) { int count = 0; for (int i=0; i<string.length(); i++) { if (string.charAt(i) == ch) count++; } return count; }"},{"prompt":"Build a HTML page with the provided structure. <html> <head> </head> <body> </body> </html>","completion":"<html> <head> <title>Page Title</title> </head> <body> <h1>Welcome to my page</h1> <p>This is a simple page example built with HTML and CSS.</p> </body> </html>"},{"prompt":"Organize the given code snippet into an array data structure. [\\"1\\", \\"Hello\\", \\"there\\", \\"10\\", \\"45\\", \\"Apple\\"]","completion":"var array = [\\"1\\", \\"Hello\\", \\"there\\", \\"10\\", \\"45\\", \\"Apple\\"];"},{"prompt":"Create a SQL query that returns the average number of orders per month for customers in California.","completion":"SELECT AVG(NumOrders) FROM (SELECT COUNT(OrderId) AS NumOrders FROM Orders WHERE State = 'CA' GROUP BY MONTH(OrderDate)) AS TotalOrders;"},{"prompt":"Create an SQL query to find all customers from California who made more than 5 orders.","completion":"SELECT c.* FROM Customers c INNER JOIN (SELECT CustomerId, COUNT(OrderId) as NumOrders FROM Orders WHERE State = 'CA' GROUP BY CustomerId HAVING COUNT(OrderId) > 5) as Tot ON c.CustomerId = Tot.CustomerId;"},{"prompt":"Calling a calculator API, what is the output of the query \\"3 * (9 + 5) / 8\\"?","completion":"The output of the query is 9.375."},{"prompt":"Write an SQL query that returns the sum of all orders sent by customers who were born in the month of May.","completion":"SELECT SUM(OrderCost) FROM Orders o, Customers c WHERE o.CustomerId = c.CustomerId AND MONTH(c.DOB) = 5;"},{"prompt":"Compute the parity of the following binary number. 10101","completion":"The parity of the binary number 10101 is 1 (odd)."},{"prompt":"Translate the following to CSS style. h1 {font-size: 16px; color: #00cc33;}","completion":"h1 { font-size: 16px; color: #00cc33; }"},{"prompt":"Use the numpy library to write a function that takes an array of integer values, and returns the average of all the values. arr = [1, 2, 3, 4, 5]","completion":"import numpy as np def average(arr): return np.average(arr)"},{"prompt":"Write a JavaScript code to pop up a window that says \\"Hello, World!\\" when you open up the webpage.","completion":"<script> window.onload = function(){ alert(\\"Hello, World!\\"); } <\/script>"},{"prompt":"Write a MySQL query to get the sum of all values for a certain field in a particular table. field_name = \\"age\\" table_name = \\"stude","completion":"SELECT SUM(age) FROM students;"},{"prompt":"Edit the Java code below to produce the output \\"My name is NAME\\". public class Test { public static void main(String[] args) { System.out.println(\\"My name is\\"); } }","completion":"public class Test { public static void main(String[] args) { System.out.println(\\"My name is NAME\\"); } }"},{"prompt":"Create a Python class object to store data about a basketball player.","completion":"class BasketballPlayer: def __init__(self, name, age, height, weight): self.name = name self.age = age self.height = height self.weight = weight"},{"prompt":"Write a regex expression to find all the words in a given sentence that contain 4 characters. sentence = \\"This is a test sentence to find all 4 letter word","completion":"bw{4}b"},{"prompt":"Write a SQL query to display all rows with last_name starting with 'C'.","completion":"SELECT * FROM table WHERE last_name LIKE 'C%';"},{"prompt":"Create a class in Java that represent books in a library.","completion":"public class Book { // Properties private String title; private String author; private int yearPublished; // Constructors public Book (String t, String a, int y) { title = t; author = a; yearPublished = y; } // Accessor and mutator methods public void setTitle(String newTitle) { title = newTitle; } public void setAuthor(String newAuthor) { author = newAuthor; } public void setYearPublished(int newYear) { yearPublished = newYear; } public String getTitle() { return title; } public String getAuthor() { return author; } public int getYearPublished() { return yearPublished; } }"},{"prompt":"Write a piece of code to store 3 values in a single variable.","completion":"let data = [val1, val2, val3];"},{"prompt":"Write a SQL query to select all entries in a given table with a value larger than 100.","completion":"SELECT * FROM table WHERE col > 100;"},{"prompt":"Change the following piece of Java code to make sure that the parameter passed is a valid date. public boolean isValidDate(String date){ // return true if date is valid }","completion":"public boolean isValidDate(String date){ SimpleDateFormat format = new SimpleDateFormat(\\"yyyy-MM-dd\\"); try { format.parse(date); return true; } catch (ParseException e) { return false; } }"},{"prompt":"Write a SQL query to find all the entries in a given table that contain a specific“value” in the given column.","completion":"SELECT * FROM table WHERE col LIKE '%{value}%';"},{"prompt":"Debug the following code and make sure the program runs as expected. def number_divisible(x, y): for i in range(x): if i % y = 0 : print(i)","completion":"def number_divisible(x, y): for i in range(x): if i % y == 0 : print(i)"},{"prompt":"Write a HTML and CSS code that creates a 3x3 grid.","completion":"<style> .grid-container { display: grid; grid-template-columns: repeat(3, 1fr); grid-template-rows: repeat(3, 1fr); grid-gap: 10px; } </style> <div class=\\"grid-container\\"> <div></div> <div></div> <div></div> <div></div> <div></div> <div></div> <div></div> <div></div> <div></div> </div>"},{"prompt":"Extend the given code to create a while loop that prints numbers from 1 to 11. i = 1 print(i)","completion":"i = 1 while i <= 11: print(i) i = i + 1"},{"prompt":"Using the given class, write a constructor that creates an instance with age 10. class Person: def __init__(self,age): self.age = age","completion":"class Person: def __init__(self,age=10): self.age = age"},{"prompt":"Trace the program to find the output. def myfunc(x,y): if x == y: return x else: return \\"Not equal\\" a = myfunc(5,5) print(a)","completion":"5"},{"prompt":"Classify the given data according to their type. hello","completion":"String"},{"prompt":"Compare two given lists to find the common elements and store the output in a new list. list1 = [1, 2, 3, 4, 5] list2 = [2, 4, 6, 8, 10]","completion":"common_list = [] for num in list1: if num in list2: common_list.append(num)"},{"prompt":"Parse the JSON data stored in a variable 'data' and print out the value of the key 'name'. data = { \\"name\\": \\"John\\", \\"age\\": 30, \\"status\\": \\"single\\" }","completion":"import json data = { \\"name\\": \\"John\\", \\"age\\": 30, \\"status\\": \\"single\\" } data =json.loads(data) print(data['name'])"},{"prompt":"Write a code to delete a 'customer' table from a MySQL database.","completion":"# Delete 'customer' table from MySQL database import mysql.connector mydb = mysql.connector.connect( host=\\"localhost\\", user=\\"yourusername\\", passwd=\\"yourpassword\\", database=\\"mydatabase\\" ) mycursor = mydb.cursor() sql = \\"DROP TABLE customer\\" mycursor.execute(sql)"},{"prompt":"Calculate the percentage of numbers in an array that is greater than 5. [3, 4, 7, 8, 9, 11]","completion":"def calc_perc(arr): count = 0 for num in arr: if num > 5: count +=1 return count/len(arr) *100 calc_perc([3, 4, 7, 8, 9, 11])"},{"prompt":"Create a Java program to count character occurrences in a given string. String = \\"GPT models are a type of machine learning algorithm","completion":"public class CharacterCount { public static void main(String[] args) { String str = \\"GPT models are a type of machine learning algorithms\\"; int[] count = new int[256]; for (int i = 0; i < str.length(); i++) count[str.charAt(i)]++; for (int i = 0; i < 256; i++) if(count[i] != 0) System.out.println((char)i + \\": \\" + count[i]); } }"},{"prompt":"Create a CSS class called \\"header\\" with some styling.","completion":".header { font-family: sans-serif; font-weight: bold; font-size: 1.5em; color: #333; margin-bottom: 40px; text-align: center; }"},{"prompt":"Describe the purpose of machine learning.","completion":"The purpose of machine learning is to develop algorithms and models that are able to learn from data and make predictions or decisions without being explicitly programmed. Machine learning algorithms can discover hidden patterns from large amounts of data and use the knowledge acquired to improve the accuracy of predictions and enhance decision making. Machine learning is used in many application areas, including natural language processing, computer vision, speech recognition, robotics, recommendation systems, and data mining."},{"prompt":"Create a JavaScript object literal for a student with properties (name, age, grade).","completion":"let student = { name: \\"John\\", age: 25, grade: \\"A\\" };"},{"prompt":"Calculate the result when a power of 10 is raised to the power of 3","completion":"The result is 1000."},{"prompt":"dentify the type of triangle when given three sides side1 = 10, side2 = 10, side3 = 8","completion":"This is an isosceles triangle."},{"prompt":"Update the following Node.js function so that it can handle an array of objects. function someFunction(obj1, obj2){ console.log('someFunction called'); return \`object 1 is {obj1.key1} object 2 is {obj2.key2}\`; }","completion":"function someFunction(arr){ console.log('someFunction called'); let str = \\"\\" for (const obj of arr){ str += \`object is {obj.key1} \` } return str; }"},{"prompt":"Write a SQL query to find all employees over the age of 30.","completion":"SELECT * FROM Employees WHERE age > 30;"},{"prompt":"Generate a unique seven-digit number.","completion":"2675019"},{"prompt":"Create a React component that updates itself with the current time every second.","completion":"import React, { useState, useEffect } from 'react'; const Clock = () => { const [time, setTime] = useState(new Date()); useEffect(() => { const handle = setInterval(() => setTime(new Date()), 1000); return () => clearInterval(handle); }, []); return ( <div> The current time is {time.toLocaleTimeString()} </div> ); }; export default Clock;"},{"prompt":"Update the following Java code to print the difference between two dates in years, months and days import java.time.LocalDateTime; public class DateTime { public static void main(String[] args) { LocalDateTime dateTime1 = LocalDateTime.of(2020,11,5,14,45); LocalDateTime dateTime2 = LocalDateTime.of(1999,1,15,9,30); // Update code to print the difference } }","completion":"import java.time.LocalDateTime; import java.time.Period; public class DateTime { public static void main(String[] args) { LocalDateTime dateTime1 = LocalDateTime.of(2020,11,5,14,45); LocalDateTime dateTime2 = LocalDateTime.of(1999,1,15,9,30); Period diff = Period.between(dateTime1.toLocalDate(), dateTime2.toLocalDate()); System.out.printf(\\"The difference is %d years, %d months and %d daysn\\" , diff.getYears() , diff.getMonths() , diff.getDays()); } }"},{"prompt":"Write a JavaScript function to find the number of matching items in two arrays. arr1 = [1, 2, 3, 4] arr2 = [3, 4, 5, 6]","completion":"function countMatchingItems(arr1, arr2) { return arr1.filter(num => arr2.includes(num)).length; } count = countMatchingItems(arr1, arr2); console.log(count); // Output: 2"},{"prompt":"Edit the following HTML to link the page with a stylesheet <!DOCTYPE html> <html> <head> <title>My Page</title> </head> <body> </body> </html>","completion":"<!DOCTYPE html> <html> <head> <title>My Page</title> <link rel=\\"stylesheet\\" type=\\"text/css\\" href=\\"style.css\\"> </head> <body> </body> </html>"},{"prompt":"Write a PHP script to print the current week number","completion":"<?php echo 'Current week number: ' . date('W'); ?>"},{"prompt":"Create an API endpoint in Python with Flask that requires authentication. users = {\\"John\\": \\"123456\\", \\"Jenny\\": \\"456789\\"}","completion":"from flask import Flask, request app = Flask(__name__) users = {\\"John\\": \\"123456\\", \\"Jenny\\": \\"456789\\"} @app.route('/', methods=['GET']) def root(): if request.authorization and request.authorization.username in users and request.authorization.password == users[request.authorization.username]: return 'Authentication successful!' else: return 'Authentication failed!' if __name__ == '__main__': app.run(debug=True)"},{"prompt":"Create an HTML form for inputting user details. name, age, email","completion":"<form action=\\"\\"> Name:<br> <input type=\\"text\\" name=\\"name\\"> <br> Age:<br> <input type=\\"number\\" name=\\"age\\"> <br> Email:<br> <input type=\\"email\\" name=\\"email\\"> <br><br> <input type=\\"submit\\" value=\\"Submit\\"> </form>"},{"prompt":"Create a SQL database schema for storing customers and their payments. customer(id, name, email, phone_number); payment(payment_id, customer_id, amount, date);","completion":"CREATE TABLE customer ( ID INTEGER PRIMARY KEY, name VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, phone_number VARCHAR(255) NOT NULL ); CREATE TABLE payment ( payment_id INTEGER PRIMARY KEY, customer_id INTEGER NOT NULL, amount INTEGER NOT NULL, date DATETIME NOT NULL, FOREIGN KEY (customer_id) REFERENCES customer(ID) );"},{"prompt":"Create a MySQL query for finding customers who paid more than 100. payme","completion":"SELECT customer.* FROM customer JOIN payment ON customer.ID = payment.customer_id WHERE payment.amount > 100;"},{"prompt":"Write a query with window functions in PostgreSQL to calculate the average salary per department. salary","completion":"SELECT AVG(salary) OVER (PARTITION BY department) AS department_avg_salary FROM salary;"},{"prompt":"Create a component in React for display a header with two buttons.","completion":"import React from 'react'; const Header = () => { return ( <div> <h1>Header</h1> <button>Button 1</button> <button>Button 2</button> </div> ) } export default Header;"},{"prompt":"Create a Migration Script in Node.js for creating a table for customers. customer_id, first_name, last_name, email","completion":"const { Client } = require('pg'); const client = new Client({ connectionString: process.env.DATABASE_URL }); async function createCustomerTable() { await client.connect(); const query = \` CREATE TABLE customers ( customer_id SERIAL PRIMARY KEY, first_name VARCHAR(255) NOT NULL, last_name VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL ) \` await client.query(query); await client.end(); } createCustomerTable();"},{"prompt":"Create a CSS rule for making all text elements bold.","completion":"* { font-weight: bold; }"},{"prompt":"Create two variables \\"name\\" and \\"city\\" and assign your name and the city you live in to them.","completion":"let name = 'John Doe'; let city = 'New York';"},{"prompt":"Write a code snippet that checks whether a number is odd or even.","completion":"function isOdd(number) { return number % 2 === 1; }"},{"prompt":"Create a word frequency dictionary for the following sentence: \\"The quick brown fox jumps over the lazy dog.","completion":"words_frequencies = {'the': 2, 'quick': 1, 'brown': 1, 'fox': 1, 'jumps': 1, 'over': 1, 'lazy': 1, 'dog': 1}"},{"prompt":"Write a SQL statement to update the age of a customer with a specific ID. Customer_id = 24, Age = 30","completion":"UPDATE customers SET age = 30 WHERE customer_id = 24;"},{"prompt":"Sort the following array from smallest to largest. [4, 6, 2, 8]","completion":"arr.sort() # arr = [2, 4, 6, 8]"},{"prompt":"Create a JavaScript class called \\"Vehicle\\" with two properties: brand and model.","completion":"class Vehicle { constructor(brand, model) { this.brand = brand; this.model = model; } }"},{"prompt":"Complete the following javascript code to perform a task. const items = [ { company: 'A', date: '02-09-19' }, { company: 'B', date: '18-4-19' }, { company: 'C', date: '03-12-19' }, { company: 'A', date: '29-07-18' }, ]; // Complete code here","completion":"const items = [ { company: 'A', date: '02-09-19' }, { company: 'B', date: '18-4-19' }, { company: 'C', date: '03-12-19' }, { company: 'A', date: '29-07-18' }, ]; // Complete code here function latestDateForCompany(items, company) { let latestDate; for (let item of items) { const { company: c, date } = item; if (c === company) { if (!latestDate) { latestDate = date; continue; } if (new Date(latestDate) < new Date(date)) { latestDate = date; } } } return latestDate; } console.log(latestDateForCompany(items, 'A')); // 02-09-19"},{"prompt":"Rewrite the following code snippet to improve readability. def f(x): return [x * i for i in range(1, x + 1)]","completion":"def f(x): numbers = [] for i in range(1, x + 1): numbers.append(x * i) return numbers"},{"prompt":"Suggest an alternative for the following code snippet which is faster and less memory intensive. arr = [2, 3, 5, 7] result = [] for i in range(len(arr)): for j in range(i + 1, len(arr)): result.append((arr[i], arr[j]))","completion":"arr = [2, 3, 5, 7] result = [(arr[i],arr[j]) for i in range(len(arr)-1) for j in range(i+1,len(arr))]"},{"prompt":"Modify the following code to make it more efficient by using a while loop. num = 10 i = 1 while i <= 10: print(i * num) i += 1","completion":"num = 10 i = 0 while i < 10: i += 1 print(i * num)"},{"prompt":"Remove the redundancy in the following code and make it more concise. def sum_of_lists(lists): result = [] for i in range(len(lists)): current_list = lists[i] for j in range(len(current_list)): result.append(current_list[j]) return sum(result)","completion":"def sum_of_lists(lists): flattened_list = [item for sublist in lists for item in sublist] return sum(flattened_list)"},{"prompt":"Given a Python list, write a program to convert all its numbers to strings. lst = [1, 2, 3, 4]","completion":"lst = [str(x) for x in lst]"},{"prompt":"Suggest an elegant way to print out a list of numbers without using a loop in Python. lst = [1, 2, 3, 4]","completion":"print(*lst) # 1 2 3 4"},{"prompt":"Rewrite the following code snippet to use the arcpy module. import os file_paths = [os.path.join('data', f) for f in os.listdir('data') if f.endswith('.tif')]","completion":"import os import arcpy file_paths = [os.path.join('data', f) for f in arcpy.ListRasters('*.tif')]"},{"prompt":"mplement a function that takes 2 numbers as parameters and returns the greatest common divisor of both numbers. a = 20 b = 25","completion":"def gcd(a, b): if a == 0: return b return gcd(b % a, a) print(gcd(20, 25)) # 5"},{"prompt":"Suggest a cleaner and more concise way to implement the following code snippet. def find_matching_number(nums, target): for num in nums: if num == target: return True return False","completion":"def find_matching_number(nums, target): return target in nums"},{"prompt":"Suggest how to make the following code more readable using comprehensions. def has_duplicates(arr): result = False for i in range(len(arr)): for j in range(i + 1, len(arr)): if arr[i] == arr[j]: result = True return resul","completion":"def has_duplicates(arr): return len(arr) != len(set(arr))"},{"prompt":"Write code to convert a given number expressed in hexidecimal representation to binary.","completion":"def hex_to_bin(hex_str): #validating the input if hex_str[-1] not in \\"0123456789ABCDEF\\": return \\"Invalid Hexadecimal!!\\" #using bin() function to get the binary value return bin(int(hex_str, 16))[2:]"},{"prompt":"Explain what a stack overflow is and how to try to avoid it.","completion":"A stack overflow is an error condition in which the program attempts to use more memory space than the stack can hold. It occurs when a program pushes more data onto the stack than the maximum limit (e.g., when a recursive function recurses too many times), or when the recursive calls are too deeply nested. To avoid stack overflows, you should use a modular approach when writing code, set realistic limits for the depth of recursion, and opt for an iterative solution rather than a recursive one whenever possible."},{"prompt":"Edit this piece of Python code to make sure that the decimal is rounded off correctly. a = round(0.54678, 2)","completion":"a = round(0.54678, 2) # rounds off to 2 decimal places"},{"prompt":"Classify this sentence into its parts of speech. She is a diligent student.","completion":"Pronoun: She Verb: is Determiner: a Adjective: diligent Noun: student"},{"prompt":"Explain why the result of the following code is 4. x = 2 x = x+x","completion":"The result of the code is 4 because in the second statement, the value of x is modified to equal twice its original value (2 + 2 = 4)."},{"prompt":"Create a script to multiply each element in a list by 10. input_list = [1,2,3,4]","completion":"def multiply_by_10(input_list): new_list = [] for i in input_list: new_list.append(i*10) return new_list"},{"prompt":"Make a program to return the longest word in a given list of strings. input_list = [\\"The\\", \\"quick\\", \\"brown\\", \\"fox\\", \\"jumped\\", \\"over\\", \\"the\\", \\"lazy\\", \\"dog\\"]","completion":"def find_longest_word(input_list): longest_word = \\"\\" for i in input_list: if len(i) > len(longest_word): longest_word = i return longest_word"},{"prompt":"Search a given list for a specific element and return its position. list_a = [\\"apple\\", \\"banana\\", \\"cherry\\", \\"date\\"] element = \\"date","completion":"def search_list(list_a, element): for i in range(len(list_a)): if list_a[i]==element: return i return -1"},{"prompt":"w can you use object serialization in programming?","completion":"Object serialization is a process in programming to convert an object into a format that can be easily stored and accessed. It's commonly used to transfer objects between programs, preserve data across time, or save objects to a database. Object serialization can be useful when you need to store information, pass the object to another program, or transmit it over a network."},{"prompt":"Given a list of integers, write a Python program to create a new list that contains the square of every element in the original list.","completion":"def square_numbers(nums): return [num**2 for num in nums]"},{"prompt":"Write HTML code to produce a two-column table with one row.","completion":"<table> <tr> <td>row 1, col 1</td> <td>row 1, col 2</td> </tr> </table>"},{"prompt":"Check if the given statement is syntactically correct. The car drove quickly down the street.","completion":"Yes, the statement is syntactically correct."},{"prompt":"mplement an algorithm with Big O notation of O(n).","completion":"def O_n(items): n = len(items) for i in range(n): print (items[i])"},{"prompt":"Convert the following sentence into camelCase. This is a sentence","completion":"thisIsASentence"},{"prompt":"Explore the data set provided and answer the following questions. Data set: [ {'name': 'Alice', 'age': 20, 'profession': 'Teacher'}, {'name': 'Bob', 'age': 30, 'profession': 'Engineer'}, {'name': 'Craig', 'age': 40, 'profession': 'Doctor'}, ]","completion":"What is the oldest person in the data set? Craig (age 40) is the oldest person in the data set."},{"prompt":"Create a function that takes two strings and out put the number of similar characters in both strings. String 1: coding String 2: debugging","completion":"def char_count(str1, str2): count = 0 for i in str1: if i in str2: count = count + 1 return count"},{"prompt":"Find the surface area of a cube with a side length of 6 cm.","completion":"The surface area of a cube with side length of 6 cm is 216 cm2."},{"prompt":"ert a record into a database table named ‘customers’ with the following values. ID: 123 Name: John Doe Age: 35","completion":"INSERT INTO customers (ID, Name, Age) VALUES (123, 'John Doe', 35);"},{"prompt":"Create a string object in Java that stores the text \\"Hello, World!\\".","completion":"String hello = \\"Hello, World!\\";"},{"prompt":"Describe succinctly the benefits of using a database for storing Big Data.","completion":"Using a database for storing Big Data can provide many benefits, such as scalability, improved data consistency and integrity, improved data security, and decreased maintenance costs. Database technologies also facilitate the ability to perform various analytics techniques, such as mining and predictive analytics, on large datasets."},{"prompt":"Create a JavaScript code snippet to check the validity of a credit card number. credit_card_number = ‘1234567891234567’","completion":"function validateCardNumber(credit_card_number) { // remove any non-digits var card_number = credit_card_number.replace(/D/g, ''); // add odd digits in even length strings or even digits in odd length strings var sum = 0; for (var i = 0; i < card_number.length; i++) { var intVal = parseInt(card_number.substr(i, 1)); if (i % 2 == 0) { intVal *= 2; if (intVal > 9) { intVal = 1 + (intVal % 10); } } sum += intVal; } // If the result is divisible by 10, the card number is valid return (sum % 10 == 0); } console.log(validateCardNumber(credit_card_number))"},{"prompt":"Using MySQL, find the 10 customers who have made the most orders.","completion":"SELECT u.*, COUNT(o.id) as count FROM users u JOIN orders o ON o.user_id = u.id GROUP BY u.id ORDER BY count DESC LIMIT 10;"},{"prompt":"Create a Java program to compute the total price of a customer's order based on item prices and quantities. item_price = [30, 20, 15], quantity = [2, 4, 1]","completion":"public static int computeTotalPrice(int[] item_price, int[] quantity) { int sum = 0; for (int i = 0; i < item_price.length; i++) { sum += item_price[i] * quantity[i]; } return sum; } System.out.println(computeTotalPrice(item_price, quantity));"},{"prompt":"Write an SQL query to list the students' names who scored more than 90 in an exam.","completion":"SELECT name FROM students WHERE score > 90;"},{"prompt":"Using MongoDB, update the product price for a specific product. product = {name: “iPhone”, price: 1000}","completion":"db.products.update({name:\\"iPhone\\"},{set: {price: 1000}});"},{"prompt":"Your program needs to read a matrix of integers and then print out the sum of each column. matrix = [[1, 2, 3], [4, 5, 6], [7, 8, 9]]","completion":"The sum of first column is 12 The sum of second column is 15 The sum of third column is 18"},{"prompt":"Write a Python program to fill a matrix with random numbers. rows = 4 columns = 3","completion":"matrix = [[randint(0, 99) for x in range(columns)] for y in range(rows)]"},{"prompt":"You're asked to generate a unique list from a given list of duplicate integers. input_list = [1, 1, 2, 3, 3, 3, 4, 4, 5, 5]","completion":"result_list = list(set(input_list))"},{"prompt":"You need to code a program that prints out the nth Fibonacci number. n=10","completion":"def Fibonacci(n): if n<0: print(\\"Incorrect input\\") elif n==1: return 0 elif n==2: return 1 else: return Fibonacci(n-1)+Fibonacci(n-2) print(Fibonacci(10))"},{"prompt":"Program to swap all even and odd elements in a given array. my_list = [1, 2, 3, 4, 5, 6, 7, 8]","completion":"def swap_even_and_odd(my_list): for i in range(len(my_list)-1): if i % 2 == 0 and my_list[i] % 2 != 0: my_list[i], my_list[i+1] = my_list[i+1], my_list[i] return my_list print(swap_even_and_odd(my_list))"},{"prompt":"Code a function that takes an array and counts the odd numbers in it. input_array = [1, 2, 3, 4, 5]","completion":"def countOddNumbers(input_array): count = 0 for num in input_array: if num % 2 != 0: count += 1 return count print(countOddNumbers(input_array))"},{"prompt":"Your program needs to edit an existing string by replacing certain words with another word. string = \\"I am the biggest fan of coding","completion":"def replace_word(string, old_word, new_word): return string.replace(old_word, new_word) print(replace_word(string, \\"coding\\", \\"programming\\"))"},{"prompt":"Generate a function that takes a given list of strings and orders them by their lengths. words = [\\"Python\\", \\"programming\\", \\"language\\"]","completion":"def sort_by_length(words): return sorted(words, key=len) print(sort_by_length(words))"},{"prompt":"Develop a program that picks a random item from a given list of strings. words = [\\"Python\\", \\"programming\\", \\"language\\"]","completion":"import random def random_word(words): return random.choice(words) print(random_word(words))"},{"prompt":"Write a HTML code for a webpage that displays the headline \\"Hello World!\\".","completion":"<html> <head> <title>Hello World</title> </head> <body> <h1>Hello World!</h1> </body> </html>"},{"prompt":"Write a Python program to calculate the sum of two numbers entered by the user.","completion":"num1 = float(input(\\"Enter first number: \\")) num2 = float(input(\\"Enter second number: \\")) # Adding two numbers sum = num1 + num2 # Display the sum print('The sum of {0} and {1} is {2}'.format(num1, num2, sum))"},{"prompt":"Create a boolean variable in Java, initialized to false.","completion":"boolean variable = false;"},{"prompt":"Write a SQL query for creating a table named \\"users\\" with columns for \\"name\\", \\"email\\" and \\"age\\".","completion":"CREATE TABLE users( name VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, age INT NOT NULL );"},{"prompt":"Create a JavaScript object that keeps track of event data such as time, attendees, and location.","completion":"var event = { time: \\"12pm\\", attendees: [\\"John\\", \\"Jane\\", \\"Jack\\"], location: \\"New York\\" };"},{"prompt":"Write a query in MySQL for selecting all records from a table named \\"students\\" which have \\"age\\" greater than 15.","completion":"SELECT * FROM students WHERE age > 15;"},{"prompt":"Write a class in Python for representing a rectangle. This class should store the length and width of the rectangle, and be able to compute its area.","completion":"class Rectangle: def __init__(self, length, width): self.length = length self.width = width def area(self): return self.length * self.width"},{"prompt":"Write an SQL query for finding the average salary of employees in a table whose age is greater than 25.","completion":"SELECT AVG(salary) FROM employees WHERE age > 25;"},{"prompt":"Write a CSS code to display a web page with a centered container of width 800px.","completion":"body { margin: 0; } #container { margin: 0 auto; width: 800px; }"},{"prompt":"Convert the date 1972-05-18 to a UNIX timestamp.","completion":"1255908800"},{"prompt":"Print all members of the list that are greater than 10. theList = [1, 15, 20, 9, 12, 13]","completion":"15"},{"prompt":"Create a class for a 2D vector in Java.","completion":"public class Vector2D { public double x, y; public Vector2D(double x, double y) { this.x = x; this.y = y; } public double magnitude() { return Math.sqrt(x * x + y * y); } public Vector2D add(Vector2D o) { return new Vector2D(x + o.x, y + o.y); } }"},{"prompt":"Write a function to calculate the standard deviation of data points in Python.","completion":"def stdev(data): avg = sum(data) / len(data) total = 0 for x in data: total += (x - avg) ** 2 return (total / (len(data) - 1)) ** 0.5"},{"prompt":"Rewrite the following program to make it print out the smallest number in a given list. def smallestNumber(numbers): largest = numbers[0] for number in numbers: if largest < number: largest = number return large","completion":"def smallestNumber(numbers): smallest = numbers[0] for number in numbers: if smallest > number: smallest = number return smallest"},{"prompt":"Generate a program in Go for printing the first 10 prime numbers.","completion":"func printFirstTenPrime(){ count := 0 for i := 1; ; i++ { if (isPrime(i)) { fmt.Printf(\\"%d \\", i) count++; } if (count == 10) { break } } fmt.Println() } func isPrime(num int) bool { for i := 2; i <= num/2; i++ { if num%i == 0 { return false } } return true }"},{"prompt":"w would you convert a binary number to decimal in JavaScript?","completion":"const binaryToDecimal = binaryString => parseInt(binaryString, 2);"},{"prompt":"Generate a list of numbers starting from 10 to 50.","completion":"myList = list(range(10,51))"},{"prompt":"Edit the following C program so that it prints the factorial of a number. #include <stdio.h> int main() { int i, num; scanf(\\"%d\\", &num);","completion":"#include <stdio.h> //Computes the factorial of a given number int factorial(int num) { if(num == 0 || num ==1) return 1; return num * factorial(num-1); } int main() { int num; scanf(\\"%d\\", &num); printf(\\"Factorial = %d\\", factorial(num)); return 0; }"},{"prompt":"Using only the existing variables, edit the code to subtract the \`total_price\` by 10%. total_price = 100 final_price = total_price","completion":"final_price = total_price - (total_price * 0.10)"},{"prompt":"Refactor the code to use a recursive algorithm instead of a loop to find the factorial of a given number.","completion":"def factorial(n): if n == 0: return 1 else: return n * factorial(n-1)"},{"prompt":"Write code to calculate statistical measures such as Standard Deviation, Median and Mean from a given set of numbers. array = [2, 4, 8, 7, 5]","completion":"import statistics mean = statistics.mean(array) median = statistics.median(array) std_dev = statistics.stdev(array)"},{"prompt":"Using an existing loop, create code to calculate the sum of all odd numbers up to a given number.","completion":"def sum_odd_numbers(num): result = 0 for i in range(1, num+1): if i % 2 != 0: result += i return result"},{"prompt":"Write a code in Python that takes two lists of equal lengths and generates a new list with the elements of both lists combined. list1 = [1, 2, 3] list2 = [4, 5, 6]","completion":"list3 = [] for i in range(len(list1)): list3.append(list1[i]) list3.append(list2[i])"},{"prompt":"Design a class to hold calendar date-related information.","completion":"class CalendarDate: def __init__(self, day, month, year): self.day = day self.month = month self.year = year def get_date(self): return self.day, self.month, self.year"},{"prompt":"Write a function that returns True if a given number is prime and False if it is not.","completion":"def is_prime(n): if n <= 1: return False for i in range(2,n): if n % i == 0: return False return True"},{"prompt":"Classify a given string as either a palindrome, a word or a phrase. racecar","completion":"def classify_string(string): if string == string[::-1]: return \\"Palindrome\\" elif \\" \\" in string: return \\"Phrase\\" else: return \\"Word\\" input_string = \\"racecar\\" print(classify_string(input_string)) # Palindrome"},{"prompt":"Calculate the total number of bits in a single byte.","completion":"def bits_in_byte(): return 8 total_bits = bits_in_byte() print(total_bits) # 8"},{"prompt":"Retrieve the value of a specific key from a given dictionary. {'name': 'John', 'age': 30, 'occupation': 'teacher'}","completion":"def dict_value(data, key): return data[key] data = {'name': 'John', 'age': 30, 'occupation': 'teacher'} value = dict_value(data, 'name') print(value) # John"},{"prompt":"Slice a string after the nth character. Pytho","completion":"def slice_string(string, n): return string[n:] input_string = 'Python' print(slice_string(input_string, 3)) # hon"},{"prompt":"Format a given number as a percent value. 0.23","completion":"def percent_format(number): return '{:.2%}'.format(number) number = 0.23 print(percent_format(number)) # 23.00%"},{"prompt":"Find the index in an array of a given value. [2, 8, 7, 5, 4], 4","completion":"def index_in_array(data, value): return data.index(value) data = [2, 8, 7, 5, 4] value = 4 print(index_in_array(data, value)) # 4"},{"prompt":"Create a for loop in Python that iterates through the list [1,2,3,4,5].","completion":"for item in [1,2,3,4,5]: print(item)"},{"prompt":"Using PHP, define a function that multiplies two numbers.","completion":"function multiply(x, y) { return x * y; }"},{"prompt":"Edit the following program so that it prints out the result of x multiplied by y. x = 7 y = 5 print(x + y)","completion":"x = 7 y = 5 print(x * y)"},{"prompt":"Use Java to create a constructor to set the values of instance variables num1 and num2.","completion":"public class Number { int num1; int num2; public Number(int num1, int num2) { this.num1 = num1; this.num2 = num2; } }"},{"prompt":"Using React, create a component that displays a greeting with the current time.","completion":"class Greeting extends React.Component { constructor(props) { super(props); this.state = { time: new Date().toLocaleTimeString(), }; } render() { return <h3>Good {this.props.timeOfDay}, the current time is {this.state.time}.</h3>; } }"},{"prompt":"Using HTML, code a navigation bar.","completion":"<nav> <ul> <li><a href=\\"#\\">Home</a></li> <li><a href=\\"#\\">About</a></li> <li><a href=\\"#\\">Contact</a></li> </ul> </nav>"},{"prompt":"Write a CSS rule to set the background color of all <p> elements to white.","completion":"p { background-color: white; }"},{"prompt":"Write a JavaScript code that prints out even numbers between 0 and 50.","completion":"for (let i = 0; i <= 50; i++) { if (i % 2 == 0) { console.log(i); } }"},{"prompt":"Create a Java class Person with instance variables firstName and lastName.","completion":"public class Person { private String firstName; private String lastName; public Person(String firstName, String lastName) { this.firstName = firstName; this.lastName = lastName; } }"},{"prompt":"Write an HTML page with a header that displays your name.","completion":"<html> <head> <title>My webpage</title> </head> <body> <h1>My name is John Smith</h1> </body> </html>"},{"prompt":"Explain the concept of recurrence relations in algorithms","completion":"A recurrence relation is an equation that defines a sequence of terms in terms of the values of the preceding terms. It is typically used to define a sequence in which each term depends on the values of previous terms. Recurrence relations are used in algorithms and computer programs to recursively calculate a sequence of values. For example, the Fibonacci sequence is a famous sequence whose terms are defined by recurrence relation F_(n+1) = F_n + F_(n-1). This means that each term in that sequence is the sum of the previous two terms."},{"prompt":"Calculate the total distance traveled by an object with a given initial velocity and acceleration Initial velocity = 12 m/s Acceleration = 2 m/s^2","completion":"total_distance = 36 m"},{"prompt":"Create a program in Python that takes two strings as input and determines if they are anagrams of each other string1=\\"listen\\"; string2=\\"silent\\";","completion":"def isAnagram(str1, str2): # convert both strings into lowercase str1 = str1.lower() str2 = str2.lower() # sort both strings sortedStr1 = ''.join(sorted(str1)) sortedStr2 = ''.join(sorted(str2)) # check if sorted strings are equal if sortedStr1 == sortedStr2: return True else: return False result = isAnagram(string1, string2) print(result)"},{"prompt":"What is the Big-O notation of a given algorithm","completion":"Big-O notation is a method of expressing the time complexity of an algorithm. It quotes the upper bound of an algorithm’s running time in terms of a function of the size of the input data. This is useful for determining the efficacy of an algorithm as different inputs of different sizes require different run times from the same algorithm. Big-O notation is typically expressed in terms of the number of operations on the input data, with each scale increasing the complexity exponentially."},{"prompt":"Update the following JavaScript code to use object-oriented programming. const calculator = { number1: 0, number2: 0, add(num1, num2) { return num1 + num2; }, subtract(num1, num2) { return num1 - num2; }, multiply(num1, num2) { return num1 * num2; }, divide(num1, num2) { return num1 / num2; } }","completion":"class Calculator { constructor(num1, num2) { this.num1 = num1; this.num2 = num2; } add() { return this.num1 + this.num2; } subtract() { return this.num1 - this.num2; } multiply() { return this.num1 * this.num2; } divide() { return this.num1 / this.num2; } }"},{"prompt":"Generate an SQL query to get all the columns of the table \\"Users\\".","completion":"SELECT * FROM Users"},{"prompt":"Update the following HTML page so it displays a simple form. <!DOCTYPE html> <html> <head> <title>My Form</title> </head> <body> <!-- Your code goes here! --> </body> </html>","completion":"<!DOCTYPE html> <html> <head> <title>My Form</title> </head> <body> <form action=\\"#\\"> <label for=\\"name\\">Name:</label> <input type=\\"text\\" name=\\"name\\"> <label for=\\"email\\">Email:</label> <input type=\\"text\\" name=\\"email\\"> <button>Submit</button> </form> </body> </html>"},{"prompt":"Design an algorithm to traverse a tree in level-order.","completion":"def traverseLevelOrder(root): if root is None: return # Create an empty queue for level order traversal queue = [] # Enqueue root and initialize height queue.append(root) while (len(queue) > 0): # Print front of queue and remove it from queue node = queue.pop(0) print node.data, # Enqueue left child if node.left is not None: queue.append(node.left) # Enqueue right child if node.right is not None: queue.append(node.right)"},{"prompt":"Create a CSS rule for a class called \\"main-text\\" which sets the font weight of the text to bold and the font color to blue.","completion":".main-text { font-weight: bold; color: blue; }"},{"prompt":"Provide a solution for the following coding challenge: Challenge: Given an array of integers, return the maximum sum of any contiguous subarray of the array. Example: [34, -50, 42, 14, -5, 86]","completion":"Solution: // Using Kadane's algorithm function maxSubArraySum(arr) { let max_so_far = 0; let max_ending_here = 0; for (let i = 0; i < arr.length; i++) { max_ending_here = max_ending_here + arr[i]; if (max_ending_here < 0) { max_ending_here = 0; } else if (max_so_far < max_ending_here) { max_so_far = max_ending_here; } } return max_so_far; }"},{"prompt":"Construct an object-oriented program to print out the numerals from 1 to 10.","completion":"class Program { public static void main(String[] args) { for (int i=1; i<=10; i++) { System.out.println(i); } } }"},{"prompt":"Design an algorithm to print out the prime numbers between 1 and 100.","completion":"// Function to print prime numbers between 1 and 100 void print_prime_numbers() { bool prime[100+1]; memset(prime, true, sizeof(prime)); for (int p = 2; p*p < 100+1; p++) { // If prime[p] is not changed, then it is a prime if (prime[p] == true) { // Update all multiples of p for (int i=p*p; i <= 100; i += p) prime[i] = false; } } // Print all prime numbers for (int p=2; p <= 100; p++) if (prime[p]) cout << p << \\" \\"; }"},{"prompt":"Write Clojure code to solve the following problem. Problem: Given a list of words and a target word, find the index of the target word in the list. Example: (\\"apple\\", \\"banana\\", \\"citrus\\") \\"b","completion":"(defn solve-problem [lst target] (-> lst (map #(first %) (map-indexed vector)) (filter #(= (second %) target)) (first) (first)))"},{"prompt":"w to access the element of a given array in Java? Array: [1, 5, 4, 8]","completion":"We can use the index of the element to access it. The syntax is arrayName[index]. For example, if we want to access the element at index 2, the syntax would be arrayName[2], and it would return the element with value 4."},{"prompt":"What is the purpose of the given CSS declaration? font-style: italic;","completion":"The purpose of the given CSS declaration is to make the font appear italicized."},{"prompt":"Create a JavaScript function to traverse an array and return true if the given element exists in the array. Array: [5, 8, 2, 6, 9] Element: 8","completion":"function containsElement(array, element) { for(var i = 0; i < array.length; i++) { if(array[i] === element) { return true; } } return false; }"},{"prompt":"Develop a Java program to input a string and reverse the order of words. I love to code in Jav","completion":"Java in code to love I public class Reverse { static void reverseWords(String str) { // Specific marker to identify the strings String[] words = str.split(\\"s\\"); String reversedString = \\"\\"; for (int i = 0; i < words.length; i++) { String word = words[i]; String reverseWord = \\"\\"; for (int j = word.length()-1; j >= 0; j--) { reverseWord = reverseWord + word.charAt(j); } reversedString = reversedString + reverseWord + \\" \\"; } System.out.println(str); System.out.println(reversedString); } public static void main(String[] args) { reverseWords(\\"I love to code in Java\\"); } }"},{"prompt":"w to create a basic HTML page in JavaScript?","completion":"We can create a basic HTML page using the document.write() method. The syntax to create an HTML page using document.write() is as follows: document.write(\\"<html>\\"); document.write(\\"<head>\\"); document.write(\\"<title>My Page</title>\\"); document.write(\\"</head>\\"); document.write(\\"<body>\\"); document.write(\\"My first web page with JavaScript\\"); document.write(\\"</body>\\"); document.write(\\"</html>\\");"},{"prompt":"Parse a given HTML string and return a JSON structure. <html> <head> <title>Example Website</title> </head> <body> <h1>Header</h1> <p>This is a paragraph.</p> </body> </html>","completion":"{ \\"tag\\": \\"html\\" \\"children\\": [ { \\"tag\\": \\"head\\" \\"children\\": [ { \\"tag\\": \\"title\\" \\"children\\": [ \\"Example Website\\" ] } ] }, { \\"tag\\": \\"body\\" \\"children\\": [ { \\"tag\\": \\"h1\\" \\"children\\": [\\"Header\\"] }, { \\"tag\\": \\"p\\" \\"children\\": [\\"This is a paragraph.\\"] } ] } ] }"},{"prompt":"Create a class in Java to store the information about a user.","completion":"public class User { private String name; private int age; private String address; public User(String name, int age, String address) { this.name = name; this.age = age; this.address = address; } public String getName() { return name; } public int getAge() { return age; } public String getAddress() { return address; } public void setName(String name) { this.name = name; } public void setAge(int age) { this.age = age; } public void setAddress(String address) { this.address = address; } }"},{"prompt":"Create a function in Dart to generate a series of random numbers within a specified range. Start: 10 End: 20","completion":"int start = 10; int end = 20; // Function to generate random numbers int generateRandomNumbers(int start, int end) { var random = Random(); return random.nextInt(end - start) + start; }"},{"prompt":"Create a Python script to print the 3rd element in a given list. [1,2,3,4,5,6]","completion":"list = [1,2,3,4,5,6] print(list[2]) # Output: 3"},{"prompt":"Create a function in JavaScript to find the longest substring in a given string without repeating characters. String: \\"abcabcbb","completion":"function findLongestSubstring(s) { let longest = 0; let seen = {}; let start = 0; for (let i = 0; i < s.length; i++) { let char = s[i]; if (seen[char]) { start = Math.max(start, seen[char]); } // index - beginning of substring + 1 (to include current in count) longest = Math.max(longest, i - start + 1); // store the index of the next char so as to not double count seen[char] = i + 1; } return longest; }"},{"prompt":"Develop a function in Rust to print the factors of a given number. Number: 15","completion":"fn find_factors(num: i32) { println!(\\"Factors of {} are:\\", num); for i in 1..num + 1 { if num % i == 0 { println!(\\"{}\\", i); } } } fn main() { let num = 15; find_factors(num); }"},{"prompt":"Convert the number to a string. num = 7","completion":"str(num) # Output: \\"7\\""},{"prompt":"What is the difference between = (assignment) operator and == (comparison) operator?","completion":"The = operator assigns a value to a variable, while the == operator checks if two values are equal."},{"prompt":"From a given list of words, create a new list with only the words that contain the letter 'a'. my_list = [\\"cat\\", \\"dog\\", \\"apple\\", \\"pear\\"]","completion":"new_list = [word for word in my_list if \\"a\\" in word] # Output: [\\"cat\\", \\"apple\\", \\"pear\\"]"},{"prompt":"Extract the first 2 elements from a given array. arr = [1, 2, 3, 4, 5]","completion":"def extract_first_two(arr): return arr[:2] arr = [1, 2, 3, 4, 5] result = extract_first_two(arr) print (result) # Output: [1, 2]"},{"prompt":"You are given a list of strings and you need to create a dictionary from that list. list1 = [\\"apple\\", \\"banana\\", \\"mango\\"]","completion":"list1 = [\\"apple\\", \\"banana\\", \\"mango\\"] result = dict.fromkeys(list1, 0) print(result) # Output: {'apple': 0, 'banana': 0, 'mango': 0}"},{"prompt":"Name all the built-in functions in Python","completion":"abs(), all(), any(), ascii(), bin(), bool(), bytearray(), calls(), chr(), dir(), divmod(), enumerate(), eval(), filter(), float(), format(), frozenset(), hex(), int(), isinstance(), len(), list(), map(), max(), min(), oct(), open(), ord(), pow(), print(), range(), reversed(), round(), set(), slice(), sorted(), str(), sum(), tuple(), type(), zip()"},{"prompt":"You are asked to create an array of three random numbers between 1 to 10","completion":"import random random_nums = [] for i in range(3): random_nums.append(random.randint(1,10)) print(random_nums) # Output: [2, 8, 6] (new set of 3 random numbers)"},{"prompt":"You are given a string and asked to find the frequency of each character in the string str = \\"GPT Model","completion":"from collections import Counter def char_frequency(str): return Counter(str) str = \\"GPT Model\\" print (char_frequency(str)) # Output: {'G': 1, 'P': 1, 'T': 1, ' ': 1, 'M': 1, 'o': 2, 'd': 1, 'e': 1, 'l': 1}"},{"prompt":"Compute the prime numbers between 1 to 10","completion":"primes = [2, 3, 5, 7] for num in range(1, 11): if num > 1: is_prime = True for i in range(2, num): if num % i == 0: is_prime = False break if is_prime: primes.append(num) print(primes) # Output: [2, 3, 5, 7] (all the prime numbers between 1 to 10)"},{"prompt":"Write a code snippet to display the name and age of the oldest person in a list called 'people'. people = [{'name':'Jone','age':45}, {'name':'Jane','age':37}, {'name':'Jack','age':48}]","completion":"oldest_person = max(people, key=lambda person: person['age']) print(\\"Name: {} Age: {}\\".format(oldest_person['name'], oldest_person['age']))"},{"prompt":"Create a new array 'b' from array 'a' containing only even numbers. a = [1, 2, 3, 4, 5, 6]","completion":"b = [num for num in a if num % 2 == 0]"},{"prompt":"Update the following code to fix a syntax error. def add_two_number(a,b): return a + b;","completion":"def add_two_numbers(a, b): return a + b"},{"prompt":"ert 'value' into the dictionary 'dic' at the key 'key'. dic = {'a':1, 'b':2} key = 'c' value = 3","completion":"dic[key] = value"},{"prompt":"Write a function 'play_game' that plays a simple game of rock paper scissors.","completion":"def play_game(): options = ['rock', 'paper', 'scissors'] computer_choice = random.choice(options) user_choice = input('Choose \\"rock\\", \\"paper\\", or \\"scissors\\": ') if user_choice == computer_choice: print('It is a tie!') elif user_choice == 'rock': if computer_choice == 'paper': print('Computer wins!') else: print('You win!') elif user_choice == 'paper': if computer_choice == 'scissors': print('Computer wins!') else: print('You win!') elif user_choice == 'scissors': if computer_choice == 'rock': print('Computer wins!') else: print('You win!')"},{"prompt":"Create a class 'Fruit' to define a fruit.","completion":"class Fruit: def __init__(self, name, color, weight): self.name = name self.color = color self.weight = weight def print_info(self): print(f'Name: {self.name}') print(f'Color: {self.color}') print(f'Weight: {self.weight}')"},{"prompt":"Edit the existing code to focus the cursor in the input field. <html> <body> <input type=\\"text\\" id=\\"myInput\\" /> <script type=\\"text/javascript\\"> document.getElementById('myInput').focus(); <\/script> </body> </html>","completion":"<html> <body> <input type=\\"text\\" id=\\"myInput\\" autofocus /> <script type=\\"text/javascript\\"> document.getElementById('myInput').focus(); <\/script> </body> </html>"},{"prompt":"Write a code snippet to add a new element 'z' at the end of list 'x'. x = [1, 2, 3]","completion":"x.append('z')"},{"prompt":"Write a loop to sum all the elements in list 'l'. l = [1, 2, 3, 4]","completion":"s = 0 for num in l: s += num"},{"prompt":"Using numpy, find the mean of array 'arr'. arr = [1, 2, 3, 4, 5]","completion":"import numpy as np np.mean(arr)"},{"prompt":"Create a MySQL database and table based on the given information. Table name: products Fields: id (integer, unique), name (varchar), price (decimal)","completion":"CREATE DATABASE products; USE products; CREATE TABLE products ( id INTEGER UNIQUE, name VARCHAR(255), price DECIMAL(10, 2) );"},{"prompt":"Print the given array of strings in reverse order. [\\"apple\\", \\"banana\\", \\"orange\\", \\"kiwi\\"]","completion":"print(\\"kiwi\\") print(\\"orange\\") print(\\"banana\\") print(\\"apple\\")"},{"prompt":"Design a function to retrieve the records from a nested json structure. { \\"products\\": { \\"book\\": { \\"title\\": \\"Alice in Wonderland\\", \\"author\\": \\"Lewis Carol\\" }, \\"movie\\": { \\"title\\": \\"The Godfather\\", \\"director\\": \\"Francis Ford Coppola\\" } } }","completion":"def parseJSON(input_json): book_record = input_json[\\"products\\"][\\"book\\"] movie_record = input_json[\\"products\\"][\\"movie\\"] book_title = book_record[\\"title\\"] book_author = book_record[\\"author\\"] movie_title = movie_record[\\"title\\"] movie_director = movie_record[\\"director\\"] return book_title, book_author, movie_title, movie_director"},{"prompt":"Modify the code so that it prints the given string in lowercase letters. String: \\"HELLO WORLD\\" Code: #include<iostream> using namespace std; int main() { string s = \\"HELLO WORLD\\"; cout << s << endl; return 0; }","completion":"#include<iostream> #include<algorithm> using namespace std; int main() { string s = \\"HELLO WORLD\\"; // Convert string s to lowercase letters transform(s.begin(), s.end(), s.begin(), ::tolower); cout << s << endl; return 0; }"},{"prompt":"Debug the code and make sure it successfully prints out \\"Hello World\\". #include <iostream> using namespace std; void main () { cout << \\"Hello World\\" << endl; return 0; }","completion":"#include <iostream> using namespace std; int main () { cout << \\"Hello World\\" << endl; return 0; }"},{"prompt":"Using the given data structure, find and return the 3 highest numbers. [2, 4, 8, 10, 6, 5, 7, 11]","completion":"def findThreeHighest(arr): arr.sort() return arr[-1], arr[-2], arr[-3]"},{"prompt":"Create an object for making a copy of a string. String: \\"Hello","completion":"String myString = \\"Hello\\"; String myCopyString = new String(myString);"},{"prompt":"Find and return the longest string in the given array. [\\"hello\\", \\"how\\", \\"are\\", \\"you\\", \\"doing\\"]","completion":"def longestString(arr): longest_str = '' for s in arr: if len(s) > len(longest_str): longest_str = s return longest_str"},{"prompt":"Create a for loop for looping through the elements of a given array. [\\"Apple\\", \\"Banana\\", \\"Orange\\"]","completion":"for item in [\\"Apple\\", \\"Banana\\", \\"Orange\\"]: print(item)"},{"prompt":"Use the input data to create a bar chart. Data: [(\\"Apple\\", 20), (\\"Samsung\\", 16), (\\"Google\\", 11), (\\"Sony\\", 14)]","completion":"import matplotlib.pyplot as plt items = [x[0] for x in data] values = [x[1] for x in data] plt.bar(items, values) plt.show()"},{"prompt":"ert a breakpoint just before the return statement. def calculate_the_total(fruit_list): total = 0 for item in fruit_list: total += item return total","completion":"def calculate_the_total(fruit_list): total = 0 for item in fruit_list: total += item import pdb; pdb.set_trace() return total"},{"prompt":"w many lines of code are in the given snippet? def print_list(my_list): for item in my_list: print(item)","completion":"4 lines of code."},{"prompt":"Create a program to enter the data for user registration.","completion":"def get_user_data(): username = input('Enter your desired username: ') email = input('Enter your email address: ') password = input('Enter a password: ') confirm_password = input('Confirm your password: ') # check if the passwords match if password != confirm_password: print('Passwords do not match') return # save username, email, and password user_data = { 'username': username, 'email': email, 'password': password } return user_data"},{"prompt":"Print prime numbers in the given range. Lower range: 10 Upper range: 30","completion":"for num in range(10, 30 + 1): # prime numbers are greater than 1 if num > 1: for i in range(2, num): if (num % i) == 0: break else: print(num)"},{"prompt":"Create a program that sorts the integers in the input list into ascending order. List: [4, 9, 8, 1, 5]","completion":"def sort_ascending(my_list): sorted_list = sorted(my_list) return sorted_list my_list = [4, 9, 8, 1, 5] sorted_list = sort_ascending(my_list) print(sorted_list)"},{"prompt":"w many lines of code to print Fibonacci sequence of 30 numbers?","completion":"The number of lines of code to print Fibonacci sequence of 30 numbers is 5."},{"prompt":"Print a message to the console \\" hello world \\".","completion":"print(\\"hello world\\")"},{"prompt":"Add two matrices of size 3x3. mat1 = [[1,2,3], [4,5,6], [7,8,9]] mat2 = [[10,11,12], [13,14,15], [16,17,18]]","completion":"# adding two matrices res = [[0, 0, 0], [0, 0, 0], [0, 0, 0]] # iterating through rows for i in range(3): # iterating through columns for j in range(3): res[i][j] = mat1[i][j] + mat2[i][j] # printing the result for i in range(3): for j in range(3): print(res[i][j], end=\\" \\") print() # Output: 11 13 15 17 19 21 23 25 27"},{"prompt":"What is the best way to test for memory leaks in a C++ program?","completion":"The best way to test for memory leaks in a C++ program is to use a memory profiler. Memory profilers can help identify memory leaks by monitoring how much memory is allocated, how often it is allocated, and whether or not the same or similar memory is being allocated multiple times. They can also track how memory is being used, which can reveal potential memory leaks or help in optimizing code."},{"prompt":"Convert the decimal number 595 to hexadecimal representation.","completion":"The hexadecimal representation of 595 is 0x257."},{"prompt":"Create a loop that prints all numbers 1 to 100 with the exception of multiples of 5.","completion":"for i in range(1,101): if i % 5 != 0: print(i)"},{"prompt":"Construct a database table in SQL to store user information.","completion":"CREATE TABLE users ( id INT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(128) NOT NULL, email VARCHAR(128) NOT NULL UNIQUE, password VARCHAR(128) NOT NULL );"},{"prompt":"Edit the following Python code to print a date in a human-readable form. print(date.today())","completion":"from datetime import date print(date.today().strftime(\\"%B %d, %Y\\"))"},{"prompt":"Parse this JSON data and print the names of all the users. { \\"users\\": [ { \\"name\\": \\"John\\" }, { \\"name\\": \\"Jill\\" }, { \\"name\\": \\"Harry\\" } ] }","completion":"import json data = json.loads(input) for user in data['users']: print(user['name'])"},{"prompt":"Write your own version of Fisher-Yates algorithm for shuffling an array.","completion":"def shuffle(arr): for i in range(len(arr)-1, 0, -1): j = random.randint(0, i) arr[i], arr[j] = arr[j], arr[i] return arr"},{"prompt":"Generate a random password.","completion":"import string import random def generate_password(): length = random.randint(12, 24) pwd = ''.join(random.choice(string.ascii_letters + string.digits) for i in range(length)) return pwd"},{"prompt":"Construct a query in SQL to find out how many users have the same name.","completion":"SELECT name, COUNT(*) FROM users GROUP BY name HAVING COUNT(*) > 1;"},{"prompt":"Recreate the same result from the given sample output. Sample output: 1 11 21 1211 111221","completion":"n = '1' for x in range(5): a, b = '', '' count = 1 for i in range(1, len(n)): if(n[i] != n[i-1]): a += str(count) a += n[i-1] count = 1 else: count+=1 if(n[i] == n[i-1]): a += str(count) a += n[i] n = a print(n)"},{"prompt":"Write an application that keeps track of tasks and provides status updates for the tasks.","completion":"import sys #Defining the Task class class Task(object): \\"\\"\\" Class to keep track of tasks and provide status updates. \\"\\"\\" def __init__(self, name, status): \\"\\"\\"Initializing instance attributes\\"\\"\\" self.name = name self.status = status self.status_dict = { \\"Not Started\\": 0, \\"In Progress\\": 1, \\"Completed\\": 2 } def get_status(self): \\"\\"\\"Returns the current status of the task\\"\\"\\" return self.status def set_status(self, status): \\"\\"\\"Method to update the status of the task\\"\\"\\" if(status not in self.status_dict.keys()): sys.exit(\\"Invalid status!! Please enter a valid status\\") #Valid status so updating the task's status self.status = status"},{"prompt":"Create a class called Ball which has three dimensional coordinates x, y and z.","completion":"class Ball: def __init__(self, x, y, z): self.x = x self.y = y self.z = z"},{"prompt":"Write a class that simulates a die with 6 sides.","completion":"import random class Die: def __init__(self): self.sides = 6 def roll(self): return random.randint(1, self.sides)"},{"prompt":"Create a dictionary comprehension to create a dictionary with the values from the given list. list = [\\"a\\",\\"b\\",\\"c\\"]","completion":"dict = {x:x for x in list}"},{"prompt":"Suppose you have a 3x2 matrix, A. Find the transpose of A. A = [1 9 7; 8 0 6];","completion":"A_Transpose = A'"},{"prompt":"mplement the following pseudocode in C language. sum = 0 for i = 0 to n inclusive sum += i^2 end","completion":"int sum=0; for (int i=0; i<=n; ++i) sum += pow(i,2); end"},{"prompt":"Create a CSS rule to make the div element with an id of \\"container\\" to have a width of 500px.","completion":"#container { width: 500px; }"},{"prompt":"Write an R command to calculate the standard deviation of the given array. x = c(3, 4, 5, 7, 8)","completion":"sd(x)"},{"prompt":"Create a class in Java that comprises of a date, a location and temperature reading associated with that location on that particular date.","completion":"public class TemperatureReading { private Date date; private String location; private int temperature; public TemperatureReading(Date date, String location, int temperature) { this.date = date; this.location = location; this.temperature = temperature; } public Date getDate() { return date; } public String getLocation() { return location; } public int getTemperature() { return temperature; } }"},{"prompt":"Create a shortcut command in Bash to run a program called \\"MyApp","completion":"alias mkapp=\\"MyApp\\""},{"prompt":"Write a SQL query to select the employees who are in their 30s.","completion":"SELECT * FROM employee WHERE YEAR(CURDATE()) - YEAR(dob) BETWEEN 30 and 39;"},{"prompt":"Compare two strings to check if they are identical using the JavaScript language. str1 = 'Testing' str2 = 'Testing'","completion":"let identical = str1 === str2; if (identical) { console.log(\\"Strings are identical\\"); } else { console.log(\\"Strings are not identical\\"); }"},{"prompt":"Define a class named \\"Day\\" in Python to represent a day of the week.","completion":"class Day: def __init__(self): self.day = \\"\\" def set_day(self, day): self.day = day def get_day(self): return self.day"},{"prompt":"Write a C++ program that prints the Fibonacci numbers up to the number specified by the user.","completion":"#include <iostream> using namespace std; int main() { int n, t1 = 0, t2 = 1, nextTerm; cout << \\"Enter the number of terms: \\"; cin >> n; cout << \\"Fibonacci Series: \\"; for (int i = 1; i <= n; ++i) { if (i == 1) { cout << \\" \\" << t1; continue; } if (i == 2) { cout << t2 << \\" \\"; continue; } nextTerm = t1 + t2; t1 = t2; t2 = nextTerm; cout << nextTerm << \\" \\"; } return 0; }"},{"prompt":"Write a Java code snippet to show the below numbers in a tabular format on the console. num1 = 8 num2 = 10 num3 = 12","completion":"int [] nums = {8, 10, 12}; System.out.println(\\"Number tNumber tNumber\\"); for(int i=0; i<nums.length; i++) { System.out.println(nums[i] + \\"tt\\" + nums[i+1] + \\"tt\\" + nums[i+2]); i++; }"},{"prompt":"Given a list of strings, use Python to print the count of strings that start with the letter 'a'. string_list = [\\"apple\\",\\"mango\\",\\"banana\\",\\"avocado\\"]","completion":"count = 0 for string in string_list: if string.startswith(\\"a\\"): count += 1 print(\\"The count of strings starting with 'a' is:\\", count)"},{"prompt":"Generate a piece of code that defines and calls a function in Python.","completion":"def myFunction(): print(\\"Hello World\\") myFunction()"},{"prompt":"Create an array of fruits and vegetables with 10 items.","completion":"['Apple', 'Banana', 'Orange', 'Grape', 'Potato', 'Carrot', 'Onion', 'Cucumber', 'Tomato', 'Pepper']"},{"prompt":"Write a line of JavaScript code to create a variable \`x\` and assign the number \`7\` to it.","completion":"let x = 7;"},{"prompt":"Generate a code snippet in Java to display a message \\"Hello World!","completion":"System.out.println(\\"Hello World!\\");"},{"prompt":"Refactor the given piece of code in Java to make it more concise. int a = 5; int b = 10; int c = a + b;","completion":"int c = 5 + 10;"},{"prompt":"Create a regular expression that matches a string that begins with \\"abcd\\" and ends with \\"efgh\\".","completion":"/^abcd.*efgh/"},{"prompt":"Design a JavaScript program to validate forms.","completion":"function validateForm() { // check if each form element has a valid value if (formElement1.value == '' || formElement2.value == '') { alert('Please fill out all the fields!'); return false; } else { return true; } }"},{"prompt":"ert the proper code to convert the given address from string to a dictionary. address = \\"901 Grand Absinth Avenue,Anytown, ST, 98765","completion":"address = \\"901 Grand Absinth Avenue,Anytown, ST, 98765\\" address_dict = { \\"street\\": address.split(\\",\\")[0], \\"city\\": address.split(\\",\\")[1], \\"state\\": address.split(\\",\\")[2], \\"zip\\": address.split(\\",\\")[3] }"},{"prompt":"Reverse the given input string. string = \\"code","completion":"string = \\"code\\" reversed_str = string[::-1] print(reversed_str) # Output: edoc"},{"prompt":"Using the comment as a guide, create a function to calculate the area of a triangle.","completion":"def area_of_triangle(base, height): \\"\\"\\"Calculate the area of a triangle.\\"\\"\\" area = (0.5 * base * height) return area"},{"prompt":"Create a set of the characters present in the given string. string = \\"mississipp","completion":"string = \\"mississippi\\" characters = set(string) print(characters) # Output: {'i', 's', 'p', 'm'}"},{"prompt":"Create an array with 10 random numbers in the range of 1 to 50.","completion":"import random nums = [random.randint(1, 50) for _ in range(10)] print(nums) # Output: [7, 44, 15, 47, 1, 31, 29, 39, 33, 11]"},{"prompt":"Reconstruct the given code snippet.","completion":"def is_year_leap(year): # leap year is divisible by 4 # However, if year is divisible by 100, then it is not a leap year # Unless year is divisible by 400 leap_year = (year % 4 == 0 and year % 100 != 0) or (year % 400 == 0) return leap_year"},{"prompt":"Create a variable to store the given number as an integer. num = \\"42","completion":"num = \\"42\\" num_int = int(num) print(num_int) # Output: 42"},{"prompt":"Given two sorted lists of numbers, write a code to merge them. list1 = [1, 2, 3, 4] list2 = [3, 4, 5, 6]","completion":"def merge_lists(list1, list2): merged_list = [] i, j = 0, 0 while i < len(list1) and j < len(list2): if list1[i] <= list2[j]: merged_list.append(list1[i]) i += 1 else: merged_list.append(list2[j]) j += 1 if i == len(list1): merged_list.extend(list2[j:]) else: merged_list.extend(list1[i:]) return merged_list merged_list = merge_lists(list1, list2) print(merged_list)"},{"prompt":"Generate a random password with a combination of letters, numbers and special characters.","completion":"import random def generate_password(): letters = 'abcdefghijklmnopqrstuvwxyz' numbers = '0123456789' special_characters = '@#%^&*()' password = '' password += random.choice(letters) password += random.choice(numbers) password += random.choice(special_characters) for _ in range(6): source = random.choice([letters, numbers]) password += random.choice(source) return password print(generate_password())"},{"prompt":"Write a sql query to find all employees who have the same job and department.","completion":"SELECT * FROM Employees WHERE Department IN (SELECT Department FROM Employees GROUP BY Department HAVING COUNT(DISTINCT Job) = 1) AND Job IN (SELECT Job FROM Employees GROUP BY Job HAVING COUNT(DISTINCT Department) = 1)"},{"prompt":"Create a MySQL query to get the names of all users who are over 18.","completion":"SELECT name FROM users WHERE age > 18;"},{"prompt":"Construct a pandas dataframe from 4 dictionaries. d1 = { 'name' : [\\"Alice\\", \\"Bob\\", \\"Charlie\\"], 'age' : [24, 45, 37], } d2 = { 'weight' : [87, 66, 65], 'height' : [165, 179, 173], } d3 = { 'income' : [3000, 4500, 4800], 'job' : [\\"engineer\\", \\"teacher\\", \\"secretary\\"], } d4 = { 'city' : [\\"Glasgow\\", \\"New York\\", \\"Paris\\"], 'country' : [\\"Scotland\\", \\"USA\\", \\"France\\"], }","completion":"import pandas as pd df = pd.DataFrame({ 'name': d1['name'], 'age': d1['age'], 'weight': d2['weight'], 'height': d2['height'], 'income': d3['income'], 'job': d3['job'], 'city': d4['city'], 'country': d4['country'] })"},{"prompt":"Create a Swift closure to calculate the power of a number.","completion":"let powerCalc = { (base: Int, exp: Int) -> Int in return Int(pow(Double(base), Double(exp))) }"},{"prompt":"Change the following Java code so that it only prints the letters at even indices in the string. String str = \\"Hello, World!\\"; for (int i = 0; i < str.length(); i++) { System.out.print(str.charAt(i)); }","completion":"String str = \\"Hello, World!\\"; for (int i = 0; i < str.length(); i+=2) { System.out.print(str.charAt(i)); }"},{"prompt":"Construct a JSX expression that renders a <span> element with className \\"highlight\\".","completion":"<span className=\\"highlight\\" ></span>"},{"prompt":"Compute the natural logarithm of 500 using Python.","completion":"import math print(math.log(500))"},{"prompt":"Compose a basic HTML page to display the phrase \\"Contact us now!","completion":"<html> <head> <title>Contact Page</title> </head> <body> <h1>Contact Us Now!</h1> </body> </html>"},{"prompt":"Create a SQL query to delete all customers with a last name of \\"Smith","completion":"DELETE FROM customers WHERE last_name = 'Smith';"},{"prompt":"Calculate the angle of elevation when a ball is thrown upward with initial velocity of 20m/s","completion":"The angle of elevation can be calculated as: angle = arctan(20m/s/9.8m/s^2) = 73.189 degrees"},{"prompt":"Come up with some ideas to design a user interface for an online database","completion":"Some ideas for designing a user interface for an online database include: - Using a search bar for users to easily find the information they are looking for quickly. - Creating a filter search to allow users to narrow down relevant results as needed. - Offering a progress bar to show the status of database operations. - Creating a database dashboard to give users an overview of data. - Implementing database notifications to alert users when tasks or operations are completed or if any errors occur."},{"prompt":"Transform the following piece of code into a shorter version if (x > 0 && x < 10) { return true; } else { return false; }","completion":"return (x > 0 && x < 10);"},{"prompt":"Scramble a given array so that it appears in a random order [3, 7, 8, 2. 5]","completion":"def scramble(arr): for i in range(len(arr) - 1): j = random.randint(0, len(arr)-1) arr[i], arr[j] = arr[j], arr[i] return arr scramble([3, 7, 8, 2, 5])"},{"prompt":"Create a computer algorithm to determine the validity of a sudoku puzzle","completion":"def is_valid_sudoku(puzzle): size = len(puzzle) for row in range(len(puzzle)): seen = set() for col in range(size): number = puzzle[row][col] if number != 0: if number in seen: return False seen.add(number) for col in range(3): seen = set() for row in range(size): number = puzzle[row][col] if number != 0: if number in seen: return False seen.add(number) # and so on return True"},{"prompt":"Write a function that accepts an integer value n and creates an n by n matrix, with all elements initialised to zero.","completion":"def create_matrix(n): matrix = [] for i in range(n): row = [] for j in range(n): row.append(0) matrix.append(row) return matrix"},{"prompt":"Create a regular expression for matching the following pattern: words starting with 'b' followed by three times the letter 'a'.","completion":"b(a){3}"},{"prompt":"Return true or false for checking if a character is alphanumeric or not. A character '&'","completion":"False"},{"prompt":"Write a function in Python to compute average of the numbers in a given list. [2, 4, 5, 7]","completion":"def compute_avg(numbers): total = 0 for num in numbers: total += num return total/len(numbers)"},{"prompt":"Write an HTML page with a form having two textboxes and two buttons.","completion":"<html> <body> <form> <input type=\\"text\\" id=\\"textbox1\\" /><br> <input type=\\"text\\" id=\\"textbox2\\" /><br> <button name=\\"submitbtn\\">Submit</button><br> <button name=\\"resetbtn\\">Reset</button><br> </form> </body> </html>"},{"prompt":"Compute the sum of numbers in a given tree. Tree Structure 5 / 3 7","completion":"def compute_sum(root): if not root: return 0 left_sum = compute_sum(root.left) right_sum = compute_sum(root.right) return root.val + left_sum + right_sum"},{"prompt":"Create a short Java program that prints out a word 5 times. Word: hello","completion":"public class HelloWorld { public static void main(String[] args) { for (int i = 0; i < 5; i++) { System.out.println(\\"hello\\"); } } }"},{"prompt":"Sort a list of words in alphabetical order using C. words = [\\"hello\\", \\"world\\", \\"apple\\", \\"zebra\\"]","completion":"#include<stdio.h> #include<string.h> int main() { char words[][10] = {\\"hello\\", \\"world\\", \\"apple\\", \\"zebra\\"}; int n = 4; int i, j; // sorting the phrases for (i = 0; i < n-1; i++) for (j = i+1; j < n; j++) if (strcmp(words[i], words[j]) > 0) { char temp[10]; strcpy(temp, words[i]); strcpy(words[i], words[j]); strcpy(words[j], temp); } printf(\\"In lexicographical order: n\\"); for (i = 0; i < n; i++) printf(\\"%sn\\", words[i]); return 0; }"},{"prompt":"Design a SQL table to store user information such as username and password.","completion":"CREATE TABLE users ( id INTEGER primary key, username VARCHAR(32) NOT NULL, password VARCHAR(256) NOT NULL );"},{"prompt":"mplement a decision tree as a class in Python.","completion":"class DecisionTree: def __init__(self,X,y): self.X = X self.y = y def fit(self, X,y): # Implement decision tree fitting algorithm def predict(self,X): # Implement decision tree prediction algorithm"},{"prompt":"Create an HTML template for a login form having username and password.","completion":"<html> <head> <title>Login Form</title> </head> <body> <form action=\\"\\" method=\\"POST\\"> <label>Username:</label><input type=\\"text\\" /> <label>Password:</label><input type=\\"password\\" /> <input type=\\"submit\\" /> </form> </body> </html>"},{"prompt":"erate through a list and print only the elements that include the character 'a'. list_items = [\\"apple\\", \\"banana\\", \\"carrot\\", \\"durian\\"]","completion":"for item in list_items: if 'a' in item: print(item) # Output apple banana carrot"},{"prompt":"Use for loop to print all numbers from 1 to 100 in separate lines.","completion":"for i in range (1, 101): print(i)"},{"prompt":"Calculate the sum of the numbers from 1 to 10 and print out the result.","completion":"sum = 0 for n in range (1, 11): sum += n print(sum)"},{"prompt":"Generate a Fibonacci sequence up to the 12th term.","completion":"a, b = 0, 1 for i in range (12): print(a) a, b = b, a + b # Output 0 1 1 2 3 5 8 13 21 34 55 89 144"},{"prompt":"Create a class named \\"Vector\\" with two attributes \\"x\\" and \\"y\\" and define a \\"length\\" method that returns the length of the vector.","completion":"class Vector: def __init__(self, x, y): self.x = x self.y = y def length(self): return (self.x**2 + self.y**2)**0.5"},{"prompt":"Create a function that multiplies two numbers and return the result. a = 10 b = 5","completion":"def multiply(a, b): return a * b result = multiply(a, b) print(result)"},{"prompt":"Find the mean of the list of numbers [1,2,3,4,5,6,7]","completion":"list = [1,2,3,4,5,6,7] sum = 0 for i in list: sum += i mean = sum/len(list) print(mean)"},{"prompt":"Sort the list of numbers [3,2,7,9,1] in ascending order. list = [3,2,7,9,1]","completion":"list.sort() print(list) # Output [1,2,3,7,9]"},{"prompt":"Create an array of length 10 and fill each element randomly from 0 to 9.","completion":"import random arr = [] for i in range(10): arr.append(random.randint(0, 9)) print(arr)"},{"prompt":"Find the number of elements in an array of integers [1,2,3,4,5]. arr = [1,2,3,4,5]","completion":"length = len(arr) print(length) # Output 5"},{"prompt":"Using regex, replace all occurrences of 'cat' with 'dog' in the following text. text = \\"I saw a cat in the park.","completion":"import re text = \\"I saw a cat in the park.\\" result = re.sub(r'cat', 'dog', text) print(result) # Output I saw a dog in the park."},{"prompt":"Create a loop that runs from 1 to 10 and prints the square of each number.","completion":"for i in range (1, 11): print(i**2)"},{"prompt":"w would you use the 'enumerate()' function in a for loop to print numbers from 0 to 5?","completion":"for i, item in enumerate(range(6)): print(i)"},{"prompt":"Create a bash script to check if a given integer is even.","completion":"#!/bin/bash if [ 1%2 -eq 0 ] then echo \\"1 is an even number\\" else echo \\"1 is an odd number\\" fi"},{"prompt":"Create a CSS stylesheet to turn all the h1 tags to a deep purple color.","completion":"h1 { color: #4B0082; }"},{"prompt":"Create a class \\"Addition\\" with a method called \\"add\\" which takes two integers as inputs and returns the sum of the two numbers?","completion":"class Addition: def add(self, x, y): return x + y"},{"prompt":"Create a function that checks for a specific word in the string. myString = \\"This is a simple sentence.","completion":"def check_word(myString, word): if word in myString: return True return False"},{"prompt":"dentify a function from the following code snippet which adds an element to the given array. arr = [1, 2, 3] def add_element(arr, element): return arr.append(element)","completion":"The function is add_element(arr, element), which adds the given element to the given array and returns the modified array."},{"prompt":"Given a Python list, display the total number of elements in the list. mylist = [1, 2, 3, 4, 5]","completion":"The total number of elements in the list is 5."},{"prompt":"Write a function which takes a list of integers and returns an integer which is the product of all the integers in the list.","completion":"def product_of_list(nums): product = 1 for num in nums: product *= num return product"},{"prompt":"Design a function to get the length of the longest increasing subsequence in a given list of integers.","completion":"def longest_increasing_subsequence_length(nums): n = len(nums) LIS = [1] * n for i in range(1, n): for j in range(0, i): if nums[i] > nums[j] and LIS[i] < LIS[j] + 1: LIS[i] = LIS[j] + 1 return max(LIS)"},{"prompt":"Create a Ruby program that takes a number input from the user and creates a loop that prints out each number from 1 to the input number. 8","completion":"(1..8).each do |x| puts x end"},{"prompt":"Create a function in TypeScript that takes two strings of equal length and returns the number of characters which match at the same position in the strings. \\"abcdefg\\", \\"hijklm","completion":"function countMatchingChar(str1: string, str2: string): number { let count = 0; if(str1.length != str2.length) { return -1; // handle unequal lengths } for(let i = 0; i < str1.length; i++) { if(str1.charAt(i) === str2.charAt(i)) { count++; } } return count; }"},{"prompt":"Write a Java program to convert a character to an int. 'A'","completion":"public class Main { public static void main(String[] args) { char ch = 'A'; int asciiCode = (int) ch; System.out.println(\\"ASCII code of 'A' :\\" + asciiCode); } }"},{"prompt":"Create a bash script that takes a path argument and checks for pattern \`.gitconfig\`. /home/user/","completion":"#!/bin/bash DIR=1 result=(find \\"DIR\\" -name '*.gitconfig' | wc -l) if [ result -gt 0 ] then echo \\"Found result .gitconfig files in DIR\\" else echo \\"No .gitconfig files found in DIR\\" fi"},{"prompt":"Create an HTML page with a table containing the following data in four rows. Id | First Name | Last Name | Age 1 | John | Doe | 30 2 | Jane | Doe | 25 3 | Brian | Smith | 32 4 | Maria | Smith | 28","completion":"<html> <head> <title>Table Data</title> </head> <body> <table> <thead> <tr> <th>Id</th> <th>First Name</th> <th>Last Name</th> <th>Age</th> </tr> </thead> <tbody> <tr> <td>1</td> <td>John</td> <td>Doe</td> <td>30</td> </tr> <tr> <td>2</td> <td>Jane</td> <td>Doe</td> <td>25</td> </tr> <tr> <td>3</td> <td>Brian</td> <td>Smith</td> <td>32</td> </tr> <tr> <td>4</td> <td>Maria</td> <td>Smith</td> <td>28</td> </tr> </tbody> </table> </body> </html>"},{"prompt":"Write a PHP code to accept text from a text box and print it to the screen.","completion":"<?php if(isset(_POST['submit'])) { text = _POST['text']; echo text; } ?> <form action=\\"\\" method=\\"POST\\"> <input type=\\"text\\" name=\\"text\\"/> <input type=\\"submit\\" name=\\"submit\\"/> </form>"},{"prompt":"Create a JavaScript function that takes two strings of equal length and returns the positions of the characters which don't match. \\"abcdefg\\", \\"hijklm","completion":"function findNonMatchingPos(str1, str2) { let positions = []; if(str1.length != str2.length) { return -1; //handle unequal lengths } for(let i = 0; i < str1.length; i++) { if(str1.charAt(i) !== str2.charAt(i)) { positions.push(i); } } return positions; }"},{"prompt":"Write a C code to compare two strings letter-wise and print out the number of times they differ. \\"abc\\", \\"bcd","completion":"#include <stdio.h> int compare_strings(char *str1, char *str2) { int count = 0; while (*str1 != '0' && *str2 != '0') { if (*str1 != *str2) count++; str1++; str2++; } return count; } int main() { char str1[100]; char str2[100]; int count; printf(\\"Input string 1: \\"); scanf(\\"%s\\", str1); printf(\\"Input string 2: \\"); scanf(\\"%s\\", str2); count = compare_strings(str1, str2); printf(\\"Number of differences: %dn\\", count); return 0; }"},{"prompt":"w would you store the location of a person in a database?","completion":"The location of a person can be stored in a database in the form of a latitude and longitude pair, as a set of geographic coordinates or as a physical address."},{"prompt":"Suggest ways to improve the performance of the following list implementation. class List: def __init__(self): self.items = [] def append(self, item): self.items.append(item) def remove(self, item): self.items.remove(item)","completion":"class List: def __init__(self): self.items = [] def append(self, item): if item not in self.items: self.items.append(item) def remove(self, item): try: self.items.remove(item) except ValueError: pass def remove_at_index(self, index): del self.items[index] def search(self, item): return item in self.items"},{"prompt":"Write a function in Javascript that takes two numbers and combines them in order to calculate their sum.","completion":"function sum(a, b) { return a + b; }"},{"prompt":"w would you delete every third element of a given linked list?","completion":"We can traverse the linked list and keep track of the count of the visited nodes. For every node whose count is divisible by 3, we delete the node by adjusting the references of the preceding and succeeding nodes."},{"prompt":"Write an HTML table to show a list of 3 books and respective authors. Book 1: The Great Gatsby, Author: F. Scott Fitzgerald Book 2: The Catcher in the Rye, Author: J. D. Salinger Book 3: To Kill a Mockingbird, Author: Harper Lee","completion":"<table> <tr> <th>Book</th> <th>Author</th> </tr> <tr> <td>The Great Gatsby</td> <td>F. Scott Fitzgerald</td> </tr> <tr> <td>The Catcher in the Rye</td> <td>J.D. Salinger</td> </tr> <tr> <td>To Kill a Mockingbird</td> <td>Harper Lee</td> </tr> </table>"},{"prompt":"Given a matrix, write a program that finds its determinant in Python. [[a, b], [c, d]]","completion":"def determinant(matrix): a = matrix[0][0] b = matrix[0][1] c = matrix[1][0] d = matrix[1][1] return a*d - b*c"},{"prompt":"Create a function to combine two arrays, sorting first by grade in ascending order, and then by age in descending order. Array 1: [['Tom', 10], ['Sam', 8], ['Bob', 8]] Array 2: [['Tom', 15], ['Sam', 12], ['Bob', 13]]","completion":"def combine(arr1, arr2): res = [] # Combine two arrays for i in range(len(arr1)): res.append(arr1[i] + arr2[i]) # Sort by grade in ascending order res.sort(key=lambda x: x[1]) # Sort by age in descending order res.sort(key=lambda x: x[2], reverse=True) return res"},{"prompt":"Write a JavaScript function to convert an array to a string separated by key-pair value separator such as \\"|\\". const array1 = [1,2,3,4,5];","completion":"function arrayToString(arr, separator=\\"|\\") { return arr.join(separator); } arrayToString(array1); // returns \\"1|2|3|4|5\\""},{"prompt":"Combine two sorted Arrays into one sorted Array. arr1 = [1, 5, 8, 9, 10]; arr2 = [2, 3, 4, 6, 7];","completion":"function combineArray(arr1, arr2) { let combined = []; let l = 0; let r = 0; while ((l < arr1.length) && (r < arr2.length)) { if (arr1[l] < arr2[r]) { combined.push(arr1[l]); l++; } else { combined.push(arr2[r]); r++; } } while (l < arr1.length) { combined.push(arr1[l]); l++; } while (r < arr2.length) { combined.push(arr2[r]); r++; } return combined; } const result = combineArray(arr1, arr2); console.log(result); // [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]"},{"prompt":"Write a Java class named \\"Shape\\" which has an abstract method named \\"surfaceArea\\".","completion":"public abstract class Shape { public abstract double surfaceArea(); }"},{"prompt":"Create a MongoDB query to find documents with a field value within a certain range. collectionName: shapes fieldName: area range: [200, 500]","completion":"db.shapes.find( { area: { gte: 200, lte: 500 } } )"},{"prompt":"Create a CSS class with border radius and a background colour.","completion":".rounded-box { border-radius: 8px; background-color: #f5f5f5; }"},{"prompt":"Update a MongoDB document such that it replace a specific field with a new value. db_name: \\"users\\" collection_name: \\"customers\\" field_name: \\"name\\" new_value: \\"John Doe","completion":"db.customers.update( { name: \\"John Doe\\" }, { set: { name: \\"John Doe\\" } } )"},{"prompt":"Write a Python code to remove the characters 'a', 'b', and 'c' from a given string. String: abcabcabc","completion":"def remove_chars(string): for char in \\"abc\\": string = string.replace(char, '') return string"},{"prompt":"Comment the code snippet. i = 0 while i < 10: print(i) i = i + 1","completion":"# This program will print numbers from 0 to 9 # i is used to keep track of the loop's iteration count # The while block will be run until i reaches 10 # Each iteration, i is incremented by 1"},{"prompt":"Separate the numbers in the given string variable. String: 1a2b34c","completion":"nums = [int(x) for x in my_string if x.isdigit()]"},{"prompt":"What are the similarities between dictionaries and Lists in Python?","completion":"Both dictionaries and lists are container data structures in Python which allow for the storage and retrieval of data. They are both mutable, meaning the contents can be updated, changed and manipulated. They also both contain an ordered sequence of elements, allowing for indexing into each one. However, dictionaries use a key:value pair, whereas lists contain only values."},{"prompt":"Write a Python code to sort the names into ascending order. names = [\\"Vladimir Putin\\",\\"Joe Biden\\",\\"Xi Jinping\\"]","completion":"names.sort()"},{"prompt":"Generate a new List from the given list such that the elements are squares of the preceding numbers. givenList = [1, 2, 3, 4]","completion":"newList = [x**2 for x in givenList]"},{"prompt":"Develop an HTML/CSS code for creating a three column layout with a header, footer and content.","completion":"<!-- flexbox design --> <div class=\\"layout-wrapper\\" style=\\"display: flex; flex-direction: row;\\"> <div class=\\"header\\" style=\\"flex: 1; background-color: red;\\"> Header </div> <div class=\\"body\\" style=\\"flex: 3; display:flex; flex-direction: row;\\"> <div class=\\"left-column\\" style=\\"flex: 1; background-color: yellow;\\"> Left Column </div> <div class=\\"middle-column\\" style=\\"flex: 3; background-color: green;\\"> Content </div> <div class=\\"right-column\\" style=\\"flex: 1; background-color: blue;\\"> Right Column </div> </div> <div class=\\"footer\\" style=\\"flex: 1; background-color: purple;\\"> Footer </div> </div>"},{"prompt":"Develop a SQL query to count the number of people who are born before 1992.","completion":"SELECT COUNT(*) FROM people WHERE year_of_birth < 1992;"},{"prompt":"Write an HTML code snippet to create an interactive dropdown menu.","completion":"<select> <option value=\\"\\">Select an option</option> <option value=\\"animal\\"> Animal</option> <option value=\\"plant\\"> Plant</option> <option value=\\"mineral\\"> Mineral</option> </select>"},{"prompt":"Develop a machine learning model in Python to classify emails as either important or not important.","completion":"import numpy as np import pandas as pd import sklearn from sklearn.preprocessing import LabelEncoder from sklearn.feature_extraction.text import TfidfVectorizer from sklearn.model_selection import train_test_split from sklearn.naive_bayes import MultinomialNB # Read the dataset data = pd.read_csv('emails.csv') # Pre-process the dataset for label encoding and feature extraction label_encoder = LabelEncoder() y = label_encoder.fit_transform(data.category.values) tfidf_vectorizer = TfidfVectorizer(stop_words='english', min_df=2) X = tfidf_vectorizer.fit_transform(data.body.values) # Split the dataset into train and test X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42) # Train the Multinomial Naive Bayes model model = MultinomialNB() model.fit(X_train, y_train) # Evaluate the model score = model.score(X_test, y_test) print('Test accuracy: ', score)"},{"prompt":"Create a ReactJS component to display a modal window with a form.","completion":"import React from 'react'; const ModalWindow = ({ showModal, closeModal }) => { return ( showModal && ( <div> <div> <h3> Modal Window </h3> </div> <div> <form> ... </form> </div> <div> <button type=\\"button\\" onClick={closeModal}> Close </button> </div> </div> ) ); } export default ModalWindow;"},{"prompt":"Develop a PHP code snippet to retrieve all records from a database table \\"POSTS\\".","completion":"<?php // Establish a connection to the database conn = new mysqli('localhost', 'username', 'password', 'database'); // Check the connection if (conn->connect_error) { die(\\"Connection failed:\\" . conn->connect_error); } // Execute the query sql = \\"SELECT * FROM POSTS\\"; result = conn->query(sql); // Loop through the results if (result->num_rows > 0) { while(row = result->fetch_assoc()) { echo row['title'] . \\"<br />\\"; } } // Close the connection conn->close(); ?>"},{"prompt":"Develop a code snippet in Java to create a thread that runs a simple print statement every 5 seconds.","completion":"public class MyTask implements Runnable { public void run() { while (true) { System.out.println(\\"This is the task running every 5 seconds.\\"); try { Thread.sleep(5000); } catch (InterruptedException e) { e.printStackTrace(); } } } } public class Main { public static void main (String[] args) { MyTask task = new MyTask(); Thread thread = new Thread(task); thread.start(); } }"},{"prompt":"Write a CSS code to create a navigation menu with drop down sub menus.","completion":"<ul> <li> <div>Navigation Menu</div> <ul> <li> <div>Link 1</div> </li> <li> <div>Link 2</div> <ul> <li> <div>Link 2.1</div> </li> <li> <div>Link 2.2</div> </li> </ul> </li> </ul> </li> </ul> <style> ul { list-style-type: none; margin: 0; padding: 0; } li > div { background-color: #eee; padding: 8px; cursor: pointer; } li > ul { display: none; } li:hover > ul { display: block; position: absolute; } </style>"},{"prompt":"Write a code that takes a given list and sorts them using heapsort. arr = [1, 6, 5, 4, 8, 2]","completion":"def heapsort(arr): # Build the max heapify n = len(arr) for i in range(n, -1, -1): heapify(arr, n, i) # One by one extract elements for i in range(n-1, 0, -1): arr[i], arr[0] = arr[0], arr[i] # swap heapify(arr, i, 0) def heapify(arr, n, i): largest = i # Initialize largest as root l = 2 * i + 1 # left = 2*i + 1 r = 2 * i + 2 # right = 2*i + 2 # check if left child of root exists and is # greater than root if l < n and arr[i] < arr[l]: largest = l # check if right child of root exists and is # greater than root if r < n and arr[largest] < arr[r]: largest = r # Change root, if needed if largest != i: arr[i],arr[largest] = arr[largest],arr[i] # swap # Heapify the root. heapify(arr, n, largest) # Driver code if __name__ == \\"__main__\\": arr = [1, 6, 5, 4, 8, 2] heapsort(arr) n = len(arr) print (\\"Sorted array is\\") for i in range(n): print (\\"%d\\" %arr[i]),"},{"prompt":"Update the below code with a flag to control the output according to the argument given flag = False str1 = \\"Hello World\\" if flag == False: print(str1)","completion":"flag = False str1 = \\"Hello World\\" if flag: print(str1) else: print(\\"The flag is set to False, so nothing is printed\\")"},{"prompt":"Create a function to print out a multiplication table of two given multidimensional arrays. arr1 = [ [1,2] , [3,4] ] arr2 = [ [5,6] , [7,8] ]","completion":"def mult_table(arr1, arr2): for i in range(len(arr1)): for j in range(len(arr2[0])): for k in range(len(arr2)): print(arr1[i][k] * arr2[k][j], end=\\" \\") print() arr1 = [ [1,2] , [3,4] ] arr2 = [ [5,6] , [7,8] ] mult_table(arr1, arr2) # Output: 5 12 15 24"},{"prompt":"Change the following code for the output to be a list num1 = 5 num2 = 7","completion":"num1 = 5 num2 = 7 output = [num1, num2] print(output) # Output: [5, 7]"},{"prompt":"Suggest a completion for the following code so that all the words in a list are printed in reverse words = ['hello', 'world', 'my', 'name', 'is', 'john'] for word in word","completion":"words = ['hello', 'world', 'my', 'name', 'is', 'john'] for word in words: print(word[::-1], end=\\" \\") # Output: olleh dlrow ym eman si nhoj"},{"prompt":"Create a MySQL table with three columns containing values from a given list. List: Tom, 14, 80 Mary, 27, 96 John, 8, 75","completion":"CREATE TABLE my_table ( name TEXT NOT NULL, age INT NOT NULL, score INT NOT NULL ); INSERT INTO my_table (name, age, score) VALUES ('Tom', 14, 80), ('Mary', 27, 96), ('John', 8, 75);"},{"prompt":"Parse the following HTML string and get a list of all the <p> tags. <html> <p>This is a paragraph</p> <div> <span>This is a span</span> <p>This is also a paragraph</p> <p>This is another paragraph</p> </div> </html>","completion":"from bs4 import BeautifulSoup html_str = \\"\\"\\" <html> <p>This is a paragraph</p> <div> <span>This is a span</span> <p>This is also a paragraph</p> <p>This is another paragraph</p> </div> </html> \\"\\"\\" soup = BeautifulSoup(html_str, 'html.parser') paragraphs = soup.find_all('p') for p in paragraphs: print(p)"},{"prompt":"Write a SQL query that returns the 10 most recently created entries from a table with a timestamp column.","completion":"SELECT * FROM table ORDER BY timestamp DESC LIMIT 10;"},{"prompt":"Refactor the following Java code to improve readability and dynamism. public class Movies { private int movieCount = 5; private String genre = \\"action\\"; public void printMovieDetails() { System.out.println(\\"The movie count is \\" + movieCount); System.out.println(\\"The genre is \\" + genre); } }","completion":"public class Movies { private int movieCount; private String genre; public Movies(int movieCount, String genre) { this.movieCount = movieCount; this.genre = genre; } public void printMovieDetails() { System.out.println(\\"The movie count is \\" + movieCount); System.out.println(\\"The genre is \\" + genre); } }"},{"prompt":"Create a Python function that takes an object as an input and returns its names and values. Input: {\\"name\\": \\"John\\", \\"age\\": 25, \\"cities\\": [\\"New York\\", \\"Boston\\"]}","completion":"def get_object_details(input_obj): output = [] for key, value in input_obj.items(): if type(value) == list: value = \\", \\".join(value) output.append(f\\"{key}: {value}\\") return \\"n\\".join(output)"},{"prompt":"Write a C program that creates an array of 4 elements in a structure and print it.","completion":"#include<stdio.h> #include<stdlib.h> struct array_struct { int a[4]; }; int main() { struct array_struct s; s.a[0] = 13; s.a[1] = 5; s.a[2] = 17; s.a[3] = 89; printf(\\"s.a[0]: %dn\\", s.a[0]); printf(\\"s.a[1]: %dn\\", s.a[1]); printf(\\"s.a[2]: %dn\\", s.a[2]); printf(\\"s.a[3]: %dn\\", s.a[3]); }"},{"prompt":"Write an SQL query that returns the second highest salary from a table with a salary column.","completion":"SELECT MAX(salary) as SecondHighestSalary FROM salary WHERE salary NOT IN (SELECT MAX(salary) FROM salary)"},{"prompt":"Construct a for loop in Python to iterate through the list [3, 2, 5, 4, 6] in reverse order.","completion":"for num in reversed([3, 2, 5, 4, 6]): print(num)"},{"prompt":"Given a comma-separated string with numbers, remove the max value from it and output a string with comma-separated values 8, 12, 5, 2, 18","completion":"\\"8, 12, 5, 2\\""},{"prompt":"Write a CSS class that will apply a border around an HTML element.","completion":".bordered { border: 1px solid black; }"},{"prompt":"Combine the two given strings and capitalize the resulting letters. Hello World","completion":"def capitalize_combined_string(str1,str2): combined_str = str1 + str2 return combined_str.upper()"},{"prompt":"Given a two-dimensional array, write a Python code to sum each row in the array and store it in a new array. [[1, 2, 3], [4, 5, 6], [7, 8, 9]]","completion":"def sum_row_in_2d_array(arr): result = [] # iterating through array for sub_arr in arr: sum=0 # iterating through sub array for element in sub_arr: sum += element # Adding sum to result list result.append(sum) return result"},{"prompt":"Using C#, write a code to convert a Fahrenheit temperature to its equivalent in Celsius. 50","completion":"public static double FahrenheitToCelsius(double fahrenheitTemperature) { double celsiusTemperature = (fahrenheitTemperature - 32) / 1.8; return celsiusTemperature; }"},{"prompt":"Write a code to extract the odd numbers from a given array in JavaScript. [1, 2, 3, 4, 5, 6, 7, 8, 9]","completion":"function oddNumbers(arr) { let oddNumbers = arr.filter(function(element) { return element % 2 !== 0; }); return oddNumbers; }"},{"prompt":"Create a C++ program that finds the first 8 prime numbers.","completion":"#include <iostream> using namespace std; int main() { int n, i, c; for (n = 2; n <= 16; n++) { c = 0; for (i = 1; i <= n; i++) { if (n % i == 0) { c++; } } if (c == 2) { cout << n << endl; } } return 0; }"},{"prompt":"Solve the following Problem and display the answer using JavaScript: What is 3+4*2?","completion":"let x = 3 + 4 * 2; console.log(x);"},{"prompt":"Generate HTML output for displaying the following table: | Name | Age | | ------- | --- | | John | 25 | | David | 34 | | Sarah | 22 |","completion":"<table> <tr> <th>Name</th> <th>Age</th> </tr> <tr> <td>John</td> <td>25</td> </tr> <tr> <td>David</td> <td>34</td> </tr> <tr> <td>Sarah</td> <td>22</td> </tr> </table>"},{"prompt":"Write a SQL query to get the name, age and address of the people whose age is greater than 25.","completion":"SELECT name, age, address FROM persons WHERE age > 25;"},{"prompt":"Construct a C++ program that checks whether a number is prime or not. number = 17","completion":"#include <iostream> using namespace std; int main() { int n, i, c; n = 17; c = 0; for (i = 1; i <= n; i++) { if (n % i == 0) { c++; } } if (c == 2) { cout << n << \\" is a prime number\\" << endl; } else { cout << n << \\" is not a prime number\\" << endl; } return 0; }"},{"prompt":"Edit the following HTML code to add an ID attribute with value \\"demo-id\\" to the <h1> element. <h1>This is a heading</h1>","completion":"<h1 id=\\"demo-id\\">This is a heading</h1>"},{"prompt":"Retrieve the name of the third author from a given list of authors. Authors: John Doe, Jane Smith, Tom Johnso","completion":"Tom Johnson."},{"prompt":"Find all the string literals in a given C++ program. #include <iostream> int main(){ std::cout << \\"Hello World!\\" << std::endl; return 0; }","completion":"\\"Hello World!\\""},{"prompt":"Compute the mean of the given data set. Data set: {4, 5, 6, 7}","completion":"The mean of the data set is 5.5."},{"prompt":"Convert the following temperature to its equivalent Fahrenheit measurement. Temperature: 20 degrees Celsiu","completion":"The equivalent Fahrenheit measurement is 68 degrees Fahrenheit."},{"prompt":"Find the output of the following array after sorting it in ascending order. array = [6, 2, 9, 4, 1]","completion":"[1, 2, 4, 6, 9]"},{"prompt":"Generate a Fibonacci number sequence with n numbers 10","completion":"[0, 1, 1, 2, 3, 5, 8, 13, 21, 34]"},{"prompt":"Generate all possible strings of length n using A, B and C 3","completion":"['AAA', 'AAB', 'AAC', 'ABA', 'ABB', 'ABC', 'ACA', 'ACB', 'ACC', 'BAA', 'BAB', 'BAC', 'BBA', 'BBB', 'BBC', 'BCA', 'BCB', 'BCC', 'CAA', 'CAB', 'CAC', 'CBA', 'CBB', 'CBC', 'CCA', 'CCB', 'CCC']"},{"prompt":"Given an array with n elements, find the maximum element of the array. [1, 10, 5, 33, 4]","completion":"33"},{"prompt":"Write a Python program to check if a substring is present in a set of strings substring: \\"abc\\" strings: [\\"hoabcll\\", \\"aaabcbc\\", \\"abcbal\\"]","completion":"True"},{"prompt":"You need to delete a given pattern of characters from a string string: \\"aaabbbccc\\" pattern: \\"ab","completion":"\\"ccc\\""},{"prompt":"Use PHP to replace all occurances of the word 'apple' with the word 'orange' in a given string. string = 'This apple is red and this apple is green'","completion":"<?php string = 'This apple is red and this apple is green'; string = str_replace('apple', 'orange', string); echo string; // Output: This orange is red and this orange is green ?>"},{"prompt":"Use Python to filter out all the numbers divisible by 3 from a given list. numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9]","completion":"def filter_list(numbers): return [x for x in numbers if x % 3 == 0] filter_list(numbers) # Output: [3, 6, 9]"},{"prompt":"Create an algorithm that sorts an array of words in alphabetical order. words = [ 'hello', 'this', 'is', 'a', 'test' ]","completion":"def alphabeticSort(words): words.sort() return words alphabeticSort(words) # Output: ['a', 'hello', 'is', 'test', 'this']"},{"prompt":"Build a SQL table to store customer contacts.","completion":"CREATE TABLE contacts ( contact_id int NOT NULL AUTO_INCREMENT, first_name varchar (50) NOT NULL, last_name varchar (50) NOT NULL, email varchar (255) NOT NULL, phone_number varchar (25) NOT NULL, PRIMARY KEY (contact_id) );"},{"prompt":"Check if the following string can be used as a valid e-mail String: myName@dom","completion":"Yes, this string can be used as a valid e-mail."},{"prompt":"Create an HTML form that can process the user's email address.","completion":"<form method=\\"post\\" action=\\"process.php\\"> <label>Email address:</label> <input type=\\"email\\" name=\\"user_email\\" required> <input type=\\"submit\\" value=\\"Submit\\"> </form>"},{"prompt":"Design a CSS class for displaying a gradient transparent background.","completion":".gradient { background: linear-gradient(rgba(19,72,155,0.63), rgba(8,48,107,0.63)); }"},{"prompt":"Check if the following statement is a valid python syntax Statement: for x in range(0, len(listname))","completion":"Yes, the statement is a valid Python syntax."},{"prompt":"Create a JavaScript function for finding two largest numbers among a given array of numbers Array of numbers: [3, 6, 8, 5, 9, 1]","completion":"function findLargest(numArray) { var largest = numArray[0]; var secondLargest; for( var i = 1; i < numArray.length; i++ ) { if( numArray[i] > largest ) { secondLargest = largest; largest = numArray[i]; } else if ( numArray[i] > secondLargest ) { secondLargest = numArray[i]; } } return [largest, secondLargest]; } Usage: var largest2 = findLargest([3, 6, 8, 5, 9, 1]); Output: [9, 8]"},{"prompt":"Given a string s and a list of words words, write a program to find all occurrences of words in the string s. s = 'The quick brown fox jumps over the lazy dog.' words = ['quick', 'fox', 'dog']","completion":"def find_words(s, words): occurrence_indices = [] for word in words: start = 0 while True: index = s.find(word, start) if index == -1: break else: occurrence_indices.append(index) start = index + 1 return occurrence_indices"},{"prompt":"Generate a random string of length 8 with characters from a-zA-Z0-9.","completion":"import random import string def random_string(): letters = string.ascii_letters + string.digits return ''.join(random.choice(letters) for i in range(8))"},{"prompt":"mplement a function to remove all occurrences of string t from string s. s = 'The quick brown fox jumps over the lazy dog.' t = 'the'","completion":"def remove_string(s, t): if t not in s: return s s = s.lower() t = t.lower() indices = [] start = 0 while True: index = s.find(t, start) if index == -1: break indices.append(index) start = index + 1 offset = 0 for index in indices: s = s[:index - offset] + s[index - offset + len(t):] offset += len(t) return s"},{"prompt":"mplement a class to represent a vector, with initial vector and a scaler. Include methods to add, subtract and multiply two vectors.","completion":"class Vector(): def __init__(self, vector, scaler): self.vector = vector self.scaler = scaler def add_vector(self, other_vector): result_vector = [] for i in range(len(self.vector)): result_vector.append(self.vector[i] + other_vector.vector[i]) return Vector(result_vector, self.scaler) def sub_vector(self, other_vector): result_vector = [] for i in range(len(self.vector)): result_vector.append(self.vector[i] - other_vector.vector[i]) return Vector(result_vector, self.scaler) def mul_vector(self, scaler): result_vector = [] for element in self.vector: result_vector.append(element * scaler) return Vector(result_vector, self.scaler)"},{"prompt":"Given two lists of strings, write a program to combine them into a dictionary whose keys are the strings in one list and values are the strings in the other list. list1 = [“cat”, “dog”, “horse”] list2 = [“meow”, “bark”, “neigh”]","completion":"def combine_lists(list1, list2): dictionary = dict() for i in range(len(list1)): dictionary[list1[i]] = list2[i] return dictionary"},{"prompt":"Given two strings s1 and s2, write a program to edit s1 to s2 by removing, inserting or replacing one character in s1. s1 = “cat” s2 = “hat”","completion":"def edit_strings(s1, s2): s1_arr = list(s1) s2_arr = list(s2) i = 0 while i < len(s1): if s1[i] == s2[i]: i += 1 else: # remove character del s1_arr[i] if s1_arr == s2_arr: return 'removal' # insert character s1_arr.insert(i, s2[i]) if s1_arr == s2_arr: return 'insertion' # replace character s1_arr[i] = s2[i] if s1_arr == s2_arr: return 'replacement' break return None"},{"prompt":"Given a string s, write a program to classify it as a palindrome or not. s = “malayalam”","completion":"def is_palindrome(s): n = len(s) for i in range(n//2): if s[i] != s[n-1-i]: return False return True"},{"prompt":"Describe a data structure for storing the given data. Name, Phone number, Addre","completion":"A hash table data structure can be used to store the given data. The name will be used as the key and then an associative array or a structure can be used to store the phone number and address associated with the name."},{"prompt":"Retrieve the third item from a linked list.","completion":"def get_third_item(linked_list): curr_node = linked_list for i in range(2): curr_node = curr_node.next # Moves onto the third item. return curr_node.data # Returns the data of the third item."},{"prompt":"Convert the given code by replacing for loop with a while loop. for i in range(5): print(i)","completion":"i = 0 while i < 5: print(i) i += 1"},{"prompt":"Retrieve the word with the second highest frequency from a given text. Text: This is a sample text with a lot of words.","completion":"words = text.split() freq_dict = {} for word in words: if word in freq_dict.keys(): freq_dict[word] += 1 else: freq_dict[word] = 1 sorted_words = sorted(freq_dict.items(), reverse=True, key=lambda x: x[1]) second_highest_freq_word = sorted_words[1][0] print(second_highest_freq_word)"},{"prompt":"Create a function that calculates the total amount of money after 5 years given an initial amount of money and a certain rate of interest. Initial amount: 1000 Rate of interest: 2%","completion":"def total_amount(initial, interest): total = initial for i in range(1, 5): total += total * (interest/100) return total"},{"prompt":"Debug the given code and explain your solution. words = ['hello', 'world', 'foo', 'bar'] for i in words: if i == 'foo': break print('Done')","completion":"The code will not print out \\"Done\\" as it is inside an infinite loop. To fix this, we can either remove the 'break' statement or add an else statement after the if statement as a way of exiting the loop when the condition is not satisfied. words = ['hello', 'world', 'foo', 'bar'] for i in words: if i == 'foo': break else: print('Done')"},{"prompt":"Write a PHP code snippet to display \\"Hello, World!\\" in console.","completion":"<?php echo \\"Hello, World!\\"; ?>"},{"prompt":"Write a different style of a given JavaScript code snippet. function sum(a, b) { return a + b; }","completion":"function addVals(x, y) { return x + y; }"},{"prompt":"Write a basic script in Python that counts from 0 to 10.","completion":"for i in range(11): print(i)"},{"prompt":"Write a SQL query to find the values that have occurred more than twice. Table name: values | id | value | |---|---| | 1 | 3 | | 2 | 3 | | 3 | 4 | | 4 | 5 | | 5 | 3 |","completion":"SELECT value FROM value WHERE COUNT(*) > 2 GROUP BY value;"},{"prompt":"Write an HTML page with two headings \\"Home\\" and \\"About\\".","completion":"<!DOCTYPE html> <html lang=\\"en\\"> <head> <meta charset=\\"UTF-8\\"> <meta name=\\"viewport\\" content=\\"width=device-width, initial-scale=1.0\\"> <title>Title</title> </head> <body> <h1>Home</h1> <h1>About</h1> </body> </html>"},{"prompt":"w would you display the following message as an error in JavaScript? \\"Username and password do not match.","completion":"console.error(\\"Username and password do not match.\\")"},{"prompt":"Write code in Java to find the maximum value of the array. [1, 4, 6, 8, 9, 4, 2]","completion":"public static double maxValue(double[] array) { double maxValue = array[0]; for (int i = 1; i < array.length; i++) { if (array[i] > maxValue) maxValue = array[i]; } return maxValue; }"},{"prompt":"w would you write a function in C++ to check if the number 16 is a prime number?","completion":"bool isPrime(int n) { if (n <= 1) return false; for (int i = 2; i < n; i++) if (n % i == 0) return false; return true; }"},{"prompt":"Write a short piece of code in Java to display the following message.","completion":"System.out.println(\\"Welcome to the Java programming course!\\");"},{"prompt":"w would you delete the element \\"Apple\\" from the following list? [\\"Pear\\", \\"Grape\\", \\"Apple\\", \\"Banana\\", \\"Mango\\"]","completion":"fruit_list = [\\"Pear\\", \\"Grape\\", \\"Apple\\", \\"Banana\\", \\"Mango\\"] fruit_list.remove(\\"Apple\\")"},{"prompt":"Write a JavaScript code to reverse the following string. \\"Hello World!","completion":"let str = \\"Hello World!\\"; let reversedStr = str.split(\\"\\").reverse().join(\\"\\"); console.log(reversedStr);"},{"prompt":"Create a SQL query to update all rows of the table \\"product\\" if their stock is below 10.","completion":"UPDATE product SET stock = 10 WHERE stock < 10;"},{"prompt":"w would you use an if-else statement in C# to check if a new account needs to be created for the following user? username: \\"johndoe\\" status: \\"inactive","completion":"string username = \\"johndoe\\"; string status = \\"inactive\\"; if (status == \\"inactive\\") { // Create new account for John Doe } else { // No new account needs to be created }"},{"prompt":"Write a short piece of code in Python to calculate the area of a triangle with the sides 6 cm, 8 cm, and 10 cm.","completion":"def calculate_triangle_area(side1, side2, side3): '''This function calculates the area of a triangle given three sides.''' s = (side1 + side2 + side3) / 2 return ((s*(s-side1)*(s-side2)*(s-side3))**0.5) area = calculate_triangle_area(6,8,10) print(f\\"The area of the triangle is {area} cm2\\")"},{"prompt":"Write a piece of code in Java to check if the following string contains a numeric character. \\"Hello World!","completion":"String str = \\"Hello World!\\"; boolean isNumeric = false; for (int i = 0; i < str.length(); i++) { if (Character.isDigit(str.charAt(i))) { isNumeric = true; break; } } if (isNumeric) System.out.println(\\"The given string contains a numeric character.\\"); else System.out.println(\\"The given string does not contain a numeric character.\\");"},{"prompt":"w would you use a for loop in Python to print the sum of all even numbers between 50 and 100?","completion":"total = 0 for i in range(50, 101): if i % 2 == 0: total += i print(f\\"The sum of all even numbers between 50 and 100 is {total}\\")"},{"prompt":"Java, develop a program which prints the size of a given array. int[] array = {1,2,3,4,5};","completion":"public class main{ public static void main(String[] args){ int[] array = {1, 2, 3, 4, 5}; System.out.println(\\"Size of the array is: \\" + array.length); } }"},{"prompt":"Python, construct a function to fit a curve to a given set of data points. xdata = [0, 1, 2, 4, 11, 18] ydata = [2, 3, 4, 6, 12, 17]","completion":"from scipy.optimize import curve_fit def func(x, a, b, c): return a*x**2 + b*x + c xdata = [0, 1, 2, 4, 11, 18] ydata = [2, 3, 4, 6, 12, 17] popt, pcov = curve_fit(func, xdata, ydata)"},{"prompt":"JavaScript, construct a function to count the occurence of an element in an array. var array = [1, 2, 3, 4, 1]; int element = 1;","completion":"function countOccurence(array, element) { let count = 0; array.forEach(el => { if(el === element) count++ }); return count; } var array = [1, 2, 3, 4, 1]; let element = 1; console.log(countOccurence(array, element)); // 2"},{"prompt":"Develop a program to convert an infix expression to prefix notation. A*(B+C)-D/(E+F)","completion":"def infix_to_prefix(exp): # stack to store operators stack = [] # prefix expression pref_exp = \\"\\" # traverse through the expression for char in exp: # if the character is an operand # add it to prefix expression if char.isalpha(): pref_exp += char # if the character is an operator elif char in \\"*/+-^\\": # push the operator to the stack stack.append(char) # if the character is ')' elif char == ')': # pop all the operators from # the stack until '(' is found while(stack[-1] != '('): pref_exp += stack.pop() # remove '(' from the stack stack.pop() # add all the operators to the prefix expression while len(stack) != 0: pref_exp += stack.pop() return pref_exp"},{"prompt":"Write a SQL query to get employee names from the Employees table where salary is greater than 50000.","completion":"SELECT Name FROM Employees WHERE Salary > 50000"},{"prompt":"Create a function in Python that performs a web scrape and returns the most frequent words from the resulting text.","completion":"def scrape_frequent_words(url): try: from bs4 import BeautifulSoup from collections import Counter # Get html from the given url html_content = requests.get(url).text # Parse the html soup = BeautifulSoup(html_content) # Get all text from the page all_texts = soup.find_all(text=True) # Extract only words words = [word for text in all_texts for word in text.split()] # Calculate frequency frequency = dict(Counter(words)) # Return the word with most frequency return max(frequency, key=frequency.get)"},{"prompt":"Create a React component in JavaScript which displays the given string as a status update.","completion":"import React from 'react'; const StatusUpdate = ({ statusText }) => { return ( <div> <p>{statusText}</p> </div> ); }; export default StatusUpdate;"},{"prompt":"Suggest an API endpoint in Ruby on Rails for creating a new blog post.","completion":"post \\"/posts\\" do post = Post.new(params[:post]) if post.save status 202 json post.to_json else status 400 json post.errors end end"},{"prompt":"Suggest an API endpoint for updating an existing blog post in Ruby on Rails.","completion":"put \\"/posts/:id\\" do post = Post.find(params[:id]) if post.update(params[:post]) status 200 json post.to_json else status 400 json post.errors end end"},{"prompt":"Create a class in Python that implements the __len__ method to return the length of a given string.","completion":"class StringLength: def __len__(self, string): return len(string)"},{"prompt":"Convert the following SQL query into a Java code using JDBC. SELECT Employees.Name FROM Employees WHERE Employees.Salary > 50000","completion":"String queryString = \\"SELECT Employees.Name FROM Employees WHERE Employees.Salary > ?\\"; PreparedStatement pstmt = conn.prepareStatement(queryString); pstmt.setDouble(1, 50000); ResultSet rs = pstmt.executeQuery(); while (rs.next()) { String name = rs.getString(1); // Process the name }"},{"prompt":"Write a SQL query to get all employees' name and salary who are from department \\"IT","completion":"SELECT name, salary FROM Employees WHERE department = 'IT';"},{"prompt":"Develop an HTML page with a div and table, and use CSS to make alternating rows of the table red and blue.","completion":"<html> <head> <style> table tr:nth-child(2n) { background-color: red; } table tr:nth-child(2n+1) { background-color: blue; } </style> </head> <body> <div> <table> <tr> <th>Cell 1</th> <th>Cell 2</th> <th>Cell 3</th> </tr> <tr> <td>Data 1</td> <td>Data 2</td> <td>Data 3</td> </tr> <tr> <td>Data 4</td> <td>Data 5</td> <td>Data 6</td> </tr> </table> </div> </body> </html>"},{"prompt":"Write a SQL query to get all people living in London, ordered by their last name","completion":"SELECT * FROM People WHERE city = 'London' ORDER BY last_name ASC;"},{"prompt":"Generate a dynamic HTML table displaying 10 random numbers from 1 to 100.","completion":"<html> <head> </head> <body> <div> <table> <tr><th>Random Numbers</th></tr> <tr><td><?php echo rand(1,100); ?></td></tr> <tr><td><?php echo rand(1,100); ?></td></tr> <tr><td><?php echo rand(1,100); ?></td></tr> <tr><td><?php echo rand(1,100); ?></td></tr> <tr><td><?php echo rand(1,100); ?></td></tr> <tr><td><?php echo rand(1,100); ?></td></tr> <tr><td><?php echo rand(1,100); ?></td></tr> <tr><td><?php echo rand(1,100); ?></td></tr> <tr><td><?php echo rand(1,100); ?></td></tr> <tr><td><?php echo rand(1,100); ?></td></tr> </table> </div> </body> </html>"},{"prompt":"Create a Swift class which includes one constant, one variable and one function.","completion":"class MyClass { let constant = \\"constant value\\" var variable = 0 func increase() { variable += 1 } }"},{"prompt":"Develop an HTML form which includes two input fields, an label and a submit button.","completion":"<html> <head> </head> <body> <form> <label>Name: </label><input type=\\"text\\" name=\\"name\\"><br> <label>Age: </label><input type=\\"text\\" name=\\"age\\"><br> <input type=\\"submit\\" value=\\"Submit\\"> </form> </body> </html>"},{"prompt":"Construct a SQL query to get all the rows of a table ordered by the largest value in each row first. SELECT ...","completion":"SELECT * FROM Table ORDER BY MAX(column1, column2, ...) DESC;"},{"prompt":"Develop an HTML page with three sections, each containing different colors.","completion":"<html> <head> <style> #section1 { background-color: red; } #section2 { background-color: blue; } #section3 { background-color: yellow; } </style> </head> <body> <div id=\\"section1\\"></div> <div id=\\"section2\\"></div> <div id=\\"section3\\"></div> </body> </html>"},{"prompt":"List all possible combinations of three elements from a given array. [1, 2, 3, 4]","completion":"[1, 2, 3], [1, 2, 4], [1, 3, 4], [2, 3, 4]"},{"prompt":"What is the difference between the static and dynamic memory allocation in C++?","completion":"Static memory allocation is a one-time allocation of memory that persists throughout the life of the program, while dynamic memory allocation is the allocation of memory during runtime as and when required. Static memory allocation provides better performance than dynamic memory allocation, but dynamic memory allocation allows for greater flexibility. Additionally, static memory allocation is more predictable in terms of memory usage, while dynamic memory allocation might result in memory wastage if the allocated memory is not released properly."},{"prompt":"Develop a class in Java to implement a calculator with functions add(), subtract(), multiply(), and divide().","completion":"public class Calculator { public static double add(double a, double b) { return a + b; } public static double subtract(double a, double b) { return a - b; } public static double multiply(double a, double b) { return a * b; } public static double divide(double a, double b) { return a / b; } }"},{"prompt":"Describe the differences between the stack and the heap memory in C++.","completion":"The stack memory is a region of memory used for storing local variables and function parameters when a function is called, while the heap memory is a region of memory that is dynamically allocated during runtime and is used for storing objects and dynamic variables. The stack is managed and optimized by the CPU, while the heap is managed by the runtime environment. The stack is significantly faster than the heap as it uses pre-allocated memory and does not require memory fragmentation; however, the size of objects stored in the stack is limited. On the other hand, the heap can allocate larger blocks of memory, but the time taken to allocate a block is greater than that of the stack."},{"prompt":"w is data stored in a binary tree in C++?","completion":"Data is typically stored in a binary tree in C++ using a linked list with each node representing a data item. A node consists of a data element and two child nodes, known as the left and right nodes. The left node represents the lesser element, while the right node represents the greater element. Each node also includes a link to each of its children and a link to its parent node. This structure allows for efficient searching and insertion of elements in the binary tree."},{"prompt":"Develop a new class in Python to represent a Rectangle object with getArea() and getPerimeter() methods.","completion":"class Rectangle: def __init__(self, length, width): self.length = length self.width = width def getArea(self): return self.length * self.width def getPerimeter(self): return 2 * (self.length + self.width)"},{"prompt":"Develop a function in C++ to find the roots of a quadratic equation ax^2 + bx + c = 0.","completion":"double findRoots(double a, double b, double c) { double result; if ((b*b - 4*a*c) < 0) { return INT_MIN; } else { result = (-b + sqrt(b*b - 4*a*c)) / (2*a); return result; } }"},{"prompt":"What is object-oriented programming, and what are the benefits of using it?","completion":"Object-oriented programming (OOP) is a programming approach that is based on the concept of objects. It is used to create a model of a real or abstract system to make programming more efficient, easier to debug, and more maintainable. OOP allows developers to write code that is reusable and maintainable, as it enables the creation of components that can be adapted and used in a variety of different contexts. Additionally, OOP allows for better communication between different parts of a program, as components can communicate with each other in a simpler and more understandable manner."},{"prompt":"Construct a set of HTML tags to design a simple two-column layout.","completion":"<html> <head> <title>Two-column layout</title> </head> <body> <div class=\\"container\\"> <div class=\\"column-left\\"> <!--Your content here--> </div> <div class=\\"column-right\\"> <!--Your content here--> </div> </div> </body> </html>"},{"prompt":"You need to write a query in SQL to calculate the total salary of the employees in the database.","completion":"SELECT SUM(salary) FROM Employees;"},{"prompt":"Write some HTML code that adds a background color to the complete web page.","completion":"<html> <head> <style> body {background-color: #F0F0F0;}</style> </head> </html>"},{"prompt":"Write a Python function that takes in a string and outputs a dictionary where the keys are the characters in the string and the values are the frequency of the characters in the string.","completion":"def freq_dict(string): freq = {} for c in string: if c in freq: freq[c] += 1 else: freq[c] = 1 return freq"},{"prompt":"Write a Python function to decode a given string (with special characters) to its original form.","completion":"def decode_string(string): return string.encode().decode('unicode_escape')"},{"prompt":"Write a Python program to test whether all elements of a given list are equal or not. [3,3,3]","completion":"def all_elements_equal(lst): return lst[1:] == lst[:-1]"},{"prompt":"Extend the program from Question 4 to allow the user to specify the upper limit.","completion":"#include <iostream> int main() { int n; std::cout << \\"Enter the upper limit: \\"; std::cin >> n; for (int i = 2; i <= n; i += 2) { std::cout << i << \\" \\"; } std::cout << std::endl; return 0; }"},{"prompt":"Create an SQL table to store information about books and authors","completion":"CREATE TABLE books ( book_id INT PRIMARY KEY, title VARCHAR(255) NOT NULL, author_id INT NOT NULL, FOREIGN KEY (author_id) REFERENCES authors (author_id) ); CREATE TABLE authors ( author_id INT PRIMARY KEY, first_name VARCHAR(255) NOT NULL, last_name VARCHAR(255) NOT NULL );"}]`),R={name:"App",components:{PoemCard:A},data(){return{searchQuery:"",visibleCount:4,poemsData:N,isLoading:!1}},computed:{filteredPoems(){const a=this.searchQuery.trim().toLowerCase();return a?this.poemsData.filter(e=>e.prompt&&e.prompt.toLowerCase().includes(a)||e.completion&&e.completion.toLowerCase().includes(a)):this.poemsData},displayedPoems(){return this.searchQuery.trim()?this.filteredPoems:this.filteredPoems.slice(0,this.visibleCount)},hasMorePoems(){return!this.searchQuery.trim()&&this.visibleCount<this.poemsData.length}},methods:{async loadMore(){this.isLoading=!0,await new Promise(a=>setTimeout(a,1e3)),this.visibleCount+=4,this.isLoading=!1}}},P={class:"search-container"},M={class:"card-container"},W={key:0,class:"empty-state"},q=["disabled"],O={key:0},j={key:1};function I(a,e,l,u,i,o){const h=g("PoemCard");return r(),n("section",null,[e[4]||(e[4]=t("div",{class:"top-banner"},[t("div",{class:"top-banner-title"},[t("div",{class:"top-banner-title-text"},"🤔prompts chat🧠")])],-1)),t("div",P,[e[3]||(e[3]=t("span",{class:"search-icon"},"🔍",-1)),b(t("input",{type:"text",class:"search-input","onUpdate:modelValue":e[0]||(e[0]=s=>i.searchQuery=s),placeholder:"Search..."},null,512),[[y,i.searchQuery]]),i.searchQuery?(r(),n("button",{key:0,class:"clear-search",onClick:e[1]||(e[1]=s=>i.searchQuery="")}," ✕ ")):m("",!0)]),t("div",M,[(r(!0),n(w,null,v(o.displayedPoems,(s,f)=>(r(),_(h,{key:f,poem:s},null,8,["poem"]))),128)),o.displayedPoems.length===0?(r(),n("div",W,' No results found for "'+p(i.searchQuery)+'". ',1)):m("",!0)]),o.hasMorePoems?(r(),n("button",{key:0,class:"load-more-button",disabled:i.isLoading,onClick:e[2]||(e[2]=(...s)=>o.loadMore&&o.loadMore(...s))},[i.isLoading?(r(),n("span",j,"Loading...")):(r(),n("span",O,"See more"))],8,q)):m("",!0)])}const D=d(R,[["render",I],["__scopeId","data-v-745f78e8"]]),J=JSON.parse('{"title":"","description":"","frontmatter":{"page":true},"headers":[],"relativePath":"deepseek/6.md","filePath":"deepseek/6.md"}'),F={name:"deepseek/6.md"},B=Object.assign(F,{setup(a){return(e,l)=>(r(),n("div",null,[x(D)]))}});export{J as __pageData,B as default};
